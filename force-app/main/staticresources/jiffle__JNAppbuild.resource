"bundle";
System.register('briefing-home.js', ['github:select2/select2@4.0.0/js/select2.full.js', 'github:twbs/bootstrap@3.3.6.js', 'components/error-view-strategy.js', 'npm:aurelia-i18n@0.4.1.js', 'locale/en/translation.js'], function (_export) {
  'use strict';

  var select2, bootstrap, ErrorViewStrategy, I18N, resources;

  _export('configure', configure);

  function configure(aurelia) {
    $(document).ready(function () {
      $('.dropdown-toggle').dropdown();
      $(".navbar-set .navbar-toggle").on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        setTimeout(function () {
          $("#dark_nav_menu").collapse('toggle');
        }, 80);
      });
      $(".navbar-comp .navbar-toggle").on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        setTimeout(function () {
          $("#main-nav-bar").collapse('toggle');
        }, 80);
      });

      $.urlParam = function (name, sourceStr) {
        var source = sourceStr || window.location.href;
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(source);
        if (results == null) {
          return "";
        } else {
          return results[1] || 0;
        }
      };

      var token = $('meta[name="csrf-token"]').attr('content');
      $.ajaxSetup({
        beforeSend: function beforeSend(xhr) {
          xhr.setRequestHeader('X-CSRF-Token', token);
        }
      });
    });
    aurelia.use.standardConfiguration().plugin('aurelia-validation', function (config) {
      config.useViewStrategy(ErrorViewStrategy.AppendToInput);
    }).plugin('aurelia-animator-css').plugin('aurelia-i18n', function (instance) {
      instance.setup({
        resStore: resources,
        lng: 'en',
        attributes: ['t', 'i18n'],
        getAsync: true,
        sendMissing: false,
        fallbackLng: 'en',
        debug: false
      });
    });

    initI18n(enLocale["event_home"]);
    setupUiI18n();
    aurelia.start().then(function (a) {
      return a.setRoot('view-models/briefings/homelist');
    });
  }

  return {
    setters: [function (_select2Select2JsSelect2Full) {
      select2 = _select2Select2JsSelect2Full['default'];
    }, function (_bootstrap) {
      bootstrap = _bootstrap['default'];
    }, function (_componentsErrorViewStrategy) {
      ErrorViewStrategy = _componentsErrorViewStrategy.ErrorViewStrategy;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_localeEnTranslation) {
      resources = _localeEnTranslation['default'];
    }],
    execute: function () {}
  };
});
System.register('briefing-main.js', ['github:twbs/bootstrap@3.3.6.js', 'github:select2/select2@4.0.0/js/select2.full.js', 'npm:aurelia-validation@0.6.0/strategies/twbootstrap-view-strategy.js', 'components/error-view-strategy.js', 'npm:aurelia-i18n@0.4.1.js', 'locale/en/translation.js'], function (_export) {
  'use strict';

  var $, bootstrap, select2, TWBootstrapViewStrategy, ErrorViewStrategy, I18N, resources;

  _export('configure', configure);

  function configure(aurelia) {

    if (typeof JNBookMeeting !== "undefined") {
      window.jiffle = {};
      window.jiffleSFObj = 'JNBookMeeting';
      window.jiffle['JNBookMeeting'] = JNBookMeeting;
    } else if (typeof JNBriefings !== "undefined") {
      window.jiffle = {};
      window.jiffleSFObj = 'JNBriefings';
      window.jiffle['JNBriefings'] = JNBriefings;
    }

    $(document).ready(function () {
      $('.dropdown-toggle').dropdown();

      $(".navbar-set .navbar-toggle").on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        setTimeout(function () {
          $("#dark_nav_menu").collapse('toggle');
        }, 80);
      });
      $(".navbar-comp .navbar-toggle").on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        setTimeout(function () {
          $("#main-nav-bar").collapse('toggle');
        }, 80);
      });

      $.urlParam = function (name, sourceStr) {
        var source = sourceStr || window.location.href;
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(source);
        if (results == null) {
          return "";
        } else {
          return results[1] || 0;
        }
      };

      var token = $('meta[name="csrf-token"]').attr('content');
      $.ajaxSetup({
        beforeSend: function beforeSend(xhr) {
          xhr.setRequestHeader('X-CSRF-Token', token);
        }
      });
      $.fn.modal.Constructor.prototype.enforceFocus = $.noop;
    });
    aurelia.use.standardConfiguration().developmentLogging().plugin('aurelia-validation', function (config) {
      config.useViewStrategy(ErrorViewStrategy.AppendToInput);
    }).plugin('aurelia-animator-css').plugin('aurelia-i18n', function (instance) {
      instance.setup({
        resStore: resources,
        lng: 'en',
        attributes: ['t', 'i18n'],
        getAsync: true,
        sendMissing: false,
        fallbackLng: 'en',
        debug: false
      });
    }).feature('commons/sfdc');

    initI18n(enLocale["event_home"]);
    setupUiI18n();
    aurelia.start().then(function (a) {
      return a.setRoot('view-models/briefings/app');
    });
  }

  return {
    setters: [function (_bootstrap) {
      $ = _bootstrap['default'];
      bootstrap = _bootstrap['default'];
    }, function (_select2Select2JsSelect2Full) {
      select2 = _select2Select2JsSelect2Full['default'];
    }, function (_aureliaValidationStrategiesTwbootstrapViewStrategy) {
      TWBootstrapViewStrategy = _aureliaValidationStrategiesTwbootstrapViewStrategy.TWBootstrapViewStrategy;
    }, function (_componentsErrorViewStrategy) {
      ErrorViewStrategy = _componentsErrorViewStrategy.ErrorViewStrategy;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_localeEnTranslation) {
      resources = _localeEnTranslation['default'];
    }],
    execute: function () {}
  };
});
System.register('commons/sfdc/index.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var inject;

  _export('configure', configure);

  function configure(config) {
    if (typeof jiffle === 'undefined') {
      return;
    }

    window.jiffleSFObj = 'JNBriefings';
    var eventName = $.urlParam('eventName'),
        baseAccountId = $.urlParam('accid'),
        baseOpportunityId = $.urlParam('oppid'),
        currentLocationUuid = $.urlParam('current_location_uuid');

    var briefingInit = function briefingInit(response) {
      window.envDetails = {};
      window.envDetails = {
        event: response.data.event,
        role_uuid: response.data.current_user.role_uuid,
        role: response.data.current_user.role,
        currentUser: response.data.current_user,
        current_location: response.data.current_location,
        syncContactsToSfdc: response.data.syncContactsToSfdc,
        briefingCentreUuid: response.data.briefing_centre_uuid,
        topicManagementEnabled: response.data.topicManagementEnabled,
        custom_form_field_tags: response.data.custom_form_field_tags,
        topicRoomMappingEnabled: response.data.topicRoomMappingEnabled,
        topicUserMappingEnabled: response.data.topicUserMappingEnabled,
        topicActivitiesMappingEnabled: response.data.topicActivitiesMappingEnabled,
        current_location_uuid: response.data.current_location_uuid || currentLocationUuid,
        hideOpportunityInAgenda: response.data.hideOpportunityInAgenda,
        sfdcCustomLabels: response.data.sfdc_custom_labels,
        isCSM: function isCSM() {
          return response.data.isCSM;
        },
        isExecutive: function isExecutive() {
          return response.data.isExecutive;
        },
        isExecutiveAdmin: function isExecutiveAdmin() {
          return response.data.isExecutiveAdmin;
        },
        isMeetingManager: function isMeetingManager() {
          return response.data.isMeetingManager;
        },
        isQueueManager: function isQueueManager() {
          return response.data.isQueueManager || false;
        },
        isJuniorMM: function isJuniorMM() {
          return response.data.isJuniorMM;
        },
        jiffleRootUrl: response.data.domain_validate_url.replace('/portal/domains/validate', '')
      };

      window.envDetails['briefingInternalAttendeeEnabled'] = response.data.allowRequestorToAddInternalAttendee;
      window.envDetails['externalAttendeePresence'] = response.data.externalAttendeePresence;
      window.envDetails['internalAttendeePresence'] = response.data.internalAttendeePresence;
      window.envDetails['allowUserToAddNewExternalAttendee'] = response.data.allowUserToAddNewExternalAttendee;
      window.envDetails['copyTopicToMeetingTitle'] = response.data.briefing_copy_topic_to_meeting_title;
      window.envDetails['agendaDetails'] = response.data.agendaDetails;

      window.locationActive = response.data.location_active;
      window.briefings_url = response.data.briefing_listing_url;
      window.domainValidateUrl = response.data.domain_validate_url;
      window.location_uuid = response.data.briefing_center_location_uuid;
      window.selectedRequestor = response.data.selected_requestor;

      window.capture_consent = response.data.capture_consent;
      window.consent_mandatory = response.data.consent_mandatory;
    };

    var params = {
      methodType: 'GET',
      eventName: eventName,
      accountId: baseAccountId,
      url: '/events_meetings_menu',
      opportunityId: baseOpportunityId,
      current_location_uuid: currentLocationUuid
    };

    new Promise(function (resolve, reject) {
      return window.jiffle[jiffleSFObj].getMenuList(params, function (result, event) {
        var response = typeof result === 'string' ? JSON.parse(_.unescape(result)) : result;
        if (event.statusCode === 200) {
          if (response.data && response.data.links && response.data.links.length) {
            response.data.links.forEach(function (link) {
              link.url = unescape(link.url);
            });
            $('#sf-jiffle-now').prepend(HandlebarsTemplates['sfdc/nav-header']({
              headerLinks: response.data.links
            }));
            resolve(response);
          }
        } else {
          reject(response);
        }
      });
    });

    var promise = new Promise(function (resolve, reject) {
      params.url = '/event_info';
      return window.jiffle[jiffleSFObj].callJNMethod(params, function (result, event) {
        var response = typeof result === 'string' ? JSON.parse(_.unescape(result)) : result;
        if (event.statusCode === 200) {
          briefingInit(response);
          $('.js-event-display-name').text(window.envDetails.current_location.name);
          resolve(response);
        } else {
          reject(response);
        }
      });
    });

    return promise;
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
    }],
    execute: function () {}
  };
});
System.registerDynamic("components/applied-filter.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div if.bind=\"show\">\n    <a href=\"#\" class=\"remove\" click.delegate=\"removeFilter()\">\n\t    <i class=\"jif-close close-applied-filter jif-dark1-grey\"></i>\n    </a>\n    <span class=\"remove_filter_icon\">\n    \t<span if.bind=\"filter.applied_filters_display_key\">${filter.applied_filters_display_key}: </span>\n    \t<span>${filter.name}</span>\n    </span>\n  </div>\n</template>\n";
});
System.register('components/applied-filter.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var EventAggregator, bindable, inject, AppliedFilter;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }],
    execute: function () {
      AppliedFilter = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(AppliedFilter, [{
          key: 'filter',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'eventPrefix',
          decorators: [bindable],
          initializer: function initializer() {
            return "";
          },
          enumerable: true
        }], null, _instanceInitializers);

        function AppliedFilter(ea) {
          _classCallCheck(this, _AppliedFilter);

          _defineDecoratedPropertyDescriptor(this, 'filter', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'eventPrefix', _instanceInitializers);

          this.show = true;

          this.ea = ea;
          this.show = true;
        }

        _createDecoratedClass(AppliedFilter, [{
          key: 'removeFilter',
          value: function removeFilter() {
            var filterRemoved = this.eventPrefix + '-filter:removed';
            this.ea.publish(filterRemoved, this.filter);
            this.show = false;
          }
        }], null, _instanceInitializers);

        var _AppliedFilter = AppliedFilter;
        AppliedFilter = inject(EventAggregator)(AppliedFilter) || AppliedFilter;
        return AppliedFilter;
      }();

      _export('AppliedFilter', AppliedFilter);
    }
  };
});
System.registerDynamic("components/attendee.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"components/user-tooltip\"></require>\n\n    <div class=\"attendee-item ${attendee.selected ? 'added' : ''}\" ref=\"user\">\n        <div class=\"checkbox hide\">\n            <input type=\"checkbox\" id=\"attendee1\">\n            <label for=\"attendee1\"></label>\n        </div>\n        <!-- <i class=\"jif-user-circle-o pull-left jif-34 jif-dark1-grey\"></i> -->\n\n\n        <div class=\"attendee-pic-container\">\n          <div class=\"attendee-pic\">\n            <i class=\"jif-user pull-left jif-18 jif-dark1-grey\"></i>\n          </div>\n        </div>\n\n\n        <div class=\"attendee-details\">\n            <div class=\"attendee-name\">${attendee.first_name} ${attendee.last_name}</div>\n            <div class=\"attendee-desn\">\n                <span if.bind=\"attendee.title\">${attendee.company_name ? attendee.title +', '+ attendee.company_name : attendee.title }</span>\n            </div>\n        </div>\n        <div if.bind=\"attendee.available\" class=\"attendee-block add\">\n            <div class=\"action\">\n                <a class=\"btn-action add select-attendee icon-box jif-blue\" click.trigger=\"addAttendee()\" data-automation=\"briefing-added-attendee\">\n                    <i class=\"jif-plus-circle jif-22\"></i>\n                    <div i18n=\"components.attendee.add\" class=\"font-8\"></div>\n                </a>\n            </div>\n        </div>\n        <div class=\"attendee-block remove\">\n            <div class=\"action\">\n                <a class=\"btn-action remove unselect-attendee icon-box jif-blue\" click.delegate=\"removeAttendee()\" data-automation=\"briefing-remove-attendee\">\n                    <span class=\"custom-remove-icon\"></span>\n                    <div i18n=\"components.attendee.remove\" class=\"font-8\"></div>\n                </a>\n                <!-- <div class=\"unavailable\">\n                    <a class=\"btn-action\">\n                        <i class=\"jif-minus-circle jif-22\"></i>\n                        <div i18n=\"components.attendee.unavailable\" class=\"font-8\"></div>\n                    </a>\n                </div> -->\n            </div>\n        </div>\n    </div>\n    <user-tooltip user.bind=\"attendee\" ref=\"usertooltip\" show.bind=\"donotdisplay\"></user-tooltip>\n</template>\n";
});
System.register('components/user-tooltip.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var EventAggregator, inject, bindable, I18N, UserTooltip;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            UserTooltip = function () {
                var _instanceInitializers = {};

                _createDecoratedClass(UserTooltip, [{
                    key: 'user',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function UserTooltip(ea, i18n) {
                    _classCallCheck(this, _UserTooltip);

                    _defineDecoratedPropertyDescriptor(this, 'user', _instanceInitializers);

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                var _UserTooltip = UserTooltip;
                UserTooltip = inject(EventAggregator, I18N)(UserTooltip) || UserTooltip;
                return UserTooltip;
            }();

            _export('UserTooltip', UserTooltip);
        }
    };
});
System.register('components/attendee.js', ['github:twbs/bootstrap@3.3.6.js', 'components/user-tooltip.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var $, bootstrap, UserTooltip, inject, bindable, EventAggregator, I18N, Attendee;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_bootstrap) {
            $ = _bootstrap['default'];
            bootstrap = _bootstrap['default'];
        }, function (_componentsUserTooltip) {
            UserTooltip = _componentsUserTooltip.UserTooltip;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            Attendee = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(Attendee, [{
                    key: 'attendee',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'eventAddAttendee',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'eventRemoveAttendee',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function Attendee(ea, i18n) {
                    _classCallCheck(this, _Attendee);

                    _defineDecoratedPropertyDescriptor(this, 'attendee', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'eventAddAttendee', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'eventRemoveAttendee', _instanceInitializers);

                    this.donotdisplay = true;
                    this.contentHTML = '';

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(Attendee, [{
                    key: 'attached',
                    value: function attached() {
                        this.contentHTML = this.usertooltip.outerHTML;
                        $(this.user).popover({
                            html: true,
                            template: "<div class='popover room-tooltip' role='tooltip'><div class='popover-content'></div></div>",
                            content: this.contentHTML,
                            trigger: 'hover',
                            placement: 'left'
                        });
                        this.donotdisplay = false;
                    }
                }, {
                    key: 'addAttendee',
                    value: function addAttendee() {
                        this.attendee['selected'] = true;
                        this.ea.publish(this.eventAddAttendee, this.attendee);
                    }
                }, {
                    key: 'removeAttendee',
                    value: function removeAttendee() {
                        this.attendee['selected'] = false;
                        this.ea.publish(this.eventRemoveAttendee, this.attendee);
                    }
                }, {
                    key: 'showToolTip',
                    value: function showToolTip() {}
                }], null, _instanceInitializers);

                var _Attendee = Attendee;
                Attendee = inject(EventAggregator, I18N)(Attendee) || Attendee;
                return Attendee;
            }();

            _export('Attendee', Attendee);
        }
    };
});
System.registerDynamic("components/aurelia-select.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <div class=\"token-input-fld\">\n        <select id=\"${selectId}\" class=\"form-control ${styles}\" disabled.bind=\"selectDisabled\" ref=\"selectBox\" style=\"width:100%\" data-automation=\"${dataAutomation}\">\n        \t<option if.bind=\"tags\">${placeHolder}</option>\n            <option if.bind=\"defaultvalue.id\" value.bind=\"defaultvalue.id\" selected=\"selected\">${defaultvalue.text}</option>\n            <option repeat.for=\"val of defaults\" value.bind=\"val.id\" selected=\"selected\">${val.text}</option>\n        </select>\n    </div>\n</template>\n";
});
System.registerDynamic("components/briefing-agenda/attendee.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\n\t<div class=\"briefing-activity-list col-xs-12 briefing-agenda-block-border\">\n\t\t<a href=\"javascript:void(0)\" class=\"col-xs-6 no-padding\">\n\t\t\t<div class=\"briefing-activity-section col-xs-12 no-padding\">\n\t\t\t\t<label class=\"briefing-activity-icon pull-left briefing-activity-user-icon\">\n\t\t\t\t\t<i if.bind=\"briefingRequest.status === 'Confirmed'\" class=\"${attendee_status} invite-result\"></i>\n\t\t\t\t\t<i class=\"jif-user jif-dark-grey jif-18\"></i>\n\t\t\t\t</label>\n\t\t\t\t<div class=\"briefing-activity-detail-block\">\n\t\t\t\t\t<div class=\"briefing-activity-name text-ellipsis\">${attendee.first_name}</div>\n                    <div class=\"briefing-activity-name text-ellipsis\">${attendee.last_name}</div>\n\t\t\t\t\t<div class=\"briefing-activity-detail text-uppercase text-ellipsis\" if.bind=\"attendee.title\">${attendee.title}, ${attendee.company_name}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</a>\n\n        <div if.bind=\"!isSFDC\" class=\"col-xs-6 no-padding text-right\">\n            <a href=\"javascript:void(0)\">\n                <div class=\"briefing-activity-schedule icon-box icon-xs-box jif-blue\" if.bind=\"attendee.actions.accept_url\" click.delegate=\"confirmAction($event, 'Accept', attendee.actions.accept_url)\">\n                    <i class=\"jif-check jif-16\"></i>\n                    <div class=\"font-8\" i18n=\"components.commons.accept\"></div>\n                </div>\n            </a>\n\n            <div if.bind=\"showMoreAction()\" class=\"dropdown padding-left-10\">\n                <a href=\"javascript:void(0)\" ref=\"moreAction\" data-toggle=\"dropdown\" class=\"cursor-pointer dropdown-toggle jif-blue\" click.trigger=\"dropdownHandler($event)\">\n                    <i class=\"jif-more\"></i>\n                    <div class=\"font-8\" i18n=\"components.commons.more\"></div>\n                </a>\n                <ul class=\"dropdown-menu font-12 briefing-dropdown\">\n                    <li if.bind=\"attendee.actions.decline_url\" click.delegate=\"confirmAction($event, 'Decline', attendee.actions.decline_url)\">\n                        <a href=\"javascript:void(0)\">\n                            <label i18n=\"components.commons.decline\"></label>\n                        </a>\n                    </li>\n                    <li if.bind=\"attendee.actions.reinvite_url\" click.delegate=\"confirmAction($event, 'Reinvite', attendee.actions.reinvite_url)\">\n                        <a href=\"javascript:void(0)\">\n                            <label i18n=\"components.commons.reinvite\"></label>\n                        </a>\n                    </li>\n                    <li if.bind=\"showSurveyLink\" data-toggle=\"modal\" data-target=\"#survay-modal\" click.delegate=\"surveyClickAction($event)\">\n                        <a href=\"javascript:void(0)\">\n                            <label i18n=\"components.commons.survey\"></label>\n                        </a>\n                    </li>\n                    <li if.bind=\"showDivider() && attendee.actions.download_briefing_report_url\" class=\"divider\"></li>\n                    <li if.bind=\"attendee.actions.download_briefing_report_url\" click.delegate=\"confirmAction($event, 'Report', attendee.actions.download_briefing_report_url)\">\n                        <a href=\"javascript:void(0)\">\n                            <label i18n=\"components.commons.userReport\"></label>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\t</div>\n</template>\n";
});
System.registerDynamic("components/briefing-agenda/concierge-modal.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <div class=\"modal fade\" ref=\"conciergemodal\" id=\"update-concierge-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" data-backdrop=\"static\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"content\">\n                <div class=\"jiffle-panel\">\n                    <div class=\"jiffle-panel-head\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                        <h1 i18n=\"components.briefingAgenda.conciergeModal.requestDetails\"></h1>\n                    </div>\n                    <div class=\"jiffle-panel-body concierge-panel-body\">\n                        <form id=\"add-user-form\" submit.delegate=\"updateRequest()\" class=\"jiffle-form\" role=\"form\">\n                            <div id=\"concierge-modal-form\" class=\"form-group col-xs-12 no-padding\">\n                            </div>\n                            <div class=\"form-group col-xs-12 no-padding\" if.bind=\"request.vendor_comments!=''\">\n                                <label i18n=\"components.briefingAgenda.conciergeModal.vendorComments\"></label>\n                                <textarea class=\"col-xs-12 textarea-72\" readonly value.bind=\"request.vendor_comments\"></textarea>\n                            </div>\n                            <div class=\"form-group col-xs-12 no-padding\" if.bind=\"envDetails.role=='MM' || envDetails.role=='CSM'\">\n                                <div class=\"form-group col-xs-12 no-padding\" if.bind=\"request.briefing_manager_comments!=''\">\n                                    <label i18n=\"components.briefingAgenda.conciergeModal.lastComment\"></label>\n                                    <textarea class=\"col-xs-12 textarea-72\" readonly value.bind=\"request.briefing_manager_comments\"></textarea>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xs-12\">\n                                        <label class=\"toggle-switch-label\" i18n=\"components.briefingAgenda.conciergeModal.requestFullfillQuestion\"></label>\n                                    </div>\n                                    <div class=\"col-xs-12 line-height-34\">\n                                        <div class=\"pull-left right-margin-30\">\n                                            <input type=\"radio\" class=\"right-margin-10\" name=\"vendor-status\" model.bind=\"true\" change.delegate=\"changeLabel()\" checked.bind=\"request.vendor_fulfilled_status\">Yes\n                                        </div>\n                                        <div class=\"pull-left\">\n                                            <input type=\"radio\" class=\"right-margin-10\" name=\"vendor-status\" model.bind=\"false\" change.delegate=\"changeLabel()\" checked.bind=\"request.vendor_fulfilled_status\">No\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" if.bind=\"request.vendor_fulfilled_status == false\">\n                                    <div class=\"col-xs-12\">\n                                        <label class=\"toggle-switch-label\" i18n=\"components.briefingAgenda.conciergeModal.youFullfillRequest\"></label>\n                                    </div>\n                                    <div class=\"col-xs-12 line-height-34\">\n                                        <div class=\"pull-left right-margin-30\">\n                                            <input type=\"radio\" class=\"right-margin-10\" name=\"bm-status\" model.bind=\"true\" change.delegate=\"changeLabel()\" checked.bind=\"request.can_manager_fulfil\">Yes\n                                        </div>\n                                        <div class=\"pull-left\">\n                                            <input type=\"radio\" class=\"right-margin-10\" name=\"bm-status\" model.bind=\"false\" change.delegate=\"changeLabel()\" checked.bind=\"request.can_manager_fulfil\">No\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-xs-12 no-padding\" if.bind=\"originalChange != request.vendor_fulfilled_status || originalBMChange != request.can_manager_fulfil\">\n                                    <label class=\"required\" i18n=\"components.briefingAgenda.conciergeModal.addComment\"></label>\n                                    <textarea class=\"col-xs-12 textarea-72\" required value.bind=\"comments\"></textarea>\n                                </div>\n                                <div class=\"form-group col-xs-12 no-padding\" if.bind=\"originalChange != request.vendor_fulfilled_status || originalBMChange != request.can_manager_fulfil\">\n                                    <button type=\"submit\" class=\"btn btn-lg btn-block btn-blue\" i18n=\"components.commons.save\"></button>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-xs-12 no-padding\" if.bind=\"(request.vendor_fulfilled_status || request.can_manager_fulfil) && request.mail_label && request.vendor_fulfilled_status != null\">\n                                <button type=\"button\" click.trigger=\"triggerMail($event)\" class=\"btn btn-lg btn-block btn-blue\">${request.mail_label}</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n";
});
System.register('components/briefing-agenda/concierge-modal.js', ['github:twbs/bootstrap@3.3.6.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/concierge_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
    'use strict';

    var $, bootstrap, inject, bindable, EventAggregator, ConciergeRequestService, I18N, debounce, ConciergeModal;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_bootstrap) {
            $ = _bootstrap['default'];
            bootstrap = _bootstrap['default'];
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_serviceConcierge_request_service) {
            ConciergeRequestService = _serviceConcierge_request_service.ConciergeRequestService;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_lodashLodash) {
            debounce = _lodashLodash.debounce;
        }],
        execute: function () {
            ConciergeModal = function () {
                function ConciergeModal(ea, ConciergeRequestService, i18n) {
                    _classCallCheck(this, _ConciergeModal);

                    this.request = {};
                    this.service = {};
                    this.comments = '';
                    this.subscription = '';

                    this.ea = ea;
                    this.envDetails = envDetails;
                    this.conciergeService = ConciergeRequestService;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                    this.subscribeToEvents();
                    this.triggerMail = debounce(this.triggerMailAction, 369);
                }

                _createClass(ConciergeModal, [{
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        this.subscription = this.ea.subscribe('concierge:showModal', function (concierge) {
                            _this.request = concierge.request;
                            _this.service = concierge.service;
                            if (_this.request.briefing_manager_comments == null) {
                                _this.request.briefing_manager_comments = '';
                            }
                            _this.originalChange = _this.request.vendor_fulfilled_status;
                            _this.originalBMChange = _this.request.can_manager_fulfil;
                            $(_this.conciergemodal).modal('show');
                            _this.formviewRenderer = $("#concierge-modal-form").formViewRenderer({
                                fieldCollection: _this.service.forms.concierge_request_form
                            });
                            _this.formviewRenderer.init();
                            _this.formviewRenderer.setValues(_this.request);
                            _this.formviewRenderer.afterLoad();
                            $('[name="request_for"]').html('');
                            _this.request.participants.forEach(function (p) {
                                var name = p.user.first_name + ' ' + p.user.last_name;
                                $('[name="request_for"]').append('<li>' + name + '</li>');
                            });
                        });
                    }
                }, {
                    key: 'updateRequest',
                    value: function updateRequest(event) {
                        var _this2 = this;

                        var param = {
                            concierge_request: {
                                can_manager_fulfil: this.request.can_manager_fulfil,
                                vendor_fulfilled_status: this.request.vendor_fulfilled_status,
                                comments: this.comments
                            }
                        };
                        this.conciergeService.updateConciergeRequest(this.request.uuid, param).then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.status == 200) {
                                _this2.ea.publish('agenda:concierge:refresh', response.concierge_services);
                                _this2.comments = '';
                                $(_this2.conciergemodal).modal('hide');
                            }
                        })['catch'](function () {});
                    }
                }, {
                    key: 'changeLabel',
                    value: function changeLabel() {
                        if (this.request.vendor_fulfilled_status && !this.request.can_manager_fulfil && this.originalChange !== this.request.vendor_fulfilled_status) {
                            if (this.request.mail_label.search("RESEND") >= 0) {
                                this.request.mail_label = this.i18n.tr('components.briefingAgenda.conciergeModal.resendMailToVendor');
                            } else {
                                this.request.mail_label = this.i18n.tr('components.briefingAgenda.conciergeModal.sendMailToVendor');
                            }
                        } else if (this.request.can_manager_fulfil && !this.request.vendor_fulfilled_status) {
                            if (this.request.mail_label.search("RESEND") >= 0) {
                                this.request.mail_label = this.i18n.tr('components.briefingAgenda.conciergeModal.resendMailToAttendee');
                            } else {
                                this.request.mail_label = this.i18n.tr('components.briefingAgenda.conciergeModal.sendMailToAttendee');
                            }
                        }
                    }
                }, {
                    key: 'triggerMailAction',
                    value: function triggerMailAction(event) {
                        var _this3 = this;

                        var param = {
                            concierge_request: {
                                can_manager_fulfil: this.request.can_manager_fulfil,
                                vendor_fulfilled_status: this.request.vendor_fulfilled_status,
                                comments: this.comments
                            }
                        };
                        this.conciergeService.triggerConciergeMail(this.request.uuid, param).then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.status == 200) {
                                _this3.ea.publish('agenda:concierge:refresh', response.concierge_services);
                                $(_this3.conciergemodal).modal('hide');
                            }
                        })['catch'](function () {});
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        this.subscription.dispose();
                    }
                }]);

                var _ConciergeModal = ConciergeModal;
                ConciergeModal = inject(EventAggregator, ConciergeRequestService, I18N)(ConciergeModal) || ConciergeModal;
                return ConciergeModal;
            }();

            _export('ConciergeModal', ConciergeModal);
        }
    };
});
System.registerDynamic("components/briefing-agenda/concierge-service.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<div repeat.for=\"request of serviceRequests\">\n\t\t<div class=\"briefing-activity-list\">\n\t        <a href=\"javascript:void(0)\">\n\t            <div class=\"briefing-activity-section clearfix\" click.trigger=\"openModal($event, request, service)\">\n\t                <label class=\"briefing-activity-icon state ${request.status} pull-left briefing-activity-user-icon\">\n\t                    <i class=\"${service.service_icon_url} jif-dark-grey jif-18\"></i>\n\t                </label>\n\t                <div class=\"briefing-activity-detail-block\">\n\t                    <div class=\"briefing-activity-name\">${service.service_name}</div>\n\t                    <div class=\"briefing-activity-detail text-uppercase\">${request.attendeeNames}</div>\n\t                </div>\n\t            </div>\n\t        </a>\n\t    </div>\n    </div>\n</template>\n";
});
System.register('components/briefing-agenda/concierge-service.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js'], function (_export) {
    'use strict';

    var inject, bindable, EventAggregator, ConciergeService;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }],
        execute: function () {
            ConciergeService = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(ConciergeService, [{
                    key: 'service',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'serviceRequests',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'briefingStatus',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function ConciergeService(ea) {
                    _classCallCheck(this, _ConciergeService);

                    _defineDecoratedPropertyDescriptor(this, 'service', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'serviceRequests', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'briefingStatus', _instanceInitializers);

                    this.ea = ea;
                    this.envDetails = envDetails;
                    this.isSFDC = $('#sf-jiffle-now').length >= 1;
                }

                _createDecoratedClass(ConciergeService, [{
                    key: 'attached',
                    value: function attached() {
                        this.serviceRequests.forEach(function (request) {
                            var userNames = [];
                            request.participants.forEach(function (attendee) {
                                userNames.push(attendee.user.first_name + " " + attendee.user.last_name);
                            });
                            request['attendeeNames'] = userNames.join(",");
                        });
                    }
                }, {
                    key: 'openModal',
                    value: function openModal(event, request, service) {
                        if (this.isSFDC || this.envDetails.role == "AM" || this.envDetails.role == "EA" || this.briefingStatus == "Cancelled") {
                            return;
                        }
                        this.ea.publish('concierge:showModal', {
                            request: request,
                            service: service
                        });
                    }
                }], null, _instanceInitializers);

                var _ConciergeService = ConciergeService;
                ConciergeService = inject(EventAggregator)(ConciergeService) || ConciergeService;
                return ConciergeService;
            }();

            _export('ConciergeService', ConciergeService);
        }
    };
});
System.registerDynamic("components/briefing-agenda/draft-plan.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n<require from=\"../dhtmlx-calendar\"></require>\n<require from=\"custom-attributes/bootstrap-popover\"></require>\n\n<div id=\"js-draft-plan-tabs\" class=\"row\" show.bind=\"view === 'calendar'\">\n    <ul class=\"nav nav-tabs tabs-gray\" role=\"tablist\">\n        <li class=\"${(calendarAgendaPlanData.length == 0) ? 'active':''}\" role=\"presentation\" data-plan-id=\"add_draft_plan\" show.bind=\"briefingDetails.show_new_plan_icon\" click.delegate=\"switchPlanTabs($event)\">\n            <a href=\"#add_draft_plan\" role=\"tab\" data-toggle=\"tab\">\n                <i class=\"jif-plus jif-blue jif-14\"></i>\n            </a>\n        </li>\n        <li repeat.for=\"plan of calendarAgendaPlanData\" data-plan-id=\"${plan.uuid}\" role=\"presentation\" class=\"${$last ? 'active' : ''}\" click.delegate=\"switchPlanTabs($event)\">\n            <a href=\"#${plan.uuid}\" role=\"tab\" data-toggle=\"tab\" bootstrap-popover=\"status.bind: plan.status\" class=\"${plan.status.toLowerCase()}\">${plan.name}</a>\n        </li>\n    </ul>\n    <div class=\"tab-content tabs-gray-content\">\n        <div class=\"tab-pane ${(calendarAgendaPlanData.length == 0) ? 'active':''}\" id=\"add_draft_plan\" show.bind=\"briefingDetails.show_new_plan_icon\">\n            <h3 i18n=\"components.briefingAgenda.draftPlan.addNewPlan\"></h3>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"ebc-edit-agenda-calendar\">\n                        <dhtmlx-calendar draft-enabled.bind=\"true\" ref=\"createPlanCalReference\" calid.bind=\"'dcal-add_draft_plan'\" dwidth.bind=\"'100%'\" dheight.bind=\"'375px'\" xy.bind=\"calendarXY\" conf.bind=\"newPlanObject.calendarConfig\" display-event.bind=\"event\" display-data.bind=\"newPlanObject.scheduledInfo\" long-day.bind=\"longDay\" availables.bind=\"roomAvailability\" mode.bind=\"'week'\" minimum-duration.bind=\"minimumDuration\"></dhtmlx-calendar>\n                    </div>\n                </div>\n            </div>\n            <div class=\"bulk-action button-bar\">\n                <div class=\"row\" show.bind=\"showSubmitActions\">\n                  <div class=\"col-xs-5 col-sm-4\">\n                    <button type=\"button\" class=\"btn btn-blue btn-block\" click.delegate=\"createNewPlan()\" i18n=\"components.commons.submit\"></button>\n                  </div>\n                  <div class=\"col-xs-5 col-xs-offset-2 col-sm-4 col-sm-offset-4\">\n                    <button type=\"button\" class=\"btn btn-white border-blue btn-block\" click.delegate=\"discardNewPlanChanges()\" i18n=\"components.briefingAgenda.draftPlan.discard\"></button>\n                  </div>\n                </div>\n            </div>\n        </div>\n        <div repeat.for=\"plan of calendarAgendaPlanData\" id=\"${plan.uuid}\" class=\"tab-pane no-padding-left-right no-padding-bottom ${ $last ? 'active':''}\">\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"${plan.editable? 'ebc-edit-agenda-calendar':'ebc-agenda-calendar'}\">\n                        <dhtmlx-calendar draft-enabled.bind=\"true\" calid.bind=\"'dcal-'+plan.uuid\" dwidth.bind=\"'100%'\" dheight.bind=\"'375px'\" xy.bind=\"$parent.calendarXY\" conf.bind=\"plan.planCalendarConfig\" display-event.bind=\"$parent.event\" display-data.bind=\"plan.planCalendar\" long-day.bind=\"longDay\" availables.bind=\"roomAvailability\" mode.bind=\"'week'\" minimum-duration.bind=\"minimumDuration\"></dhtmlx-calendar>\n                    </div>\n                </div>\n            </div>\n            <div class=\"bulk-action button-bar\" if.bind=\"plan.show_action_bar\">\n                <div class=\"row\" show.bind=\"plan.buttons.show_accept_flag || plan.buttons.show_reject_flag\">\n                  <div class=\"col-xs-5 col-sm-4\">\n                    <button type=\"button\" class=\"btn btn-blue btn-block\" show.bind=\"plan.buttons.show_accept_flag\" click.delegate=\"acceptAgendaPlan(plan.uuid)\" i18n=\"components.briefingAgenda.draftPlan.acceptPlan\"></button>\n                  </div>\n                  <div class=\"col-xs-5 col-xs-offset-2 col-sm-4 col-sm-offset-4\">\n                    <button type=\"button\" class=\"btn btn-white border-blue btn-block\" show.bind=\"plan.buttons.show_reject_flag\" data-toggle=\"modal\" data-target=\"#reject-plan-modal\" i18n=\"components.briefingAgenda.draftPlan.declinePlan\"></button>\n                  </div>\n                </div>\n                <div class=\"row\" show.bind=\"plan.buttons.show_save_submit\">\n                  <div class=\"col-xs-5 col-sm-4\">\n                    <button type=\"button\" class=\"btn btn-blue btn-block\" show.bind=\"showSubmitActions\" click.delegate=\"updateExistingPlan(plan.uuid)\" i18n=\"components.commons.submit\"></button>\n                  </div>\n                  <!--div class=\"col-xs-5 col-xs-offset-2 col-sm-4 col-sm-offset-4\">\n                    <button type=\"button\" class=\"btn btn-white border-blue btn-block\" click.delegate=\"discardAgendaPlan(plan.uuid)\">Discard</button>\n                  </div-->\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"modal fade add-user-modal\" data-backdrop=\"static\" id=\"reject-plan-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" aria-labelledby=\"myModalLabel\">\n        <div class=\"modal-dialog\">\n            <div class=\"content\">\n                <div class=\"jiffle-panel\">\n                    <div class=\"jiffle-panel-head\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                        <h3 i18n=\"components.briefingAgenda.draftPlan.declineReason\"></h3>\n                    </div>\n                    <div class=\"jiffle-panel-body concierge-panel-body\">\n                        <div class=\"bottom-margin-15\" show.bind=\"meetings && meetings.length\">\n                            <span i18n='components.briefingAgenda.draftPlan.meetingsCancellation'></span>\n                            <ul class=\"left-margin-20\">\n                                <li repeat.for=\"meeting of meetingDetails\">${meeting}</li>\n                            </ul>\n                        </div>\n                        <form id=\"add-user-form\" submit.delegate=\"rejectAgendaPlan()\" class=\"jiffle-form\" role=\"form\">\n                            <div class=\"form-group col-xs-12 no-padding\">\n                                <label i18n=\"components.briefingAgenda.draftPlan.comments\"></label>\n                                <textarea class=\"col-xs-12 textarea-72\" value.bind=\"rejectPlanForm.comment\"></textarea>\n                            </div>\n                            <div class=\"form-group col-xs-12 no-padding\">\n                                <button type=\"submit\" class=\"btn btn-lg btn-blue\" i18n=\"components.commons.submit\"></button>\n                                <button type=\"button\" class=\"btn btn-lg btn-default\" data-dismiss=\"modal\" i18n=\"components.commons.cancel\"></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n";
});
System.register('components/briefing-agenda/draft-plan.js', ['github:lodash/lodash@3.10.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/briefing_request_service.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var _, inject, bindable, EventAggregator, BriefingRequestService, I18N, DraftPlan;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_serviceBriefing_request_service) {
            BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            DraftPlan = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(DraftPlan, [{
                    key: 'briefingDetails',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'agendaPlanData',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'roomAvailability',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'longDay',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'meetings',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'minimumDuration',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'activities',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'view',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function DraftPlan(ea, briefingRequestService, i18n) {
                    _classCallCheck(this, _DraftPlan);

                    _defineDecoratedPropertyDescriptor(this, 'briefingDetails', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'agendaPlanData', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'roomAvailability', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'longDay', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'meetings', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'minimumDuration', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'activities', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'view', _instanceInitializers);

                    this.event = {};
                    this.calendarXY = {};
                    this.newPlanObject = {};
                    this.rejectPlanForm = {};
                    this.currentActivePlanTabID = "";
                    this.calendarAgendaPlanData = [];
                    this.subscriptions = [];
                    this.showSubmitActions = false;
                    this.inProgress = false;

                    this.ea = ea;
                    this.briefingRequestService = briefingRequestService;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                    this.envDetails = window.envDetails;

                    this.updateExistingPlan = _.debounce(this.updatePlanDebounced, 369);
                    this.createNewPlan = _.debounce(this.createPlanDebounced, 369);
                }

                _createDecoratedClass(DraftPlan, [{
                    key: 'attached',
                    value: function attached() {
                        this.newPlanObject = {
                            scheduledInfo: [],
                            calendarConfig: {
                                now_date: new Date(1970, 1, 1),
                                xml_date: "%Y-%m-%d %H:%i",
                                day_date: "%D, %M %j",
                                limit_view: true,
                                details_on_create: false,
                                hour_size_px: 60 / 15 * 22,
                                separate_short_events: true,
                                multi_day: true,
                                mark_now: false,
                                drag_move: true,
                                readonly: false,
                                drag_resize: 1,
                                drag_create: 0,
                                icons_select: ['icon_delete'],
                                icons_edit: ['icon_delete'],
                                dblclick_create: false,
                                edit_on_create: false
                            }
                        };

                        this.calendarXY = {
                            nav_height: 0,
                            min_event_height: 20
                        };

                        this.event = {
                            startDate: this.briefingDetails.start_time,
                            endDate: this.briefingDetails.end_time
                        };
                        this.subscribeToEvents();
                        this.fillPlanCalendarData();
                        if (this.calendarAgendaPlanData.length == 0) {
                            setTimeout(function () {
                                $('[data-plan-id="add_draft_plan"]').trigger("click");
                            }, 1000);
                        }

                        this.meetingDetails = this.meetings && this.meetings.filter(function (meeting) {
                            return meeting.briefing_meeting_title;
                        }).map(function (meeting) {
                            return '#' + meeting.id + ' - ' + meeting.briefing_meeting_title;
                        });
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        var count = 0;
                        this.subscriptions[count++] = this.ea.subscribe('plan-activity:selected', function (params) {
                            _this.showSubmitActions = true;
                            _this.ea.publish("trigger-plan-activity:selected", {
                                activity_id: params.activity_id,
                                activity_name: params.activity_name,
                                tab_id: _this.currentActivePlanTabID,
                                maximumTime: params.maximumTime,
                                minimumTime: params.minimumTime
                            });
                        });

                        this.subscriptions[count++] = this.ea.subscribe('calendar-activity:remove', function (id) {
                            _this.showSubmitActions = true;
                            _this.ea.publish('calender:acitivity:remove', {
                                removed_id: id,
                                tab_id: _this.currentActivePlanTabID
                            });
                        });

                        this.subscriptions[count++] = this.ea.subscribe('plan-activity:bulk-action', function () {
                            _this.showSubmitActions = true;
                        });

                        this.subscriptions[count++] = this.ea.subscribe('draft-plan:activity-click', function (_ref) {
                            var meetingURL = _ref.meetingURL;
                            var agendaPlans = _ref.agendaPlans;

                            var activePlans = _this.calendarAgendaPlanData[_this.calendarAgendaPlanData.length - 1];

                            if (activePlans.planCalendar.length !== agendaPlans.length) {
                                _this.ea.publish('show:notification', {
                                    title: _this.i18n.tr('components.briefingAgenda.draftPlan.unsavedHeader'),
                                    message: _this.i18n.tr('components.briefingAgenda.draftPlan.unsavedBody'),
                                    'class': 'yellow',
                                    isConfirmation: true,
                                    done: function done() {
                                        window.location.href = meetingURL;
                                    }
                                });
                            } else {
                                window.location.href = meetingURL;
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('draft-plan:show-submit', function () {
                            _this.showSubmitActions = true;
                        });

                        this.ea.subscribe('draft-plan:plan-all:state-change', function () {
                            var planUUID = _this.currentActivePlanTabID.replace('dcal-', '');
                            var addedEvents = $('#' + _this.currentActivePlanTabID).data('scheduler').getEvents();
                            var activities = _this.activities.length;
                            var scheduledSlots = undefined;

                            var editablePlan = _this.agendaPlanData.filter(function (plan) {
                                scheduledSlots = plan.agenda_slots && plan.agenda_slots.filter(function (agenda) {
                                    return agenda.meeting_request_uuid;
                                }).length;
                                return plan.is_editable && plan.uuid === planUUID;
                            });

                            if (planUUID !== 'add_draft_plan' && !editablePlan.length || activities <= 1 || scheduledSlots === activities) {
                                _this.ea.publish('draft-plan:plan-all-status', '');
                                return;
                            }

                            if (addedEvents.length === activities) {
                                _this.ea.publish('draft-plan:plan-all-status', _this.i18n.tr('components.commons.remove'));
                            } else {
                                _this.ea.publish('draft-plan:plan-all-status', _this.i18n.tr('components.briefingAgenda.requestedMeeting.plan'));
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('draft-plan:get-submit-plan-status', function () {
                            _this.ea.publish('draft-plan:submit-plan-status', _this.showSubmitActions);
                        });
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        this.subscriptions.forEach(function (sub) {
                            sub.dispose();
                        });
                    }
                }, {
                    key: 'showErrorMessage',
                    value: function showErrorMessage(response, className) {
                        if (response.response) {
                            response = JSON.parse(response.response);
                        }
                        this.ea.publish("show:notification", {
                            title: this.i18n.tr('components.briefingAgenda.draftPlan.agendaPlanInfo'),
                            message: response.message,
                            'class': className,
                            autoHideDuration: 4000
                        });
                    }
                }, {
                    key: 'discardNewPlanChanges',
                    value: function discardNewPlanChanges() {
                        var newPlanScheduler = this.createPlanCalReference.au.controller.viewModel.scheduler;
                        var addedEvents = newPlanScheduler.getEvents();
                        if (addedEvents.length) {
                            addedEvents.forEach(function (event) {
                                newPlanScheduler.deleteEvent(event.id);
                            });
                        }

                        this.ea.publish('draft-plan:plan-all:state-change');
                    }
                }, {
                    key: 'switchPlanTabs',
                    value: function switchPlanTabs(e) {
                        var planUuid = $(e.target).closest("[data-plan-id]").data('plan-id');
                        var tabID = 'dcal-' + planUuid;
                        if (this.currentActivePlanTabID == tabID) {
                            return;
                        }
                        this.currentActivePlanTabID = tabID;
                        var findPlan = _.find(this.calendarAgendaPlanData, function (plan) {
                            return plan.uuid == planUuid;
                        });
                        this.ea.publish("draft-plan:tabchange", { tab_id: tabID, plan: findPlan });
                        this.ea.publish('draft-plan:plan-all:state-change');
                    }
                }, {
                    key: 'updatePlanDebounced',
                    value: function updatePlanDebounced() {
                        var _this2 = this;

                        if (this.inProgress) {
                            return;
                        }

                        this.inProgress = true;
                        var tabID = this.currentActivePlanTabID;
                        var planUUID = tabID.split('dcal-')[1];
                        var addedEvents = $('#' + tabID).data("scheduler").getEvents();
                        var planDetails = _.find(this.calendarAgendaPlanData, function (plan) {
                            return plan.uuid == planUUID;
                        });

                        if (!addedEvents.length) {
                            this.showPlanNotification('updation', 'update');
                            this.inProgress = false;
                            return;
                        }

                        if (planDetails.planCalendar.length) {
                            planDetails.planCalendar.forEach(function (slot) {
                                if (_.findIndex(addedEvents, function (ev) {
                                    return ev.slot_uuid == slot.slot_uuid;
                                }) === -1) {
                                    slot['_destroy'] = true;
                                    addedEvents.push(slot);
                                }
                            });
                        }
                        addedEvents.forEach(function (event) {
                            event['end_time'] = moment(event.end_date).format('DD-MM-YYYY HH:mm');
                            event['start_time'] = moment(event.start_date).format('DD-MM-YYYY HH:mm');
                        });

                        this.briefingRequestService.updateAgendaPlan(this.briefingDetails.uuid, planUUID, { agenda_slots: addedEvents }).then(function (response) {
                            if (response.response) {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == true || response.status == 200) {
                                _this2.ea.publish("show:notification", {
                                    title: _this2.i18n.tr('components.briefingAgenda.draftPlan.agendaPlanInfo'),
                                    message: response.message,
                                    'class': 'green',
                                    onHide: function onHide() {
                                        window.location.reload();
                                    }
                                });
                            }
                            _this2.inProgress = false;
                        })['catch'](function (response) {
                            _this2.showErrorMessage(response);
                            _this2.inProgress = false;
                        });
                    }
                }, {
                    key: 'createPlanDebounced',
                    value: function createPlanDebounced() {
                        var _this3 = this;

                        if (this.inProgress) {
                            return;
                        }
                        this.inProgress = true;
                        var addedEvents = this.createPlanCalReference.au.controller.viewModel.scheduler.getEvents();
                        addedEvents.forEach(function (event) {
                            event['end_time'] = moment(event.end_date).format('DD-MM-YYYY HH:mm');
                            event['start_time'] = moment(event.start_date).format('DD-MM-YYYY HH:mm');
                        });

                        if (!addedEvents.length) {
                            this.showPlanNotification('creation', 'create');
                            this.inProgress = false;
                            return;
                        }

                        this.briefingRequestService.createAgendaPlan(this.briefingDetails.uuid, { agenda_slots: addedEvents }).then(function (response) {
                            if (response.response) {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == true || response.status == 200) {
                                _this3.ea.publish("show:notification", {
                                    title: _this3.i18n.tr('components.briefingAgenda.draftPlan.agendaPlanInfo'),
                                    message: response.message,
                                    'class': 'green',
                                    onHide: function onHide() {
                                        window.location.reload();
                                    }
                                });
                            }
                            _this3.inProgress = false;
                        })['catch'](function (response) {
                            _this3.showErrorMessage(response);
                            _this3.inProgress = false;
                        });
                    }
                }, {
                    key: 'showPlanNotification',
                    value: function showPlanNotification(headerAction, bodyAction) {
                        this.ea.publish('show:notification', {
                            title: this.i18n.tr('components.briefingAgenda.draftPlan.modalHeader', { action: headerAction }),
                            message: this.i18n.tr('components.briefingAgenda.draftPlan.modalBody', { action: bodyAction }),
                            'class': 'red'
                        });
                    }
                }, {
                    key: 'acceptAgendaPlan',
                    value: function acceptAgendaPlan(planUUID) {
                        var _this4 = this;

                        this.briefingRequestService.approveAgendaPlan(this.briefingDetails.uuid, planUUID).then(function (response) {
                            if (response.response) {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == true || response.status == 200) {
                                _this4.ea.publish("show:notification", {
                                    title: _this4.i18n.tr('components.briefingAgenda.draftPlan.agendaPlanInfo'),
                                    message: response.message,
                                    'class': 'green',
                                    onHide: function onHide() {
                                        window.location.reload();
                                    }
                                });
                            }
                        })['catch'](function (response) {
                            _this4.showErrorMessage(response);
                        });
                    }
                }, {
                    key: 'rejectAgendaPlan',
                    value: function rejectAgendaPlan() {
                        var _this5 = this;

                        var params = { reason: this.rejectPlanForm.comment };
                        var planUUID = this.currentActivePlanTabID.split('dcal-')[1];
                        this.rejectPlanForm.comments = "";
                        this.briefingRequestService.rejectAgendaPlan(this.briefingDetails.uuid, planUUID, params).then(function (response) {
                            $("#reject-plan-modal").modal('hide');
                            if (response.response) {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == true || response.status == 200) {
                                _this5.ea.publish("show:notification", {
                                    title: _this5.i18n.tr('components.briefingAgenda.draftPlan.agendaPlanInfo'),
                                    message: response.message,
                                    'class': 'green',
                                    onHide: function onHide() {
                                        window.location.reload();
                                    }
                                });
                            }
                        })['catch'](function (response) {
                            _this5.showErrorMessage(response);
                        });
                    }
                }, {
                    key: 'fillPlanCalendarData',
                    value: function fillPlanCalendarData() {
                        var _this6 = this;

                        this.agendaPlanData.forEach(function (plan) {
                            var planObj = {
                                uuid: plan.uuid,
                                name: plan.name,
                                editable: plan.is_editable,
                                status: plan.status,
                                planCalendar: [],
                                planCalendarConfig: {
                                    now_date: new Date(1970, 1, 1),
                                    xml_date: "%Y-%m-%d %H:%i",
                                    day_date: "%D, %M %j",
                                    limit_view: true,
                                    details_on_create: false,
                                    hour_size_px: 60 / 15 * 22,
                                    separate_short_events: true,
                                    multi_day: true,
                                    mark_now: false,
                                    drag_move: true,
                                    readonly: false,
                                    drag_resize: 1,
                                    drag_create: 0,
                                    icons_select: ['icon_delete'],
                                    icons_edit: ['icon_delete'],
                                    dblclick_create: false,
                                    edit_on_create: false
                                }
                            };
                            if (!planObj.editable) {
                                planObj.planCalendarConfig.drag_move = false;
                                planObj.planCalendarConfig.drag_resize = 0;
                                planObj.planCalendarConfig.dblclick_create = false;
                                planObj.planCalendarConfig.readonly = true;
                            }
                            plan.agenda_slots.forEach(function (slot) {
                                if (slot.status != "cancelled") {
                                    var planSlot = {
                                        slot_uuid: slot.uuid,
                                        text: slot.meeting_title,

                                        start_date: moment(slot.start_time.replace('Z', '')).format('YYYY-MM-DD HH:mm'),
                                        end_date: moment(slot.end_time.replace('Z', '')).format('YYYY-MM-DD HH:mm'),
                                        meetingId: slot.activity_agenda_id,
                                        activityMeetingId: slot.meeting_id,
                                        status: slot.status,
                                        navigate: slot.meeting_request_url,
                                        meeting_uuid: slot.meeting_request_uuid,
                                        draggable: slot.show_edit,
                                        deletable: slot.show_cancel,
                                        activity_agenda_id: slot.activity_agenda_id
                                    };
                                    if (slot.meeting_request_uuid.length) {
                                        var meeting = _.find(_this6.meetings, function (meet) {
                                            return meet.uuid == slot.meeting_request_uuid;
                                        });
                                        if (meeting && meeting.uuid) {
                                            planSlot['location'] = meeting.room_name;
                                        }
                                    }

                                    var agendaActivity = _.find(_this6.activities, function (activity) {
                                        return activity.id === slot.activity_agenda_id;
                                    });

                                    var settings = agendaActivity && agendaActivity.activity && agendaActivity.activity.settings;

                                    if (settings) {
                                        planSlot.maximumTime = settings.max_duration;
                                        planSlot.minimumTime = settings.min_duration;
                                    }

                                    planObj.planCalendar.push(planSlot);
                                }
                            });
                            if (plan.buttons) {
                                planObj['show_action_bar'] = true;
                                planObj['buttons'] = plan.buttons;
                            }
                            _this6.calendarAgendaPlanData.push(planObj);
                        });
                        if (this.calendarAgendaPlanData.length > 0) {
                            setTimeout(function () {
                                var tabId = 'dcal-' + _this6.calendarAgendaPlanData[_this6.calendarAgendaPlanData.length - 1].uuid;
                                _this6.currentActivePlanTabID = tabId;
                                _this6.ea.publish("draft-plan:tabchange", { tab_id: tabId, plan: _this6.calendarAgendaPlanData[_this6.calendarAgendaPlanData.length - 1] });
                                _this6.ea.publish('draft-plan:plan-all:state-change');
                            }, 1000);
                        }
                    }
                }], null, _instanceInitializers);

                var _DraftPlan = DraftPlan;
                DraftPlan = inject(EventAggregator, BriefingRequestService, I18N)(DraftPlan) || DraftPlan;
                return DraftPlan;
            }();

            _export('DraftPlan', DraftPlan);
        }
    };
});
System.registerDynamic("components/briefing-agenda/requested-meeting.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<div class=\"briefing-activity-list col-xs-12\">\n        <a href=\"javascript:void(0)\">\n            <div class=\"briefing-activity-section col-xs-10\">\n                <label class=\"briefing-activity-icon pull-left\" title=\"${meeting.activity.display_name}\">${meeting.activity.display_name[0]}</label>\n                <div class=\"briefing-activity-detail-block\">\n                    <div class=\"briefing-activity-name text-ellipsis\" >${activityHeading()}</div>\n                    <div class=\"briefing-activity-detail text-uppercase\">${activitySubheading()}</div>\n                </div>\n            </div>\n        </a>\n        <a href=\"javascript:void(0)\" if.bind=\"isDraftEnabled || isAdmin()\">\n            <div auto-meeting-type=\"${meeting.activity.display_name}\" class=\"briefing-activity-schedule col-xs-2 icon-box jif-blue pull-right\" click.delegate=\"handleActivityClick()\">\n                <i class=\"jif-plus-circle jif-20\" if.bind=\"briefingRequest.status!='Cancelled' && meeting.scheduled != true && (actionName == 'Plan' || (actionName == 'Schedule' && isAdmin()))\"></i>\n\t\t\t\t<i class=\"jif-minus-circle-o jif-20\" if.bind=\"briefingRequest.status!='Cancelled' && meeting.scheduled != true && actionName == 'Remove'\"></i>\n\t\t\t\t<i class=\"jif-circle-o jif-20\" if.bind=\"briefingRequest.status=='Cancelled' || meeting.scheduled == true || actionName == 'No Action'\"></i>\n                <div class=\"font-8\">${actionName}</div>\n\n            </div>\n        </a>\n    </div>\n</template>\n";
});
System.register('components/briefing-agenda/requested-meeting.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-router@1.0.0-beta.1.js', 'service/briefing_request_service.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-templating-resources@1.0.0-beta.1.0.2.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var $, inject, bindable, Router, BriefingRequestService, EventAggregator, BindingSignaler, I18N, RequestedMeeting;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_jquery) {
            $ = _jquery['default'];
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaRouter) {
            Router = _aureliaRouter.Router;
        }, function (_serviceBriefing_request_service) {
            BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaTemplatingResources) {
            BindingSignaler = _aureliaTemplatingResources.BindingSignaler;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            RequestedMeeting = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(RequestedMeeting, [{
                    key: 'meeting',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'briefingRequest',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'isDraftEnabled',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'order',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function RequestedMeeting(router, brs, ea, bindingSignaler, i18n) {
                    _classCallCheck(this, _RequestedMeeting);

                    _defineDecoratedPropertyDescriptor(this, 'meeting', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'briefingRequest', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'isDraftEnabled', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'order', _instanceInitializers);

                    this.shortName = '';
                    this.actionName = '';
                    this.subscriptions = [];

                    this.ea = ea;
                    this.i18n = i18n;
                    this.router = router;
                    this.envDetails = envDetails;
                    this.briefingRequestService = brs;
                    this.bindingSignaler = bindingSignaler;
                    this.i18n.setLocale('en').then(function () {});
                    this.subscribeToEvents();
                }

                _createDecoratedClass(RequestedMeeting, [{
                    key: 'attached',
                    value: function attached() {
                        if (this.briefingRequest.status !== this.i18n.tr('components.commons.cancelled') && this.meeting.scheduled !== true) {
                            this.actionName = this.i18n.tr('components.briefingAgenda.requestedMeeting.schedule');
                        } else {
                            this.actionName = this.i18n.tr('components.briefingAgenda.requestedMeeting.noAction');
                        }
                        if (this.isDraftEnabled) {
                            this.actionName = this.i18n.tr('components.briefingAgenda.requestedMeeting.plan');
                        }
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        var count = 0;

                        this.subscriptions[count++] = this.ea.subscribe('activity:change', function (activity_id) {
                            if (_this.meeting.id == activity_id) {
                                _this.actionName = _this.i18n.tr('components.briefingAgenda.requestedMeeting.plan');
                                setTimeout(function () {
                                    return _this.ea.publish('draft-plan:plan-all:state-change');
                                }, 0);
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe("draft-plan:tabchange", function (tabChange) {
                            var events = [];
                            if (_this.meeting.scheduled || tabChange.plan && tabChange.plan.editable == false) {
                                _this.actionName = _this.i18n.tr('components.briefingAgenda.requestedMeeting.noAction');
                                return;
                            }
                            if (tabChange.plan) {
                                var sched = $('#dcal-' + tabChange.plan.uuid).data("scheduler");
                                events = sched.getEvents();
                            }
                            if (tabChange.plan && tabChange.plan.status != _this.i18n.tr('components.commons.declined')) {
                                if (tabChange.plan.planCalendar.length == 0 && events.length == 0) {
                                    _this.actionName = _this.i18n.tr('components.briefingAgenda.requestedMeeting.plan');
                                    return;
                                }
                                var found = false;
                                if (tabChange.plan.planCalendar.length == 0 && events.length > 0 || events.length > tabChange.plan.planCalendar.length) {
                                    events.forEach(function (ev) {
                                        if (_this.meeting.id == ev.meetingId || _this.meeting.id == ev.activity_agenda_id) {
                                            found = true;
                                        }
                                    });
                                    _this.checkAction(found);
                                    return;
                                }
                                found = false;
                                tabChange.plan.planCalendar.forEach(function (activity) {
                                    if (activity.meetingId == _this.meeting.id) {
                                        found = true;
                                    }
                                });
                                _this.checkAction(found);
                            } else if (tabChange.plan && tabChange.plan.status == _this.i18n.tr('components.commons.declined')) {
                                _this.actionName = _this.i18n.tr('components.briefingAgenda.requestedMeeting.noAction');
                            } else {
                                _this.actionName = _this.i18n.tr('components.briefingAgenda.requestedMeeting.plan');
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('draft-plan:plan-all', function (actionName) {
                            if (_this.actionName !== actionName) {
                                return;
                            }

                            setTimeout(function () {
                                return _this.activityHandler();
                            }, _this.order * 10);
                        });
                    }
                }, {
                    key: 'activityHeading',
                    value: function activityHeading() {
                        return this.meeting.custom_fields.meeting_title || this.meeting.topic && this.meeting.topic.name || this.i18n.tr('components.commons.noTitleProvided');
                    }
                }, {
                    key: 'activitySubheading',
                    value: function activitySubheading() {
                        return this.meeting.custom_fields.meeting_title && this.meeting.topic && this.meeting.topic.name ? this.meeting.topic.name : this.meeting.custom_fields.activity_info;
                    }
                }, {
                    key: 'checkAction',
                    value: function checkAction(flag) {
                        if (flag) {
                            this.actionName = this.i18n.tr('components.commons.remove');
                        } else {
                            this.actionName = this.i18n.tr('components.briefingAgenda.requestedMeeting.plan');
                        }
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        this.subscriptions.forEach(function (sub) {
                            sub.dispose();
                        });
                    }
                }, {
                    key: 'activityHandler',
                    value: function activityHandler() {
                        return this.briefingRequest.status == this.i18n.tr('components.commons.cancelled') || this.meeting.scheduled == true || this.actionName == this.i18n.tr('components.briefingAgenda.requestedMeeting.noAction') || this.edit();
                    }
                }, {
                    key: 'handleActivityClick',
                    value: function handleActivityClick() {
                        this.activityHandler();
                        this.ea.publish('draft-plan:plan-all:state-change');
                    }
                }, {
                    key: 'checkPlusIcon',
                    value: function checkPlusIcon() {
                        return this.briefingRequest.status != this.i18n.tr('components.commons.cancelled') && this.meeting.scheduled != true && (this.actionName == this.i18n.tr('components.briefingAgenda.requestedMeeting.plan') || this.actionName == this.i18n.tr('components.briefingAgenda.requestedMeeting.schedule'));
                    }
                }, {
                    key: 'edit',
                    value: function edit() {
                        var _this2 = this;

                        if (this.actionName === this.i18n.tr('components.briefingAgenda.requestedMeeting.plan')) {
                            if (this.isMeetingTypeEnabled() === true) {
                                var settings = this.meeting.activity.settings || {};
                                var publishObj = {
                                    activity_id: this.meeting.id,
                                    activity_name: this.meeting.custom_fields.meeting_title,
                                    maximumTime: settings.max_duration,
                                    minimumTime: settings.min_duration
                                };
                                this.ea.publish("plan-activity:selected", publishObj);
                                this.actionName = this.i18n.tr('components.commons.remove');
                            }
                        } else if (this.actionName === this.i18n.tr('components.briefingAgenda.requestedMeeting.schedule')) {
                            if (this.isMeetingTypeEnabled() === true) {
                                if (this.meeting.custom_fields.topic_management && this.meeting.topic && !this.meeting.topic_activities_mapped) {
                                    this.ea.publish("show:notification", {
                                        title: this.i18n.tr('components.briefingAgenda.requestedMeeting.areYouSure'),
                                        message: this.i18n.tr('components.briefingAgenda.requestedMeeting.topicNotMappedMessage'),
                                        'class': 'blue',
                                        isConfirmation: true,
                                        done: function done() {
                                            _this2.requestMeeting();
                                        }
                                    });
                                } else {
                                    this.requestMeeting();
                                }
                            }
                        } else if (this.actionName == this.i18n.tr('components.commons.remove')) {
                            this.ea.publish('calendar-activity:remove', this.meeting.id);
                            this.actionName = this.i18n.tr('components.briefingAgenda.requestedMeeting.plan');
                        }
                    }
                }, {
                    key: 'requestMeeting',
                    value: function requestMeeting() {
                        var meeting = {
                            meeting: this.meeting.id,
                            topic: this.meeting.custom_fields.topic_management && this.meeting.topic && this.meeting.topic_activities_mapped ? this.meeting.topic.uuid : null
                        };
                        this.ea.publish('request:agenda', meeting);
                    }
                }, {
                    key: 'isMeetingTypeEnabled',
                    value: function isMeetingTypeEnabled() {
                        var status = true;
                        if (this.meeting.activity.enabled === false) {
                            this.ea.publish("show:notification", {
                                title: this.i18n.tr('components.briefingAgenda.requestedMeeting.meetingTypeDisabledHeader'),
                                message: this.i18n.tr('components.briefingAgenda.requestedMeeting.meetingTypeDisabledMessage'),
                                'class': 'yellow'
                            });
                            status = false;
                        }
                        return status;
                    }
                }, {
                    key: 'isAdmin',
                    value: function isAdmin() {
                        return this.envDetails.role == "CSM" || this.envDetails.role == "MM" || this.envDetails.role == "QueueManager";
                    }
                }], null, _instanceInitializers);

                var _RequestedMeeting = RequestedMeeting;
                RequestedMeeting = inject(Router, BriefingRequestService, EventAggregator, BindingSignaler, I18N)(RequestedMeeting) || RequestedMeeting;
                return RequestedMeeting;
            }();

            _export('RequestedMeeting', RequestedMeeting);
        }
    };
});
System.registerDynamic("components/bulk-action/bulk-action.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"bulk-action button-bar\" data-spy=\"affix\" show.bind=\"selectedCardList.length\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"text-right\">\n            <button type=\"submit\" class=\"btn btn-blue btn-submit\" click.delegate=\"handleBulkSurvey()\" i18n=\"components.commons.sendSurvey\"></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>";
});
System.register('components/bulk-action/bulk-action.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-i18n@0.4.1.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
    'use strict';

    var inject, bindable, EventAggregator, I18N, _, BulkAction;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }],
        execute: function () {
            BulkAction = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(BulkAction, [{
                    key: 'surveyLinks',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'bulkActionMeeting',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function BulkAction(ea, i18n) {
                    _classCallCheck(this, _BulkAction);

                    _defineDecoratedPropertyDescriptor(this, 'surveyLinks', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'bulkActionMeeting', _instanceInitializers);

                    this.selectedCardList = [];
                    this.subscriptions = [];

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(BulkAction, [{
                    key: 'attached',
                    value: function attached() {
                        this.subscribeToEvents();
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        var count = 0;
                        this.subscriptions[count++] = this.ea.subscribe('checkbox:clicked', function (data) {
                            if (data.checked) {
                                _this.selectedCardList.push(data);
                            } else {
                                _this.selectedCardList.splice(_.findIndex(_this.selectedCardList, { uuid: data.uuid }), 1);
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('survey:hideModal', function (data) {
                            _this.selectedCardList.forEach(function (item) {
                                item.checked = false;
                            });
                            _this.selectedCardList.splice(0, _this.selectedCardList.length);
                        });
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        this.subscriptions.forEach(function (sub) {
                            sub.dispose();
                        });
                    }
                }, {
                    key: 'handleBulkSurvey',
                    value: function handleBulkSurvey() {
                        var selectedUuids = this.selectedCardList.map(function (card) {
                            return card.uuid;
                        });
                        this.ea.publish("survey:showModal", {
                            uuid: selectedUuids,
                            surveys: this.surveyLinks,
                            show_send_mail: true,
                            bulk: true,
                            bulkSurveyTrigger: true,
                            isMeeting: this.bulkActionMeeting
                        });
                    }
                }], null, _instanceInitializers);

                var _BulkAction = BulkAction;
                BulkAction = inject(EventAggregator, I18N)(BulkAction) || BulkAction;
                return BulkAction;
            }();

            _export('BulkAction', BulkAction);
        }
    };
});
System.registerDynamic("components/dhtmlx-calendar.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <div id=\"${calid}\" ref=\"cal\" class=\"dhx_cal_container\">\n        <div class=\"dhx_cal_navline hide\" >\n            <div class=\"dhx_cal_prev_button\">&nbsp;</div>\n            <div class=\"dhx_cal_next_button\">&nbsp;</div>\n            <div class=\"dhx_cal_date hide\"></div>\n        </div>\n        <div class=\"dhx_cal_header\">\n        </div>\n        <div class=\"dhx_cal_data\">\n        </div>\n    </div>\n</div>\n</template>\n";
});
System.registerDynamic("components/export-link.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t\t<a href=\"javascript:void(0)\" id=\"export-link\" click.trigger=\"export()\" class=\"icon-box jif-blue\">\n\t\t    <i class=\"jif-export jif-22\"></i>\n\t\t    <div class=\"font-8\" i18n=\"components.commons.export\"></div>\n\t  </a>\n</template>";
});
System.register('components/export-link.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
	'use strict';

	var inject, EventAggregator, I18N, ExportLink;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	return {
		setters: [function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
		}, function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_aureliaI18n) {
			I18N = _aureliaI18n.I18N;
		}],
		execute: function () {
			ExportLink = function () {
				function ExportLink(ea, i18n) {
					_classCallCheck(this, _ExportLink);

					this.ea = ea;
					this.i18n = i18n;
					this.i18n.setLocale('en').then(function () {});
				}

				_createClass(ExportLink, [{
					key: 'export',
					value: function _export() {
						this.ea.publish("export:export");
					}
				}]);

				var _ExportLink = ExportLink;
				ExportLink = inject(EventAggregator, I18N)(ExportLink) || ExportLink;
				return ExportLink;
			}();

			_export('ExportLink', ExportLink);
		}
	};
});
System.registerDynamic("components/filter-panel.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <a href=\"#\" class=\"dropdown-toggle js-filter-icon\" click.trigger=\"toggleFilter()\">\n      <i class=\"jif-filter jif-22 jif-blue\"></i><div class=\"font-8\" i18n=\"components.filters.filter\"></div>\n    </a>\n    <div class=\"dropdown-menu filter_panel ${show}\" ref=\"filterPanel\">\n      <span i18n=\"components.filters.filter_by\"></span>\n      <div class=\"form-group filterContainer\">\n        <div class=\"row\">\n          <compose view-model.bind=\"filterView\"></compose>\n        </div>\n      </div>\n      <div class=\"text-left\">\n        <a href=\"#\" class=\"cancel pull-left\" id=\"reset_filter\" i18n=\"components.filters.reset\" click.trigger=\"resetFilter()\"></a>\n        <button class=\"btn btn-blue pull-right\" id=\"apply_filter\" i18n=\"components.filters.apply_filter\" click.trigger=\"applyFilter()\"></button>\n      </div>\n    </div>\n</template>\n";
});
System.register('components/filter-panel.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
  'use strict';

  var $, EventAggregator, inject, bindable, I18N, FilterPanel;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_jquery) {
      $ = _jquery['default'];
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }],
    execute: function () {
      FilterPanel = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(FilterPanel, [{
          key: 'filterView',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'eventPrefix',
          decorators: [bindable],
          initializer: function initializer() {
            return "";
          },
          enumerable: true
        }], null, _instanceInitializers);

        function FilterPanel(ea, i18n) {
          _classCallCheck(this, _FilterPanel);

          this.filters = [];

          _defineDecoratedPropertyDescriptor(this, 'filterView', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'eventPrefix', _instanceInitializers);

          this.ea = ea;
          this.i18n = i18n;
          this.i18n.setLocale('en').then(function () {});
          this.show = "";
          this.search = "";
        }

        _createDecoratedClass(FilterPanel, [{
          key: 'setupFilters',
          value: function setupFilters() {}
        }, {
          key: 'toggleFilter',
          value: function toggleFilter() {
            var toggleOptions = ['show', ''];
            this.show = toggleOptions[toggleOptions.indexOf(this.show) ^ 1];
          }
        }, {
          key: 'hideFilter',
          value: function hideFilter() {
            this.show = "";
          }
        }, {
          key: 'applyFilter',
          value: function applyFilter() {
            this.hideFilter();
            var filterApply = this.eventPrefix + '-filter:apply';
            this.ea.publish(filterApply, this.filterPanel);
          }
        }, {
          key: 'resetFilter',
          value: function resetFilter() {
            this.search = "";
            this.unsetAllFilters();

            var filterReset = this.eventPrefix + '-filter:reset';
            var filtersApplied = this.eventPrefix + '-filters:applied';
            this.ea.publish(filterReset, this.filterPanel);
            this.ea.publish(filtersApplied, []);
            this.ea.publish("export-link:changed", "");
          }
        }, {
          key: 'unsetAllFilters',
          value: function unsetAllFilters() {}
        }, {
          key: 'attached',
          value: function attached() {
            var _this = this;

            this.setupFilters();
            $(document).on('click', function (e) {
              if ($(e.target).closest(".filter_panel").length || $(e.target).hasClass('select2-selection__choice__remove')) {
                e.stopPropagation();
              } else if ($(e.target).closest(".js-filter-icon").length) {
                return true;
              } else {
                _this.hideFilter();
              }
            });
          }
        }], null, _instanceInitializers);

        var _FilterPanel = FilterPanel;
        FilterPanel = inject(EventAggregator, I18N)(FilterPanel) || FilterPanel;
        return FilterPanel;
      }();

      _export('FilterPanel', FilterPanel);
    }
  };
});
System.register("components/form-builder/index.js", [], function (_export) {
  "use strict";

  return {
    setters: [],
    execute: function () {}
  };
});
System.registerDynamic("components/list-grid-toggle.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <ul class=\"toggle-menu-list list-unstlyed list-inline\" data-toggle-store=\"meeting-list\">\n    <li class=\"pull-left\">\n      <a href=\"#\" class=\"toggle-btn ${active === 'grid-view' ? 'active' : ''}\" id='icon-grid-view' data-switch-type=\"grid\" click.trigger=\"gridView()\">\n        <div class=\"icon-holder\">\n          <i class=\"jif-tile jif-12\"></i>\n        </div>\n        <label i18n=\"components.listGridToggle.tileView\"></label>\n      </a>\n    </li>\n    <li class=\"pull-right\">\n      <a href=\"#\" class=\"toggle-btn ${active === 'list-view' ? 'active' : ''}\" id='icon-list-view' data-switch-type=\"list\" click.trigger=\"listView()\">\n        <div class=\"icon-holder\">\n          <i class=\"jif-list jif-12\"></i>\n        </div>\n        <label i18n=\"components.listGridToggle.listView\"></label>\n      </a>\n    </li>\n  </ul>\n</template>\n";
});
System.register('components/list-grid-toggle.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
  'use strict';

  var inject, EventAggregator, I18N, ListGridToggle;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }],
    execute: function () {
      ListGridToggle = function () {
        function ListGridToggle(ea, i18n) {
          _classCallCheck(this, _ListGridToggle);

          this.active = "grid-view";

          this.ea = ea;
          this.i18n = i18n;
          this.i18n.setLocale('en').then(function () {});
        }

        _createClass(ListGridToggle, [{
          key: 'gridView',
          value: function gridView() {
            this.active = "grid-view";
            this.ea.publish("toggle:grid", "");
          }
        }, {
          key: 'listView',
          value: function listView() {
            this.active = "list-view";
            this.ea.publish("toggle:list", "");
          }
        }]);

        var _ListGridToggle = ListGridToggle;
        ListGridToggle = inject(EventAggregator, I18N)(ListGridToggle) || ListGridToggle;
        return ListGridToggle;
      }();

      _export('ListGridToggle', ListGridToggle);
    }
  };
});
System.registerDynamic("components/notification/notification-modal.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<div class=\"notification-modal modal fade ${modlaClazz}\" data-backdrop=\"${easyHide}\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" ref=\"modal\" click.trigger=\"modalPlaneClick()\">\n\t  <div class=\"modal-dialog\">\n\t    <div class=\"modal-content\">\n\t      <div class=\"modal-header\">\n\t        <button type=\"button\" class=\"close\" show.bind=\"!hideCloseBtn\" click.trigger=\"closePopup()\" aria-label=\"Close\">\n\t          <span aria-hidden=\"true\">&times;</span>\n\t        </button>\n\t        <h4 class=\"modal-title\">${modalTitle | sanitizeHTML}</h4>\n\t      </div>\n\t      <div class=\"modal-body\" innerHTML.bind=\"modalMessage | sanitizeHTML\"></div>\n\t      <div class=\"modal-footer\" show.bind=\"isConfirmation\">\n\t        <button type=\"button\" class=\"btn btn-blue\" click.trigger=\"doneHandler()\" i18n=\"components.notification.notificationModal.yes\"></button>\n\t        <button type=\"button\" class=\"btn btn-blue\" click.trigger=\"cancelHandler()\" i18n=\"components.notification.notificationModal.no\"></button>\n\t      </div>\n\t    </div>\n\t  </div>\n\t</div>\n</template>\n";
});
System.register('components/notification/notification-modal.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
  'use strict';

  var inject, bindable, EventAggregator, I18N, NotificationModal;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }],
    execute: function () {
      NotificationModal = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(NotificationModal, [{
          key: 'showing',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'modalTitle',
          decorators: [bindable],
          initializer: function initializer() {
            return "";
          },
          enumerable: true
        }, {
          key: 'modalMessage',
          decorators: [bindable],
          initializer: function initializer() {
            return "";
          },
          enumerable: true
        }, {
          key: 'modlaClazz',
          decorators: [bindable],
          initializer: function initializer() {
            return "green";
          },
          enumerable: true
        }, {
          key: 'isConfirmation',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'hideCloseBtn',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'easyHide',
          decorators: [bindable],
          initializer: function initializer() {
            return 'static';
          },
          enumerable: true
        }], null, _instanceInitializers);

        function NotificationModal(ea, i18n) {
          _classCallCheck(this, _NotificationModal);

          _defineDecoratedPropertyDescriptor(this, 'showing', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'modalTitle', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'modalMessage', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'modlaClazz', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'isConfirmation', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'hideCloseBtn', _instanceInitializers);

          this.overlay = false;

          _defineDecoratedPropertyDescriptor(this, 'easyHide', _instanceInitializers);

          this.ea = ea;
          this.i18n = i18n;
          this.i18n.setLocale('en').then(function () {});
          this.subscribeToEvents();
        }

        _createDecoratedClass(NotificationModal, [{
          key: 'attached',
          value: function attached() {
            var _this = this;

            $(this.modal).modal({ show: false, keyboard: false }).on('hidden.bs.modal', function () {
              if (typeof _this.callback === 'function') {
                _this.callback();
              }
            });
          }
        }, {
          key: 'subscribeToEvents',
          value: function subscribeToEvents() {
            var _this2 = this;

            this.ea.subscribe('show:notification', function (payload) {
              if (payload) {
                _this2.showModalBox(payload);
              }
            });
            this.ea.subscribe('hidden:notification', function () {
              _this2.showingChanged(false);
            });
          }
        }, {
          key: 'showModalBox',
          value: function showModalBox(data) {
            this.modlaClazz = data['class'];
            this.modalTitle = data.title;
            this.modalMessage = data.message;
            this.isConfirmation = data.isConfirmation || false;
            this.overlay = data.overlay ? data.overlay : false;
            this.close = typeof data.close === "function" ? data.close : function () {};
            this.onHide = typeof data.onHide === "function" ? data.onHide : function () {};
            if (this.isConfirmation) {
              this.hideCloseBtn = true;
              this.easyHide = 'static';
              this.done = typeof data.done === "function" ? data.done : function () {};
              this.cancel = typeof data.cancel === "function" ? data.cancel : function () {};
            } else {
              this.hideCloseBtn = false;
              this.easyHide = true;
              this.callback = this.onHide;
            }
            this.showing = true;
          }
        }, {
          key: 'showingChanged',
          value: function showingChanged(newValue) {
            if (newValue) {
              $(this.modal).modal({ show: true, backdrop: this.easyHide });
            } else {
              $(this.modal).modal('hide');
            }
          }
        }, {
          key: 'cancelHandler',
          value: function cancelHandler() {
            this.callback = this.cancel;
            this.closePopup();
          }
        }, {
          key: 'doneHandler',
          value: function doneHandler() {
            this.callback = this.done;
            this.closePopup();
          }
        }, {
          key: 'modalPlaneClick',
          value: function modalPlaneClick() {
            if (!this.isConfirmation) {
              this.closePopup();
            }
          }
        }, {
          key: 'closePopup',
          value: function closePopup() {
            this.showing = false;
          }
        }], null, _instanceInitializers);

        var _NotificationModal = NotificationModal;
        NotificationModal = inject(EventAggregator, I18N)(NotificationModal) || NotificationModal;
        return NotificationModal;
      }();

      _export('NotificationModal', NotificationModal);
    }
  };
});
System.registerDynamic("components/page-nav.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <require from=\"./search-bar\"></require>\n  <require from=\"./list-grid-toggle\"></require>\n  <require from=\"./export-link\"></require>\n  <require from=\"./applied-filter\"></require>\n  <require from=\"./filter-panel\"></require>\n  <nav class=\"navbar navbar-light\">\n    <div if.bind=\"!showTopicNav\" class=\"navbar-header hide\">\n        <div class=\"navbar-brand meeting_count\">Total: ${items}</div>\n    </div>\n    <div class=\"container-fluid\">\n      <div class=\"collapse navbar-collapse\" id=\"user_manage\">\n        <ul if.bind=\"!showTopicNav\" class=\"nav navbar-nav\">\n          <li>\n            <a href=\"javascript:void(0)\" class=\"active font-grey default-cursor meeting_count\">Total: ${items}</a>\n          </li>\n        </ul>\n        <ul show.bind=\"showTopicNav\" class=\"nav navbar-nav\">\n          <li id=\"topic_li\" class=\"active\">\n            <a href.bind=\"navBarUrls.topics.url\">\n              <span class=\"meeting_count\">${items}</span>&nbsp;\n              ${navBarUrls.topics.text}\n            </a>\n          </li>\n          <li id=\"track_li\" show.bind=\"navBarUrls.tracks.show\" class=\"\">\n            <a href.bind=\"navBarUrls.tracks.url\">${navBarUrls.tracks.text}</a>\n          </li>\n        </ul>\n        <ul class=\"nav navbar-nav navbar-right navbar-icon\">\n          <li class=\"dropdown filter-dropdown\" if.bind=\"showFilterOption\">\n            <filter-panel event-prefix.bind=\"eventPrefix\" filter-view.bind=\"filterView\" containerless></filter-panel>\n          </li>\n          <li>\n            <list-grid-toggle containerless></list-grid-toggle>\n          </li>\n          <li show.bind=\"showTopicNav\"><export-link containerless></export-link></li>\n        </ul>\n        <search-bar search-text.bind=\"searchText\" if.bind=\"enableSearch\" event-prefix.bind=\"eventPrefix\" containerless></search-bar>\n        <ul class=\"nav navbar-nav navbar-right navbar-applied-filter\">\n          <li class=\"filter-item\" repeat.for=\"filter of appliedFilters\">\n            <applied-filter containerless event-prefix.bind=\"eventPrefix\" filter.bind=\"filter\"></applied-filter>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n";
});
System.register('components/page-nav.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var EventAggregator, bindable, inject, PageNav;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }],
    execute: function () {
      PageNav = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(PageNav, [{
          key: 'items',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'searchText',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'filterView',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'enableExport',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'enableSearch',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'hasFilter',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'showFilterOption',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'eventPrefix',
          decorators: [bindable],
          initializer: function initializer() {
            return "";
          },
          enumerable: true
        }, {
          key: 'showTopicNav',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'navBarUrls',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function PageNav(ea) {
          _classCallCheck(this, _PageNav);

          _defineDecoratedPropertyDescriptor(this, 'items', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'searchText', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'filterView', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'enableExport', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'enableSearch', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'hasFilter', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'showFilterOption', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'eventPrefix', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'showTopicNav', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'navBarUrls', _instanceInitializers);

          this.appliedFilters = [];

          this.ea = ea;
        }

        _createDecoratedClass(PageNav, [{
          key: 'eventPrefixChanged',
          value: function eventPrefixChanged() {
            this.subscribeToFilterEvents();
          }
        }, {
          key: 'subscribeToFilterEvents',
          value: function subscribeToFilterEvents() {
            var _this = this;

            var filtersApplied = this.eventPrefix + '-filters:applied';
            this.ea.subscribe(filtersApplied, function (payload) {
              _this.appliedFilters.splice(0, _this.appliedFilters.length);
              window.setTimeout(function () {
                payload.forEach(function (filter) {
                  _this.appliedFilters.push(filter);
                });
                _this.appliedFilters = _.unique(_this.appliedFilters, 'id');
              }, 200);
            });
          }
        }], null, _instanceInitializers);

        var _PageNav = PageNav;
        PageNav = inject(EventAggregator)(PageNav) || PageNav;
        return PageNav;
      }();

      _export('PageNav', PageNav);
    }
  };
});
System.registerDynamic("components/reason-capture/reason-capture-modal.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<div class=\"modal modal-jiffle blue fade\" id=\"comments_modal\" ref=\"modal\">\n\t\t<div class=\"modal-dialog\" role=\"document\">\n\t\t\t<div class=\"modal-content bg-white\">\n\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" click.trigger=\"close()\">\n\t\t\t\t\t\t<span aria-hidden=\"true\">\n\t\t\t\t\t\t\t<i class=\"jif-iris-cancel-thin\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<h4 class=\"modal-title\" i18n=\"components.comments.${type}_title\"></h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"modal-body\">\n\t\t\t\t\t<form class=\"form js-comment-form\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t\t\t\t\t<select class=\"form-control js-comments-form\" name=\"decline_comments\" ref=\"select\" value.bind=\"selectedComment\"></select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-xs-12\" if.bind=\"selectedComment === othersText\">\n\t\t\t\t\t\t\t\t<textarea class=\"form-control margin-top-15\" name=\"others_comments\" rows=\"1\" placeholder.bind=\"i18n.tr('components.comments.otherPlaceholder')\" value.bind=\"otherComment\"></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div class=\"comment-error error-block show\" i18n=\"components.comments.error\" if.bind=\"error\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"modal-footer\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-blue\" click.trigger=\"done()\" i18n=\"components.comments.${type}\"></button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-blue\" click.trigger=\"close()\" i18n=\"components.comments.close\"></button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"note-footer\" i18n=\"[html]components.comments.${type}${status}FooterText\"></div>\n\t\t\t</div> \n\t\t</div>\n\t</div>\n</template>\n";
});
System.register('components/reason-capture/reason-capture-modal.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-i18n@0.4.1.js', 'github:select2/select2@4.0.0/js/select2.full.js'], function (_export) {
	'use strict';

	var inject, bindable, EventAggregator, I18N, select2, ReasonCaptureModal;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _toConsumableArray(arr) {
		if (Array.isArray(arr)) {
			for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];return arr2;
		} else {
			return Array.from(arr);
		}
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
		} else {
			obj[key] = value;
		}return obj;
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	return {
		setters: [function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
			bindable = _aureliaFramework.bindable;
		}, function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_aureliaI18n) {
			I18N = _aureliaI18n.I18N;
		}, function (_select2Select2JsSelect2Full) {
			select2 = _select2Select2JsSelect2Full['default'];
		}],
		execute: function () {
			ReasonCaptureModal = function () {
				function ReasonCaptureModal(ea, i18n) {
					_classCallCheck(this, _ReasonCaptureModal);

					this.open = false;
					this.error = false;
					this.otherComment = '';
					this.selectedComment = '';
					this.comments = [];

					this.doneHandler = function () {};

					this.othersText = 'Other';
					this.type = 'decline';
					this.status = '';

					this.ea = ea;
					this.i18n = i18n;
					this.i18n.setLocale('en');
					this.subscribeToEvents();
				}

				_createClass(ReasonCaptureModal, [{
					key: 'bind',
					value: function bind() {
						this.listenToEvents();
					}
				}, {
					key: 'subscribeToEvents',
					value: function subscribeToEvents() {
						var _this = this;

						this.ea.subscribe('show:reason-capture-modal', function (payload) {
							if (payload) {
								_this.show(payload);
							}
						});
					}
				}, {
					key: 'listenToEvents',
					value: function listenToEvents() {
						var _this2 = this;

						$(this.select).on('select2:select', function (event) {
							_this2.error = false;
							_this2.otherComment = '';
							_this2.selectedComment = event.params.data.id;
						});
					}
				}, {
					key: 'initSelect2',
					value: function initSelect2() {
						this.comments = this.formatComments(this.config.options);

						var select2Config = {
							closeOnSelect: true,
							data: this.comments,
							width: '100%',
							minimumResultsForSearch: -1
						};

						$(this.select).select2(select2Config);
					}
				}, {
					key: 'show',
					value: function show(payload) {
						var _this3 = this;

						var doneHandler = payload.doneHandler;
						var config = payload.config;
						var _payload$type = payload.type;
						var type = _payload$type === undefined ? 'decline' : _payload$type;
						var _payload$status = payload.status;
						var status = _payload$status === undefined ? '' : _payload$status;

						this.config = config;
						this.type = type;
						this.status = status;

						if (typeof doneHandler === 'function') {
							this.doneHandler = doneHandler;
						}

						if (this.canShowModal()) {
							this.initSelect2();
							$(this.modal).modal({
								backdrop: 'static'
							});

							this.selectedComment = this.comments[0].id;
							$(this.select).trigger('change');
						} else {
							this.ea.publish('show:notification', {
								title: this.i18n.tr('components.briefingAgenda.attendee.areYouSure'),
								message: this.type === 'cancel' ? this.i18n.tr('briefings.commons.clickYesMessage') : this.i18n.tr('components.briefingAgenda.attendee.declineConfirmMessage'),
								'class': 'blue',
								isConfirmation: true,
								done: function done() {
									_this3.doneHandler();
								}
							});
						}
					}
				}, {
					key: 'close',
					value: function close() {
						this.otherComment = '';
						this.selectedComment = '';
						this.error = false;

						$(this.modal).modal('hide');
						$(this.select).select2('destroy');
					}
				}, {
					key: 'formatComments',
					value: function formatComments() {
						var comments = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

						comments = comments.filter(function (comment) {
							return comment;
						});
						return [].concat(_toConsumableArray(comments), [this.othersText]).map(function (text) {
							return {
								id: text,
								text: text
							};
						});
					}
				}, {
					key: 'validate',
					value: function validate() {
						if (this.selectedComment === this.othersText && !this.otherComment) {
							this.error = true;
							return false;
						}

						this.error = false;
						return true;
					}
				}, {
					key: 'done',
					value: function done() {
						if (this.validate()) {
							var paramKey = this.type === 'cancel' ? 'cancel_comments' : 'declined_comments';
							var params = _defineProperty({}, paramKey, this.otherComment || this.selectedComment);

							this.doneHandler(params);
							this.close();
						}
					}
				}, {
					key: 'canShowModal',
					value: function canShowModal() {
						if (!this.config || !this.config.enabled || this.config.enabled === 'no') {
							return false;
						}

						return true;
					}
				}]);

				var _ReasonCaptureModal = ReasonCaptureModal;
				ReasonCaptureModal = inject(EventAggregator, I18N)(ReasonCaptureModal) || ReasonCaptureModal;
				return ReasonCaptureModal;
			}();

			_export('ReasonCaptureModal', ReasonCaptureModal);
		}
	};
});
System.registerDynamic("components/search-bar.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <form class=\"navbar-form navbar-right navbar-search\" role=\"search\" onsubmit=\"return false\">\n    <div class=\"form-group search-field-icon jif-search jif-dark-grey\">\n      <input type=\"text\" class=\"form-control\" id=\"global_filter\" keyup.trigger=\"searchTrigger()\" value.bind=\"searchText\">\n    </div>\n  </form>\n</template>";
});
System.register('components/search-bar.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'utils/converters.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var EventAggregator, Utils, bindable, inject, SearchBar;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_utilsConverters) {
      Utils = _utilsConverters.Utils;
    }, function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }],
    execute: function () {
      SearchBar = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(SearchBar, [{
          key: 'searchText',
          decorators: [bindable],
          initializer: function initializer() {
            return "";
          },
          enumerable: true
        }, {
          key: 'eventPrefix',
          decorators: [bindable],
          initializer: function initializer() {
            return "";
          },
          enumerable: true
        }], null, _instanceInitializers);

        function SearchBar(ea, utils) {
          _classCallCheck(this, _SearchBar);

          _defineDecoratedPropertyDescriptor(this, 'searchText', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'eventPrefix', _instanceInitializers);

          this.ea = ea;
          this.utils = utils;
          this.searchTrigger = utils.debounce(this.searchEntered, 369);
          this.prevValue = this.searchText;
        }

        _createDecoratedClass(SearchBar, [{
          key: 'searchEntered',
          value: function searchEntered() {
            if (this.searchText !== null && this.searchText.trim() !== this.prevValue) {
              this.ea.publish(this.eventPrefix + ':search:entered', this.searchText.trim());
              this.prevValue = this.searchText;
            }
          }
        }], null, _instanceInitializers);

        var _SearchBar = SearchBar;
        SearchBar = inject(EventAggregator, Utils)(SearchBar) || SearchBar;
        return SearchBar;
      }();

      _export('SearchBar', SearchBar);
    }
  };
});
System.registerDynamic("components/survey/survey-modal.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n<div class=\"modal modal-jiffle modal-list event-list-modal blue fade\" ref=\"surveymodal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" data-backdrop=\"static\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n        <h4 class=\"modal-title\">${bulk==true? i18n.tr('components.survey.surveyModal.bulkSurvey') : i18n.tr('components.survey.surveyModal.selectSurvey')}</h4>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"container-fluid no-padding event-list-content card-container list-view\">\n          <div class=\"row hide\">\n            <div class=\"col-md-12\">\n              <div class=\"font-red\"></div>\n            </div>\n          </div>\n          <div class=\"row\" id=\"mappedEventsList\">\n            <div class=\"col-md-12\" repeat.for=\"survey of surveys\">\n              <div class=\"card card-xs\">\n                <div class=\"card-header card-xs-header\">\n                  <div class=\"card-header-content card-xs-header-content\">\n                    <div class=\"card-select\">\n                      <input type=\"checkbox\" id=\"survey-${survey.uuid}\" checked.bind=\"survey.checked\">\n                      <label for=\"survey-${survey.uuid}\">\n                        <div class=\"state ${survey.status}\">\n                            <i class=\"jif-survey jif-dark-grey jif-18\"></i>\n                        </div>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card-content card-xs-content\">\n                  <div class=\"card-detail-content\">\n                    <div>\n                      <div class=\"card-detail\">\n                        <a show.bind=\"survey.url\" href.bind=\"survey.url\" target=\"_blank\">${survey.name}</a>\n                        <span show.bind=\"!survey.url\" class=\"font-lg\">${survey.name}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card-footer\" if.bind=\"survey.survey_link_sent_at\">\n                    <span class=\"font-sm\">Last sent at: ${survey.survey_link_sent_at}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button if.bind=\"mmOrAbove && showEmail\" class=\"btn btn-blue\" click.delegate=\"triggerMail($event)\" i18n=\"components.survey.surveyModal.sendEmail\"></button>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n";
});
System.register('service/servey_request_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
    'use strict';

    var HttpRequest, inject, API, SurveyRequestService;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_utilsRequest) {
            HttpRequest = _utilsRequest.HttpRequest;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            SurveyRequestService = function () {
                function SurveyRequestService(httpRequest, Api) {
                    _classCallCheck(this, _SurveyRequestService);

                    this.httpRequest = httpRequest;
                    this.api = Api;
                }

                _createClass(SurveyRequestService, [{
                    key: 'triggerSurveyMails',
                    value: function triggerSurveyMails(uuid, params) {
                        var suffixUrl = '/briefing';
                        if (params.is_meeting) {
                            suffixUrl = '/meeting_request';
                        }
                        var acitivitiesUrl = this.api.getBaseUrl() + suffixUrl + this.api.surveyMailUrl.replace("{uuid}", uuid);
                        return this.httpRequest.createPutRequest(acitivitiesUrl, params);
                    }
                }, {
                    key: 'triggerBulkSurveyMails',
                    value: function triggerBulkSurveyMails(uuids, params) {
                        var suffixUrl = '/briefing';
                        params.briefing_uuids = uuids;
                        if (params.is_meeting) {
                            params.meeting_uuids = uuids;
                            suffixUrl = '/meeting_request';
                        }
                        var acitivitiesUrl = this.api.getBaseUrl() + suffixUrl + this.api.surveyBulkMailUrl;
                        return this.httpRequest.createPutRequest(acitivitiesUrl, params);
                    }
                }]);

                var _SurveyRequestService = SurveyRequestService;
                SurveyRequestService = inject(HttpRequest, API)(SurveyRequestService) || SurveyRequestService;
                return SurveyRequestService;
            }();

            _export('SurveyRequestService', SurveyRequestService);
        }
    };
});
System.register('components/survey/survey-modal.js', ['github:lodash/lodash@3.10.1.js', 'github:twbs/bootstrap@3.3.6.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/servey_request_service.js', 'commons/api.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var debounce, bootstrap, inject, bindable, EventAggregator, SurveyRequestService, API, I18N, SurveyModal;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_lodashLodash) {
            debounce = _lodashLodash.debounce;
        }, function (_bootstrap) {
            bootstrap = _bootstrap['default'];
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_serviceServey_request_service) {
            SurveyRequestService = _serviceServey_request_service.SurveyRequestService;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            SurveyModal = function () {
                function SurveyModal(ea, SurveyRequestService, Api, i18n) {
                    _classCallCheck(this, _SurveyModal);

                    this.bulk = false;
                    this.surveys = [];
                    this.showEmail = true;
                    this.isMeetingMailTrigger = false;
                    this.individualMailTrigger = { uuid: "" };
                    this.mmOrAbove = window.envDetails.role == 'MM' || window.envDetails.role == 'BM' || window.envDetails.role == 'CSM' || window.envDetails.role == 'QueueManager';

                    this.ea = ea;
                    this.api = Api;
                    this.i18n = i18n;
                    this.surveyService = SurveyRequestService;
                    this.i18n.setLocale('en').then(function () {});
                    this.subscribeToEvents();
                    this.triggerMail = debounce(this.triggerMailAction, 369);
                }

                _createClass(SurveyModal, [{
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        this.ea.subscribe('survey:showModal', function (details) {
                            _this.surveys = [];
                            _this.bulk = details.bulk;
                            _this.showEmail = details.show_send_mail;
                            _this.isMeetingMailTrigger = details.isMeeting || false;
                            _this.individualMailTrigger.uuid = details.attendee || '';
                            var keys = Object.keys(details.surveys);
                            keys.forEach(function (key) {
                                var survey = details.surveys[key];
                                if (survey.show_link || details.bulkSurveyTrigger) {
                                    survey['name'] = key;
                                    survey['checked'] = false;
                                    if (survey.response_uuid) {
                                        survey['url'] = _this.api.getBaseUrl() + "/survey_responses/" + survey.response_uuid + "?current_location_uuid=" + window.envDetails.current_location_uuid;
                                    } else if (survey.survey_response_create_url) {
                                        survey['url'] = _this.api.getBaseUrl() + survey.survey_response_create_url + "&current_location_uuid=" + window.envDetails.current_location_uuid;;
                                    }
                                    _this.surveys.push(survey);
                                }
                            });
                            _this.briefingUUID = details.uuid;
                            $(_this.surveymodal).modal('show');
                        });
                    }
                }, {
                    key: 'triggerMailAction',
                    value: function triggerMailAction(event) {
                        var _this2 = this;

                        var params = this.getCheckedSurveyIds();
                        if (!params) return;
                        var triggeSurveyFun = typeof this.briefingUUID === 'string' ? 'triggerSurveyMails' : 'triggerBulkSurveyMails';
                        this.surveyService[triggeSurveyFun](this.briefingUUID, params).then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.status == 200) {
                                if (triggeSurveyFun === 'triggerSurveyMails') {
                                    _this2.setSurveyLinkStatus(response);
                                } else {
                                    _this2.ea.publish("survey:hideModal");
                                }
                                window.setTimeout(function () {
                                    $(_this2.surveymodal).modal('hide');
                                }, 1500);
                            }
                        });
                    }
                }, {
                    key: 'setSurveyLinkStatus',
                    value: function setSurveyLinkStatus(response) {
                        var uuids = [];
                        var surveyResponse = {};
                        _.forEach(response.survey_uuid, function (object) {
                            var key = Object.keys(object)[0];
                            var value = Object.values(object)[0];
                            surveyResponse[key] = value;
                        });
                        uuids = Object.keys(surveyResponse);
                        this.surveys.forEach(function (survey) {
                            if (_.contains(uuids, survey.uuid)) {
                                survey.status = surveyResponse[survey.uuid];
                            }
                        });
                    }
                }, {
                    key: 'getCheckedSurveyIds',
                    value: function getCheckedSurveyIds() {
                        var request = { survey_uuid: [] };
                        this.surveys.forEach(function (survey) {
                            if (survey.checked) {
                                request.survey_uuid.push(survey.uuid);
                            }
                        });
                        if (!request.survey_uuid.length) {
                            this.ea.publish("show:notification", {
                                title: this.i18n.tr('components.commons.requiredFieldMissing'),
                                message: this.i18n.tr('components.survey.surveyModal.selectOneAction'),
                                'class': 'yellow',
                                autoHideDuration: 4000
                            });
                            return false;
                        }

                        if (this.isMeetingMailTrigger) {
                            request['is_meeting'] = true;
                        }

                        if (this.individualMailTrigger.uuid) {
                            request['attendee_uuid'] = this.individualMailTrigger.uuid;
                        }

                        return request;
                    }
                }]);

                var _SurveyModal = SurveyModal;
                SurveyModal = inject(EventAggregator, SurveyRequestService, API, I18N)(SurveyModal) || SurveyModal;
                return SurveyModal;
            }();

            _export('SurveyModal', SurveyModal);
        }
    };
});
System.register("components/tab-panel/index.js", [], function (_export) {
  "use strict";

  return {
    setters: [],
    execute: function () {}
  };
});
System.registerDynamic("components/time-picker.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <input ref=\"startTime\" type=\"text\" class=\"time form-control form-time-icon ${timeClass}\"\n         value.bind=\"time\"/>\n</template>\n";
});
System.register('components/time-picker.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var customElement, bindable, inject, TimePicker;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      customElement = _aureliaFramework.customElement;
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }],
    execute: function () {
      TimePicker = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(TimePicker, [{
          key: 'time',
          decorators: [bindable],
          initializer: function initializer() {
            return '';
          },
          enumerable: true
        }, {
          key: 'timeClass',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function TimePicker(element) {
          _classCallCheck(this, _TimePicker);

          _defineDecoratedPropertyDescriptor(this, 'time', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'timeClass', _instanceInitializers);

          this.element = element;
        }

        _createDecoratedClass(TimePicker, [{
          key: 'attached',
          value: function attached() {
            var _this = this;

            this.timepicker = $(this.element).timepicker({
              'showDuration': true,
              'timeFormat': 'g:ia',
              'orientation': 'l'
            });

            this.timepicker.on('change', function () {
              var value = $(_this.element).data("ui-timepicker-value");
              _this.time = value;
            });
          }
        }], null, _instanceInitializers);

        var _TimePicker = TimePicker;
        TimePicker = inject(Element)(TimePicker) || TimePicker;
        TimePicker = customElement('time-picker')(TimePicker) || TimePicker;
        return TimePicker;
      }();

      _export('TimePicker', TimePicker);
    }
  };
});
System.registerDynamic("components/toggle-switch.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <div class=\"toggle-switch\">\n        <input type=\"checkbox\" id=\"${id}\" autocomplete=\"off\" checked.bind=\"value\" disabled.bind=\"disabled\">\n        <label for=\"${id}\"></label>\n    </div>\n</template>";
});
System.register('components/toggle-switch.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
    'use strict';

    var bindable, containerless, ToggleSwitch;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaFramework) {
            bindable = _aureliaFramework.bindable;
            containerless = _aureliaFramework.containerless;
        }],
        execute: function () {
            ToggleSwitch = function () {
                var _instanceInitializers = {};

                function ToggleSwitch() {
                    _classCallCheck(this, _ToggleSwitch);

                    _defineDecoratedPropertyDescriptor(this, 'value', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'id', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'disabled', _instanceInitializers);
                }

                _createDecoratedClass(ToggleSwitch, [{
                    key: 'value',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'id',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '';
                    },
                    enumerable: true
                }, {
                    key: 'disabled',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }], null, _instanceInitializers);

                var _ToggleSwitch = ToggleSwitch;
                ToggleSwitch = containerless(ToggleSwitch) || ToggleSwitch;
                return ToggleSwitch;
            }();

            _export('ToggleSwitch', ToggleSwitch);
        }
    };
});
System.registerDynamic("components/user-tooltip.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <!- this is updated tooltip, replacing _user_tooltip.hbs.erb->\n    <div class='pane-item-tooltip'>\n      <ul class='jn-l-text'>\n        <li><div class='font-semi-bold'>${user.first_name} ${user.last_name}</div></li>\n        <li>\n            <span if.bind=\"user.title!='' && user.copamny_name!=''\">${user.title}, </span>\n            <span if.bind=\"user.title!='' && user.company_name==''\">${user.title}</span>\n            <span if.bind=\"user.title==''\">&nbsp;&nbsp; - </span>\n            <span if.bind=\"user.company_name!=''\">${user.company_name}</span>\n            <span if.bind=\"user.company_name==''\"></span>\n        </li>\n      </ul>\n      <ul class='jn-l-text-icon'>\n        <li><i class='jif-iris-mail jif-12'></i><span>${user.email}</span></li>\n        <li><i class='jif-iris-phone jif-14'></i>\n          <span>${user.contact_no}</span>\n        </li>\n      </ul>\n    </div>\n</template>";
});
System.register('custom-attributes/bootstrap-popover.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
	'use strict';

	var bindable, customAttribute, inject, I18N, BootstrapPopover;

	var _extends = Object.assign || function (target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					target[key] = source[key];
				}
			}
		}return target;
	};

	var _createDecoratedClass = function () {
		function defineProperties(target, descriptors, initializers) {
			for (var i = 0; i < descriptors.length; i++) {
				var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
					for (var f = 0; f < decorators.length; f++) {
						var decorator = decorators[f];if (typeof decorator === 'function') {
							descriptor = decorator(target, key, descriptor) || descriptor;
						} else {
							throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
						}
					}if (descriptor.initializer !== undefined) {
						initializers[key] = descriptor;continue;
					}
				}Object.defineProperty(target, key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
		var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
	}

	return {
		setters: [function (_aureliaFramework) {
			bindable = _aureliaFramework.bindable;
			customAttribute = _aureliaFramework.customAttribute;
			inject = _aureliaFramework.inject;
		}, function (_aureliaI18n) {
			I18N = _aureliaI18n.I18N;
		}],
		execute: function () {
			BootstrapPopover = function () {
				var _instanceInitializers = {};
				var _instanceInitializers = {};

				_createDecoratedClass(BootstrapPopover, [{
					key: 'status',
					decorators: [bindable],
					initializer: null,
					enumerable: true
				}], null, _instanceInitializers);

				function BootstrapPopover(element, i18n) {
					_classCallCheck(this, _BootstrapPopover);

					_defineDecoratedPropertyDescriptor(this, 'status', _instanceInitializers);

					this.i18n = i18n;
					this.element = $(element);
					this.configuration = {
						html: 'true',
						trigger: 'hover',
						placement: 'bottom',
						template: '<div class="popover room-tooltip" role="tooltip"><div class="popover-content"></div></div>'
					};

					this.i18n.setLocale('en').then(function () {});
				}

				_createDecoratedClass(BootstrapPopover, [{
					key: 'getPopverContent',
					value: function getPopverContent() {
						return '<div class="plan-tooltip">\n\t\t\t<div class="status">\n\t    \t\t<b>Status:</b> ' + this.i18n.tr('components.briefingAgenda.draftPlan.' + this.status.toLowerCase()) + '\n\t    \t</div>\n\t    </div>';
					}
				}, {
					key: 'bind',
					value: function bind() {
						var config = _extends({
							content: this.getPopverContent()
						}, this.configuration);

						this.element.popover(config);
					}
				}, {
					key: 'unbind',
					value: function unbind() {
						this.element.popover('destroy');
					}
				}], null, _instanceInitializers);

				var _BootstrapPopover = BootstrapPopover;
				BootstrapPopover = inject(Element, I18N)(BootstrapPopover) || BootstrapPopover;
				BootstrapPopover = customAttribute('bootstrap-popover')(BootstrapPopover) || BootstrapPopover;
				return BootstrapPopover;
			}();

			_export('BootstrapPopover', BootstrapPopover);
		}
	};
});
System.register("models/briefing_agenda_plan.js", [], function (_export) {
  "use strict";

  var AgendaPlanModal;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  return {
    setters: [],
    execute: function () {
      AgendaPlanModal = function () {
        function AgendaPlanModal(data) {
          _classCallCheck(this, AgendaPlanModal);

          this.uuid = "";
          this.status = "";
          this.is_editable = true;
          this.plan_name = "";
          this.activity_slots = [];

          this.uuid = data.uuid;
          this.status = data.status;
          this.plan_name = data.plan_name;
          this.is_editable = data.is_editable;
        }

        _createClass(AgendaPlanModal, [{
          key: "getServerModelObject",
          value: function getServerModelObject() {
            return {};
          }
        }]);

        return AgendaPlanModal;
      }();

      _export("AgendaPlanModal", AgendaPlanModal);
    }
  };
});
System.register('components/error-view-strategy.js', ['npm:aurelia-validation@0.6.0/validation-view-strategy.js'], function (_export) {
  'use strict';

  var ValidationViewStrategy, ErrorViewStrategyBase, ErrorViewStrategy;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  return {
    setters: [function (_aureliaValidationValidationViewStrategy) {
      ValidationViewStrategy = _aureliaValidationValidationViewStrategy.ValidationViewStrategy;
    }],
    execute: function () {
      ErrorViewStrategyBase = function (_ValidationViewStrategy) {
        _inherits(ErrorViewStrategyBase, _ValidationViewStrategy);

        function ErrorViewStrategyBase(appendMessageToInput, appendMessageToLabel, helpBlockClass) {
          _classCallCheck(this, ErrorViewStrategyBase);

          _get(Object.getPrototypeOf(ErrorViewStrategyBase.prototype), 'constructor', this).call(this);
          this.appendMessageToInput = appendMessageToInput;
          this.appendMessageToLabel = appendMessageToLabel;
          this.helpBlockClass = helpBlockClass;
        }

        _createClass(ErrorViewStrategyBase, [{
          key: 'searchFormGroup',
          value: function searchFormGroup(currentElement, currentDepth) {
            if (currentDepth === 5) {
              return null;
            }

            if (currentElement.classList && currentElement.classList.contains('form-group')) {
              return currentElement;
            }

            return this.searchFormGroup(currentElement.parentNode, 1 + currentDepth);
          }
        }, {
          key: 'findLabels',
          value: function findLabels(formGroup, inputId) {
            var labels = [];
            this.findLabelsRecursively(formGroup, inputId, labels, 0);
            return labels;
          }
        }, {
          key: 'findLabelsRecursively',
          value: function findLabelsRecursively(currentElement, inputId, currentLabels, currentDepth) {
            if (currentDepth === 5) {
              return;
            }
            if (currentElement.nodeName === 'LABEL' && (currentElement.attributes['for'] && currentElement.attributes['for'].value === inputId || !currentElement.attributes['for'])) {
              currentLabels.push(currentElement);
            }
            for (var i = 0; i < currentElement.children.length; i++) {
              this.findLabelsRecursively(currentElement.children[i], inputId, currentLabels, 1 + currentDepth);
            }
          }
        }, {
          key: 'appendMessageToElement',
          value: function appendMessageToElement(element, validationProperty) {
            var helpBlock = element.nextSibling;
            if (helpBlock) {
              if (!helpBlock.classList) {
                helpBlock = null;
              } else if (!helpBlock.classList.contains(this.helpBlockClass)) {
                helpBlock = null;
              }
            }

            if (!helpBlock) {
              helpBlock = document.createElement('p');
              helpBlock.classList.add('help-block');
              helpBlock.classList.add(this.helpBlockClass);
              if (element.nextSibling) {
                element.parentNode.insertBefore(helpBlock, element.nextSibling);
              } else {
                element.parentNode.appendChild(helpBlock);
              }
            }

            helpBlock.textContent = validationProperty ? validationProperty.message : '';
          }
        }, {
          key: 'appendUIVisuals',
          value: function appendUIVisuals(validationProperty, currentElement) {
            var formGroup = this.searchFormGroup(currentElement, 0);
            if (formGroup === null) {
              return;
            }

            if (validationProperty && validationProperty.isDirty) {
              if (validationProperty.isValid) {
                formGroup.classList.remove('has-error');
                formGroup.classList.add('has-success');
              } else {
                formGroup.classList.remove('has-success');
                formGroup.classList.add('has-error');
              }
            } else {
              formGroup.classList.remove('has-error');
              formGroup.classList.remove('has-success');
            }

            if (this.appendMessageToInput) {
              this.appendMessageToElement(currentElement, validationProperty);
            }

            if (this.appendMessageToLabel) {
              var labels = this.findLabels(formGroup, currentElement.id);
              for (var ii = 0; ii < labels.length; ii++) {
                var label = labels[ii];
                this.appendMessageToElement(label, validationProperty);
              }
            }
          }
        }, {
          key: 'prepareElement',
          value: function prepareElement(validationProperty, element) {
            this.appendUIVisuals(null, element);
          }
        }, {
          key: 'updateElement',
          value: function updateElement(validationProperty, element) {
            this.appendUIVisuals(validationProperty, element);
          }
        }]);

        return ErrorViewStrategyBase;
      }(ValidationViewStrategy);

      _export('ErrorViewStrategyBase', ErrorViewStrategyBase);

      ErrorViewStrategy = function ErrorViewStrategy() {
        _classCallCheck(this, ErrorViewStrategy);
      };

      _export('ErrorViewStrategy', ErrorViewStrategy);

      ErrorViewStrategy.AppendToInput = new ErrorViewStrategyBase(true, false, 'aurelia-validation-message');
      ErrorViewStrategy.AppendToMessage = new ErrorViewStrategyBase(false, true, 'aurelia-validation-message');
    }
  };
});
System.register('locale/en/translation.js', [], function (_export) {
  'use strict';

  var resources;
  return {
    setters: [],
    execute: function () {
      resources = {
        en: {
          translation: {
            'commons': {
              'from': 'from',
              'to': 'to'
            },
            'components': {
              'comments': {
                'decline': 'Decline',
                'cancel': 'Cancel',
                'close': 'Discard',
                'error': 'Please provide comment to proceed',
                'decline_title': 'Please mention reason for declining',
                'cancel_title': 'Please mention reason for Cancelling',
                'otherPlaceholder': 'Type here..',
                'declineFooterText': '<span>Please note:</span> This action cannot be reverted. Cancellation invite will be sent to this attendee.',
                'cancelConfirmedFooterText': '<span>Please note:</span> This action cannot be reverted. Cancellation invite will be sent to the attendee(s).',
                'cancelFooterText': '<span>Please note:</span> This action cannot be reverted.'
              },
              'filters': {
                'reset': 'Reset',
                'apply_filter': 'Apply filter',
                'filter_by': 'Filter by',
                'filter': 'Filter'
              },
              'pageNav': {
                'total': 'Total'
              },
              'listGridToggle': {
                'tileView': 'Tile',
                'listView': 'List'
              },
              'attendee': {
                'add': 'Add',
                'remove': 'Remove',
                'unavailable': 'Unavailable'
              },
              'notification': {
                'notificationModal': {
                  'ok': 'OK',
                  'cancel': 'CANCEL',
                  'yes': 'YES',
                  'no': 'NO'
                }
              },
              'survey': {
                'surveyModal': {
                  'selectOneAction': 'Please select at least one action',
                  'bulkSurvey': 'Bulk action - Send Survey(s)',
                  'singleSurvey': 'Send Survey(s)',
                  'selectSurvey': 'Select Survey(s)',
                  'sendEmail': 'send email'
                }
              },
              'userTooltip': {
                'title': 'title',
                'email': 'email',
                'phone': 'phone'
              },
              'briefingAgenda': {
                'conciergeModal': {
                  'resendMailToVendor': 'RESEND MAIL TO VENDOR',
                  'sendMailToVendor': 'SEND MAIL TO VENDOR',
                  'resendMailToAttendee': 'RESEND MAIL TO ATTENDEE(S)',
                  'sendMailToAttendee': 'SEND MAIL TO ATTENDEE(S)',
                  'requestDetails': 'Request Details',
                  'vendorComments': 'Vendor Comments',
                  'lastComment': 'Last Comment',
                  'requestFullfillQuestion': 'Should this request be fulfilled by vendor?',
                  'youFullfillRequest': 'Will you be able to fulfill this request?',
                  'addComment': 'Add Comment'

                },
                'draftPlan': {
                  'agendaPlanInfo': 'Agenda Plan Info',
                  'addNewPlan': 'Add New Plan',
                  'discard': 'Discard',
                  'acceptPlan': 'Accept Plan',
                  'declinePlan': 'Decline Plan',
                  'declineReason': 'Reason for Decline',
                  'comments': 'Comments',
                  'invalidTimeHeader': 'Meeting plan duration has been adjusted',
                  'invalidTimeBody': 'Meeting plan needs to be between __minimumTime__ minutes and __maximumTime__ minutes',
                  'modalHeader': 'Plan __action__ Error',
                  'modalBody': 'Cannot __action__ empty Plan. Please add atleast one to proceed',
                  'unsavedHeader': 'You have unsaved Plan Agendas!',
                  'unsavedBody': 'Proceeding further you will loose the unsaved plans. If you would like to save the agenda plans, click No and Submit.',
                  'meetingsCancellation': 'The following meetings will be cancelled',
                  'requested': 'Under Review',
                  'accepted': 'Approved',
                  'declined': 'Rejected',
                  'editBriefing': 'You have unsaved changes. Click No and then submit your changes or click Yes to discard your changes.',
                  'unsavePlan': 'You have an unsaved plan'
                },
                'requestedMeeting': {
                  'schedule': 'Schedule',
                  'noAction': 'No Action',
                  'plan': 'Plan',
                  'meetingTypeDisabledHeader': 'Meeting type disabled!',
                  'meetingTypeDisabledMessage': 'The requested activity type cannot be scheduled. Contact your CSM to re-enable the meeting type.',
                  'topicNotMappedHeader': 'Topic is no longer available!',
                  'topicNotMappedMessage': 'The requested topic is not found. It could have been deleted or could be unmapped to this meeting. Please select a different topic during book meeting. Do you want to continue with meeting creation?',
                  'areYouSure': 'Are you sure?'
                },
                'attendee': {
                  'areYouSure': 'Are You Sure?',
                  'reinviteConfirmMessage': 'Calendar invite will be sent to this attendee.',
                  'acceptConfirmMessage': 'This action can be reverted at a later point if required.',
                  'declineConfirmMessage': 'This action cannot be reverted. Cancellation calendar invite will be sent to this attendee.'
                }
              },
              'commons': {
                'survey': 'Survey',
                'sendSurvey': 'Send Survey',
                'remove': 'Remove',
                'remind': 'Remind',
                'reinvite': 'Reinvite',
                'accept': 'Accept',
                'decline': 'Decline',
                'declined': 'Declined',
                'save': 'Save',
                'submit': 'Submit',
                'cancel': 'Cancel',
                'cancelled': 'Cancelled',
                'noTitleProvided': 'No title provided',
                'requiredFieldMissing': 'Oops, there are required fields missing.',
                'export': 'Export',
                'userReport': 'Download Briefing Report',
                'more': 'More'
              }
            },
            'topics': {
              'commons': {
                'profile': 'Profile',
                'events': 'Events',
                'activities': '__label__',
                'rooms': 'Rooms',
                'users': 'Users',
                'users_search': 'Search by user names',
                'rooms_search': 'Search by room names',
                'activites_search': 'Search by \'__label__\'',
                'events_search': 'Search by event names',
                'briefing_centre_search': 'Search by briefing centre location',
                'locations': 'Locations',
                'topics': 'TOPICS',
                'failure': 'Failure!',
                'topic_status': 'Topic status',
                'topic_status_placeholder': 'Topic status',
                'active_filter_name': 'active',
                'inactive_filter_name': 'inactive',
                'no_topic_results': 'No Topics Found'
              },
              'mappings': {
                'unmap': 'Unmap',
                'mapped': 'mapped',
                'unmapped': 'unmapped',
                'map': 'Map',
                'save_failure': 'Failure !',
                'save_success': 'Nice work, __name__ !',
                'save_success_msg': '__entity__ is __operation__ __prep__ __topic__ successfully.'
              },
              'listing': {
                'topicListFooter': {
                  'deleteAll': 'DELETE ALL',
                  'cancel': 'Cancel'
                },
                'topicCard': {
                  'activities': 'Meeting Types',
                  'events': 'Events',
                  'rooms': 'Rooms',
                  'users': 'Users',
                  'lastUpdatedOn': 'Last updated on'
                },
                'topicAddCard': {
                  'addTopic': 'ADD TOPIC',
                  'downloadFormat': 'Download Template',
                  'uploadTopic': 'UPLOAD TOPICS'
                },
                'topicAddModal': {
                  'formHeading': 'Add A Topic',
                  'hintText': 'Please help us with the following information',
                  'topicName': 'Topic Name',
                  'topicDescription': 'Topic Description',
                  'description_required': 'Topic Description is a mandatory field.',
                  'name_required': 'Topic Name is a mandatory field.',
                  'name_already_exists': 'Topic with this name already exists.',
                  'user': 'Map User(s)',
                  'room': 'Map Room(s)',
                  'btnText': 'Add',
                  'event': 'Map Event(s)',
                  'activity': 'Map \'__label__\'',
                  'save_success': 'Nice work, __name__ !',
                  'save_success_msg': "New topic named '__topic__' is created successfully.",
                  'briefing_centre': 'Map Briefing Centre(s)',
                  'eventName': 'Event Name'
                },
                'topicImportExportModal': {
                  'cancel': 'Cancel',
                  'upload_topics': 'Upload topics',
                  'upload': 'Upload',
                  'download_template': 'Download template',
                  'download': 'Download',
                  'export': 'Export',
                  'topic': 'Topic',
                  'topic_to_user': 'Topic - User mapping',
                  'topic_to_room': 'Topic - Room mapping',
                  'topic_to_meeting_type': 'Topic - \'__label__\' mapping'

                }
              },
              'profile': {
                'editTopic': {
                  'title': 'Basic Information of Topic',
                  'topicInfo': 'Topic Info',
                  'save': 'Save',
                  'delete': 'Delete',
                  'cancel': 'Cancel',
                  'update_success': 'Nice work, __name__ !',
                  'update_success_msg': "'__topic__' is updated successfully.",
                  'delete_confirm_title': 'Are you sure ?',
                  'delete_confirm_msg': "This action will __action__ '__topic__'. ",
                  'delete_success': "'__topic__' is __action__ successfully.",
                  'enable_topic': 'enable',
                  'disable_topic': 'disable',
                  'disabled': 'disabled',
                  'enabled': 'enabled',
                  'disable_topic_link': 'Disable',
                  'enable_topic_link': 'Enable',
                  'makeUnselectable': 'Make non-selectable in Book Meeting flow'
                },
                'topicRoomCard': {
                  'capacity': 'Capacity',
                  'facility': 'Facility',
                  'coffee': 'Coffee',
                  'mic': 'Mic',
                  'projector': 'Projector',
                  'lastUpdatedOn': 'Last updated on'
                },
                'topicUserCard': {
                  'title': 'Title',
                  'email': 'Email',
                  'phone': 'Phone'
                }
              }
            },
            'briefings': {
              'commons': {
                'search_rooms': 'Search Rooms',
                'briefingAcceptedTitle': 'Briefing Invitation Accepted',
                'briefingAcceptedBody': 'Please note that you can decline this Briefing later in case you change your mind.',
                'areYouSure': 'Are You Sure?',
                'clickYesMessage': 'Clicking Yes will Cancel this Briefing.',
                'clickNoMessage': 'Confirming a Briefing sends calendar notification to External Attendee(s). If you would like to review the agenda before proceeding, click No.',
                'cannotConfirmBriefing': 'Cannot Confirm Briefing',
                'cannotAcceptBriefing': 'Cannot Accept Briefing',
                'cannotDeclineBriefing': 'Cannot Decline Briefing',
                'briefingDeclinedBody': 'Please note that once you decline a Briefing invite, you cannot re-accept it.',
                'briefingDeclineTitle': 'Briefing Invitation Declined',
                'briefingNotReady': "Sorry, this Briefing isn't ready to be Confirmed",
                'briefingMeetingErrorMessage': 'Every Briefing needs at least one Approved Meeting to be Confirmed.',
                'cancelled': 'Cancelled',
                'confirmed': 'Confirmed',
                'confirm': 'Confirm',
                'accept': 'Accept',
                'decline': 'Decline',
                'summary': 'Summary',
                'survey': 'Survey',
                'accepted': 'Accepted',
                'declined': 'Declined',
                'pending': 'Pending',
                'cancel': 'Cancel',
                'assignToBM': 'Assign To BM',
                'fieldMissingTitle': 'Oops, there are required fields missing.',
                'approved': 'Approved',
                'approve': 'Approve',
                'externalAttendees': 'External Attendees',
                'cannotCancelBriefing': 'Cannot Cancel Briefing',
                'briefing_title': 'Briefing Information',
                'behalf_of_attendees_only': 'You can request briefing only on behalf of your attendees',
                'failure': 'Failure!',
                'success': 'Success!',
                'export': 'Export'
              },
              'card': {
                'checkin': 'Checkin',
                'location': 'Location',
                'requestChange': 'Request Change',
                'briefingActivityError': 'Each Briefing must have at least one Agenda.'
              },
              'briefingNav': {
                'requestBriefing': 'Briefing Details',
                'areYouAttending': ' Are you attending this briefing ?',
                'yes': 'Yes',
                'no': 'No',
                'copyFrom': 'Copy From',
                'pleaseSelectAgendaItem': 'Please select any agenda item',
                'all_attendees': 'All Attendees',
                'all_internal_attendees': 'All Internal Attendees',
                'all_external_attendees': 'All External Attendees',
                'briefing_report': 'Briefing Summary'
              },
              'briefingRequest': {
                'pleaseNote': 'Please Note',
                'roomChangeNotifTitle': 'Are You Sure To Change Briefing Room ?',
                'roomChangeNotif': 'All meetings in __oldRoom__ will be moved to __newRoom__',
                'noteText': 'This Briefing Center is available only on weekdays',
                'briefingWith': 'BRIEFING WITH',
                'start': 'START',
                'end': 'END',
                'time': 'TIME',
                'date': 'DATE',
                'activity': 'PROPOSE AGENDA',
                'addActivity': 'Add Agenda Item',
                'add': 'Add',
                'activityEmptyText': 'Proposed Agenda Items will appear here',
                'internalAttendees': 'PREFERRED INTERNAL ATTENDEE(S)',
                'discard': 'DISCARD CHANGES',
                'requestor': 'REQUESTOR',
                'requestorName': 'Requestor Name',
                'customError': 'You can select only one __user__',
                'assignedBriefingManager': 'Assigned Briefing Manager',
                'notAssigned': 'Not Assigned',
                'selectStartDate': 'Select Start Date',
                'selectStartTime': 'Select Start Time',
                'selectEndDate': 'Select End Date',
                'selectEndTime': 'Select End Time',
                'enterCommaSeparatedNames': 'Enter comma separated names',
                'pickAttendees': 'Pick Attendees',
                'meetingAttendingErrorTitle': 'Oops, you forgot to tell us if you are attending this briefing.',
                'agendaEditInProgressTitle': 'Are you sure?',
                'agendaEditInProgressMessage': 'Agenda has been edited, do you want to save the changes?',
                'selectMultipleOpportunitiesTitle': 'Are you sure?',
                'selectMultipleOpportunitiesMessage': 'You are selecting multiple opportunities. Doing so will not populate the dependent fields. Are you sure you want to proceed?',
                'meetingAttendingErrorMessage': "There's a place to let us know right above the form.",
                'selectAccount': 'Please Select an Account',
                'SelectBriefingWith': 'Briefing with field is mandatory.',
                'requestorInfoMissing': 'Requestor information is missing.',
                'attendeeError': 'At least one __attendeeType__ attendee should be invited to each Briefing.',
                'briefingActivityError': 'Each Briefing must have at least one Agenda.',
                'briefingTimeDateError': 'Enter the start date and time and end date and time for your Briefing.',
                'pastTimeErrorTitle': 'Incorrect Date/Time.',
                'pastTimeErrorMessage': 'Please select a date which is not past and also ensure that the Briefing start and end time is not the same.',
                'briefingSuccessMessage': 'Your briefing has been __status__ successfully',
                'briefingDoubleBookingErrorTitle': 'We are Sorry',
                'briefingDoubleBookingErrorMsg': 'This request could not get through. Following attendee(s) are already part of one of your meeting(s) and are not enabled to be double booked',
                'briefingDoubleBookingErrorNote': 'Please enable double booking to proceed or contact your Briefing Manager.',
                'briefingCISRoomUnavailable': 'The request could not get through. Following room(s) are unavailable.',
                'cannotRequestBriefing': 'Cannot Request Briefing',
                'noTitleProvided': 'No title provided',
                'selectOpprtunities': 'Enter Opportunity Name(s)',
                'labelOpportunities': 'Opportunity Name(s)',
                'selectOpprtunity': 'Enter Opportunity Name',
                'customerInfo': 'customer-info',
                'copyAttendee': 'copy-attendee',
                'update': 'Update',
                'preferredInternalAttendeeHelpText': 'This is a free form text field for information purpose only. No invites are sent to these users. To send out invitations, please add the users from the Pick Attendees section.',
                'pickAttendeeHelpText': 'Calendar invitations are sent to the user(s) added from this section.',
                'briefingIcsOptOutMessage': 'Do you want to send updated ICS to participants? <br> Note : No notifications are send to declined participants. If you wish to notify, please re-invite from Briefing details page.',
                'areYouSure': 'Briefing updated',
                'are_you_sure': 'Are you sure?',
                'attendeePresentInAgenda': 'Clicking Yes will remove the attendee from all the agendas.',
                'attendeePresentInConcierge': 'Clicking Yes will remove the attendee from all the concierge requests.',
                'attendeePresentInAgendaAndConcierge': 'Clicking Yes will remove the attendee from all the agendas and concierge requests.'
              },
              'selectCompany': {
                'briefingWith': 'BRIEFING WITH',
                'sdfcAccountName': 'Account Name',
                'customError': 'You can select only one Account',
                'placeHolderAccount': 'Enter an Account Name',
                'placeHolderBriefingWith': 'Type Customer name'
              },
              'activityBriefing': {
                'briefingOpportunityTitle': 'Sorry, this Opportunity cannot be removed.',
                'briefingOpportunityMessage': 'You have a meeting already tagged to the Opportunity.',
                'meetingTitleError': 'Adding meeting title is required for an activity.',
                'fieldMissingMessage': 'Each Briefing must have at least one Agenda',
                'meetingTitle': 'Meeting Title',
                'customError': 'You can select only one __entity__',
                'activityInfo': 'Activity Info',
                'meetingInfoPlaceholder': 'Information for this meeting',
                'opportunity': 'Opportunity',
                'copyAgendaSuccessMessage': '__count__ out of __total__ agenda information has been copied.',
                'reviwAgendaInfo': 'Current Briefing\'s participants are added to all the copied agenda(s). Please review the copied information to enter the missing fields or to modify the field values.',
                'success': 'Success!',
                'agenda': 'agenda',
                'meetingTypeNotActiveMessage': 'This meeting type is no longer active. Agenda cannot be edited.',
                'meetingTypeNotActiveHeader': 'Meeting type disabled!',
                'add': 'Add',
                'discard': 'Discard',
                'update': 'Update',
                'topicToMeetingTitleCopyHelpText': '__topic__ will be copied to this field if blank.',
                'selectAgendaLabel': 'Select meeting type'
              },
              'homelist': {
                'loading': 'Loading...',
                'noBriefing': 'No upcoming briefings.',
                'briefingAppearHere': 'Your Briefings will appear here.'
              },
              'listAgenda': {
                'edit': 'Edit',
                'requestedActivities': 'REQUESTED ACTIVITIES',
                'selectedExternalAttendee': 'Selected External Attendee(s)',
                'selectedInternalAttendee': 'Selected Internal Attendee(s)',
                'preferredInternalAttendee': 'Preferred Internal Attendee(s)',
                'conciergeServicesRequested': 'Concierge Services requested',
                'briefingAgenda': 'BRIEFING REQUESTOR:',
                'list': 'List',
                'cal': 'Cal'
              },
              'copyBriefing': {
                'loading': 'Loading...',
                'noBriefing': 'No Briefings',
                'copyBriefingTitle': 'Select the briefing you want to import information from',
                'selectOneBriefingTitle': 'Briefing information missing!',
                'selectOneBriefingMsg': 'Please select a briefing to copy the information from.',
                'overwritingMessage': "Any entries you have already made in this section will be overridden.",
                'copyAgendaConfirmationMessage': 'All the agenda(s) will be copied and added to the existing agenda(s).',
                'copyAttendeeConfirmationMessage': 'All the attendee(s) will be copied and added to the existing attendee(s).',
                'requested_by': 'Requested By',
                'no_of_participants': 'Participant(s)',
                'done': 'Done'
              }
            },
            'concierge': {
              'commons': {
                'areYouSure': 'Are You Sure?',
                'fieldMissingMessage': 'Some of the required fields are missing.',
                'requiredFieldMissing': 'Oops, there are required fields missing.'
              },
              'conciergeService': {
                'conciergeServices': 'Concierge Services',
                'discard': 'DISCARD',
                'selectExternalAttendee': 'Please select at least one external or internal attendee.',
                'addAttendeeToRequest': 'Please select an external or internal attendee to add to the request.',
                'checkAttendeeMesaage': 'Clicking Yes will remove the attendee from all the concierge requests.',
                'external_attendees': 'External Attendees',
                'internal_attendees': 'Internal Attendees',
                'all': 'All'
              },
              'requestDetail': {
                'requestNo': 'Request No.',
                'action': 'Action',
                'clickYesMessage': 'Clicking Yes will remove this concierge request. \n Note: Cancellation notification is sent to the vendor if already notified.'
              }
            },
            'eventConfig': {
              'enablerItem': {
                'disable': 'Disable',
                'enable': 'Enable'
              }
            },
            'attendees': {
              'commons': {
                'addNewAttendee': 'Add new attendee'
              },
              'externalAttendeeList': {
                'externalAttendees': 'EXTERNAL ATTENDEES',
                'external_attendee': 'External Attendee'
              }
            },
            'users': {
              'addUser': {
                'formTitle': 'ADD AN ATTENDEE',
                'hintText': 'Please help us with the following information',
                'email': 'Email',
                'name': 'Name',
                'phone': 'Contact Number',
                'company': 'Company',
                'title': 'Title',
                'btnText': 'Add',
                'syncContact': 'Sync contact to SFDC',
                'areYouSure': 'Are You Sure?',
                'addDiscardWarningMessage': 'If you leave before clicking the blue "ADD" button your edits will be lost.',
                'invalidEmailMessage': 'Please enter a valid email',
                'addPersonAsInternalAttendee': 'You should add this person as an internal attendee',
                'invalidDomain': 'Domain Invalid',
                'addUserTitle': 'Add Attendee Info'
              }
            },
            'optInMessages': {
              'userConsentMissingTitle': 'Action Required',
              'userConsentMissingMessage': 'Please indicate that the consent has been obtained to proceed to add the user',
              'addUserConsentMessage': 'Please indicate that you have obtained the consent from the user to use his/her personal information for scheduling meetings using Jifflenow. This is in accordance with the compliance. Please refer to our <a href="https://www.jifflenow.com/privacy/" target="_blank">Privacy Policy</a> and <a href="https://www.jifflenow.com/terms-of-use/" target="_blank">Terms and Conditions</a> for more details.',
              'addUserPrivacyMessage': 'To know how Jifflenow stores &amp; uses your data view our <a href="https://www.jifflenow.com/privacy/" target="_blank">Privacy Policy</a>'
            }
          }
        },
        'briefings': {
          'card': {
            'checkin': 'Checkin',
            'location': 'Location',
            'accepted': 'accepted',
            'declined': 'declined',
            'pending': 'pending',
            'requestChange': 'Request Change',
            'cancel': 'Cancel'
          },
          'briefingNav': {
            'requestBriefing': 'Briefing Detail',
            'areYouAttenDing': ' Are you attending this briefing ?',
            'yes': 'Yes',
            'no': 'No'
          },
          'briefingRequest': {
            'pleaseNote': 'Please Note',
            'noteText': 'This Briefing Center is available only on weekdays',
            'briefingWith': 'BRIEFING WITH',
            'start': 'START',
            'end': 'END',
            'time': 'TIME',
            'date': 'DATE',
            'activity': 'PROPOSE AGENDA',
            'addActivity': 'Add Agenda Item',
            'add': 'Add',
            'activityEmptyText': 'Proposed Agenda Items will appear here',
            'internalAttendees': 'PREFERRED INTERNAL ATTENDEE(S)',
            'discard': 'DISCARD CHANGES'
          }
        },
        'attendees': {
          'externalAttendeeList': {
            'externalAttendees': 'EXTERNAL ATTENDEES'
          }
        },
        'users': {
          'addUser': {
            'formTitle': 'ADD AN ATTENDEE',
            'hintText': 'Please help us with the following information',
            'email': 'Email',
            'name': 'Name',
            'phone': 'Contact Number',
            'company': 'Company',
            'title': 'Title',
            'btnText': 'Add',
            'syncContact': 'Sync contact to SFDC'
          }
        }
      };

      _export('default', resources);
    }
  };
});
System.register('topic-main.js', ['github:twbs/bootstrap@3.3.6.js', 'github:select2/select2@4.0.0/js/select2.full.js', 'npm:aurelia-validation@0.6.0/strategies/twbootstrap-view-strategy.js', 'components/error-view-strategy.js', 'npm:aurelia-i18n@0.4.1.js', 'locale/en/translation.js'], function (_export) {
  'use strict';

  var $, bootstrap, select2, TWBootstrapViewStrategy, ErrorViewStrategy, I18N, resources;

  _export('configure', configure);

  function configure(aurelia) {
    $(document).ready(function () {
      $('.dropdown-toggle').dropdown();
      $('.navbar-set .navbar-toggle').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        setTimeout(function () {
          $('#dark_nav_menu').collapse('toggle');
        }, 80);
      });
      $('.navbar-comp .navbar-toggle').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        setTimeout(function () {
          $('#main-nav-bar').collapse('toggle');
        }, 80);
      });

      $('.jn-c-dropdown').on('click', function (e) {
        $(this).toggleClass('open');
      });

      $.urlParam = function (name, sourceStr) {
        var source = sourceStr || window.location.href;
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(source);
        if (results == null) {
          return '';
        } else {
          return results[1] || 0;
        }
      };

      var token = $('meta[name="csrf-token"]').attr('content');
      $.ajaxSetup({
        beforeSend: function beforeSend(xhr) {
          xhr.setRequestHeader('X-CSRF-Token', token);
        } });
      $.fn.modal.Constructor.prototype.enforceFocus = $.noop;
    });
    aurelia.use.standardConfiguration().plugin('aurelia-validation', function (config) {
      config.useViewStrategy(ErrorViewStrategy.AppendToInput);
    }).plugin('aurelia-animator-css').plugin('aurelia-i18n', function (instance) {
      instance.setup({
        resStore: resources,
        lng: 'en',
        attributes: ['t', 'i18n'],
        getAsync: true,
        sendMissing: false,
        fallbackLng: 'en',
        debug: false
      });
    });

    initI18n(_.assign({}, enLocale['event_home'], enLocale['topic_upload']));
    setupUiI18n();
    aurelia.start().then(function (a) {
      return a.setRoot('view-models/topics/topics-app');
    });
  }

  return {
    setters: [function (_bootstrap) {
      $ = _bootstrap['default'];
      bootstrap = _bootstrap['default'];
    }, function (_select2Select2JsSelect2Full) {
      select2 = _select2Select2JsSelect2Full['default'];
    }, function (_aureliaValidationStrategiesTwbootstrapViewStrategy) {
      TWBootstrapViewStrategy = _aureliaValidationStrategiesTwbootstrapViewStrategy.TWBootstrapViewStrategy;
    }, function (_componentsErrorViewStrategy) {
      ErrorViewStrategy = _componentsErrorViewStrategy.ErrorViewStrategy;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_localeEnTranslation) {
      resources = _localeEnTranslation['default'];
    }],
    execute: function () {}
  };
});
System.registerDynamic("view-models/attendees/attendee-select-panel.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "";
});
System.register("view-models/attendees/attendee-select-panel.js", [], function (_export) {
  "use strict";

  return {
    setters: [],
    execute: function () {}
  };
});
System.registerDynamic("view-models/attendees/external-attendee-list.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"components/attendee\"></require>\n\n\t    <div class=\"pick-tool\">\n\t        <div class=\"attendee-search text-right\">\n\t        \t<div class=\"search-field-icon jif-search jif-dark2-grey\">\n\t        \t\t<input type=\"text\" class=\"search-box user-search-box\" autocomplete=\"off\" keyup.trigger=\"searchTrigger()\" value.bind=\"searchText\" data-automation=\"briefing-attendee-search\">\n\t        \t</div>\n\t        </div>\n\t    </div>\n\t    <div class=\"attendee-addbtn\" if.bind=\"envDetails.allowUserToAddNewExternalAttendee\" click.trigger=\"openExternal()\" data-automation=\"briefing-add-attendee\">\n        \t<i class=\"jif-plus-circle-o pull-left jif-34 jif-dark1-grey\"></i>\n        \t<span class=\"pull-left attendee-add-text font-blue text-uppercase\" i18n=\"attendees.commons.addNewAttendee\"></span>\n        </div>\n\t\t<div class=\"section-content\">\n\t\t\t<div class=\"briefing-attendees-list scroll-y\" ref=\"attendeeList\">\n\t\t\t\t<div class=\"selected-attendee\" if.bind=\"selectedItems.length > 0\">\n\t\t\t\t\t<attendee containerless repeat.for=\"attendee of selectedItems\" attendee.bind=\"attendee\" event-remove-attendee=\"external-attendee:remove\"></attendee>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"all-attendee\" if.bind=\"items.length > 0\">\n\t\t\t\t\t<attendee containerless repeat.for=\"attendee of items\" attendee.bind=\"attendee\" event-add-attendee=\"external-attendee:add\"></attendee>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n</template>\n";
});
System.register('view-models/attendees/attendee-list.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'components/listing.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
  'use strict';

  var EventAggregator, inject, bindable, Listing, _, AttendeeList;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_componentsListing) {
      Listing = _componentsListing.Listing;
    }, function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }],
    execute: function () {
      AttendeeList = function (_Listing) {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _inherits(AttendeeList, _Listing);

        _createDecoratedClass(AttendeeList, [{
          key: 'selectedItems',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function AttendeeList(ea) {
          _classCallCheck(this, _AttendeeList);

          _get(Object.getPrototypeOf(_AttendeeList.prototype), 'constructor', this).call(this, ea);

          _defineDecoratedPropertyDescriptor(this, 'selectedItems', _instanceInitializers);

          this.items = [];
          this.searchTrigger = _.debounce(this.searchAttendees, 369);
        }

        _createDecoratedClass(AttendeeList, [{
          key: 'attached',
          value: function attached() {
            var scrollOpts = {
              domElement: this.attendeeList,
              direction: "vertical",
              offset: 200
            };
            _get(Object.getPrototypeOf(_AttendeeList.prototype), 'attached', this).call(this, scrollOpts);
          }
        }, {
          key: 'detached',
          value: function detached() {
            var scrollOpts = {
              domElement: this.attendeeList,
              direction: "vertical",
              offset: 200
            };
            _get(Object.getPrototypeOf(_AttendeeList.prototype), 'detached', this).call(this, scrollOpts);
          }
        }, {
          key: 'searchAttendees',
          value: function searchAttendees() {
            this.pushToSearchQueue(this.searchText.trim());
            this.ea.publish(this.eventPrefix + '-search:text');
          }
        }, {
          key: 'updateAttendees',
          value: function updateAttendees(attendees) {

            var selectedItemUUIDs = _.pluck(this.selectedItems, 'uuid');
            var allItemUUIDs = _.pluck(this.items, 'uuid');

            for (var i = 0; i < attendees.length; i++) {
              var attendee = attendees[i];
              var selectedIndex = selectedItemUUIDs.indexOf(attendee['uuid']);

              if (allItemUUIDs.indexOf(attendee['uuid']) != -1) {
                this.dirtyCount--;
                attendees.splice(i--, 1);
              }

              if (selectedIndex != -1) {
                attendee['selected'] = true;
                this.selectedItems[selectedIndex]['Id'] = attendee['Id'] || null;
                if (this.newItems.indexOf(attendee['uuid']) != -1) {
                  this.newItems.splice(this.newItems.indexOf(attendee['uuid']), 1);
                }
              } else {
                attendee['selected'] = false;
              }
            }
            this.items = this.items.concat(attendees);
          }
        }], null, _instanceInitializers);

        var _AttendeeList = AttendeeList;
        AttendeeList = inject(EventAggregator)(AttendeeList) || AttendeeList;
        return AttendeeList;
      }(Listing);

      _export('AttendeeList', AttendeeList);
    }
  };
});
System.register('view-models/attendees/external-attendee-list.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'view-models/attendees/attendee-list.js', 'service/user_request_service.js', 'service/briefing_request_service.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
	'use strict';

	var inject, bindable, EventAggregator, AttendeeList, UserRequestService, BriefingRequestService, I18N, ExternalAttendeeList;

	var _createDecoratedClass = function () {
		function defineProperties(target, descriptors, initializers) {
			for (var i = 0; i < descriptors.length; i++) {
				var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
					for (var f = 0; f < decorators.length; f++) {
						var decorator = decorators[f];if (typeof decorator === 'function') {
							descriptor = decorator(target, key, descriptor) || descriptor;
						} else {
							throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
						}
					}if (descriptor.initializer !== undefined) {
						initializers[key] = descriptor;continue;
					}
				}Object.defineProperty(target, key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
		};
	}();

	var _get = function get(_x, _x2, _x3) {
		var _again = true;_function: while (_again) {
			var object = _x,
			    property = _x2,
			    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
		var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
	}

	return {
		setters: [function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
			bindable = _aureliaFramework.bindable;
		}, function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_attendeeList) {
			AttendeeList = _attendeeList.AttendeeList;
		}, function (_serviceUser_request_serviceJs) {
			UserRequestService = _serviceUser_request_serviceJs.UserRequestService;
		}, function (_serviceBriefing_request_service) {
			BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
		}, function (_aureliaI18n) {
			I18N = _aureliaI18n.I18N;
		}],
		execute: function () {
			ExternalAttendeeList = function (_AttendeeList) {
				var _instanceInitializers = {};
				var _instanceInitializers = {};

				_inherits(ExternalAttendeeList, _AttendeeList);

				_createDecoratedClass(ExternalAttendeeList, [{
					key: 'selectedItems',
					decorators: [bindable],
					initializer: null,
					enumerable: true
				}, {
					key: 'concierges',
					decorators: [bindable],
					initializer: function initializer() {
						return [];
					},
					enumerable: true
				}], null, _instanceInitializers);

				function ExternalAttendeeList(userRequestService, ea, briefingRequestService, i18n) {
					_classCallCheck(this, _ExternalAttendeeList);

					_get(Object.getPrototypeOf(_ExternalAttendeeList.prototype), 'constructor', this).call(this, ea);

					_defineDecoratedPropertyDescriptor(this, 'selectedItems', _instanceInitializers);

					_defineDecoratedPropertyDescriptor(this, 'concierges', _instanceInitializers);

					this.sfdcAccountId = '';
					this.subscriptions = [];
					this.i18n = i18n;
					this.i18n.setLocale('en').then(function () {});
					this.subscribeToAddRemoveEvents();
					this.userService = userRequestService;
					this.briefingRequestService = briefingRequestService;
					this.selectedItems = [];
					this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
				}

				_createDecoratedClass(ExternalAttendeeList, [{
					key: 'addAttendee',
					value: function addAttendee(payload) {
						if (payload.isNewAttendee) {
							this.newItems.push(payload.uuid);
							delete payload.isNewAttendee;
						}

						var selectedAttendeeObj = _.find(this.selectedItems, function (attendee) {
							return attendee.uuid == payload.uuid;
						});

						if (!selectedAttendeeObj) {
							this.selectedItems.push(payload);

							var attendeeObj = _.find(this.items, function (attendee) {
								return attendee.uuid == payload.uuid;
							});
							if (attendeeObj) {
								attendeeObj['selected'] = true;
							}
						}
						this.ea.publish('external-attendee:changed', this.selectedItems);
					}
				}, {
					key: 'removeAttendee',
					value: function removeAttendee(payload) {
						for (var i = 0; i < this.selectedItems.length; i++) {
							if (this.selectedItems[i].uuid == payload.uuid) {
								this.selectedItems.splice(i--, 1);
							}
						}

						if (this.searchString != "" && payload.first_name.indexOf(this.searchString) == -1 && payload.last_name.indexOf(this.searchString) == -1 && payload.email.indexOf(this.searchString) == -1) {
							return;
						}

						var attendeeObj = _.find(this.items, function (attendee) {
							return attendee.uuid == payload.uuid;
						});
						if (attendeeObj) {
							attendeeObj['selected'] = false;
						} else {

							this.items.push(payload);
							this.dirtyCount++;
						}
						this.ea.publish('external-attendee:removed', {
							selectedItems: this.selectedItems,
							removed: payload
						});
					}
				}, {
					key: 'subscribeToAddRemoveEvents',
					value: function subscribeToAddRemoveEvents() {
						var _this = this;

						var count = 0;

						this.subscriptions[count++] = this.ea.subscribe("external-attendee:add", function (payload) {
							if (_this.isSFDC && payload.email == payload.uuid) {
								var consent;
								var user;

								(function () {
									var userUUID = payload.uuid;
									delete payload.uuid;
									var request = _.cloneDeep(payload);
									delete request.Id;
									delete request.available;
									delete request.selected;
									request.first_name = request.first_name ? request.first_name : "-";
									request.company_name = request.company_name ? request.company_name : "-";
									request.title = request.title ? request.title : "-";
									consent = request["consent_given"].toBoolean();

									delete request["consent_given"];
									delete request["consent_details"];
									user = {
										user: request,
										user_type: "external",
										consent: consent
									};

									_this.userService.createNewUser(user).then(function (response) {
										if (typeof response.response === "string") response = JSON.parse(response);
										var pushed = response.data.user;
										pushed.selected = true;

										pushed.available = true;
										pushed['Id'] = payload.Id;
										payload['uuid'] = pushed['uuid'] = pushed['uuid'] || pushed['email'];
										payload['role'] = pushed['role'] || "External Attendee";
										_this.addAttendee(pushed);
										_this.ea.publish('external-attendee:add-to-activity', pushed);
									})['catch'](function () {
										payload['uuid'] = userUUID;
										payload["selected"] = false;
									});
								})();
							} else {
								_this.addAttendee(payload);
								_this.ea.publish('external-attendee:add-to-activity', payload);
							}
						});

						this.subscriptions[count++] = this.ea.subscribe("external-attendee:remove", function (payload) {
							payload['selected'] = true;
							_this.ea.publish('agenda:concierge:attendee:check', payload);
						});

						this.subscriptions[count++] = this.ea.subscribe("agenda:concierge:attendee:delete", function (payload) {
							if (payload.role === _this.i18n.tr('attendees.externalAttendeeList.external_attendee')) {
								_this.removeAttendee(payload);
							}
						});

						this.subscriptions[count++] = this.ea.subscribe('externalAttendee:sfdc', function (payload) {
							var account = payload.account;
							if (account.selected == false) {
								_this.items.length = 0;
								_this.newItems.length = 0;
								_this.selectedItems.splice(0, _this.selectedItems.length);
								_this.updateAttendees([]);
								_this.totalEntries = 0;
							} else {

								payload.clearSelectedAttendees && _this.selectedItems.splice(0, _this.selectedItems.length);
								_this.sfdcAccountId = account.id;
								_this.resetAndList();
							}
							payload.clearSelectedAttendees && _this.ea.publish('external-attendee-all:removed');
						});

						this.subscriptions[count++] = this.ea.subscribe("externalAttendees:copy", function () {
							_this.resetAndList();
						});
					}
				}, {
					key: 'detached',
					value: function detached() {
						_get(Object.getPrototypeOf(_ExternalAttendeeList.prototype), 'detached', this).call(this);
						this.subscriptions.forEach(function (sub) {
							sub.dispose();
						});
					}
				}, {
					key: 'openExternal',
					value: function openExternal() {
						this.ea.publish('usermodal:show', { type: 'external' });
					}
				}, {
					key: 'fetchFromServer',
					value: function fetchFromServer(params) {
						var _this2 = this;

						if (!this.isSFDC) {
							params['from'] = "briefing";
							this.userService.getExternalUsers(params).then(function (response) {
								_this2.fetching = false;
								if (response.statusCode == 200 || response.status == 200) {
									if (typeof response.response === "string") {
										response = JSON.parse(response.response);
									}
									_this2.updateAttendees(response.data.items);
									_this2.totalEntries = response.data.total_entries || 0;
								}
								_this2.fetchForSearch();
							})['catch'](function (response) {
								_this2.fetching = false;
								_this2.fetchForSearch();
							});
						} else if (this.sfdcAccountId != '') {
							var param = {
								accountId: this.sfdcAccountId,
								listSize: params.per_page,
								pageNo: params.page,
								queryStr: params.search
							};
							this.briefingRequestService.getSfdcMethod('', param, 'fetch_attendee').then(function (response) {
								_this2.fetching = false;
								response.data.items.forEach(function (it) {
									it["uuid"] = (_.find(_this2.selectedItems, { email: it.email }) || {}).uuid || it.email;
								});
								_this2.updateAttendees(response.data.items);
								_this2.totalEntries = response.data.total_entries || 0;
								_this2.fetchForSearch();
							})['catch'](function (response) {
								_this2.fetching = false;
								_this2.fetchForSearch();
							});
						}
					}
				}], null, _instanceInitializers);

				var _ExternalAttendeeList = ExternalAttendeeList;
				ExternalAttendeeList = inject(UserRequestService, EventAggregator, BriefingRequestService, I18N)(ExternalAttendeeList) || ExternalAttendeeList;
				return ExternalAttendeeList;
			}(AttendeeList);

			_export('ExternalAttendeeList', ExternalAttendeeList);
		}
	};
});
System.registerDynamic("view-models/attendees/internal-attendee-list.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"components/attendee\"></require>\n\n\t    <div class=\"pick-tool\">\n\t        <div class=\"attendee-search text-right\">\n\t        \t<div class=\"search-field-icon jif-search jif-dark2-grey\">\n\t        \t\t<input type=\"text\" class=\"search-box user-search-box\" autocomplete=\"off\" keyup.trigger=\"searchTrigger()\" value.bind=\"searchText\" data-automation=\"briefing-attendee-search\">\n\t        \t</div>\n\t        </div>\n\t    </div>\n\t    <div class=\"attendee-addbtn\" click.trigger=\"openExternal()\" data-automation=\"briefing-add-attendee\">\n        \t<i class=\"jif-plus-circle-o pull-left jif-34 jif-dark1-grey\"></i>\n        \t<span class=\"pull-left attendee-add-text font-blue text-uppercase\" i18n=\"attendees.commons.addNewAttendee\"></span>\n        </div>\n\t\t<div class=\"section-content\">\n\t\t\t<div class=\"briefing-attendees-list scroll-y\" ref=\"attendeeList\">\n\t\t\t\t<div class=\"selected-attendee\" if.bind=\"selectedItems.length > 0\">\n\t\t\t\t\t<attendee containerless repeat.for=\"attendee of selectedItems\" attendee.bind=\"attendee\" event-remove-attendee=\"internal-attendee:remove\"></attendee>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"all-attendee\" if.bind=\"items.length > 0\">\n\t\t\t\t\t<attendee containerless repeat.for=\"attendee of items\" attendee.bind=\"attendee\" event-add-attendee=\"internal-attendee:add\"></attendee>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n</template>\n";
});
System.register('view-models/attendees/internal-list.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'components/listing.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
  'use strict';

  var EventAggregator, inject, bindable, Listing, _, InternalList;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_componentsListing) {
      Listing = _componentsListing.Listing;
    }, function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }],
    execute: function () {
      InternalList = function (_Listing) {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _inherits(InternalList, _Listing);

        _createDecoratedClass(InternalList, [{
          key: 'selectedItems',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function InternalList(ea) {
          _classCallCheck(this, _InternalList);

          _get(Object.getPrototypeOf(_InternalList.prototype), 'constructor', this).call(this, ea);

          _defineDecoratedPropertyDescriptor(this, 'selectedItems', _instanceInitializers);

          this.items = [];
          this.searchTrigger = _.debounce(this.searchAttendees, 369);
        }

        _createDecoratedClass(InternalList, [{
          key: 'attached',
          value: function attached() {
            var scrollOpts = {
              domElement: this.attendeeList,
              direction: "vertical",
              offset: 200
            };
            _get(Object.getPrototypeOf(_InternalList.prototype), 'attached', this).call(this, scrollOpts);
          }
        }, {
          key: 'searchAttendees',
          value: function searchAttendees() {
            this.pushToSearchQueue(this.searchText.trim());
            this.ea.publish(this.eventPrefix + '-search:text');
          }
        }, {
          key: 'updateAttendees',
          value: function updateAttendees(attendees) {

            var selectedItemUUIDs = _.pluck(this.selectedItems, 'email');
            var allItemUUIDs = _.pluck(this.items, 'email');

            for (var i = 0; i < attendees.length; i++) {
              var attendee = attendees[i];

              if (allItemUUIDs.indexOf(attendee['email']) != -1) {
                this.dirtyCount--;
                attendees.splice(i--, 1);
              }

              if (selectedItemUUIDs.indexOf(attendee['email']) != -1) {
                attendee['selected'] = true;

                if (this.newItems.indexOf(attendee['email']) != -1) {
                  this.newItems.splice(this.newItems.indexOf(attendee['email']), 1);
                }
              } else {
                attendee['selected'] = false;
              }
            }
            this.items = this.items.concat(attendees);
          }
        }], null, _instanceInitializers);

        var _InternalList = InternalList;
        InternalList = inject(EventAggregator)(InternalList) || InternalList;
        return InternalList;
      }(Listing);

      _export('InternalList', InternalList);
    }
  };
});
System.register('view-models/attendees/internal-attendee-list.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'view-models/attendees/internal-list.js', 'service/user_request_service.js', 'service/briefing_request_service.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
	'use strict';

	var inject, bindable, EventAggregator, InternalList, UserRequestService, BriefingRequestService, I18N, InternalAttendeeList;

	var _createDecoratedClass = function () {
		function defineProperties(target, descriptors, initializers) {
			for (var i = 0; i < descriptors.length; i++) {
				var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
					for (var f = 0; f < decorators.length; f++) {
						var decorator = decorators[f];if (typeof decorator === 'function') {
							descriptor = decorator(target, key, descriptor) || descriptor;
						} else {
							throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
						}
					}if (descriptor.initializer !== undefined) {
						initializers[key] = descriptor;continue;
					}
				}Object.defineProperty(target, key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
		};
	}();

	var _get = function get(_x, _x2, _x3) {
		var _again = true;_function: while (_again) {
			var object = _x,
			    property = _x2,
			    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
		var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
	}

	return {
		setters: [function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
			bindable = _aureliaFramework.bindable;
		}, function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_internalList) {
			InternalList = _internalList.InternalList;
		}, function (_serviceUser_request_serviceJs) {
			UserRequestService = _serviceUser_request_serviceJs.UserRequestService;
		}, function (_serviceBriefing_request_service) {
			BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
		}, function (_aureliaI18n) {
			I18N = _aureliaI18n.I18N;
		}],
		execute: function () {
			InternalAttendeeList = function (_InternalList) {
				var _instanceInitializers = {};
				var _instanceInitializers = {};

				_inherits(InternalAttendeeList, _InternalList);

				_createDecoratedClass(InternalAttendeeList, [{
					key: 'selectedItems',
					decorators: [bindable],
					initializer: null,
					enumerable: true
				}, {
					key: 'concierges',
					decorators: [bindable],
					initializer: function initializer() {
						return [];
					},
					enumerable: true
				}], null, _instanceInitializers);

				function InternalAttendeeList(userRequestService, ea, briefingRequestService, i18n) {
					_classCallCheck(this, _InternalAttendeeList);

					_get(Object.getPrototypeOf(_InternalAttendeeList.prototype), 'constructor', this).call(this, ea);

					_defineDecoratedPropertyDescriptor(this, 'selectedItems', _instanceInitializers);

					_defineDecoratedPropertyDescriptor(this, 'concierges', _instanceInitializers);

					this.sfdcAccountId = '';
					this.subscriptions = [];
					this.i18n = i18n;
					this.i18n.setLocale('en').then(function () {});
					this.envDetails = envDetails;
					this.subscribeToAddRemoveEvents();
					this.userService = userRequestService;
					this.briefingRequestService = briefingRequestService;
					this.selectedItems = [];
					this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
				}

				_createDecoratedClass(InternalAttendeeList, [{
					key: 'addAttendee',
					value: function addAttendee(payload) {
						if (payload.isNewAttendee) {
							this.newItems.push(payload.uuid);
							delete payload.isNewAttendee;
						}

						var selectedAttendeeObj = _.find(this.selectedItems, function (attendee) {
							return attendee.uuid == payload.uuid;
						});

						if (!selectedAttendeeObj) {
							this.selectedItems.push(payload);

							var attendeeObj = _.find(this.items, function (attendee) {
								return attendee.uuid == payload.uuid;
							});
							if (attendeeObj) {
								attendeeObj['selected'] = true;
							}
						}
						this.ea.publish('internal-attendee:changed', this.selectedItems);
						if (this.envDetails.briefingInternalAttendeeEnabled && payload.uuid == this.envDetails.currentUser.uuid) {
							this.ea.publish('toggle:is_attending');
						}
					}
				}, {
					key: 'removeAttendee',
					value: function removeAttendee(payload) {
						for (var i = 0; i < this.selectedItems.length; i++) {
							if (this.selectedItems[i].uuid == payload.uuid) {
								this.selectedItems.splice(i--, 1);
							}
						}

						if (this.searchString != "" && payload.first_name.indexOf(this.searchString) == -1 && payload.last_name.indexOf(this.searchString) == -1 && payload.email.indexOf(this.searchString) == -1) {
							return;
						}

						var attendeeObj = _.find(this.items, function (attendee) {
							return attendee.uuid == payload.uuid;
						});
						if (attendeeObj) {
							attendeeObj['selected'] = false;
							if (attendeeObj.uuid == this.envDetails.currentUser.uuid && this.envDetails.role === 'CSM') {
								for (var i = 0; i < this.items.length; i++) {
									if (this.items[i].uuid == attendeeObj.uuid) {
										this.items.splice(i--, 1);
									}
								}
							}
						} else {

							if (payload.uuid !== this.envDetails.currentUser.uuid) {
								this.items.push(payload);
								this.dirtyCount++;
							}
						}
						this.ea.publish('internal-attendee:removed', {
							selectedItems: this.selectedItems,
							removed: payload
						});
						if (this.envDetails.briefingInternalAttendeeEnabled && payload.uuid == this.envDetails.currentUser.uuid) {
							this.ea.publish('toggle:is_not_attending');
						}
					}
				}, {
					key: 'subscribeToAddRemoveEvents',
					value: function subscribeToAddRemoveEvents() {
						var _this = this;

						var count = 0;

						this.subscriptions[count++] = this.ea.subscribe("internal-attendee:add", function (payload) {
							_this.addAttendee(payload);
						});

						this.subscriptions[count++] = this.ea.subscribe("internal-attendee:remove", function (payload) {
							payload['selected'] = true;
							_this.ea.publish('agenda:concierge:attendee:check', payload);
						});

						this.subscriptions[count++] = this.ea.subscribe("agenda:concierge:attendee:delete", function (payload) {
							if (payload.role !== _this.i18n.tr('attendees.externalAttendeeList.external_attendee')) {
								_this.removeAttendee(payload);
							}
						});

						this.subscriptions[count++] = this.ea.subscribe("internalAttendees:copy", function () {
							_this.resetAndList();
						});
					}
				}, {
					key: 'detached',
					value: function detached() {
						_get(Object.getPrototypeOf(_InternalAttendeeList.prototype), 'detached', this).call(this);
						this.subscriptions.forEach(function (sub) {
							sub.dispose();
						});
					}
				}, {
					key: 'openExternal',
					value: function openExternal() {
						this.ea.publish('usermodal:show', { type: 'internal' });
					}
				}, {
					key: 'fetchFromServer',
					value: function fetchFromServer(params) {
						var _this2 = this;

						params['from'] = "briefing";
						this.userService.getInternalUsers(params).then(function (response) {
							_this2.fetching = false;
							if (response.statusCode == 200 || response.status == 200) {
								if (typeof response.response === "string") response = JSON.parse(response.response);

								_this2.updateAttendees(response.data.items);
								_this2.totalEntries = response.data.total_entries || 0;
							}
							_this2.fetchForSearch();
						})['catch'](function (response) {
							_this2.fetching = false;
							_this2.fetchForSearch();
						});
					}
				}], null, _instanceInitializers);

				var _InternalAttendeeList = InternalAttendeeList;
				InternalAttendeeList = inject(UserRequestService, EventAggregator, BriefingRequestService, I18N)(InternalAttendeeList) || InternalAttendeeList;
				return InternalAttendeeList;
			}(InternalList);

			_export('InternalAttendeeList', InternalAttendeeList);
		}
	};
});
System.registerDynamic("view-models/briefings/activity-briefing.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"../../components/notification/notification-modal\"></require>\n    <require from=\"components/aurelia-select\"></require>\n\n    <div class=\"request-briefing-fldset\">\n        <div class=\"form-group custom-fieldset custom-fieldset-border\">\n            <span class=\"fiedset-legend\" i18n=\"briefings.briefingRequest.activity\"></span>\n            <label class=\"text-uppercase briefing-activity-title\">\n                <span i18n=\"briefings.briefingRequest.addActivity\"></span>\n                <span if.bind=\"!isSFDC\" class=\"copy-customer-info point-cursor\" click.delegate=\"showCopyBriefingModal()\">\n                    <span class=\"font-blue text-capitalize au-target\" i18n=\"briefings.briefingNav.copyFrom\">Copy From</span>\n                    <span class=\"jif-iris-import font-blue\"></span>\n                </span>\n            </label>\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <label>${agendaLabel}</label>\n                        <aurelia-select \n                            if.bind=\"showActivitiesList\"\n                            select-id.bind=\"'agendaList'\"\n                            ref=\"agendaList\"\n                            is-multiple.bind=\"false\"\n                            remove-default-selection.bind=\"true\"\n                            swidth.bind=\"'100%'\"\n                            place-holder.bind=\"i18n.tr('briefings.briefingNav.pleaseSelectAgendaItem')\"\n                            min-input=\"0\"\n                            data-source.bind=\"activitiesList\"\n                            allow-clear.bind=\"false\"\n                            select-listen.bind=\"activitySelectionEvent\"\n                            data-automation=\"briefing-activity\">\n                        </aurelia-select>\n                        <span if.bind=\"agendaHelpText\" class=\"help-block form-builder-help-block\">${agendaHelpText}</span>\n                    </div>\n                    <div class=\"activityflds\">\n                        <div class=\"form-group\" if.bind=\"isSFDC && activityOpportunityList.length > 0 && renderOpportunitySelect\">\n                            <label i18n.bind=\"opportunitySelectLabel\"></label>\n                            <aurelia-select \n                                select-id.bind=\"'activity-opportunuty-select'\"\n                                remove-default-selection.bind=\"true\"\n                                ref=\"activityOpportunityBox\"\n                                is-multiple.bind=\"false\"\n                                swidth.bind=\"'100%'\"\n                                place-holder.bind=\"opportunitySelectPlaceholder\"\n                                item-type=\"opportunity\"\n                                clear-event.bind=\"activityOpptyClear\"\n                                data-source.bind=\"activityOpportunityList\"\n                                select-listen.bind=\"activityOptySelectEvent\"\n                                data-automation=\"briefing-opportunity\"\n                                disable-select.bind=\"disableOpportunity\">\n                            </aurelia-select>\n                            <span if.bind=\"opportunitySelectHelpText\" class=\"help-block form-builder-help-block\">${opportunitySelectHelpText}</span>\n                        </div>\n\n                        <form ref=\"activityCustomFormEl\" id=\"activity_form\" class=\"request-briefing-fldset\"></form>\n                        <div class=\"text-right\">\n                            <button if.bind=\"showAddUpdateBtn\" type=\"button\" class=\"btn btn-blue\" click.trigger=\"addUpdateActivity()\"  data-automation=\"breifing-activity-btn\">${mode}</button>\n                            <button type=\"button\" class=\"btn btn-blue\" click.trigger=\"discardActivity()\" i18n=\"briefings.activityBriefing.discard\" data-automation=\"breifing-activity-btn\"></button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-xs-12 col-sm-6\">\n                    <div class=\"briefing-activity-meet-list scroll-y\">\n                        <div class=\"briefing-activity-list\" repeat.for=\"activity of activityList\">\n                            <div class=\"row\">\n                                <div class=\"briefing-activity-section col-xs-10\" click.trigger=\"$parent.editAgenda($index)\">\n                                    <label class=\"round-text-btn-sm pull-left\">\n                                        <div class=\"font-blue\">${activity.shortName}</div>\n                                    </label>\n                                    <div class=\"briefing-activity-detail-block\">\n                                        <div class=\"briefing-activity-name\">${activity.heading()}</div>\n                                        <div class=\"briefing-activity-detail text-uppercase\">${activity.subheading()}</div>\n                                    </div>\n                                </div>\n                                <div class=\"briefing-activity-schedule col-xs-2\">\n                                    <div class=\"icon-box jif-blue\">\n                                        <a href=\"javascript:void(0)\" click.delegate=\"($parent.briefingRequest.status == 'Cancelled') || cannotRemoveActivity(activity) || $parent.removeActivity($index)\" data-automation=\"breifng-added-activity\">\n                                            <span class=\"${cannotRemoveActivity(activity) ? 'custom-noaction-sm-icon' : 'custom-remove-icon'}\"></span>\n                                            <div class=\"font-8 font-blue\">${cannotRemoveActivity(activity) ? 'No action' : 'Remove'}</div>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"briefing-activity-list\">\n                            <div class=\"briefing-activity-section\">\n                                <label class=\"round-text-btn-sm pull-left\">\n                                </label>\n                                <div class=\"briefing-activity-detail-block\">\n                                    <div class=\"briefing-activity-emptystate\" i18n=\"briefings.briefingRequest.activityEmptyText\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n";
});
System.register('service/activity_request_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
    'use strict';

    var HttpRequest, inject, API, ActivityRequestService;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_utilsRequest) {
            HttpRequest = _utilsRequest.HttpRequest;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            ActivityRequestService = function () {
                function ActivityRequestService(httpRequest, Api) {
                    _classCallCheck(this, _ActivityRequestService);

                    this.httpRequest = httpRequest;
                    this.api = Api;
                }

                _createClass(ActivityRequestService, [{
                    key: 'getActivities',
                    value: function getActivities() {
                        var acitivitiesUrl = this.api.getBaseUrl() + this.api.activities;
                        return this.httpRequest.createGetRequest(acitivitiesUrl);
                    }
                }, {
                    key: 'getActivityCustomForm',
                    value: function getActivityCustomForm(params) {
                        var url = this.api.getBaseUrl() + this.api.customForms;
                        return this.httpRequest.createGetRequest(url, params);
                    }
                }, {
                    key: 'getSfdcMethod',
                    value: function getSfdcMethod(url, data, methodName) {
                        return this.httpRequest.createGetRequest(url, data, methodName);
                    }
                }]);

                var _ActivityRequestService = ActivityRequestService;
                ActivityRequestService = inject(HttpRequest, API)(ActivityRequestService) || ActivityRequestService;
                return ActivityRequestService;
            }();

            _export('ActivityRequestService', ActivityRequestService);
        }
    };
});
System.register('view-models/briefings/activity-briefing.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/briefing_request_service.js', 'service/topic_request_service.js', 'service/activity_request_service.js', 'models/activity.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
  'use strict';

  var $, bindable, inject, EventAggregator, BriefingRequestService, TopicRequestService, ActivityRequestService, Activity, I18N, ActivityBriefing;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_jquery) {
      $ = _jquery['default'];
    }, function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceBriefing_request_service) {
      BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_serviceActivity_request_service) {
      ActivityRequestService = _serviceActivity_request_service.ActivityRequestService;
    }, function (_modelsActivity) {
      Activity = _modelsActivity.Activity;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }],
    execute: function () {
      ActivityBriefing = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(ActivityBriefing, [{
          key: 'activityForm',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'selectedAccount',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'isExistingBriefing',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'shouldDisable',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'accountOpportunityList',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'externalAttendees',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'internalAttendees',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'showInternalAttendees',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'agendaDetails',
          decorators: [bindable],
          initializer: function initializer() {
            return {};
          },
          enumerable: true
        }, {
          key: 'planApproved',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function ActivityBriefing(ea, topicRequestService, activityRequestService, i18n) {
          _classCallCheck(this, _ActivityBriefing);

          _defineDecoratedPropertyDescriptor(this, 'activityForm', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'selectedAccount', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'isExistingBriefing', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'shouldDisable', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'accountOpportunityList', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'externalAttendees', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'internalAttendees', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'showInternalAttendees', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'agendaDetails', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'planApproved', _instanceInitializers);

          this.info = '';
          this.topics = [];
          this.activities = [];
          this.subscribed = [];
          this.activityList = [];
          this.meetingTitle = '';
          this.selectedActivity = {};
          this.removedActivities = [];
          this.currentSelectedOpty = {};
          this.activityFormRenderer = {};
          this.showActivityTopic = false;
          this.activityOpportunityList = [];
          this.activityOpptyClear = 'clear:opp';
          this.activityOptySelectEvent = 'activity-opp:select';
          this.bindOpportunitiesEvent = 'bind-opportunities:select';
          this.opportunityIdSelector = "#briefing_opportunity_ids";
          this.meetingFormRequest = { form_type: "meeting_request_form" };
          this.mode = '';
          this.selectedAgenda = null;
          this.selectedAgendaIndex = null;
          this.showAddUpdateBtn = true;
          this.showActivitiesList = false;
          this.activitiesCustomForms = {};
          this.activitySelectionEvent = 'briefing-activity:select';
          this.activitiesHash = {};
          this.activitiesList = [];
          this.disableOpportunity = false;
          this.renderOpportunitySelect = !window.envDetails.hideOpportunityInAgenda;

          this.ea = ea;
          this.i18n = i18n;
          this.subscribeToEvents();
          this.envDetails = envDetails;
          this.i18n.setLocale('en').then(function () {});
          this.topicRequestService = topicRequestService;
          this.activityRequestService = activityRequestService;
          this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
          this.isNotIE11 = !navigator.userAgent.match(/Trident.*rv\:11\./);
          this.mode = this.i18n.tr('briefings.activityBriefing.add');
          if (this.isSFDC) {
            this.opportunitySelectLabel = window.envDetails.sfdcCustomLabels.agenda_opportunity_label;
            this.opportunitySelectPlaceholder = window.envDetails.sfdcCustomLabels.agenda_opportunity_placeholder;
            this.opportunitySelectHelpText = window.envDetails.sfdcCustomLabels.agenda_opportunity_helptext || '';
          }
        }

        _createDecoratedClass(ActivityBriefing, [{
          key: 'subscribeToEvents',
          value: function subscribeToEvents() {
            var _this = this;

            var count = 0;
            this.subscribed[count++] = this.ea.subscribe('activities:existing', function (data) {
              _this.activityList = data.activityList.reverse();
            });
            if (!window.envDetails.hideOpportunityInAgenda) {
              this.subscribed[count++] = this.ea.subscribe(this.activityOptySelectEvent, function (opp) {
                _this.handleActivityOpptySelection(opp);
              });
            }
            this.subscribed[count++] = this.ea.subscribe('import:copy-briefing-source', function (details) {
              if (details.publisher == _this.i18n.tr('briefings.activityBriefing.agenda')) {
                _this.copyBriefingAgendas(details);
              }
            });
            this.subscribed[count++] = this.ea.subscribe(this.activitySelectionEvent, function (activity) {
              _this.selectedActivity = _this.activitiesHash[activity.id];
              var updateMode = _this.i18n.tr('briefings.activityBriefing.update');
              _this.showCustomField(_this.selectedActivity, _this.mode === updateMode);
            });

            var addInternalExternalAttendeeToActivity = function addInternalExternalAttendeeToActivity(attendees) {
              window.envDetails.addAllBriefingParticipantsToAgenda && this.addAttendee.call(this, attendees);
              if (this.activityFormRenderer.getValues) {
                var existing = this.activityFormRenderer.getValues().agenda_participants;
                this.bindAttendees(this.externalAttendees, this.internalAttendees, existing, attendees, null);
              }
            };

            var removeInternalOrExternalAttendee = function removeInternalOrExternalAttendee(attendee) {
              var existing = this.getExistingValue(attendee);
              this.bindAttendees(this.externalAttendees, this.internalAttendees, existing, null, attendee);
              this.removeAttendee(attendee.removed.uuid);
            };

            this.subscribed[count++] = this.ea.subscribe('internal-attendee:add', function (attendees) {
              addInternalExternalAttendeeToActivity.call(_this, attendees);
            });

            this.subscribed[count++] = this.ea.subscribe('external-attendee:add-to-activity', function (attendees) {
              addInternalExternalAttendeeToActivity.call(_this, attendees);
            });

            this.subscribed[count++] = this.ea.subscribe('external-attendee:removed', function (changed) {
              removeInternalOrExternalAttendee.call(_this, changed);
            });

            this.subscribed[count++] = this.ea.subscribe('internal-attendee:removed', function (changed) {
              removeInternalOrExternalAttendee.call(_this, changed);
            });

            this.subscribed[count++] = this.ea.subscribe('attendees:copy', function (payload) {
              payload.newExternal.forEach(function (attendee) {
                window.envDetails.addAllBriefingParticipantsToAgenda && _this.addAttendee(attendee);
              });
              payload.newInternal.forEach(function (attendee) {
                window.envDetails.addAllBriefingParticipantsToAgenda && _this.addAttendee(attendee);
              });
              var existing = _this.activityFormRenderer.getValues().agenda_participants;
              _this.externalAttendees = _this.externalAttendees.concat(payload.external).filter(function (a, i) {
                return _this.externalAttendees.indexOf(a) !== i;
              });
              _this.internalAttendees = _this.internalAttendees.concat(payload.internal).filter(function (a, i) {
                return _this.internalAttendees.indexOf(a) !== i;
              }), _this.bindAttendees(_this.externalAttendees, _this.internalAttendees, existing);
            });
            this.subscribed[count++] = this.ea.subscribe('activityBriefing:agenda:Update', function (payload) {
              _this.addUpdateActivity();
            });
            this.subscribed[count++] = this.ea.subscribe('activityBriefing:agenda:discard', function (payload) {
              _this.discardActivity();
            });
            this.subscribed[count++] = this.ea.subscribe('external-attendee-all:removed', function (payload) {
              _this.removeAllAttendees();
              _this.bindAttendees(_this.externalAttendees, _this.internalAttendees);
            });
          }
        }, {
          key: 'detached',
          value: function detached() {
            if (this.subscribed) {
              this.subscribed.forEach(function (sub) {
                return sub.dispose && sub.dispose();
              });
            }
          }
        }, {
          key: 'attached',
          value: function attached() {
            var _this2 = this;

            this.activityRequestService.getActivities().then(function (response) {
              if (typeof response.response === "string") {
                response = JSON.parse(response.response);
              }
              for (var i = 0; i < response.length; i++) {
                var activity = response[i];
                if (activity.enabled && activity.uuid.toLowerCase() != 'all') {
                  var activityType = new Activity();
                  activityType.setupData({
                    uuid: activity.uuid,
                    id: activity.id,
                    name: activity.name,
                    enabled: activity.enabled,
                    display: activity.display_name
                  });
                  _this2.activitiesHash[activity.uuid] = activityType;
                  _this2.activitiesList.push({
                    id: activity.uuid,
                    text: activity.display_name
                  });
                }
              }

              if (_this2.activitiesList.length) {
                _this2.selectedActivity = _this2.activitiesHash[_this2.activitiesList[0].id];
              }

              setTimeout(function () {
                _this2.showActivitiesList = true;
                setTimeout(function () {
                  _this2.agendaList.au.controller.viewModel.setValue(_this2.selectedActivity.uuid);
                }, 100);
              }, 200);
              _this2.renderMeetingCustomForm();
            });

            if (this.isSFDC) {
              this.ea.subscribe(this.bindOpportunitiesEvent, function (opportunity) {
                _this2.bindOpportunities();
              });
            }

            this.agendaLabel = this.agendaDetails.label || this.i18n.tr('briefings.activityBriefing.selectAgendaLabel');
            this.agendaHelpText = this.agendaDetails.helpText;
          }
        }, {
          key: 'topicDataBriefingCallback',
          value: function topicDataBriefingCallback(params) {
            return { page: 1, per_page: 3, search_by_name: (params.term || '').trim() };
          }
        }, {
          key: 'renderMeetingCustomForm',
          value: function renderMeetingCustomForm() {
            var _this3 = this;

            this.activityRequestService.getActivityCustomForm(this.meetingFormRequest).then(function (response) {
              if (response.response) {
                response = JSON.parse(response.response);
              }

              _this3.resetActivityCustomForms(response.data.custom_form_fields);
              _this3.showCustomField(_this3.selectedActivity);
              _this3.bindOpportunities();
            });
          }
        }, {
          key: 'resetActivityCustomForms',
          value: function resetActivityCustomForms(customFieldsObject) {
            var _this4 = this;

            _.forEach(customFieldsObject, function (activityInfo, activtityName) {
              _this4.activitiesCustomForms[activityInfo.uuid] = activityInfo;
            });
          }
        }, {
          key: 'showCustomField',
          value: function showCustomField(activity, isEditMode) {
            var _this5 = this;

            this.topics.splice(0, this.topics.length);
            var activityCustomFormFields = this.activitiesCustomForms[activity.uuid]['forms']['meeting_request_form'];
            !isEditMode && this.activityFormRenderer.clearValues && this.activityFormRenderer.clearValues();
            this.activityFormRenderer.resetFormToReadOnly && this.activityFormRenderer.resetFormToReadOnly();
            this.disableOpportunity = false;
            this.activityFormRenderer = $(this.activityCustomFormEl).formRenderer({
              fieldCollection: activityCustomFormFields.map(function (field) {
                if (field.type === 'multiselect_dropdown' && !_this5.isNotIE11) {
                  field.placeholder = "";
                }
                if (field.type === 'dropdown' && field.field_name === 'topic_management' && _this5.envDetails.topicManagementEnabled) {
                  _this5.activitiesCustomForms[activity.uuid]['topics'].forEach(function (topic) {
                    _this5.topics.push({
                      uuid: topic.uuid,
                      name: topic.name
                    });
                  });
                  field.values = _this5.topics;
                }
                return field;
              })
            });
            this.activityFormRenderer.init('briefing_activity_section');
            if (this.isSFDC) {
              if (this.existing || this.selectedAccount.id) {
                var meeting = {
                  meetng_with: '',
                  custom_fields: {
                    meetng_with: '',
                    meeting_account_id: '',
                    meeting_opportunity_id: ''
                  }
                };
                meeting.meeting_with = this.selectedAccount.name;
                meeting.custom_fields.meeting_account_id = this.selectedAccount.id;
                this.activityFormRenderer.setValues(meeting);
              }
              this.activityOpportunityBox && this.activityOpportunityBox.au.controller.viewModel.setValue(null);
            }
            this.bindAttendees(this.externalAttendees, this.internalAttendees);
            if (isEditMode) {
              (function () {
                var selectedAgendaClone = _.cloneDeep(_this5.selectedAgenda);
                var selectedTopic = _.find(_this5.topics, function (topic) {
                  return topic.uuid === selectedAgendaClone.custom_fields.topic_management;
                });
                if (!selectedTopic) {
                  selectedAgendaClone.custom_fields.topic_management = null;
                }
                _this5.activityFormRenderer.setValues(selectedAgendaClone);
              })();
            }
            this.activityFormRenderer.afterLoad();

            $(this.activityCustomFormEl).find("[name=meeting_with]").closest('.form-group').hide();

            var topicManagementField = $(this.activityCustomFormEl).find("[name=topic_management]");
            if (this.topics.length === 0) {
              topicManagementField.closest('.form-group').hide();
            } else {
              var helpTextField = $(this.activityCustomFormEl).find("[data-id=meeting_title]").find("span.help-block");
              window.envDetails.copyTopicToMeetingTitle && helpTextField.html(this.i18n.tr('briefings.activityBriefing.topicToMeetingTitleCopyHelpText', {
                topic: topicManagementField.siblings("label").text()
              }));
            }
            if (this.mode !== this.i18n.tr('briefings.activityBriefing.update')) {
              this.mode = this.i18n.tr('briefings.activityBriefing.add');
            }
            this.showAddUpdateBtn = true;
          }
        }, {
          key: 'handleActivityOpptySelection',
          value: function handleActivityOpptySelection(opp) {
            var _this6 = this;

            if (opp.selected) {
              (function () {
                _this6.currentSelectedOpty = opp;
                var request = {
                  mapped_fields: {},
                  opportunity_id: opp.id,
                  account_id: _this6.selectedAccount.id,
                  mode: 'new'
                };
                var fields = _this6.activitiesCustomForms[_this6.selectedActivity.uuid]['forms']['meeting_request_form'];
                fields.forEach(function (formField) {
                  if (formField.integration_field && formField.integration_field.uuid) {
                    var requestForm = {
                      value: "",
                      prefill: "",
                      integration_field_uuid: formField.integration_field.uuid
                    };
                    request.mapped_fields[formField.field_name] = requestForm;
                  }
                });

                _this6.getSfdcCustomValues(request);
              })();
            } else {
              this.currentSelectedOpty = {};
              this.activityFormRenderer.clearValues();
            }
          }
        }, {
          key: 'getSfdcCustomValues',
          value: function getSfdcCustomValues(request) {
            var _this7 = this;

            this.activityRequestService.getSfdcMethod('', JSON.stringify(request), 'fetch_sf_activity_fields').then(function (response) {
              var customFormFields = _.cloneDeep(_this7.activitiesCustomForms[_this7.selectedActivity.uuid]['forms']['meeting_request_form']);
              var custom_fields = _this7.activityFormRenderer.getValues();
              custom_fields.meeting_with = _this7.selectedAccount.name;
              custom_fields.meeting_account_id = _this7.selectedAccount.id;
              custom_fields.meeting_opportunity_id = request.opportunity_id;
              var activityCustomValues = {
                meeting_with: _this7.selectedAccount.name,
                custom_fields: custom_fields
              };
              var customValues = _.cloneDeep(activityCustomValues.custom_fields);
              customFormFields.forEach(function (formField) {
                var matchedField = response.mapped_fields[formField.field_name];
                if (matchedField) {
                  formField.values = matchedField['prefill'];
                  customValues[formField.field_name] = matchedField['value'];
                }
              });
              activityCustomValues.custom_fields = _.assign(activityCustomValues.custom_fields, customValues);
              _this7.activityFormRenderer = $(_this7.activityCustomFormEl).formRenderer({
                fieldCollection: customFormFields.map(function (field) {
                  if (field.type === 'multiselect_dropdown' && !_this7.isNotIE11) {
                    field.placeholder = "";
                  }
                  return field;
                })
              });
              _this7.activityFormRenderer.init('briefing_activity_section');
              _this7.activityFormRenderer.setValues(activityCustomValues);
              _this7.activityFormRenderer.afterLoad();
              $(_this7.activityCustomFormEl).find("[name=meeting_with]").closest('.form-group').hide();
              _this7.bindAttendees(_this7.externalAttendees, _this7.internalAttendees);
            });
          }
        }, {
          key: 'validateOppActivities',
          value: function validateOppActivities(selectedOpp) {
            var opps = $(this.opportunityIdSelector).val();
            if (opps == null) {
              opps = [];
            }
            for (var i = 0; i < this.activityList.length; i++) {
              if (selectedOpp.id == this.activityList[i].custom_fields.meeting_opportunity_id) {
                opps.push(selectedOpp.id);
                $(this.opportunityIdSelector).val(opps).trigger("change");

                this.ea.publish("show:notification", {
                  title: this.i18n.tr('briefings.activityBriefing.briefingOpportunityTitle'),
                  message: this.i18n.tr('briefings.activityBriefing.briefingOpportunityMessage'),
                  'class': 'red',
                  autoHideDuration: 4000 });
                $('#cover').fadeOut();
                $(this.opportunityIdSelector).select2("close");

                break;
              }
            }
          }
        }, {
          key: 'bindOpportunities',
          value: function bindOpportunities() {
            var _this8 = this;

            if (!window.envDetails.hideOpportunityInAgenda) {
              this.activityOpportunityList = [];
              setTimeout(function () {
                _this8.activityOpportunityList = _this8.accountOpportunityList;
              }, 600);
            }
          }
        }, {
          key: 'addUpdateActivity',
          value: function addUpdateActivity() {
            var _this9 = this;

            this.ea.publish("agenda:edit:inProgress", { edit: false });
            this.activityFormRenderer.setFormToReadOnly && this.activityFormRenderer.resetFormToReadOnly();
            $('#agendaList').prop('disabled', false);
            if (this.selectedActivity) {
              var _ret3 = function () {
                var error = '';
                var temp = {
                  shortName: _this9.selectedActivity.shortName,
                  activityUuid: _this9.selectedActivity.uuid,
                  display: _this9.selectedActivity.display,
                  custom_fields: _this9.activityFormRenderer.getValues()
                };

                if (temp.custom_fields.meeting_title.trim() === '') {
                  if (_this9.isMettingTitleRequired() === false && temp.custom_fields.topic_management !== null && temp.custom_fields.topic_management !== '-') {
                    temp.custom_fields.meeting_title = $(_this9.activityCustomFormEl).find("[name=topic_management]").find("option:selected").text();
                    $(_this9.activityCustomFormEl).find("[name=meeting_title]").val(temp.custom_fields.meeting_title).trigger("change");
                  }
                }
                var activityFormValidate = $(_this9.activityCustomFormEl).validate();
                if (!_this9.activityFormRenderer.isFormValid($(_this9.activityCustomFormEl))) {
                  activityFormValidate.focusInvalid();
                  return {
                    v: undefined
                  };
                }

                if (_this9.mode === _this9.i18n.tr('briefings.activityBriefing.update')) {
                  temp = _.merge(_this9.selectedAgenda, temp, function (objValue, srcValue) {
                    if (_.isArray(objValue)) {
                      return srcValue;
                    }
                  });
                }

                if (temp.custom_fields.hasOwnProperty('meeting_account_id')) {
                  temp.custom_fields.meeting_account_id = _this9.selectedAccount.id;
                }

                if (temp.custom_fields.hasOwnProperty('meeting_opportunity_id')) {
                  temp.custom_fields.meeting_opportunity_id = _this9.currentSelectedOpty.id || '';
                }

                if (_this9.topics.length === 0 || temp.custom_fields.topic_management === '-' || temp.custom_fields.topic_management === null) {
                  temp.custom_fields.topic_management = null;
                } else {
                  temp.topicName = $(_this9.activityCustomFormEl).find("[name=topic_management]").find("option:selected").text();
                }

                temp.heading = function () {
                  return temp.custom_fields.meeting_title || temp.topicName;
                };

                temp.subheading = function () {
                  return temp.topicName && temp.custom_fields.meeting_title ? temp.topicName : temp.custom_fields.activity_info;
                };

                if (_this9.mode === _this9.i18n.tr('briefings.activityBriefing.update')) {
                  var local = _this9.activityList.splice(0, _this9.activityList.length);
                  local[_this9.selectedAgendaIndex] = temp;
                  _this9.activityList = local.splice(0, local.length);
                } else {
                  _this9.activityList.unshift(temp);
                }
                _this9.ea.publish('clear:topic');
                _this9.activityFormRenderer.clearValues && _this9.activityFormRenderer.clearValues();
                _this9.mode = _this9.i18n.tr('briefings.activityBriefing.add');
                _this9.resetSelectedAgenda();
                _this9.ea.publish(_this9.activityOpptyClear, {});
                _this9.ea.publish('activities:changed', {
                  activityList: _this9.activityList,
                  removedActivities: _this9.removedActivities
                });
                _this9.bindAttendees(_this9.externalAttendees, _this9.internalAttendees);
              }();

              if (typeof _ret3 === 'object') return _ret3.v;
            } else {
              this.ea.publish("show:notification", {
                'class': 'red',
                autoHideDuration: 4000,
                title: this.i18n.tr('briefings.commons.fieldMissingTitle'),
                message: this.i18n.tr('briefings.activityBriefing.fieldMissingMessage')
              });
              $('#cover').fadeOut();
              return;
            }
          }
        }, {
          key: 'discardActivity',
          value: function discardActivity() {
            this.ea.publish("agenda:edit:inProgress", { edit: false });
            $('#agendaList').prop('disabled', false);
            this.mode = this.i18n.tr('briefings.activityBriefing.add');
            this.activityFormRenderer.clearValues && this.activityFormRenderer.clearValues();
            this.activityFormRenderer.resetFormToReadOnly && this.activityFormRenderer.resetFormToReadOnly();
            this.activityOpportunityBox && this.activityOpportunityBox.au.controller.viewModel.setValue(null);
            this.disableOpportunity = false;
            this.currentSelectedOpty = {};
            this.resetSelectedAgenda();
            this.bindAttendees(this.externalAttendees, this.internalAttendees);
            this.showAddUpdateBtn = true;
          }
        }, {
          key: 'editAgenda',
          value: function editAgenda(index) {
            var _this10 = this;

            this.ea.publish("agenda:edit:inProgress", { edit: true });
            var agendaToBeEdited = this.activityList[index];
            var selectedAgendaActivity = this.activitiesHash[agendaToBeEdited.activityUuid];
            if (selectedAgendaActivity) {
              this.selectedAgendaIndex = index;
              this.selectedAgenda = agendaToBeEdited;
              this.selectedActivity = selectedAgendaActivity;
              this.agendaList.au.controller.viewModel.setValue(this.selectedActivity.uuid);
              this.showCustomField(this.selectedActivity, true);
              if (this.selectedAgenda.custom_fields.hasOwnProperty('meeting_opportunity_id')) {
                setTimeout(function () {
                  _this10.activityOpportunityBox && _this10.activityOpportunityBox.au.controller.viewModel.setValue(_this10.selectedAgenda.custom_fields.meeting_opportunity_id);
                  _this10.currentSelectedOpty = { id: _this10.selectedAgenda.custom_fields.meeting_opportunity_id };
                }, 400);
              }
              this.mode = this.i18n.tr('briefings.activityBriefing.update');
              this.showAddUpdateBtn = true;
              $('#agendaList').prop('disabled', false);
              if (this.selectedAgenda.scheduled) {
                this.disableOpportunity = true;

                $('#agenda_participants').prop('disabled', false);
                $('#agendaList').add('#topic_management').prop('disabled', true);
              }
            } else {
              this.ea.publish("show:notification", {
                title: this.i18n.tr('briefings.activityBriefing.meetingTypeNotActiveHeader'),
                message: this.i18n.tr('briefings.activityBriefing.meetingTypeNotActiveMessage'),
                'class': 'yellow'
              });
            }
          }
        }, {
          key: 'resetSelectedAgenda',
          value: function resetSelectedAgenda() {
            this.selectedAgenda = null;
            this.selectedAgendaIndex = null;
          }
        }, {
          key: 'removeActivity',
          value: function removeActivity(index) {
            if (this.mode === this.i18n.tr('briefings.activityBriefing.update') && this.selectedAgenda) {
              if (this.selectedAgendaIndex === index) {
                this.discardActivity();
              } else if (this.selectedAgendaIndex > index) {
                this.selectedAgendaIndex--;
              }
            }
            this.removedActivities.push(this.activityList[index].id);
            this.activityList.splice(index, 1);
            this.ea.publish('activities:changed', {
              activityList: this.activityList,
              removedActivities: this.removedActivities
            });
          }
        }, {
          key: 'processTopics',
          value: function processTopics(data) {
            var items = [];
            if (data.data.topics && data.data.topics.length) {
              data.data.topics.forEach(function (item) {
                items.push({ id: item.uuid, text: item.name });
              });
            }
            return items;
          }
        }, {
          key: 'isMettingTitleRequired',
          value: function isMettingTitleRequired() {
            return this.envDetails.topicManagementEnabled && this.topics.length && this.envDetails.copyTopicToMeetingTitle ? false : true;
          }
        }, {
          key: 'showCopyBriefingModal',
          value: function showCopyBriefingModal() {
            this.ea.publish('show:copy-briefing-modal', {
              publisher: this.i18n.tr('briefings.activityBriefing.agenda')
            });
          }
        }, {
          key: 'copyBriefingAgendas',
          value: function copyBriefingAgendas(details) {
            var _this11 = this;

            var sourceBriefing = details.source;
            var activities = sourceBriefing.activityList.activities;
            var noOfAgendasBeforeCopy = this.activityList.length;
            _.forEach(activities, function (agenda) {
              if (agenda.activity.enabled) {
                (function () {
                  var temp = {
                    activityUuid: agenda.activity.uuid,
                    custom_fields: _this11.copyAgendaCustomFields(agenda.custom_fields, agenda.activity.uuid),
                    topicName: agenda.custom_fields.topic_management && agenda.topic ? agenda.topic.name : '',
                    display: agenda.activity.display_name,
                    shortName: agenda.activity.display_name[0]
                  };
                  temp.heading = function () {
                    return temp.custom_fields.meeting_title || temp.topicName;
                  };
                  temp.subheading = function () {
                    return temp.topicName && temp.custom_fields.meeting_title ? temp.topicName : temp.custom_fields.activity_info;
                  };
                  _this11.activityList.unshift(temp);
                })();
              }
            });
            var noOfAgendasAfterCopy = this.activityList.length;
            var message = this.i18n.tr('briefings.activityBriefing.copyAgendaSuccessMessage', { count: noOfAgendasAfterCopy - noOfAgendasBeforeCopy, total: activities.length });
            if (noOfAgendasAfterCopy - noOfAgendasBeforeCopy > 0) {
              this.ea.publish('activities:changed', {
                activityList: this.activityList,
                removedActivities: this.removedActivities
              });
              message += "<br>" + this.i18n.tr('briefings.activityBriefing.reviwAgendaInfo');
            }
            details.modal.modal('hide');
            this.ea.publish("show:notification", {
              'class': 'green',
              message: message,
              autoHideDuration: 4000,
              title: this.i18n.tr('briefings.activityBriefing.success')
            });
          }
        }, {
          key: 'copyAgendaCustomFields',
          value: function copyAgendaCustomFields(customFields, activityUuid) {
            var allAttendees = _.pluck(this.internalAttendees, 'uuid').concat(_.pluck(this.externalAttendees, 'uuid'));
            var fields = this.activitiesCustomForms[activityUuid]['forms']['meeting_request_form'];
            _.forEach(fields, function (field) {
              var tags = field.tags;
              if (!(_.isArray(tags) && _.include(tags, "briefing_activity_section") && !field.hidden)) {
                delete customFields[field.field_name];
              }
            });
            customFields.agenda_participants = window.envDetails.addAllBriefingParticipantsToAgenda ? allAttendees : [];
            return customFields;
          }
        }, {
          key: 'bindAttendees',
          value: function bindAttendees(selectedExternalAttendees, selectedInternalAttendees, existingValues, addToExisting, removeAttendeeFromExisting) {
            var _this12 = this;

            var requestFor = $("#agenda_participants");
            requestFor.html('');
            var requestForOptions = [];
            var allOptionValue = [];
            if (selectedExternalAttendees && selectedExternalAttendees.length) {
              requestForOptions.push({
                text: this.i18n.tr('concierge.conciergeService.external_attendees'),
                children: selectedExternalAttendees.map(function (attendee) {
                  allOptionValue.push(attendee.uuid);
                  return {
                    id: attendee.uuid,
                    text: attendee.first_name + " " + attendee.last_name
                  };
                })
              });
            }
            if (this.showInternalAttendees && selectedInternalAttendees && selectedInternalAttendees.length) {
              requestForOptions.push({
                text: this.i18n.tr('concierge.conciergeService.internal_attendees'),
                children: selectedInternalAttendees.map(function (attendee) {
                  allOptionValue.push(attendee.uuid);
                  return {
                    id: attendee.uuid,
                    text: attendee.first_name + " " + attendee.last_name
                  };
                })
              });
            }
            if (requestForOptions.length) {
              requestForOptions.unshift({
                id: this.i18n.tr('concierge.conciergeService.all').toLowerCase(),
                text: this.i18n.tr('concierge.conciergeService.all')
              });
            }
            requestFor.select2({ data: requestForOptions });
            if (existingValues && existingValues.length > 0) {
              requestFor.val(existingValues).trigger("change");
            }
            if (window.envDetails.addAllBriefingParticipantsToAgenda) {
              switch (true) {
                case !!addToExisting:
                  if (!existingValues) existingValues = [];
                  existingValues.push(addToExisting.uuid);
                  requestFor.val(existingValues).trigger("change");
                  break;
                case !!removeAttendeeFromExisting:
                  if (!existingValues) existingValues = [];
                  var index = existingValues && existingValues.indexOf(removeAttendeeFromExisting.uuid);
                  if (index > -1) existingValues.splice(index, 1);
                  requestFor.val(existingValues).trigger("change");
                  break;
                default:
                  requestFor.val(allOptionValue).trigger("change");
              }
            }
            requestFor.on("select2:select", function (ev) {
              var id = ev.params.data.id;
              if (id === _this12.i18n.tr('concierge.conciergeService.all').toLowerCase()) {
                requestFor.val(allOptionValue).trigger("change");
              }
            });
          }
        }, {
          key: 'getExistingValue',
          value: function getExistingValue(changed) {
            var existing = null;
            if (this.activityFormRenderer.getValues) {
              existing = this.activityFormRenderer.getValues().agenda_participants;
              if (existing != null && existing.length > 0) {
                var tempIndex = existing.indexOf(changed.removed.uuid);
                if (tempIndex >= 0) {
                  existing.splice(tempIndex, 1);
                }
              }
            }
            return existing;
          }
        }, {
          key: 'removeAttendee',
          value: function removeAttendee(uuid) {
            this.activityList.forEach(function (activity) {
              _.remove(activity.custom_fields.agenda_participants, function (userUUid) {
                return userUUid === uuid;
              });
            });
            this.ea.publish('activities:changed', {
              activityList: this.activityList,
              removedActivities: this.removedActivities
            });
          }
        }, {
          key: 'removeAllAttendees',
          value: function removeAllAttendees() {
            this.activityList.forEach(function (activity) {
              activity.custom_fields.agenda_participants = [];
            });
            this.ea.publish('activities:changed', {
              activityList: this.activityList,
              removedActivities: this.removedActivities
            });
          }
        }, {
          key: 'addAttendee',
          value: function addAttendee(changed) {
            this.activityList.forEach(function (activity) {
              var custom_fields = activity.custom_fields;
              if (!custom_fields.agenda_participants || !custom_fields.agenda_participants.length) custom_fields.agenda_participants = [];
              custom_fields.agenda_participants.push(changed.uuid);
            });
            this.ea.publish('activities:changed', {
              activityList: this.activityList,
              removedActivities: this.removedActivities
            });
          }
        }, {
          key: 'cannotRemoveActivity',
          value: function cannotRemoveActivity(activity) {
            return activity.scheduled || this.planApproved;
          }
        }], null, _instanceInitializers);

        var _ActivityBriefing = ActivityBriefing;
        ActivityBriefing = inject(EventAggregator, TopicRequestService, ActivityRequestService, I18N)(ActivityBriefing) || ActivityBriefing;
        return ActivityBriefing;
      }();

      _export('ActivityBriefing', ActivityBriefing);
    }
  };
});
System.registerDynamic("view-models/briefings/add-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n        <div class=\"card add\">\n          <div class=\"card-content user-add-content\">\n            <div class=\"add-btn\">\n              <a href=\"${actionUrl}\">\n                <i class=\"jif-plus-circle-o jif-light-grey jif-70\"></i>\n              </a>\n            </div>\n            <div><a href=\"${actionUrl}\" id=\"book-meeting\" class=\"btn btn-white btn-block\">${availabilityLabel}</a></div>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"card-footer-content text-center\">\n              ${footerText}\n            </div>\n          </div>\n        </div>\n</template>\n";
});
System.register('view-models/briefings/add-card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var bindable, AddCard;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
    }],
    execute: function () {
      AddCard = function () {
        var _instanceInitializers = {};

        function AddCard() {
          _classCallCheck(this, AddCard);

          this.actionUrl = "";

          _defineDecoratedPropertyDescriptor(this, 'footerText', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'availabilityLabel', _instanceInitializers);

          this.actionUrl = this.getActionUrl();
        }

        _createDecoratedClass(AddCard, [{
          key: 'getActionUrl',
          value: function getActionUrl() {
            var prefixUrl = window.jiffle ? "/apex/JNBriefings" : "briefing/list_briefings";
            return '' + prefixUrl + window.location.search + '#new_briefing';
          }
        }, {
          key: 'footerText',
          decorators: [bindable],
          initializer: function initializer() {
            return '';
          },
          enumerable: true
        }, {
          key: 'availabilityLabel',
          decorators: [bindable],
          initializer: function initializer() {
            return "Schedule Activity";
          },
          enumerable: true
        }], null, _instanceInitializers);

        return AddCard;
      }();

      _export('AddCard', AddCard);
    }
  };
});
System.registerDynamic("view-models/briefings/app.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"page-host\">\n    <router-view></router-view>\n  </div>\n</template>\n";
});
System.registerDynamic("view-models/briefings/briefing-nav.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = " <template>\n  <nav class=\"navbar navbar-light\" role=\"navigation\">\n    <div class=\"container-fluid\">\n      <ul class=\"pull-left subnav-block meet-li-line-br\">\n          <li class=\"no-padding no-margin\">\n            <div class=\"pull-left briefing-status\" title=\"${briefingRequest.status}\">\n              <div class=\"${statusStyle[briefingRequest.status]}\"></div>\n            </div>\n          </li>\n        <li class=\"subnav-header text-uppercase\" i18n=\"briefings.briefingNav.requestBriefing\">Briefing Detail</li>\n      </ul>\n    </div>\n  </nav>\n</template>\n";
});
System.register('view-models/briefings/briefing-nav.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-i18n@0.4.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js'], function (_export) {
     'use strict';

     var $, I18N, inject, bindable, EventAggregator, BriefingNav;

     var _createDecoratedClass = function () {
          function defineProperties(target, descriptors, initializers) {
               for (var i = 0; i < descriptors.length; i++) {
                    var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                         for (var f = 0; f < decorators.length; f++) {
                              var decorator = decorators[f];if (typeof decorator === 'function') {
                                   descriptor = decorator(target, key, descriptor) || descriptor;
                              } else {
                                   throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                              }
                         }if (descriptor.initializer !== undefined) {
                              initializers[key] = descriptor;continue;
                         }
                    }Object.defineProperty(target, key, descriptor);
               }
          }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
               if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
          };
     }();

     function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
               throw new TypeError('Cannot call a class as a function');
          }
     }

     function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
          var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
     }

     return {
          setters: [function (_jquery) {
               $ = _jquery['default'];
          }, function (_aureliaI18n) {
               I18N = _aureliaI18n.I18N;
          }, function (_aureliaFramework) {
               inject = _aureliaFramework.inject;
               bindable = _aureliaFramework.bindable;
          }, function (_aureliaEventAggregator) {
               EventAggregator = _aureliaEventAggregator.EventAggregator;
          }],
          execute: function () {
               BriefingNav = function () {
                    var _instanceInitializers = {};

                    _createDecoratedClass(BriefingNav, [{
                         key: 'briefingRequest',
                         decorators: [bindable],
                         initializer: null,
                         enumerable: true
                    }], null, _instanceInitializers);

                    function BriefingNav(ea, i18n) {
                         _classCallCheck(this, _BriefingNav);

                         _defineDecoratedPropertyDescriptor(this, 'briefingRequest', _instanceInitializers);

                         this.statusStyle = {
                              "Requested": "requested",
                              "Confirmed": "approved",
                              "Cancelled": "cancelled",
                              "Pending": "pending",
                              "In Queue": "queue",
                              "Pending Confirmation": "pending-confirmation",
                              "Past": "past"
                         };

                         this.ea = ea;
                         this.i18n = i18n;
                         this.i18n.setLocale('en').then(function () {});
                         this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
                    }

                    var _BriefingNav = BriefingNav;
                    BriefingNav = inject(EventAggregator, I18N)(BriefingNav) || BriefingNav;
                    return BriefingNav;
               }();

               _export('BriefingNav', BriefingNav);
          }
     };
});
System.registerDynamic("view-models/briefings/briefing-with/select-company.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"components/aurelia-select\"></require>\n\t<div id=\"account-opportunity\" class=\"jiffle-form no-padding\">\t\n\t\t<div class=\"request-briefing-fldset\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"required\" i18n.bind=\"labelText\"></label>\n\t\t\t\t<aurelia-select if.bind=\"renderElement\" tags.bind=\"selectionTags\" select-id.bind=\"'companySelectbox'\" ref=\"companySelectbox\" page.bind=\"1\" per-page.bind=\"3\" is-multiple.bind=\"false\" swidth.bind=\"'100%'\" select-url.bind=\"aureliaSelectUrl\" method-key.bind=\"sfdcMethodKey\" data-callback.bind=\"accountDataFunction\" process.bind=\"processResponseData\" clear-event=\"clear:account\" item-type.bind=\"itemTypeText\" style=\"width:100%\" data-automation.bind=\"dataAutomation\" custom-error.bind=\"customError\" defaultvalue.bind=\"selectDefault\" select-listen.bind=\"eventName\" min-input.bind=\"minimumInputText\" disable-select.bind=\"disableSelection()\" place-holder.bind=\"placeHolderText\"> </aurelia-select>\n\t\t\t\t<span if.bind=\"briefingWithHelpText\" class=\"help-block form-builder-help-block\">${briefingWithHelpText}</span>\n\t    \t</div>\n\t\t</div>\n\t</div>\n</template>\n";
});
System.register('view-models/briefings/briefing-with/select-company.js', ['github:lodash/lodash@3.10.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/briefing_request_service.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
  'use strict';

  var _, bindable, inject, EventAggregator, BriefingRequestService, I18N, selectCompany;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }, function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceBriefing_request_service) {
      BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }],
    execute: function () {
      selectCompany = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(selectCompany, [{
          key: 'eventName',
          decorators: [bindable],
          initializer: function initializer() {
            return '';
          },
          enumerable: true
        }, {
          key: 'already',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'isSfdc',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'isExisting',
          decorators: [bindable],
          initializer: function initializer() {
            return false;
          },
          enumerable: true
        }, {
          key: 'briefingFormMetaData',
          decorators: [bindable],
          initializer: function initializer() {
            return [];
          },
          enumerable: true
        }], null, _instanceInitializers);

        function selectCompany(ea, briefingRequestService, i18n) {
          _classCallCheck(this, _selectCompany);

          _defineDecoratedPropertyDescriptor(this, 'eventName', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'already', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'isSfdc', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'isExisting', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'briefingFormMetaData', _instanceInitializers);

          this.itemTypeText = "";
          this.sfdcMethodKey = "";
          this.customError = null;
          this.minimumInputText = 1;
          this.placeHolderText = "";
          this.aureliaSelectUrl = "";
          this.renderElement = false;
          this.selectionTags = false;
          this.setAccountName = 'setAccountName';
          this.briefingWithHelpText = '';

          this.ea = ea;
          this.i18n = i18n;
          this.i18n.setLocale('en').then(function () {});
          this.briefingRequestService = briefingRequestService;
        }

        _createDecoratedClass(selectCompany, [{
          key: 'attached',
          value: function attached() {
            var _this = this;

            if (this.already.id) {
              this.selectDefault = {};
              this.selectDefault["id"] = this.already.id;
              this.selectDefault["text"] = this.already.name || this.already.text;
            }

            if (this.isSfdc) {
              this.minimumInputText = 3;
              this.selectionTags = false;
              this.itemTypeText = "Account";
              this.sfdcMethodKey = 'fetch_account';
              this.dataAutomation = "sf-briefing-account";
              this.processResponseData = this.processAccounts;
              this.labelText = window.envDetails.sfdcCustomLabels.account_label;
              this.customError = "i18n.tr('briefings.selectCompany.customError')";
              this.placeHolderText = window.envDetails.sfdcCustomLabels.account_placeholder;
              this.briefingWithHelpText = window.envDetails.sfdcCustomLabels.account_helptext || '';
              this.accountDataFunction = function (params) {
                return { accountId: '', accountName: params.term, current_location_uuid: envDetails.current_location_uuid };
              };
              this.ea.subscribe(this.setAccountName, function (account) {
                _this.setAccountValue(account);
              });
              this.renderElement = true;
            } else {
              this.selectionTags = true;
              this.dataAutomation = "briefing-customer";
              this.processResponseData = this.processCustomers;
              this.labelText = 'briefings.selectCompany.briefingWith';
              this.aureliaSelectUrl = this.briefingRequestService.customerListUrl;
              this.accountDataFunction = function (params) {
                return { search: params.term, current_location_uuid: envDetails.current_location_uuid };
              };
              this.placeHolderText = this.i18n.tr('briefings.selectCompany.placeHolderBriefingWith');
            }
          }
        }, {
          key: 'disableSelection',
          value: function disableSelection() {
            return this.isExisting && this.isSfdc;
          }
        }, {
          key: 'processAccounts',
          value: function processAccounts(response) {
            var items = [];
            if (response.data && response.data.accounts && response.data.accounts.length) {
              response.data.accounts.forEach(function (item) {
                items.push({ id: item.account_id, text: item.name });
              });
            }
            return items;
          }
        }, {
          key: 'processCustomers',
          value: function processCustomers(response) {
            var items = [];
            if (response.data.items && response.data.items.length) {
              response.data.items.forEach(function (item) {
                items.push({ id: item, text: item });
              });
            }

            return items;
          }
        }, {
          key: 'briefingFormMetaDataChanged',
          value: function briefingFormMetaDataChanged() {
            if (!this.briefingFormMetaData.length || this.isSfdc) {
              return;
            }

            var defaultLabel = 'briefings.selectCompany.briefingWith';
            var defaultPlaceHolderText = this.i18n.tr('briefings.selectCompany.placeHolderBriefingWith');
            var briefingWith = this.briefingFormMetaData.filter(function (custom) {
              return custom.field_name === 'briefing_with';
            })[0];

            this.labelText = briefingWith && briefingWith.label || defaultLabel;
            this.placeHolderText = briefingWith && briefingWith.placeholder || defaultPlaceHolderText;
            this.briefingWithHelpText = briefingWith && briefingWith.helpText || '';

            this.renderElement = true;
          }
        }, {
          key: 'setAccountValue',
          value: function setAccountValue(_ref) {
            var accountid = _ref.accountid;
            var accountname = _ref.accountname;

            this.companySelectbox.au.controller.viewModel.setOption({ id: accountid, text: accountname });
            this.companySelectbox.au.controller.viewModel.setValue(accountid);
            this.ea.publish('briefing-with:select', { id: accountid, text: accountname, selected: true });
          }
        }], null, _instanceInitializers);

        var _selectCompany = selectCompany;
        selectCompany = inject(EventAggregator, BriefingRequestService, I18N)(selectCompany) || selectCompany;
        return selectCompany;
      }();

      _export('selectCompany', selectCompany);
    }
  };
});
System.registerDynamic("view-models/briefings/briefing_request.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"./briefing-nav\"></require>\n\t<require from=\"./briefing-with/select-company\"></require>\n\t<require from=\"../concierge/concierge-service\"></require>\n\t<require from=\"components/notification/notification-modal\"></require>\n  <require from=\"components/time-picker\"></require>\n  <require from=\"view-models/attendees/external-attendee-list\"></require>\n\t<require from=\"view-models/attendees/internal-attendee-list\"></require>\n\t<require from=\"components/aurelia-select\"></require>\n\t<require from=\"./activity-briefing\"></require>\n\t<require from=\"../users/add-user\"></require>\n\t<require from=\"./copy-briefing-form/copy-briefing-list\"></require>\n\n\t<briefing-nav briefing-request.bind=\"briefingRequest\" containerless></briefing-nav>\n\t<div class=\"container-fluid book-meeting\">\n\t\t<div role=\"form\" class=\"jiffle-form\" validate.bind=\"briefingRequest.validation\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-xs-12 col-md-8 no-padding\">\n\t\t\t\t\t<div class=\"request-briefing-container\">\n\t\t\t\t\t\t<div innerhtml.bind=\"requestBriefingFormTitle\" class=\"request-briefing-form-title\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-xs-12 col-sm-10\">\n\t\t\t\t\t\t\t\t<div class=\"request-briefing-fldset\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 col-sm-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"required toggle-switch-label\" i18n=\"briefings.briefingNav.areYouAttending\"></label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 col-xs-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"radio\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"radio\" id=\"attend-meeting-yes\" name=\"attend-meeting\" model.bind=\"true\" checked.bind=\"isAttending\" data-attending=\"yes\" autocomplete=\"off\" change.delegate=\"toggleAttend()\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"attend-meeting-yes\" i18n=\"briefings.briefingNav.yes\" data-automation=\"yes-attendingbriefing\"></label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 col-xs-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"radio\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"radio\" id=\"attend-meeting-no\" name=\"attend-meeting\" model.bind=\"false\" checked.bind=\"isAttending\" data-attending=\"no\" autocomplete=\"off\" change.delegate=\"toggleNotAttend()\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"attend-meeting-no\" i18n=\"briefings.briefingNav.no\" data-automation=\"not-attendingbriefing\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"form-group custom-fieldset custom-fieldset-border\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"fiedset-legend\">BRIEFING INFORMATION</span>\n\t\t\t\t\t\t\t\t\t\t<div if.bind=\"!isSFDC\" data-toggle=\"modal\" click.delegate=\"showCopyCustomInfoModal()\" class=\"copy-customer-info point-cursor\">\n\t\t\t\t\t\t\t\t            <span class=\"font-blue text-capitalize au-target\" i18n=\"briefings.briefingNav.copyFrom\" au-target-id=\"6\">Copy From</span>\n\t\t\t\t\t\t\t\t            <span class=\"jif-iris-import font-blue\"></span>\n\t\t\t\t\t\t\t\t         </div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-xs-11\">\n\t\t\t\t\t\t\t\t\t\t\t\t<select-company is-sfdc.bind=\"isSFDC\" event-name.bind=\"briefingWithSelect\" is-existing.bind=\"existingBriefing\" already.bind=\"selectedAccount\" if.bind=\"renderSelectCompany\" briefing-form-meta-data.bind=\"briefingFormMetaData\"></select-company>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div if.bind=\"showSelectOpportunity\" class=\"jiffle-form\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"request-briefing-fldset col-xs-11\">\n\t\t\t\t\t\t\t\t\t    \t\t<label i18n.bind=\"sfdcOpptyModel.labelText\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t<aurelia-select select-id.bind=\"sfdcOpptyModel.selectId\" ref=\"opportunitySelect\" place-holder.bind=\"sfdcOpptyModel.placeHolder\" method-key.bind=\"sfdcOpptyModel.methodKey\" disable-select.bind=\"sfdcOpptyModel.disableSelect\" process.bind=\"sfdcOpptyModel.process\" min-input.bind=\"3\" select-listen.bind=\"sfdcOpptyModel.selectListen\" data-callback.bind=\"sfdcOpptyModel.dataCallback\" defaultvalue.bind=\"sfdcOpptyModel.defaultvalue\" defaults.bind=\"sfdcOpptyModel.defaults\"></aurelia-select>\n\t\t\t\t\t\t\t\t\t\t\t\t<span if.bind=\"sfdcOpptyModel.helpText\" class=\"help-block form-builder-help-block\">${sfdcOpptyModel.helpText}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-xs-11\">\n\t\t\t\t\t\t\t\t\t\t\t\t<form id=\"dynamic_form\" class=\"request-briefing-fldset\" ref=\"briefingCustomFormEl\">\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"request-briefing-fldset\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-xs-11\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"required control-label\" i18n=\"briefings.briefingRequest.requestor\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<aurelia-select select-id.bind=\"'userbox'\" ref=\"userbox\" page.bind=\"1\" per-page.bind=\"3\" is-multiple.bind=\"false\" swidth.bind=\"'100%'\" place-holder.bind=\"i18n.tr('briefings.briefingRequest.requestorName')\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tselect-url.bind=\"topicRequestService.requestorListUrl\" disable-select.bind=\"disableRequestor\" data-callback.bind=\"requestorDataFunction\" process.bind=\"processUsers\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultvalue.bind=\"defaultSelect\" clear-event=\"clear:requestor\" item-type=\"Requestor\" style=\"width:100%\" data-automation=\"briefing-requestor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcustom-error.bind=\"i18n.tr('briefings.briefingRequest.customError',{user:'Requestor'})\"></aurelia-select>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\" if.bind=\"envDetails.queueManagementEnabled\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"control-label\" i18n=\"briefings.briefingRequest.assignedBriefingManager\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<aurelia-select select-id.bind=\"'qbox'\" ref=\"qbox\" page.bind=\"1\" per-page.bind=\"3\" is-multiple.bind=\"false\" swidth.bind=\"'100%'\" place-holder.bind=\"i18n.tr('briefings.briefingRequest.notAssigned')\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tselect-url.bind=\"briefingRequestService.managerListUrl\" disable-select.bind=\"!(isQueueEnabled())\" data-callback.bind=\"requestorDataFunction\" process.bind=\"processManagers\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultvalue.bind=\"queueManager\" clear-event=\"clear:qbm\" item-type=\"Manager\" style=\"width:100%\" data-automation=\"briefing-queuemanager\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcustom-error.bind=\"i18n.tr('briefings.briefingRequest.customError',{user:'Manager'})\"></aurelia-select>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div id=\"briefing_datepair\" ref=\"briefingDatepair\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"request-briefing-fldset\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group custom-fieldset custom-fieldset-border\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"room-custom-label\" innerhtml.bind=\"dateTimeHelpText\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"fiedset-legend\" i18n=\"briefings.briefingRequest.start\"></span>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t  \t<div class=\"col-xs-12 col-sm-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t<div class=\"briefing-field-block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \t<label class=\"required\" i18n=\"briefings.briefingRequest.date\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \t<div class=\"form-field-icon jif-blue jif-calendar-month\">\n                                  <input ref=\"startDate\"\n                                      type=\"text\"\n                                      class=\"date start form-control\"\n                                      value.bind=\"briefingRequest.startDate\"\n                                      placeholder.bind=\"i18n.tr('briefings.briefingRequest.selectStartDate')\"\n                                      data-automation=\"briefing-start-date\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t  \t<div class=\"col-xs-12 col-sm-offset-1 col-sm-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t<div class=\"briefing-field-block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \t<label class=\"required\" i18n=\"briefings.briefingRequest.time\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    <div class=\"form-field-icon jif-blue jif-copy-time\">\n                                  <input ref=\"startTime\"\n                                      type=\"text\"\n                                      class=\"time start form-control\"\n                                      placeholder.bind=\"i18n.tr('briefings.briefingRequest.selectStartTime')\"\n                                      data-automation=\"briefing-start-time\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"request-briefing-fldset\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group custom-fieldset custom-fieldset-border\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"fiedset-legend\" i18n=\"briefings.briefingRequest.end\"></span>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t    <div class=\"col-xs-12 col-sm-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t    \t<div class=\"briefing-field-block\">\n\t\t\t\t\t\t\t\t\t\t\t\t    \t\t<label class=\"required\" i18n=\"briefings.briefingRequest.date\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    <div class=\"form-field-icon jif-blue jif-calendar-month\">\n                                  <input ref=\"endDate\"\n                                      type=\"text\"\n                                      class=\"date end form-control\"\n                                      value.bind=\"briefingRequest.startDate\"\n                                      placeholder.bind=\"i18n.tr('briefings.briefingRequest.selectEndDate')\"\n                                      data-automation=\"briefing-end-date\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t    \t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t    <div class=\"col-xs-12 col-sm-offset-1 col-sm-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t    \t<div class=\"briefing-field-block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \t<label class=\"required\" i18n=\"briefings.briefingRequest.time\"></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \t<div class=\"form-field-icon jif-blue jif-copy-time\">\n                                  <input ref=\"endTime\"\n                                      type=\"text\"\n                                      class=\"time end form-control\"\n                                      placeholder.bind=\"i18n.tr('briefings.briefingRequest.selectEndTime')\"\n                                      data-automation=\"briefing-end-time\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t  <label class=\"room-custom-label\" innerhtml.bind=\"roomListCustomLabel\"></label>\n\t\t\t\t\t\t\t\t\t\t\t  <div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t  \t<div class=\"col-md-11\">\n\t\t\t\t\t\t\t\t\t\t\t\t    <aurelia-select select-id.bind=\"'roombox'\" ref=\"roombox\" page.bind=\"1\" per-page.bind=\"500\" swidth.bind=\"'100%'\" allow-clear.bind=\"false\"is-multiple.bind=\"false\" place-holder.bind=\"i18n.tr('briefings.commons.search_rooms')\" style=\"width:100%\" clear-event=\"clear:topicUsers\" data-source.bind=\"roomList\" select-listen.bind=\"'roombox:select'\" min-input=\"0\" additional-params.bind=\"additional\"></aurelia-select>\n\t\t\t\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t\t\t\t  <div class=\"col-md-1 room-help-text\">\n\t\t\t\t\t\t\t\t\t\t\t\t    <i class=\"jif-info\" id=\"roomInfo\" data-original-title=\"\" title=\"\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t  <label class=\"room-custom-label\" innerhtml.bind=\"roomListHelpText\"></label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<activity-briefing\n\t\t\t\t\t\t\t\t\t\tagenda-details.bind=\"envDetails.agendaDetails\"\n\t\t\t\t\t\t\t\t\t\tplan-approved.bind=\"planApproved\"\n\t\t\t\t\t\t\t\t\t\tis-existing-briefing.bind=\"existingBriefing\"\n\t\t\t\t\t\t\t\t\t\tselected-account.bind=\"selectedAccount\"\n\t\t\t\t\t\t\t\t\t\taccount-opportunity-list.bind=\"selectedOpportunityList\"\n\t\t\t\t\t\t\t\t\t\tshould-disable.bind=\"briefingRequest.status == 'Cancelled'\"\n\t\t\t\t\t\t\t\t\t\tactivity-form.bind=\"_activityFormRenderer\"\n\t\t\t\t\t\t\t\t\t\texternal-attendees.bind=\"briefingRequest.externalAttendees\"\n\t\t\t\t\t\t\t\t\t\tinternal-attendees.bind=\"briefingRequest.internalAttendees\"\n\t\t\t\t\t\t\t\t\t\tshow-internal-attendees.bind=\"envDetails.briefingInternalAttendeeEnabled\">\n\t\t\t\t\t\t\t\t\t</activity-briefing>\n\n\t\t\t\t\t\t\t\t\t<concierge-service is-edit-briefing.bind=\"existingBriefing\" services.bind=\"conciergeServices\" external-attendees.bind=\"briefingRequest.externalAttendees\" internal-attendees.bind=\"briefingRequest.internalAttendees\" show-internal-attendees.bind=\"envDetails.briefingInternalAttendeeEnabled\"></concierge-service>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-xs-12 col-md-4 no-padding request-briefing-container\">\n\t\t\t\t\t<div class=\"section attendees-section briefing-extattendee-section\">\n\t\t\t\t\t\t<div class=\"attendee-section-header\">\n\t\t\t\t\t\t\t<span class=\"attendee-help-icon-cont pull-left\">\n      \t\t\t\t\t\t\t<i class=\"jif-info jif-blue jif-16\" ref=\"attendeeHelpIcon\"></i>\n    \t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"section-title pull-left\" i18n=\"briefings.briefingRequest.pickAttendees\"></span>\n\t\t\t\t\t\t\t<span if.bind=\"!isSFDC\" class=\"copy-customer-info js-copy-attendee point-cursor pull-right\" click.delegate=\"showCopyAttendeeModal()\">\n\t\t\t\t\t\t\t\t<span class=\"font-blue text-capitalize\" data-i18n=\"copy_from\">Copy From</span>\n\t\t\t\t\t\t\t\t<span class=\"jif-iris-import font-blue\"></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ul class=\"nav nav-tabs tabs-attendees\">\n\t\t\t\t\t\t\t\t<li role=\"presentation\" class=\"${attendeeMode=='external'? 'active':''}\">\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" click.trigger=\"toggleAttendee('external')\" id='external'>&nbsp;<span>External</span></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li if.bind=\"envDetails.briefingInternalAttendeeEnabled\" role=\"presentation\" class=\"${attendeeMode=='internal'? 'active':''}\">\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" click.trigger=\"toggleAttendee('internal')\" id='internal'>&nbsp;<span>Internal</span></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<external-attendee-list selected-items.bind=\"briefingRequest.externalAttendees\" concierges.bind=\"conciergeServices\" class=\"${attendeeMode=='external'? '':'hide'}\"></external-attendee-list>\n\t\t\t\t\t\t<internal-attendee-list selected-items.bind=\"briefingRequest.internalAttendees\" concierges.bind=\"conciergeServices\" class=\"${(attendeeMode=='internal' && envDetails.briefingInternalAttendeeEnabled)? '':'hide'}\"></internal-attendee-list>\n\t\t\t\t\t</div>\n\t\t\t\t\t<add-user selected-sfdc-account.bind=\"selectedAccount\"></add-user>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-xs-12 col-md-8\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-xs-12 col-sm-10\">\n\t\t\t\t\t\t\t<div class=\"briefing-req-btns request-briefing-fldset\" if.bind=\"briefingRequest.status != 'Cancelled' && isLocationActivated\">\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-xs-6\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\tclick.delegate=\"saveBriefingRequest()\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-blue btn-block\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-automation=\"briefing-submit\"\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled.bind=\"disableSubmitBtn\">${ uuid == '' ? 'SUBMIT' : 'UPDATE' }</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-xs-6\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn flat-white-btn pull-right\" click.delegate=\"discardChanges()\" i18n=\"briefings.briefingRequest.discard\" data-automation=\"briefing-discard\" disabled.bind=\"disableSubmitBtn\"></button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<copy-briefing-list existing-briefing-uuid.bind=\"uuid\"></copy-briefing-list>\n\t<notification-modal></notification-modal>\n</template>\n";
});
System.register('service/copy_briefing_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
    'use strict';

    var HttpRequest, inject, API, CopyBriefingService;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_utilsRequest) {
            HttpRequest = _utilsRequest.HttpRequest;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            CopyBriefingService = function () {
                function CopyBriefingService(httpRequest, Api) {
                    _classCallCheck(this, _CopyBriefingService);

                    this.httpRequest = httpRequest;
                    this.api = Api;
                }

                _createClass(CopyBriefingService, [{
                    key: 'getAttendees',
                    value: function getAttendees(params) {
                        var attendeesUrl = this.api.getBaseUrl() + this.api.getAttendees;
                        return this.httpRequest.createGetRequest(attendeesUrl, params);
                    }
                }]);

                var _CopyBriefingService = CopyBriefingService;
                CopyBriefingService = inject(HttpRequest, API)(CopyBriefingService) || CopyBriefingService;
                return CopyBriefingService;
            }();

            _export('CopyBriefingService', CopyBriefingService);
        }
    };
});
(function() {
var define = System.amdDefine;
!function(a) {
  "object" == typeof exports && exports && "object" == typeof module && module && module.exports === exports ? a(require("jquery")) : "function" == typeof define && define.amd ? define("github:jonthornton/jquery-timepicker@1.8.8/jquery.timepicker.min.js", ["npm:jquery@2.2.4.js"], a) : a(jQuery);
}(function(a) {
  function b(a) {
    var b = a[0];
    return b.offsetWidth > 0 && b.offsetHeight > 0;
  }
  function c(b) {
    if (b.minTime && (b.minTime = u(b.minTime)), b.maxTime && (b.maxTime = u(b.maxTime)), b.durationTime && "function" != typeof b.durationTime && (b.durationTime = u(b.durationTime)), "now" == b.scrollDefault)
      b.scrollDefault = function() {
        return b.roundingFunction(u(new Date), b);
      };
    else if (b.scrollDefault && "function" != typeof b.scrollDefault) {
      var c = b.scrollDefault;
      b.scrollDefault = function() {
        return b.roundingFunction(u(c), b);
      };
    } else
      b.minTime && (b.scrollDefault = function() {
        return b.roundingFunction(b.minTime, b);
      });
    if ("string" === a.type(b.timeFormat) && b.timeFormat.match(/[gh]/) && (b._twelveHourTime = !0), b.showOnFocus === !1 && -1 != b.showOn.indexOf("focus") && b.showOn.splice(b.showOn.indexOf("focus"), 1), b.disableTimeRanges.length > 0) {
      for (var d in b.disableTimeRanges)
        b.disableTimeRanges[d] = [u(b.disableTimeRanges[d][0]), u(b.disableTimeRanges[d][1])];
      b.disableTimeRanges = b.disableTimeRanges.sort(function(a, b) {
        return a[0] - b[0];
      });
      for (var d = b.disableTimeRanges.length - 1; d > 0; d--)
        b.disableTimeRanges[d][0] <= b.disableTimeRanges[d - 1][1] && (b.disableTimeRanges[d - 1] = [Math.min(b.disableTimeRanges[d][0], b.disableTimeRanges[d - 1][0]), Math.max(b.disableTimeRanges[d][1], b.disableTimeRanges[d - 1][1])], b.disableTimeRanges.splice(d, 1));
    }
    return b;
  }
  function d(b) {
    var c = b.data("timepicker-settings"),
        d = b.data("timepicker-list");
    if (d && d.length && (d.remove(), b.data("timepicker-list", !1)), c.useSelect) {
      d = a("<select />", {"class": "ui-timepicker-select"});
      var g = d;
    } else {
      d = a("<ul />", {"class": "ui-timepicker-list"});
      var g = a("<div />", {
        "class": "ui-timepicker-wrapper",
        tabindex: -1
      });
      g.css({
        display: "none",
        position: "absolute"
      }).append(d);
    }
    if (c.noneOption)
      if (c.noneOption === !0 && (c.noneOption = c.useSelect ? "Time..." : "None"), a.isArray(c.noneOption)) {
        for (var h in c.noneOption)
          if (parseInt(h, 10) == h) {
            var i = e(c.noneOption[h], c.useSelect);
            d.append(i);
          }
      } else {
        var i = e(c.noneOption, c.useSelect);
        d.append(i);
      }
    if (c.className && g.addClass(c.className), (null !== c.minTime || null !== c.durationTime) && c.showDuration) {
      "function" == typeof c.step ? "function" : c.step;
      g.addClass("ui-timepicker-with-duration"), g.addClass("ui-timepicker-step-" + c.step);
    }
    var k = c.minTime;
    "function" == typeof c.durationTime ? k = u(c.durationTime()) : null !== c.durationTime && (k = c.durationTime);
    var m = null !== c.minTime ? c.minTime : 0,
        n = null !== c.maxTime ? c.maxTime : m + w - 1;
    m > n && (n += w), n === w - 1 && "string" === a.type(c.timeFormat) && c.show2400 && (n = w);
    var p = c.disableTimeRanges,
        q = 0,
        v = p.length,
        x = c.step;
    "function" != typeof x && (x = function() {
      return c.step;
    });
    for (var h = m,
        z = 0; n >= h; z++, h += 60 * x(z)) {
      var A = h,
          B = t(A, c);
      if (c.useSelect) {
        var C = a("<option />", {value: B});
        C.text(B);
      } else {
        var C = a("<li />");
        C.addClass(43200 > A % 86400 ? "ui-timepicker-am" : "ui-timepicker-pm"), C.data("time", 86400 >= A ? A : A % 86400), C.text(B);
      }
      if ((null !== c.minTime || null !== c.durationTime) && c.showDuration) {
        var D = s(h - k, c.step);
        if (c.useSelect)
          C.text(C.text() + " (" + D + ")");
        else {
          var E = a("<span />", {"class": "ui-timepicker-duration"});
          E.text(" (" + D + ")"), C.append(E);
        }
      }
      v > q && (A >= p[q][1] && (q += 1), p[q] && A >= p[q][0] && A < p[q][1] && (c.useSelect ? C.prop("disabled", !0) : C.addClass("ui-timepicker-disabled"))), d.append(C);
    }
    if (g.data("timepicker-input", b), b.data("timepicker-list", g), c.useSelect)
      b.val() && d.val(f(u(b.val()), c)), d.on("focus", function() {
        a(this).data("timepicker-input").trigger("showTimepicker");
      }), d.on("blur", function() {
        a(this).data("timepicker-input").trigger("hideTimepicker");
      }), d.on("change", function() {
        o(b, a(this).val(), "select");
      }), o(b, d.val(), "initial"), b.hide().after(d);
    else {
      var F = c.appendTo;
      "string" == typeof F ? F = a(F) : "function" == typeof F && (F = F(b)), F.append(g), l(b, d), d.on("mousedown", "li", function(c) {
        b.off("focus.timepicker"), b.on("focus.timepicker-ie-hack", function() {
          b.off("focus.timepicker-ie-hack"), b.on("focus.timepicker", y.show);
        }), j(b) || b[0].focus(), d.find("li").removeClass("ui-timepicker-selected"), a(this).addClass("ui-timepicker-selected"), r(b) && (b.trigger("hideTimepicker"), d.on("mouseup.timepicker", "li", function(a) {
          d.off("mouseup.timepicker"), g.hide();
        }));
      });
    }
  }
  function e(b, c) {
    var d,
        e,
        f;
    return "object" == typeof b ? (d = b.label, e = b.className, f = b.value) : "string" == typeof b ? d = b : a.error("Invalid noneOption value"), c ? a("<option />", {
      value: f,
      "class": e,
      text: d
    }) : a("<li />", {
      "class": e,
      text: d
    }).data("time", f);
  }
  function f(a, b) {
    return a = b.roundingFunction(a, b), null !== a ? t(a, b) : void 0;
  }
  function g() {
    return new Date(1970, 1, 1, 0, 0, 0);
  }
  function h(b) {
    var c = a(b.target),
        d = c.closest(".ui-timepicker-input");
    0 === d.length && 0 === c.closest(".ui-timepicker-wrapper").length && (y.hide(), a(document).unbind(".ui-timepicker"), a(window).unbind(".ui-timepicker"));
  }
  function j(a) {
    var b = a.data("timepicker-settings");
    return (window.navigator.msMaxTouchPoints || "ontouchstart" in document) && b.disableTouchKeyboard;
  }
  function k(b, c, d) {
    if (!d && 0 !== d)
      return !1;
    var e = b.data("timepicker-settings"),
        f = !1,
        d = e.roundingFunction(d, e);
    return c.find("li").each(function(b, c) {
      var e = a(c);
      if ("number" == typeof e.data("time"))
        return e.data("time") == d ? (f = e, !1) : void 0;
    }), f;
  }
  function l(a, b) {
    b.find("li").removeClass("ui-timepicker-selected");
    var c = u(n(a), a.data("timepicker-settings"));
    if (null !== c) {
      var d = k(a, b, c);
      if (d) {
        var e = d.offset().top - b.offset().top;
        (e + d.outerHeight() > b.outerHeight() || 0 > e) && b.scrollTop(b.scrollTop() + d.position().top - d.outerHeight()), d.addClass("ui-timepicker-selected");
      }
    }
  }
  function m(b, c) {
    if ("" !== this.value && "timepicker" != c) {
      var d = a(this);
      if (!d.is(":focus") || b && "change" == b.type) {
        var e = d.data("timepicker-settings"),
            f = u(this.value, e);
        if (null === f)
          return void d.trigger("timeFormatError");
        var g = !1;
        null !== e.minTime && f < e.minTime ? g = !0 : null !== e.maxTime && f > e.maxTime && (g = !0), a.each(e.disableTimeRanges, function() {
          return f >= this[0] && f < this[1] ? (g = !0, !1) : void 0;
        }), e.forceRoundTime && (f = e.roundingFunction(f, e));
        var h = t(f, e);
        g ? o(d, h, "error") && d.trigger("timeRangeError") : o(d, h);
      }
    }
  }
  function n(a) {
    return a.is("input") ? a.val() : a.data("ui-timepicker-value");
  }
  function o(a, b, c) {
    if (a.is("input")) {
      a.val(b);
      var d = a.data("timepicker-settings");
      d.useSelect && "select" != c && "initial" != c && a.data("timepicker-list").val(f(u(b), d));
    }
    return a.data("ui-timepicker-value") != b ? (a.data("ui-timepicker-value", b), "select" == c ? a.trigger("selectTime").trigger("changeTime").trigger("change", "timepicker") : "error" != c && a.trigger("changeTime"), !0) : (a.trigger("selectTime"), !1);
  }
  function p(c) {
    var d = a(this),
        e = d.data("timepicker-list");
    if (!e || !b(e)) {
      if (40 != c.keyCode)
        return !0;
      y.show.call(d.get(0)), e = d.data("timepicker-list"), j(d) || d.focus();
    }
    switch (c.keyCode) {
      case 13:
        return r(d) && y.hide.apply(this), c.preventDefault(), !1;
      case 38:
        var f = e.find(".ui-timepicker-selected");
        return f.length ? f.is(":first-child") || (f.removeClass("ui-timepicker-selected"), f.prev().addClass("ui-timepicker-selected"), f.prev().position().top < f.outerHeight() && e.scrollTop(e.scrollTop() - f.outerHeight())) : (e.find("li").each(function(b, c) {
          return a(c).position().top > 0 ? (f = a(c), !1) : void 0;
        }), f.addClass("ui-timepicker-selected")), !1;
      case 40:
        return f = e.find(".ui-timepicker-selected"), 0 === f.length ? (e.find("li").each(function(b, c) {
          return a(c).position().top > 0 ? (f = a(c), !1) : void 0;
        }), f.addClass("ui-timepicker-selected")) : f.is(":last-child") || (f.removeClass("ui-timepicker-selected"), f.next().addClass("ui-timepicker-selected"), f.next().position().top + 2 * f.outerHeight() > e.outerHeight() && e.scrollTop(e.scrollTop() + f.outerHeight())), !1;
      case 27:
        e.find("li").removeClass("ui-timepicker-selected"), y.hide();
        break;
      case 9:
        y.hide();
        break;
      default:
        return !0;
    }
  }
  function q(c) {
    var d = a(this),
        e = d.data("timepicker-list"),
        f = d.data("timepicker-settings");
    if (!e || !b(e) || f.disableTextInput)
      return !0;
    switch (c.keyCode) {
      case 96:
      case 97:
      case 98:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 65:
      case 77:
      case 80:
      case 186:
      case 8:
      case 46:
        f.typeaheadHighlight ? l(d, e) : e.hide();
    }
  }
  function r(a) {
    var b = a.data("timepicker-settings"),
        c = a.data("timepicker-list"),
        d = null,
        e = c.find(".ui-timepicker-selected");
    return e.hasClass("ui-timepicker-disabled") ? !1 : (e.length && (d = e.data("time")), null !== d && ("string" != typeof d && (d = t(d, b)), o(a, d, "select")), !0);
  }
  function s(a, b) {
    a = Math.abs(a);
    var c,
        d,
        e = Math.round(a / 60),
        f = [];
    return 60 > e ? f = [e, x.mins] : (c = Math.floor(e / 60), d = e % 60, 30 == b && 30 == d && (c += x.decimal + 5), f.push(c), f.push(1 == c ? x.hr : x.hrs), 30 != b && d && (f.push(d), f.push(x.mins))), f.join(" ");
  }
  function t(b, c) {
    if (null === b)
      return null;
    var d = new Date(v.valueOf() + 1e3 * b);
    if (isNaN(d.getTime()))
      return null;
    if ("function" === a.type(c.timeFormat))
      return c.timeFormat(d);
    for (var e,
        f,
        g = "",
        h = 0; h < c.timeFormat.length; h++)
      switch (f = c.timeFormat.charAt(h)) {
        case "a":
          g += d.getHours() > 11 ? x.pm : x.am;
          break;
        case "A":
          g += d.getHours() > 11 ? x.PM : x.AM;
          break;
        case "g":
          e = d.getHours() % 12, g += 0 === e ? "12" : e;
          break;
        case "G":
          e = d.getHours(), b === w && (e = 24), g += e;
          break;
        case "h":
          e = d.getHours() % 12, 0 !== e && 10 > e && (e = "0" + e), g += 0 === e ? "12" : e;
          break;
        case "H":
          e = d.getHours(), b === w && (e = c.show2400 ? 24 : 0), g += e > 9 ? e : "0" + e;
          break;
        case "i":
          var i = d.getMinutes();
          g += i > 9 ? i : "0" + i;
          break;
        case "s":
          b = d.getSeconds(), g += b > 9 ? b : "0" + b;
          break;
        case "\\":
          h++, g += c.timeFormat.charAt(h);
          break;
        default:
          g += f;
      }
    return g;
  }
  function u(a, b) {
    if ("" === a)
      return null;
    if (!a || a + 0 == a)
      return a;
    if ("object" == typeof a)
      return 3600 * a.getHours() + 60 * a.getMinutes() + a.getSeconds();
    a = a.toLowerCase().replace(/[\s\.]/g, ""), ("a" == a.slice(-1) || "p" == a.slice(-1)) && (a += "m");
    var c = "(" + x.am.replace(".", "") + "|" + x.pm.replace(".", "") + "|" + x.AM.replace(".", "") + "|" + x.PM.replace(".", "") + ")?",
        d = new RegExp("^" + c + "([0-9]?[0-9])\\W?([0-5][0-9])?\\W?([0-5][0-9])?" + c + "$"),
        e = a.match(d);
    if (!e)
      return null;
    var f = parseInt(1 * e[2], 10) % 24,
        g = e[1] || e[5],
        h = f;
    if (12 >= f && g) {
      var i = g == x.pm || g == x.PM;
      h = 12 == f ? i ? 12 : 0 : f + (i ? 12 : 0);
    }
    var j = 1 * e[3] || 0,
        k = 1 * e[4] || 0,
        l = 3600 * h + 60 * j + k;
    if (12 > f && !g && b && b._twelveHourTime && b.scrollDefault) {
      var m = l - b.scrollDefault();
      0 > m && m >= w / -2 && (l = (l + w / 2) % w);
    }
    return l;
  }
  var v = g(),
      w = 86400,
      x = {
        am: "am",
        pm: "pm",
        AM: "AM",
        PM: "PM",
        decimal: ".",
        mins: "mins",
        hr: "hr",
        hrs: "hrs"
      },
      y = {
        init: function(b) {
          return this.each(function() {
            var e = a(this),
                f = [];
            for (var g in a.fn.timepicker.defaults)
              e.data(g) && (f[g] = e.data(g));
            var h = a.extend({}, a.fn.timepicker.defaults, f, b);
            if (h.lang && (x = a.extend(x, h.lang)), h = c(h), e.data("timepicker-settings", h), e.addClass("ui-timepicker-input"), h.useSelect)
              d(e);
            else {
              if (e.prop("autocomplete", "off"), h.showOn)
                for (i in h.showOn)
                  e.on(h.showOn[i] + ".timepicker", y.show);
              e.on("change.timepicker", m), e.on("keydown.timepicker", p), e.on("keyup.timepicker", q), h.disableTextInput && e.on("keydown.timepicker", function(a) {
                a.preventDefault();
              }), m.call(e.get(0));
            }
          });
        },
        show: function(c) {
          var e = a(this),
              f = e.data("timepicker-settings");
          if (c && c.preventDefault(), f.useSelect)
            return void e.data("timepicker-list").focus();
          j(e) && e.blur();
          var g = e.data("timepicker-list");
          if (!e.prop("readonly") && (g && 0 !== g.length && "function" != typeof f.durationTime || (d(e), g = e.data("timepicker-list")), !b(g))) {
            e.data("ui-timepicker-value", e.val()), l(e, g), y.hide(), g.show();
            var i = {};
            f.orientation.match(/r/) ? i.left = e.offset().left + e.outerWidth() - g.outerWidth() + parseInt(g.css("marginLeft").replace("px", ""), 10) : i.left = e.offset().left + parseInt(g.css("marginLeft").replace("px", ""), 10);
            var m;
            m = f.orientation.match(/t/) ? "t" : f.orientation.match(/b/) ? "b" : e.offset().top + e.outerHeight(!0) + g.outerHeight() > a(window).height() + a(window).scrollTop() ? "t" : "b", "t" == m ? (g.addClass("ui-timepicker-positioned-top"), i.top = e.offset().top - g.outerHeight() + parseInt(g.css("marginTop").replace("px", ""), 10)) : (g.removeClass("ui-timepicker-positioned-top"), i.top = e.offset().top + e.outerHeight() + parseInt(g.css("marginTop").replace("px", ""), 10)), g.offset(i);
            var o = g.find(".ui-timepicker-selected");
            if (!o.length) {
              var p = u(n(e));
              null !== p ? o = k(e, g, p) : f.scrollDefault && (o = k(e, g, f.scrollDefault()));
            }
            if (o && o.length) {
              var q = g.scrollTop() + o.position().top - o.outerHeight();
              g.scrollTop(q);
            } else
              g.scrollTop(0);
            return f.stopScrollPropagation && a(document).on("wheel.ui-timepicker", ".ui-timepicker-wrapper", function(b) {
              b.preventDefault();
              var c = a(this).scrollTop();
              a(this).scrollTop(c + b.originalEvent.deltaY);
            }), a(document).on("touchstart.ui-timepicker mousedown.ui-timepicker", h), a(window).on("resize.ui-timepicker", h), f.closeOnWindowScroll && a(document).on("scroll.ui-timepicker", h), e.trigger("showTimepicker"), this;
          }
        },
        hide: function(c) {
          var d = a(this),
              e = d.data("timepicker-settings");
          return e && e.useSelect && d.blur(), a(".ui-timepicker-wrapper").each(function() {
            var c = a(this);
            if (b(c)) {
              var d = c.data("timepicker-input"),
                  e = d.data("timepicker-settings");
              e && e.selectOnBlur && r(d), c.hide(), d.trigger("hideTimepicker");
            }
          }), this;
        },
        option: function(b, e) {
          return this.each(function() {
            var f = a(this),
                g = f.data("timepicker-settings"),
                h = f.data("timepicker-list");
            if ("object" == typeof b)
              g = a.extend(g, b);
            else if ("string" == typeof b && "undefined" != typeof e)
              g[b] = e;
            else if ("string" == typeof b)
              return g[b];
            g = c(g), f.data("timepicker-settings", g), h && (h.remove(), f.data("timepicker-list", !1)), g.useSelect && d(f);
          });
        },
        getSecondsFromMidnight: function() {
          return u(n(this));
        },
        getTime: function(a) {
          var b = this,
              c = n(b);
          if (!c)
            return null;
          var d = u(c);
          if (null === d)
            return null;
          a || (a = v);
          var e = new Date(a);
          return e.setHours(d / 3600), e.setMinutes(d % 3600 / 60), e.setSeconds(d % 60), e.setMilliseconds(0), e;
        },
        setTime: function(a) {
          var b = this,
              c = b.data("timepicker-settings");
          if (c.forceRoundTime)
            var d = f(u(a), c);
          else
            var d = t(u(a), c);
          return a && null === d && c.noneOption && (d = a), o(b, d), b.data("timepicker-list") && l(b, b.data("timepicker-list")), this;
        },
        remove: function() {
          var a = this;
          if (a.hasClass("ui-timepicker-input")) {
            var b = a.data("timepicker-settings");
            return a.removeAttr("autocomplete", "off"), a.removeClass("ui-timepicker-input"), a.removeData("timepicker-settings"), a.off(".timepicker"), a.data("timepicker-list") && a.data("timepicker-list").remove(), b.useSelect && a.show(), a.removeData("timepicker-list"), this;
          }
        }
      };
  a.fn.timepicker = function(b) {
    return this.length ? y[b] ? this.hasClass("ui-timepicker-input") ? y[b].apply(this, Array.prototype.slice.call(arguments, 1)) : this : "object" != typeof b && b ? void a.error("Method " + b + " does not exist on jQuery.timepicker") : y.init.apply(this, arguments) : this;
  }, a.fn.timepicker.defaults = {
    appendTo: "body",
    className: null,
    closeOnWindowScroll: !1,
    disableTextInput: !1,
    disableTimeRanges: [],
    disableTouchKeyboard: !1,
    durationTime: null,
    forceRoundTime: !1,
    maxTime: null,
    minTime: null,
    noneOption: !1,
    orientation: "l",
    roundingFunction: function(a, b) {
      if (null === a)
        return null;
      var c = a % (60 * b.step);
      return c >= 30 * b.step ? a += 60 * b.step - c : a -= c, a;
    },
    scrollDefault: null,
    selectOnBlur: !1,
    show2400: !1,
    showDuration: !1,
    showOn: ["click", "focus"],
    showOnFocus: !0,
    step: 30,
    stopScrollPropagation: !1,
    timeFormat: "g:ia",
    typeaheadHighlight: !0,
    useSelect: !1
  };
});

})();
(function() {
var define = System.amdDefine;
define("github:jonthornton/jquery-timepicker@1.8.8.js", ["github:jonthornton/jquery-timepicker@1.8.8/jquery.timepicker.min.js"], function(main) {
  return main;
});

})();
System.registerDynamic('github:jonthornton/Datepair.js@0.4.14/dist/datepair.js', [], false, function ($__require, $__exports, $__module) {
	var _retrieveGlobal = System.get("@@global-helpers").prepareGlobal($__module.id, null, null);

	(function ($__global) {
		/*!
   * datepair.js v0.4.14 - A javascript plugin for intelligently selecting date and time ranges inspired by Google Calendar.
   * Copyright (c) 2015 Jon Thornton - http://jonthornton.github.com/Datepair.js
   * License: MIT
   */

		(function (window, document) {

			'use strict';

			var _ONE_DAY = 86400000;
			var jq = window.Zepto || window.jQuery;

			function simpleExtend(obj1, obj2) {
				var out = obj2 || {};

				for (var i in obj1) {
					if (!(i in out)) {
						out[i] = obj1[i];
					}
				}

				return out;
			}

			// IE's custom event support is totally borked.
			// Use jQuery if possible
			function triggerSimpleCustomEvent(el, eventName) {
				if (jq) {
					jq(el).trigger(eventName);
				} else {
					var event = document.createEvent('CustomEvent');
					event.initCustomEvent(eventName, true, true, {});
					el.dispatchEvent(event);
				}
			}

			// el.classList not supported by < IE10
			// use jQuery if available
			function hasClass(el, className) {
				if (jq) {
					return jq(el).hasClass(className);
				} else {
					return el.classList.contains(className);
				}
			}

			function Datepair(container, options) {
				this.dateDelta = null;
				this.timeDelta = null;
				this._defaults = {
					startClass: 'start',
					endClass: 'end',
					timeClass: 'time',
					dateClass: 'date',
					defaultDateDelta: 0,
					defaultTimeDelta: 3600000,
					anchor: 'start',

					// defaults for jquery-timepicker; override when using other input widgets
					parseTime: function (input) {
						return jq(input).timepicker('getTime');
					},
					updateTime: function (input, dateObj) {
						jq(input).timepicker('setTime', dateObj);
					},
					setMinTime: function (input, dateObj) {
						jq(input).timepicker('option', 'minTime', dateObj);
					},

					// defaults for bootstrap datepicker; override when using other input widgets
					parseDate: function (input) {
						return input.value && jq(input).datepicker('getDate');
					},
					updateDate: function (input, dateObj) {
						jq(input).datepicker('update', dateObj);
					}
				};

				this.container = container;
				this.settings = simpleExtend(this._defaults, options);

				this.startDateInput = this.container.querySelector('.' + this.settings.startClass + '.' + this.settings.dateClass);
				this.endDateInput = this.container.querySelector('.' + this.settings.endClass + '.' + this.settings.dateClass);
				this.startTimeInput = this.container.querySelector('.' + this.settings.startClass + '.' + this.settings.timeClass);
				this.endTimeInput = this.container.querySelector('.' + this.settings.endClass + '.' + this.settings.timeClass);

				// initialize date and time deltas
				this.refresh();

				// init starts here
				this._bindChangeHandler();
			}

			Datepair.prototype = {
				constructor: Datepair,

				option: function (key, value) {
					if (typeof key == 'object') {
						this.settings = simpleExtend(this.settings, key);
					} else if (typeof key == 'string' && typeof value != 'undefined') {
						this.settings[key] = value;
					} else if (typeof key == 'string') {
						return this.settings[key];
					}

					this._updateEndMintime();
				},

				getTimeDiff: function () {
					// due to the fact that times can wrap around, timeDiff for any
					// time-only pair will always be >= 0
					var delta = this.dateDelta + this.timeDelta;
					if (delta < 0 && (!this.startDateInput || !this.endDateInput)) {
						delta += _ONE_DAY;
					}

					return delta;
				},

				refresh: function () {
					if (this.startDateInput && this.startDateInput.value && this.endDateInput && this.endDateInput.value) {
						var startDate = this.settings.parseDate(this.startDateInput);
						var endDate = this.settings.parseDate(this.endDateInput);
						if (startDate && endDate) {
							this.dateDelta = endDate.getTime() - startDate.getTime();
						}
					}
					if (this.startTimeInput && this.startTimeInput.value && this.endTimeInput && this.endTimeInput.value) {
						var startTime = this.settings.parseTime(this.startTimeInput);
						var endTime = this.settings.parseTime(this.endTimeInput);
						if (startTime && endTime) {
							this.timeDelta = endTime.getTime() - startTime.getTime();
							this._updateEndMintime();
						}
					}
				},

				remove: function () {
					this._unbindChangeHandler();
				},

				_bindChangeHandler: function () {
					// addEventListener doesn't work with synthetic "change" events
					// fired by jQuery's trigger() functioin. If jQuery is present,
					// use that for event binding
					if (jq) {
						jq(this.container).on('change.datepair', jq.proxy(this.handleEvent, this));
					} else {
						this.container.addEventListener('change', this, false);
					}
				},

				_unbindChangeHandler: function () {
					if (jq) {
						jq(this.container).off('change.datepair');
					} else {
						this.container.removeEventListener('change', this, false);
					}
				},

				// This function will be called when passing 'this' to addEventListener
				handleEvent: function (e) {
					// temporarily unbind the change handler to prevent triggering this
					// if we update other inputs
					this._unbindChangeHandler();

					if (hasClass(e.target, this.settings.dateClass)) {
						if (e.target.value != '') {
							this._dateChanged(e.target);
							this._timeChanged(e.target);
						} else {
							this.dateDelta = null;
						}
					} else if (hasClass(e.target, this.settings.timeClass)) {
						if (e.target.value != '') {
							this._timeChanged(e.target);
						} else {
							this.timeDelta = null;
						}
					}

					this._validateRanges();
					this._updateEndMintime();
					this._bindChangeHandler();
				},

				_dateChanged: function (target) {
					if (!this.startDateInput || !this.endDateInput) {
						return;
					}

					var startDate = this.settings.parseDate(this.startDateInput);
					var endDate = this.settings.parseDate(this.endDateInput);

					if (!startDate || !endDate) {
						if (this.settings.defaultDateDelta !== null) {
							if (startDate) {
								var newEnd = new Date(startDate.getTime() + this.settings.defaultDateDelta * _ONE_DAY);
								this.settings.updateDate(this.endDateInput, newEnd);
							} else if (endDate) {
								var newStart = new Date(endDate.getTime() - this.settings.defaultDateDelta * _ONE_DAY);
								this.settings.updateDate(this.startDateInput, newStart);
							}

							this.dateDelta = this.settings.defaultDateDelta * _ONE_DAY;
						} else {
							this.dateDelta = null;
						}

						return;
					}

					if (this.settings.anchor == 'start' && hasClass(target, this.settings.startClass)) {
						var newDate = new Date(startDate.getTime() + this.dateDelta);
						this.settings.updateDate(this.endDateInput, newDate);
					} else if (this.settings.anchor == 'end' && hasClass(target, this.settings.endClass)) {
						var newDate = new Date(endDate.getTime() - this.dateDelta);
						this.settings.updateDate(this.startDateInput, newDate);
					} else {
						if (endDate < startDate) {
							var otherInput = hasClass(target, this.settings.startClass) ? this.endDateInput : this.startDateInput;
							var selectedDate = this.settings.parseDate(target);
							this.dateDelta = 0;
							this.settings.updateDate(otherInput, selectedDate);
						} else {
							this.dateDelta = endDate.getTime() - startDate.getTime();
						}
					}
				},

				_timeChanged: function (target) {
					if (!this.startTimeInput || !this.endTimeInput) {
						return;
					}

					var startTime = this.settings.parseTime(this.startTimeInput);
					var endTime = this.settings.parseTime(this.endTimeInput);

					if (!startTime || !endTime) {
						if (this.settings.defaultTimeDelta !== null) {
							if (startTime) {
								var newEnd = new Date(startTime.getTime() + this.settings.defaultTimeDelta);
								this.settings.updateTime(this.endTimeInput, newEnd);
							} else if (endTime) {
								var newStart = new Date(endTime.getTime() - this.settings.defaultTimeDelta);
								this.settings.updateTime(this.startTimeInput, newStart);
							}

							this.timeDelta = this.settings.defaultTimeDelta;
						} else {
							this.timeDelta = null;
						}

						return;
					}

					if (this.settings.anchor == 'start' && hasClass(target, this.settings.startClass)) {
						var newTime = new Date(startTime.getTime() + this.timeDelta);
						this.settings.updateTime(this.endTimeInput, newTime);
						endTime = this.settings.parseTime(this.endTimeInput);

						this._doMidnightRollover(startTime, endTime);
					} else if (this.settings.anchor == 'end' && hasClass(target, this.settings.endClass)) {
						var newTime = new Date(endTime.getTime() - this.timeDelta);
						this.settings.updateTime(this.startTimeInput, newTime);
						startTime = this.settings.parseTime(this.startTimeInput);

						this._doMidnightRollover(startTime, endTime);
					} else {
						this._doMidnightRollover(startTime, endTime);

						var startDate, endDate;
						if (this.startDateInput && this.endDateInput) {
							startDate = this.settings.parseDate(this.startDateInput);
							endDate = this.settings.parseDate(this.endDateInput);
						}

						if (+startDate == +endDate && endTime < startTime) {
							var thisInput = hasClass(target, this.settings.endClass) ? this.endTimeInput : this.startTimeInput;
							var otherInput = hasClass(target, this.settings.startClass) ? this.endTimeInput : this.startTimeInput;
							var selectedTime = this.settings.parseTime(thisInput);
							this.timeDelta = 0;
							this.settings.updateTime(otherInput, selectedTime);
						} else {
							this.timeDelta = endTime.getTime() - startTime.getTime();
						}
					}
				},

				_doMidnightRollover: function (startTime, endTime) {
					if (!this.startDateInput || !this.endDateInput) {
						return;
					}

					var endDate = this.settings.parseDate(this.endDateInput);
					var startDate = this.settings.parseDate(this.startDateInput);
					var newDelta = endTime.getTime() - startTime.getTime();
					var offset = endTime < startTime ? _ONE_DAY : -1 * _ONE_DAY;

					if (this.dateDelta !== null && this.dateDelta + this.timeDelta <= _ONE_DAY && this.dateDelta + newDelta != 0 && (offset > 0 || this.dateDelta != 0) && (newDelta >= 0 && this.timeDelta < 0 || newDelta < 0 && this.timeDelta >= 0)) {

						if (this.settings.anchor == 'start') {
							this.settings.updateDate(this.endDateInput, new Date(endDate.getTime() + offset));
							this._dateChanged(this.endDateInput);
						} else if (this.settings.anchor == 'end') {
							this.settings.updateDate(this.startDateInput, new Date(startDate.getTime() - offset));
							this._dateChanged(this.startDateInput);
						}
					}
					this.timeDelta = newDelta;
				},

				_updateEndMintime: function () {
					if (typeof this.settings.setMinTime != 'function') return;

					var baseTime = null;
					if (this.settings.anchor == 'start' && (!this.dateDelta || this.dateDelta < _ONE_DAY || this.timeDelta && this.dateDelta + this.timeDelta < _ONE_DAY)) {
						baseTime = this.settings.parseTime(this.startTimeInput);
					}

					this.settings.setMinTime(this.endTimeInput, baseTime);
				},

				_validateRanges: function () {
					if (this.startTimeInput && this.endTimeInput && this.timeDelta === null) {
						triggerSimpleCustomEvent(this.container, 'rangeIncomplete');
						return;
					}

					if (this.startDateInput && this.endDateInput && this.dateDelta === null) {
						triggerSimpleCustomEvent(this.container, 'rangeIncomplete');
						return;
					}

					// due to the fact that times can wrap around, any time-only pair will be considered valid
					if (!this.startDateInput || !this.endDateInput || this.dateDelta + this.timeDelta >= 0) {
						triggerSimpleCustomEvent(this.container, 'rangeSelected');
					} else {
						triggerSimpleCustomEvent(this.container, 'rangeError');
					}
				}
			};

			window.Datepair = Datepair;
		})(window, document);
	})(this);

	return _retrieveGlobal();
});
System.registerDynamic("github:jonthornton/Datepair.js@0.4.14.js", ["github:jonthornton/Datepair.js@0.4.14/dist/datepair.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:jonthornton/Datepair.js@0.4.14/dist/datepair.js");
});
System.register('models/activity.js', [], function (_export) {
    'use strict';

    var Activity;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [],
        execute: function () {
            Activity = function () {
                function Activity() {
                    _classCallCheck(this, Activity);

                    this.id = '';
                    this.uuid = '';
                    this.name = '';
                    this.display = '';
                    this.shortName = '';
                    this.enabled = false;
                    this.scheduled = false;
                    this.mapped_activity_type = '';
                    this.mapped_activity_uuid = '';
                }

                _createClass(Activity, [{
                    key: 'setupData',
                    value: function setupData(activity) {
                        this.id = activity.id;
                        this.uuid = activity.uuid;
                        this.name = activity.name;
                        this.display = activity.display;
                        this.enabled = activity.enabled;
                        this.shortName = this.display[0].toUpperCase();
                        this.scheduled = activity.scheduled;
                        this.mapped_activity_type = activity.mapped_activity_type;
                        this.mapped_activity_uuid = activity.mapped_activity_uuid;
                    }
                }, {
                    key: 'clearData',
                    value: function clearData() {
                        this.id = '';
                        this.uuid = '';
                        this.name = '';
                        this.display = '';
                        this.shortName = '';
                        this.enabled = false;
                        this.scheduled = false;
                        this.mapped_activity_type = '';
                        this.mapped_activity_uuid = '';
                    }
                }]);

                return Activity;
            }();

            _export('Activity', Activity);
        }
    };
});
System.register('view-models/briefings/app.js', ['npm:aurelia-i18n@0.4.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js'], function (_export) {
    'use strict';

    var I18N, bindable, inject, EventAggregator, App;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_aureliaFramework) {
            bindable = _aureliaFramework.bindable;
            inject = _aureliaFramework.inject;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }],
        execute: function () {
            App = function () {
                function App(ea, i18n) {
                    _classCallCheck(this, _App);

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createClass(App, [{
                    key: 'configureRouter',
                    value: function configureRouter(config, router) {
                        var _this = this;

                        var showRequestBriefingPage = function showRequestBriefingPage(instruction) {

                            instruction.config.moduleId = instruction.config.href = "./briefing_request";

                            if (window.envDetails.role === 'EA' && window.envDetails.currentManagedUser.length === 1 && window.envDetails.currentManagedUser[0] === envDetails.currentUser.uuid) {
                                window.setTimeout(function () {
                                    _this.ea.publish("show:notification", {
                                        'class': 'yellow',
                                        title: _this.i18n.tr('briefings.commons.briefing_title'),
                                        onHide: function onHide() {
                                            window.location.href = document.referrer;
                                        },
                                        message: _this.i18n.tr('briefings.commons.behalf_of_attendees_only')
                                    });
                                }, 1500);
                            }
                        };
                        config.map([{ route: ['', 'briefings'], name: 'Briefings', moduleId: './list', nav: false, title: '' }, { route: 'briefing/:uuid', name: 'BriefingRequest', moduleId: './briefing_request', nav: false, title: '' }, { route: 'new_briefing', name: 'NewBriefingRequest', navigationStrategy: showRequestBriefingPage, nav: false, title: '' }, { route: 'list_agenda/:uuid', name: 'ListAgenda', moduleId: './list_agenda', nav: false, title: '' }]);

                        this.router = router;
                    }
                }]);

                var _App = App;
                App = inject(EventAggregator, I18N)(App) || App;
                return App;
            }();

            _export('App', App);
        }
    };
});
(function() {
var define = System.amdDefine;
(function(factory) {
  if (typeof define === 'function' && define.amd) {
    define("github:select2/select2@4.0.0/js/select2.full.js", ["npm:jquery@2.2.4.js"], factory);
  } else if (typeof exports === 'object') {
    factory(require('jquery'));
  } else {
    factory(jQuery);
  }
}(function(jQuery) {
  var S2 = (function() {
    if (jQuery && jQuery.fn && jQuery.fn.select2 && jQuery.fn.select2.amd) {
      var S2 = jQuery.fn.select2.amd;
    }
    var S2;
    (function() {
      if (!S2 || !S2.requirejs) {
        if (!S2) {
          S2 = {};
        } else {
          require = S2;
        }
        var requirejs,
            require,
            define;
        (function(undef) {
          var main,
              req,
              makeMap,
              handlers,
              defined = {},
              waiting = {},
              config = {},
              defining = {},
              hasOwn = Object.prototype.hasOwnProperty,
              aps = [].slice,
              jsSuffixRegExp = /\.js$/;
          function hasProp(obj, prop) {
            return hasOwn.call(obj, prop);
          }
          function normalize(name, baseName) {
            var nameParts,
                nameSegment,
                mapValue,
                foundMap,
                lastIndex,
                foundI,
                foundStarMap,
                starI,
                i,
                j,
                part,
                baseParts = baseName && baseName.split("/"),
                map = config.map,
                starMap = (map && map['*']) || {};
            if (name && name.charAt(0) === ".") {
              if (baseName) {
                baseParts = baseParts.slice(0, baseParts.length - 1);
                name = name.split('/');
                lastIndex = name.length - 1;
                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                  name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                }
                name = baseParts.concat(name);
                for (i = 0; i < name.length; i += 1) {
                  part = name[i];
                  if (part === ".") {
                    name.splice(i, 1);
                    i -= 1;
                  } else if (part === "..") {
                    if (i === 1 && (name[2] === '..' || name[0] === '..')) {
                      break;
                    } else if (i > 0) {
                      name.splice(i - 1, 2);
                      i -= 2;
                    }
                  }
                }
                name = name.join("/");
              } else if (name.indexOf('./') === 0) {
                name = name.substring(2);
              }
            }
            if ((baseParts || starMap) && map) {
              nameParts = name.split('/');
              for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");
                if (baseParts) {
                  for (j = baseParts.length; j > 0; j -= 1) {
                    mapValue = map[baseParts.slice(0, j).join('/')];
                    if (mapValue) {
                      mapValue = mapValue[nameSegment];
                      if (mapValue) {
                        foundMap = mapValue;
                        foundI = i;
                        break;
                      }
                    }
                  }
                }
                if (foundMap) {
                  break;
                }
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                  foundStarMap = starMap[nameSegment];
                  starI = i;
                }
              }
              if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
              }
              if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
              }
            }
            return name;
          }
          function makeRequire(relName, forceSync) {
            return function() {
              return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));
            };
          }
          function makeNormalize(relName) {
            return function(name) {
              return normalize(name, relName);
            };
          }
          function makeLoad(depName) {
            return function(value) {
              defined[depName] = value;
            };
          }
          function callDep(name) {
            if (hasProp(waiting, name)) {
              var args = waiting[name];
              delete waiting[name];
              defining[name] = true;
              main.apply(undef, args);
            }
            if (!hasProp(defined, name) && !hasProp(defining, name)) {
              throw new Error('No ' + name);
            }
            return defined[name];
          }
          function splitPrefix(name) {
            var prefix,
                index = name ? name.indexOf('!') : -1;
            if (index > -1) {
              prefix = name.substring(0, index);
              name = name.substring(index + 1, name.length);
            }
            return [prefix, name];
          }
          makeMap = function(name, relName) {
            var plugin,
                parts = splitPrefix(name),
                prefix = parts[0];
            name = parts[1];
            if (prefix) {
              prefix = normalize(prefix, relName);
              plugin = callDep(prefix);
            }
            if (prefix) {
              if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relName));
              } else {
                name = normalize(name, relName);
              }
            } else {
              name = normalize(name, relName);
              parts = splitPrefix(name);
              prefix = parts[0];
              name = parts[1];
              if (prefix) {
                plugin = callDep(prefix);
              }
            }
            return {
              f: prefix ? prefix + '!' + name : name,
              n: name,
              pr: prefix,
              p: plugin
            };
          };
          function makeConfig(name) {
            return function() {
              return (config && config.config && config.config[name]) || {};
            };
          }
          handlers = {
            require: function(name) {
              return makeRequire(name);
            },
            exports: function(name) {
              var e = defined[name];
              if (typeof e !== 'undefined') {
                return e;
              } else {
                return (defined[name] = {});
              }
            },
            module: function(name) {
              return {
                id: name,
                uri: '',
                exports: defined[name],
                config: makeConfig(name)
              };
            }
          };
          main = function(name, deps, callback, relName) {
            var cjsModule,
                depName,
                ret,
                map,
                i,
                args = [],
                callbackType = typeof callback,
                usingExports;
            relName = relName || name;
            if (callbackType === 'undefined' || callbackType === 'function') {
              deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
              for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relName);
                depName = map.f;
                if (depName === "require") {
                  args[i] = handlers.require(name);
                } else if (depName === "exports") {
                  args[i] = handlers.exports(name);
                  usingExports = true;
                } else if (depName === "module") {
                  cjsModule = args[i] = handlers.module(name);
                } else if (hasProp(defined, depName) || hasProp(waiting, depName) || hasProp(defining, depName)) {
                  args[i] = callDep(depName);
                } else if (map.p) {
                  map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                  args[i] = defined[depName];
                } else {
                  throw new Error(name + ' missing ' + depName);
                }
              }
              ret = callback ? callback.apply(defined[name], args) : undefined;
              if (name) {
                if (cjsModule && cjsModule.exports !== undef && cjsModule.exports !== defined[name]) {
                  defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                  defined[name] = ret;
                }
              }
            } else if (name) {
              defined[name] = callback;
            }
          };
          requirejs = require = req = function(deps, callback, relName, forceSync, alt) {
            if (typeof deps === "string") {
              if (handlers[deps]) {
                return handlers[deps](callback);
              }
              return callDep(makeMap(deps, callback).f);
            } else if (!deps.splice) {
              config = deps;
              if (config.deps) {
                req(config.deps, config.callback);
              }
              if (!callback) {
                return;
              }
              if (callback.splice) {
                deps = callback;
                callback = relName;
                relName = null;
              } else {
                deps = undef;
              }
            }
            callback = callback || function() {};
            if (typeof relName === 'function') {
              relName = forceSync;
              forceSync = alt;
            }
            if (forceSync) {
              main(undef, deps, callback, relName);
            } else {
              setTimeout(function() {
                main(undef, deps, callback, relName);
              }, 4);
            }
            return req;
          };
          req.config = function(cfg) {
            return req(cfg);
          };
          requirejs._defined = defined;
          define = function(name, deps, callback) {
            if (!deps.splice) {
              callback = deps;
              deps = [];
            }
            if (!hasProp(defined, name) && !hasProp(waiting, name)) {
              waiting[name] = [name, deps, callback];
            }
          };
          define.amd = {jQuery: true};
        }());
        S2.requirejs = requirejs;
        S2.require = require;
        S2.define = define;
      }
    }());
    S2.define("almond", function() {});
    S2.define('jquery', [], function() {
      var _$ = jQuery || $;
      if (_$ == null && console && console.error) {
        console.error('Select2: An instance of jQuery or a jQuery-compatible library was not ' + 'found. Make sure that you are including jQuery before Select2 on your ' + 'web page.');
      }
      return _$;
    });
    S2.define('select2/utils', ['jquery'], function($) {
      var Utils = {};
      Utils.Extend = function(ChildClass, SuperClass) {
        var __hasProp = {}.hasOwnProperty;
        function BaseConstructor() {
          this.constructor = ChildClass;
        }
        for (var key in SuperClass) {
          if (__hasProp.call(SuperClass, key)) {
            ChildClass[key] = SuperClass[key];
          }
        }
        BaseConstructor.prototype = SuperClass.prototype;
        ChildClass.prototype = new BaseConstructor();
        ChildClass.__super__ = SuperClass.prototype;
        return ChildClass;
      };
      function getMethods(theClass) {
        var proto = theClass.prototype;
        var methods = [];
        for (var methodName in proto) {
          var m = proto[methodName];
          if (typeof m !== 'function') {
            continue;
          }
          if (methodName === 'constructor') {
            continue;
          }
          methods.push(methodName);
        }
        return methods;
      }
      Utils.Decorate = function(SuperClass, DecoratorClass) {
        var decoratedMethods = getMethods(DecoratorClass);
        var superMethods = getMethods(SuperClass);
        function DecoratedClass() {
          var unshift = Array.prototype.unshift;
          var argCount = DecoratorClass.prototype.constructor.length;
          var calledConstructor = SuperClass.prototype.constructor;
          if (argCount > 0) {
            unshift.call(arguments, SuperClass.prototype.constructor);
            calledConstructor = DecoratorClass.prototype.constructor;
          }
          calledConstructor.apply(this, arguments);
        }
        DecoratorClass.displayName = SuperClass.displayName;
        function ctr() {
          this.constructor = DecoratedClass;
        }
        DecoratedClass.prototype = new ctr();
        for (var m = 0; m < superMethods.length; m++) {
          var superMethod = superMethods[m];
          DecoratedClass.prototype[superMethod] = SuperClass.prototype[superMethod];
        }
        var calledMethod = function(methodName) {
          var originalMethod = function() {};
          if (methodName in DecoratedClass.prototype) {
            originalMethod = DecoratedClass.prototype[methodName];
          }
          var decoratedMethod = DecoratorClass.prototype[methodName];
          return function() {
            var unshift = Array.prototype.unshift;
            unshift.call(arguments, originalMethod);
            return decoratedMethod.apply(this, arguments);
          };
        };
        for (var d = 0; d < decoratedMethods.length; d++) {
          var decoratedMethod = decoratedMethods[d];
          DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);
        }
        return DecoratedClass;
      };
      var Observable = function() {
        this.listeners = {};
      };
      Observable.prototype.on = function(event, callback) {
        this.listeners = this.listeners || {};
        if (event in this.listeners) {
          this.listeners[event].push(callback);
        } else {
          this.listeners[event] = [callback];
        }
      };
      Observable.prototype.trigger = function(event) {
        var slice = Array.prototype.slice;
        this.listeners = this.listeners || {};
        if (event in this.listeners) {
          this.invoke(this.listeners[event], slice.call(arguments, 1));
        }
        if ('*' in this.listeners) {
          this.invoke(this.listeners['*'], arguments);
        }
      };
      Observable.prototype.invoke = function(listeners, params) {
        for (var i = 0,
            len = listeners.length; i < len; i++) {
          listeners[i].apply(this, params);
        }
      };
      Utils.Observable = Observable;
      Utils.generateChars = function(length) {
        var chars = '';
        for (var i = 0; i < length; i++) {
          var randomChar = Math.floor(Math.random() * 36);
          chars += randomChar.toString(36);
        }
        return chars;
      };
      Utils.bind = function(func, context) {
        return function() {
          func.apply(context, arguments);
        };
      };
      Utils._convertData = function(data) {
        for (var originalKey in data) {
          var keys = originalKey.split('-');
          var dataLevel = data;
          if (keys.length === 1) {
            continue;
          }
          for (var k = 0; k < keys.length; k++) {
            var key = keys[k];
            key = key.substring(0, 1).toLowerCase() + key.substring(1);
            if (!(key in dataLevel)) {
              dataLevel[key] = {};
            }
            if (k == keys.length - 1) {
              dataLevel[key] = data[originalKey];
            }
            dataLevel = dataLevel[key];
          }
          delete data[originalKey];
        }
        return data;
      };
      Utils.hasScroll = function(index, el) {
        var $el = $(el);
        var overflowX = el.style.overflowX;
        var overflowY = el.style.overflowY;
        if (overflowX === overflowY && (overflowY === 'hidden' || overflowY === 'visible')) {
          return false;
        }
        if (overflowX === 'scroll' || overflowY === 'scroll') {
          return true;
        }
        return ($el.innerHeight() < el.scrollHeight || $el.innerWidth() < el.scrollWidth);
      };
      Utils.escapeMarkup = function(markup) {
        var replaceMap = {
          '\\': '&#92;',
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          '\'': '&#39;',
          '/': '&#47;'
        };
        if (typeof markup !== 'string') {
          return markup;
        }
        return String(markup).replace(/[&<>"'\/\\]/g, function(match) {
          return replaceMap[match];
        });
      };
      Utils.appendMany = function($element, $nodes) {
        if ($.fn.jquery.substr(0, 3) === '1.7') {
          var $jqNodes = $();
          $.map($nodes, function(node) {
            $jqNodes = $jqNodes.add(node);
          });
          $nodes = $jqNodes;
        }
        $element.append($nodes);
      };
      return Utils;
    });
    S2.define('select2/results', ['jquery', './utils'], function($, Utils) {
      function Results($element, options, dataAdapter) {
        this.$element = $element;
        this.data = dataAdapter;
        this.options = options;
        Results.__super__.constructor.call(this);
      }
      Utils.Extend(Results, Utils.Observable);
      Results.prototype.render = function() {
        var $results = $('<ul class="select2-results__options" role="tree"></ul>');
        if (this.options.get('multiple')) {
          $results.attr('aria-multiselectable', 'true');
        }
        this.$results = $results;
        return $results;
      };
      Results.prototype.clear = function() {
        this.$results.empty();
      };
      Results.prototype.displayMessage = function(params) {
        var escapeMarkup = this.options.get('escapeMarkup');
        this.clear();
        this.hideLoading();
        var $message = $('<li role="treeitem" class="select2-results__option"></li>');
        var message = this.options.get('translations').get(params.message);
        $message.append(escapeMarkup(message(params.args)));
        this.$results.append($message);
      };
      Results.prototype.append = function(data) {
        this.hideLoading();
        var $options = [];
        if (data.results == null || data.results.length === 0) {
          if (this.$results.children().length === 0) {
            this.trigger('results:message', {message: 'noResults'});
          }
          return;
        }
        data.results = this.sort(data.results);
        for (var d = 0; d < data.results.length; d++) {
          var item = data.results[d];
          var $option = this.option(item);
          $options.push($option);
        }
        this.$results.append($options);
      };
      Results.prototype.position = function($results, $dropdown) {
        var $resultsContainer = $dropdown.find('.select2-results');
        $resultsContainer.append($results);
      };
      Results.prototype.sort = function(data) {
        var sorter = this.options.get('sorter');
        return sorter(data);
      };
      Results.prototype.setClasses = function() {
        var self = this;
        this.data.current(function(selected) {
          var selectedIds = $.map(selected, function(s) {
            return s.id.toString();
          });
          var $options = self.$results.find('.select2-results__option[aria-selected]');
          $options.each(function() {
            var $option = $(this);
            var item = $.data(this, 'data');
            var id = '' + item.id;
            if ((item.element != null && item.element.selected) || (item.element == null && $.inArray(id, selectedIds) > -1)) {
              $option.attr('aria-selected', 'true');
            } else {
              $option.attr('aria-selected', 'false');
            }
          });
          var $selected = $options.filter('[aria-selected=true]');
          if ($selected.length > 0) {
            $selected.first().trigger('mouseenter');
          } else {
            $options.first().trigger('mouseenter');
          }
        });
      };
      Results.prototype.showLoading = function(params) {
        this.hideLoading();
        var loadingMore = this.options.get('translations').get('searching');
        var loading = {
          disabled: true,
          loading: true,
          text: loadingMore(params)
        };
        var $loading = this.option(loading);
        $loading.className += ' loading-results';
        this.$results.prepend($loading);
      };
      Results.prototype.hideLoading = function() {
        this.$results.find('.loading-results').remove();
      };
      Results.prototype.option = function(data) {
        var option = document.createElement('li');
        option.className = 'select2-results__option';
        var attrs = {
          'role': 'treeitem',
          'aria-selected': 'false'
        };
        if (data.disabled) {
          delete attrs['aria-selected'];
          attrs['aria-disabled'] = 'true';
        }
        if (data.id == null) {
          delete attrs['aria-selected'];
        }
        if (data._resultId != null) {
          option.id = data._resultId;
        }
        if (data.title) {
          option.title = data.title;
        }
        if (data.children) {
          attrs.role = 'group';
          attrs['aria-label'] = data.text;
          delete attrs['aria-selected'];
        }
        for (var attr in attrs) {
          var val = attrs[attr];
          option.setAttribute(attr, val);
        }
        if (data.children) {
          var $option = $(option);
          var label = document.createElement('strong');
          label.className = 'select2-results__group';
          var $label = $(label);
          this.template(data, label);
          var $children = [];
          for (var c = 0; c < data.children.length; c++) {
            var child = data.children[c];
            var $child = this.option(child);
            $children.push($child);
          }
          var $childrenContainer = $('<ul></ul>', {'class': 'select2-results__options select2-results__options--nested'});
          $childrenContainer.append($children);
          $option.append(label);
          $option.append($childrenContainer);
        } else {
          this.template(data, option);
        }
        $.data(option, 'data', data);
        return option;
      };
      Results.prototype.bind = function(container, $container) {
        var self = this;
        var id = container.id + '-results';
        this.$results.attr('id', id);
        container.on('results:all', function(params) {
          self.clear();
          self.append(params.data);
          if (container.isOpen()) {
            self.setClasses();
          }
        });
        container.on('results:append', function(params) {
          self.append(params.data);
          if (container.isOpen()) {
            self.setClasses();
          }
        });
        container.on('query', function(params) {
          self.showLoading(params);
        });
        container.on('select', function() {
          if (!container.isOpen()) {
            return;
          }
          self.setClasses();
        });
        container.on('unselect', function() {
          if (!container.isOpen()) {
            return;
          }
          self.setClasses();
        });
        container.on('open', function() {
          self.$results.attr('aria-expanded', 'true');
          self.$results.attr('aria-hidden', 'false');
          self.setClasses();
          self.ensureHighlightVisible();
        });
        container.on('close', function() {
          self.$results.attr('aria-expanded', 'false');
          self.$results.attr('aria-hidden', 'true');
          self.$results.removeAttr('aria-activedescendant');
        });
        container.on('results:toggle', function() {
          var $highlighted = self.getHighlightedResults();
          if ($highlighted.length === 0) {
            return;
          }
          $highlighted.trigger('mouseup');
        });
        container.on('results:select', function() {
          var $highlighted = self.getHighlightedResults();
          if ($highlighted.length === 0) {
            return;
          }
          var data = $highlighted.data('data');
          if ($highlighted.attr('aria-selected') == 'true') {
            self.trigger('close');
          } else {
            self.trigger('select', {data: data});
          }
        });
        container.on('results:previous', function() {
          var $highlighted = self.getHighlightedResults();
          var $options = self.$results.find('[aria-selected]');
          var currentIndex = $options.index($highlighted);
          if (currentIndex === 0) {
            return;
          }
          var nextIndex = currentIndex - 1;
          if ($highlighted.length === 0) {
            nextIndex = 0;
          }
          var $next = $options.eq(nextIndex);
          $next.trigger('mouseenter');
          var currentOffset = self.$results.offset().top;
          var nextTop = $next.offset().top;
          var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);
          if (nextIndex === 0) {
            self.$results.scrollTop(0);
          } else if (nextTop - currentOffset < 0) {
            self.$results.scrollTop(nextOffset);
          }
        });
        container.on('results:next', function() {
          var $highlighted = self.getHighlightedResults();
          var $options = self.$results.find('[aria-selected]');
          var currentIndex = $options.index($highlighted);
          var nextIndex = currentIndex + 1;
          if (nextIndex >= $options.length) {
            return;
          }
          var $next = $options.eq(nextIndex);
          $next.trigger('mouseenter');
          var currentOffset = self.$results.offset().top + self.$results.outerHeight(false);
          var nextBottom = $next.offset().top + $next.outerHeight(false);
          var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;
          if (nextIndex === 0) {
            self.$results.scrollTop(0);
          } else if (nextBottom > currentOffset) {
            self.$results.scrollTop(nextOffset);
          }
        });
        container.on('results:focus', function(params) {
          params.element.addClass('select2-results__option--highlighted');
        });
        container.on('results:message', function(params) {
          self.displayMessage(params);
        });
        if ($.fn.mousewheel) {
          this.$results.on('mousewheel', function(e) {
            var top = self.$results.scrollTop();
            var bottom = (self.$results.get(0).scrollHeight - self.$results.scrollTop() + e.deltaY);
            var isAtTop = e.deltaY > 0 && top - e.deltaY <= 0;
            var isAtBottom = e.deltaY < 0 && bottom <= self.$results.height();
            if (isAtTop) {
              self.$results.scrollTop(0);
              e.preventDefault();
              e.stopPropagation();
            } else if (isAtBottom) {
              self.$results.scrollTop(self.$results.get(0).scrollHeight - self.$results.height());
              e.preventDefault();
              e.stopPropagation();
            }
          });
        }
        this.$results.on('mouseup', '.select2-results__option[aria-selected]', function(evt) {
          var $this = $(this);
          var data = $this.data('data');
          if ($this.attr('aria-selected') === 'true') {
            if (self.options.get('multiple')) {
              self.trigger('unselect', {
                originalEvent: evt,
                data: data
              });
            } else {
              self.trigger('close');
            }
            return;
          }
          self.trigger('select', {
            originalEvent: evt,
            data: data
          });
        });
        this.$results.on('mouseenter', '.select2-results__option[aria-selected]', function(evt) {
          var data = $(this).data('data');
          self.getHighlightedResults().removeClass('select2-results__option--highlighted');
          self.trigger('results:focus', {
            data: data,
            element: $(this)
          });
        });
      };
      Results.prototype.getHighlightedResults = function() {
        var $highlighted = this.$results.find('.select2-results__option--highlighted');
        return $highlighted;
      };
      Results.prototype.destroy = function() {
        this.$results.remove();
      };
      Results.prototype.ensureHighlightVisible = function() {
        var $highlighted = this.getHighlightedResults();
        if ($highlighted.length === 0) {
          return;
        }
        var $options = this.$results.find('[aria-selected]');
        var currentIndex = $options.index($highlighted);
        var currentOffset = this.$results.offset().top;
        var nextTop = $highlighted.offset().top;
        var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);
        var offsetDelta = nextTop - currentOffset;
        nextOffset -= $highlighted.outerHeight(false) * 2;
        if (currentIndex <= 2) {
          this.$results.scrollTop(0);
        } else if (offsetDelta > this.$results.outerHeight() || offsetDelta < 0) {
          this.$results.scrollTop(nextOffset);
        }
      };
      Results.prototype.template = function(result, container) {
        var template = this.options.get('templateResult');
        var escapeMarkup = this.options.get('escapeMarkup');
        var content = template(result);
        if (content == null) {
          container.style.display = 'none';
        } else if (typeof content === 'string') {
          container.innerHTML = escapeMarkup(content);
        } else {
          $(container).append(content);
        }
      };
      return Results;
    });
    S2.define('select2/keys', [], function() {
      var KEYS = {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        ESC: 27,
        SPACE: 32,
        PAGE_UP: 33,
        PAGE_DOWN: 34,
        END: 35,
        HOME: 36,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        DELETE: 46
      };
      return KEYS;
    });
    S2.define('select2/selection/base', ['jquery', '../utils', '../keys'], function($, Utils, KEYS) {
      function BaseSelection($element, options) {
        this.$element = $element;
        this.options = options;
        BaseSelection.__super__.constructor.call(this);
      }
      Utils.Extend(BaseSelection, Utils.Observable);
      BaseSelection.prototype.render = function() {
        var $selection = $('<span class="select2-selection" role="combobox" ' + 'aria-autocomplete="list" aria-haspopup="true" aria-expanded="false">' + '</span>');
        this._tabindex = 0;
        if (this.$element.data('old-tabindex') != null) {
          this._tabindex = this.$element.data('old-tabindex');
        } else if (this.$element.attr('tabindex') != null) {
          this._tabindex = this.$element.attr('tabindex');
        }
        $selection.attr('title', this.$element.attr('title'));
        $selection.attr('tabindex', this._tabindex);
        this.$selection = $selection;
        return $selection;
      };
      BaseSelection.prototype.bind = function(container, $container) {
        var self = this;
        var id = container.id + '-container';
        var resultsId = container.id + '-results';
        this.container = container;
        this.$selection.on('focus', function(evt) {
          self.trigger('focus', evt);
        });
        this.$selection.on('blur', function(evt) {
          self.trigger('blur', evt);
        });
        this.$selection.on('keydown', function(evt) {
          self.trigger('keypress', evt);
          if (evt.which === KEYS.SPACE) {
            evt.preventDefault();
          }
        });
        container.on('results:focus', function(params) {
          self.$selection.attr('aria-activedescendant', params.data._resultId);
        });
        container.on('selection:update', function(params) {
          self.update(params.data);
        });
        container.on('open', function() {
          self.$selection.attr('aria-expanded', 'true');
          self.$selection.attr('aria-owns', resultsId);
          self._attachCloseHandler(container);
        });
        container.on('close', function() {
          self.$selection.attr('aria-expanded', 'false');
          self.$selection.removeAttr('aria-activedescendant');
          self.$selection.removeAttr('aria-owns');
          self.$selection.focus();
          self._detachCloseHandler(container);
        });
        container.on('enable', function() {
          self.$selection.attr('tabindex', self._tabindex);
        });
        container.on('disable', function() {
          self.$selection.attr('tabindex', '-1');
        });
      };
      BaseSelection.prototype._attachCloseHandler = function(container) {
        var self = this;
        $(document.body).on('mousedown.select2.' + container.id, function(e) {
          var $target = $(e.target);
          var $select = $target.closest('.select2');
          var $all = $('.select2.select2-container--open');
          $all.each(function() {
            var $this = $(this);
            if (this == $select[0]) {
              return;
            }
            var $element = $this.data('element');
            $element.select2('close');
          });
        });
      };
      BaseSelection.prototype._detachCloseHandler = function(container) {
        $(document.body).off('mousedown.select2.' + container.id);
      };
      BaseSelection.prototype.position = function($selection, $container) {
        var $selectionContainer = $container.find('.selection');
        $selectionContainer.append($selection);
      };
      BaseSelection.prototype.destroy = function() {
        this._detachCloseHandler(this.container);
      };
      BaseSelection.prototype.update = function(data) {
        throw new Error('The `update` method must be defined in child classes.');
      };
      return BaseSelection;
    });
    S2.define('select2/selection/single', ['jquery', './base', '../utils', '../keys'], function($, BaseSelection, Utils, KEYS) {
      function SingleSelection() {
        SingleSelection.__super__.constructor.apply(this, arguments);
      }
      Utils.Extend(SingleSelection, BaseSelection);
      SingleSelection.prototype.render = function() {
        var $selection = SingleSelection.__super__.render.call(this);
        $selection.addClass('select2-selection--single');
        $selection.html('<span class="select2-selection__rendered"></span>' + '<span class="select2-selection__arrow" role="presentation">' + '<b role="presentation"></b>' + '</span>');
        return $selection;
      };
      SingleSelection.prototype.bind = function(container, $container) {
        var self = this;
        SingleSelection.__super__.bind.apply(this, arguments);
        var id = container.id + '-container';
        this.$selection.find('.select2-selection__rendered').attr('id', id);
        this.$selection.attr('aria-labelledby', id);
        this.$selection.on('mousedown', function(evt) {
          if (evt.which !== 1) {
            return;
          }
          self.trigger('toggle', {originalEvent: evt});
        });
        this.$selection.on('focus', function(evt) {});
        this.$selection.on('blur', function(evt) {});
        container.on('selection:update', function(params) {
          self.update(params.data);
        });
      };
      SingleSelection.prototype.clear = function() {
        this.$selection.find('.select2-selection__rendered').empty();
      };
      SingleSelection.prototype.display = function(data) {
        var template = this.options.get('templateSelection');
        var escapeMarkup = this.options.get('escapeMarkup');
        return escapeMarkup(template(data));
      };
      SingleSelection.prototype.selectionContainer = function() {
        return $('<span></span>');
      };
      SingleSelection.prototype.update = function(data) {
        if (data.length === 0) {
          this.clear();
          return;
        }
        var selection = data[0];
        var formatted = this.display(selection);
        var $rendered = this.$selection.find('.select2-selection__rendered');
        $rendered.empty().append(formatted);
        $rendered.prop('title', selection.title || selection.text);
      };
      return SingleSelection;
    });
    S2.define('select2/selection/multiple', ['jquery', './base', '../utils'], function($, BaseSelection, Utils) {
      function MultipleSelection($element, options) {
        MultipleSelection.__super__.constructor.apply(this, arguments);
      }
      Utils.Extend(MultipleSelection, BaseSelection);
      MultipleSelection.prototype.render = function() {
        var $selection = MultipleSelection.__super__.render.call(this);
        $selection.addClass('select2-selection--multiple');
        $selection.html('<ul class="select2-selection__rendered"></ul>');
        return $selection;
      };
      MultipleSelection.prototype.bind = function(container, $container) {
        var self = this;
        MultipleSelection.__super__.bind.apply(this, arguments);
        this.$selection.on('click', function(evt) {
          self.trigger('toggle', {originalEvent: evt});
        });
        this.$selection.on('click', '.select2-selection__choice__remove', function(evt) {
          var $remove = $(this);
          var $selection = $remove.parent();
          var data = $selection.data('data');
          self.trigger('unselect', {
            originalEvent: evt,
            data: data
          });
        });
      };
      MultipleSelection.prototype.clear = function() {
        this.$selection.find('.select2-selection__rendered').empty();
      };
      MultipleSelection.prototype.display = function(data) {
        var template = this.options.get('templateSelection');
        var escapeMarkup = this.options.get('escapeMarkup');
        return escapeMarkup(template(data));
      };
      MultipleSelection.prototype.selectionContainer = function() {
        var $container = $('<li class="select2-selection__choice">' + '<span class="select2-selection__choice__remove" role="presentation">' + '&times;' + '</span>' + '</li>');
        return $container;
      };
      MultipleSelection.prototype.update = function(data) {
        this.clear();
        if (data.length === 0) {
          return;
        }
        var $selections = [];
        for (var d = 0; d < data.length; d++) {
          var selection = data[d];
          var formatted = this.display(selection);
          var $selection = this.selectionContainer();
          $selection.append(formatted);
          $selection.prop('title', selection.title || selection.text);
          $selection.data('data', selection);
          $selections.push($selection);
        }
        var $rendered = this.$selection.find('.select2-selection__rendered');
        Utils.appendMany($rendered, $selections);
      };
      return MultipleSelection;
    });
    S2.define('select2/selection/placeholder', ['../utils'], function(Utils) {
      function Placeholder(decorated, $element, options) {
        this.placeholder = this.normalizePlaceholder(options.get('placeholder'));
        decorated.call(this, $element, options);
      }
      Placeholder.prototype.normalizePlaceholder = function(_, placeholder) {
        if (typeof placeholder === 'string') {
          placeholder = {
            id: '',
            text: placeholder
          };
        }
        return placeholder;
      };
      Placeholder.prototype.createPlaceholder = function(decorated, placeholder) {
        var $placeholder = this.selectionContainer();
        $placeholder.html(this.display(placeholder));
        $placeholder.addClass('select2-selection__placeholder').removeClass('select2-selection__choice');
        return $placeholder;
      };
      Placeholder.prototype.update = function(decorated, data) {
        var singlePlaceholder = (data.length == 1 && data[0].id != this.placeholder.id);
        var multipleSelections = data.length > 1;
        if (multipleSelections || singlePlaceholder) {
          return decorated.call(this, data);
        }
        this.clear();
        var $placeholder = this.createPlaceholder(this.placeholder);
        this.$selection.find('.select2-selection__rendered').append($placeholder);
      };
      return Placeholder;
    });
    S2.define('select2/selection/allowClear', ['jquery', '../keys'], function($, KEYS) {
      function AllowClear() {}
      AllowClear.prototype.bind = function(decorated, container, $container) {
        var self = this;
        decorated.call(this, container, $container);
        if (this.placeholder == null) {
          if (this.options.get('debug') && window.console && console.error) {
            console.error('Select2: The `allowClear` option should be used in combination ' + 'with the `placeholder` option.');
          }
        }
        this.$selection.on('mousedown', '.select2-selection__clear', function(evt) {
          self._handleClear(evt);
        });
        container.on('keypress', function(evt) {
          self._handleKeyboardClear(evt, container);
        });
      };
      AllowClear.prototype._handleClear = function(_, evt) {
        if (this.options.get('disabled')) {
          return;
        }
        var $clear = this.$selection.find('.select2-selection__clear');
        if ($clear.length === 0) {
          return;
        }
        evt.stopPropagation();
        var data = $clear.data('data');
        for (var d = 0; d < data.length; d++) {
          var unselectData = {data: data[d]};
          this.trigger('unselect', unselectData);
          if (unselectData.prevented) {
            return;
          }
        }
        this.$element.val(this.placeholder.id).trigger('change');
        this.trigger('toggle');
      };
      AllowClear.prototype._handleKeyboardClear = function(_, evt, container) {
        if (container.isOpen()) {
          return;
        }
        if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {
          this._handleClear(evt);
        }
      };
      AllowClear.prototype.update = function(decorated, data) {
        decorated.call(this, data);
        if (this.$selection.find('.select2-selection__placeholder').length > 0 || data.length === 0) {
          return;
        }
        var $remove = $('<span class="select2-selection__clear">' + '&times;' + '</span>');
        $remove.data('data', data);
        this.$selection.find('.select2-selection__rendered').prepend($remove);
      };
      return AllowClear;
    });
    S2.define('select2/selection/search', ['jquery', '../utils', '../keys'], function($, Utils, KEYS) {
      function Search(decorated, $element, options) {
        decorated.call(this, $element, options);
      }
      Search.prototype.render = function(decorated) {
        var $search = $('<li class="select2-search select2-search--inline">' + '<input class="select2-search__field" type="search" tabindex="-1"' + ' autocomplete="off" autocorrect="off" autocapitalize="off"' + ' spellcheck="false" role="textbox" />' + '</li>');
        this.$searchContainer = $search;
        this.$search = $search.find('input');
        var $rendered = decorated.call(this);
        return $rendered;
      };
      Search.prototype.bind = function(decorated, container, $container) {
        var self = this;
        decorated.call(this, container, $container);
        container.on('open', function() {
          self.$search.attr('tabindex', 0);
          self.$search.focus();
        });
        container.on('close', function() {
          self.$search.attr('tabindex', -1);
          self.$search.val('');
          self.$search.focus();
        });
        container.on('enable', function() {
          self.$search.prop('disabled', false);
        });
        container.on('disable', function() {
          self.$search.prop('disabled', true);
        });
        this.$selection.on('focusin', '.select2-search--inline', function(evt) {
          self.trigger('focus', evt);
        });
        this.$selection.on('focusout', '.select2-search--inline', function(evt) {
          self.trigger('blur', evt);
        });
        this.$selection.on('keydown', '.select2-search--inline', function(evt) {
          evt.stopPropagation();
          self.trigger('keypress', evt);
          self._keyUpPrevented = evt.isDefaultPrevented();
          var key = evt.which;
          if (key === KEYS.BACKSPACE && self.$search.val() === '') {
            var $previousChoice = self.$searchContainer.prev('.select2-selection__choice');
            if ($previousChoice.length > 0) {
              var item = $previousChoice.data('data');
              self.searchRemoveChoice(item);
              evt.preventDefault();
            }
          }
        });
        this.$selection.on('input', '.select2-search--inline', function(evt) {
          self.$selection.off('keyup.search');
        });
        this.$selection.on('keyup.search input', '.select2-search--inline', function(evt) {
          self.handleSearch(evt);
        });
      };
      Search.prototype.createPlaceholder = function(decorated, placeholder) {
        this.$search.attr('placeholder', placeholder.text);
      };
      Search.prototype.update = function(decorated, data) {
        this.$search.attr('placeholder', '');
        decorated.call(this, data);
        this.$selection.find('.select2-selection__rendered').append(this.$searchContainer);
        this.resizeSearch();
      };
      Search.prototype.handleSearch = function() {
        this.resizeSearch();
        if (!this._keyUpPrevented) {
          var input = this.$search.val();
          this.trigger('query', {term: input});
        }
        this._keyUpPrevented = false;
      };
      Search.prototype.searchRemoveChoice = function(decorated, item) {
        this.trigger('unselect', {data: item});
        this.trigger('open');
        this.$search.val(item.text + ' ');
      };
      Search.prototype.resizeSearch = function() {
        this.$search.css('width', '25px');
        var width = '';
        if (this.$search.attr('placeholder') !== '') {
          width = this.$selection.find('.select2-selection__rendered').innerWidth();
        } else {
          var minimumWidth = this.$search.val().length + 1;
          width = (minimumWidth * 0.75) + 'em';
        }
        this.$search.css('width', width);
      };
      return Search;
    });
    S2.define('select2/selection/eventRelay', ['jquery'], function($) {
      function EventRelay() {}
      EventRelay.prototype.bind = function(decorated, container, $container) {
        var self = this;
        var relayEvents = ['open', 'opening', 'close', 'closing', 'select', 'selecting', 'unselect', 'unselecting'];
        var preventableEvents = ['opening', 'closing', 'selecting', 'unselecting'];
        decorated.call(this, container, $container);
        container.on('*', function(name, params) {
          if ($.inArray(name, relayEvents) === -1) {
            return;
          }
          params = params || {};
          var evt = $.Event('select2:' + name, {params: params});
          self.$element.trigger(evt);
          if ($.inArray(name, preventableEvents) === -1) {
            return;
          }
          params.prevented = evt.isDefaultPrevented();
        });
      };
      return EventRelay;
    });
    S2.define('select2/translation', ['jquery', 'require'], function($, require) {
      function Translation(dict) {
        this.dict = dict || {};
      }
      Translation.prototype.all = function() {
        return this.dict;
      };
      Translation.prototype.get = function(key) {
        return this.dict[key];
      };
      Translation.prototype.extend = function(translation) {
        this.dict = $.extend({}, translation.all(), this.dict);
      };
      Translation._cache = {};
      Translation.loadPath = function(path) {
        if (!(path in Translation._cache)) {
          var translations = require(path);
          Translation._cache[path] = translations;
        }
        return new Translation(Translation._cache[path]);
      };
      return Translation;
    });
    S2.define('select2/diacritics', [], function() {
      var diacritics = {
        '\u24B6': 'A',
        '\uFF21': 'A',
        '\u00C0': 'A',
        '\u00C1': 'A',
        '\u00C2': 'A',
        '\u1EA6': 'A',
        '\u1EA4': 'A',
        '\u1EAA': 'A',
        '\u1EA8': 'A',
        '\u00C3': 'A',
        '\u0100': 'A',
        '\u0102': 'A',
        '\u1EB0': 'A',
        '\u1EAE': 'A',
        '\u1EB4': 'A',
        '\u1EB2': 'A',
        '\u0226': 'A',
        '\u01E0': 'A',
        '\u00C4': 'A',
        '\u01DE': 'A',
        '\u1EA2': 'A',
        '\u00C5': 'A',
        '\u01FA': 'A',
        '\u01CD': 'A',
        '\u0200': 'A',
        '\u0202': 'A',
        '\u1EA0': 'A',
        '\u1EAC': 'A',
        '\u1EB6': 'A',
        '\u1E00': 'A',
        '\u0104': 'A',
        '\u023A': 'A',
        '\u2C6F': 'A',
        '\uA732': 'AA',
        '\u00C6': 'AE',
        '\u01FC': 'AE',
        '\u01E2': 'AE',
        '\uA734': 'AO',
        '\uA736': 'AU',
        '\uA738': 'AV',
        '\uA73A': 'AV',
        '\uA73C': 'AY',
        '\u24B7': 'B',
        '\uFF22': 'B',
        '\u1E02': 'B',
        '\u1E04': 'B',
        '\u1E06': 'B',
        '\u0243': 'B',
        '\u0182': 'B',
        '\u0181': 'B',
        '\u24B8': 'C',
        '\uFF23': 'C',
        '\u0106': 'C',
        '\u0108': 'C',
        '\u010A': 'C',
        '\u010C': 'C',
        '\u00C7': 'C',
        '\u1E08': 'C',
        '\u0187': 'C',
        '\u023B': 'C',
        '\uA73E': 'C',
        '\u24B9': 'D',
        '\uFF24': 'D',
        '\u1E0A': 'D',
        '\u010E': 'D',
        '\u1E0C': 'D',
        '\u1E10': 'D',
        '\u1E12': 'D',
        '\u1E0E': 'D',
        '\u0110': 'D',
        '\u018B': 'D',
        '\u018A': 'D',
        '\u0189': 'D',
        '\uA779': 'D',
        '\u01F1': 'DZ',
        '\u01C4': 'DZ',
        '\u01F2': 'Dz',
        '\u01C5': 'Dz',
        '\u24BA': 'E',
        '\uFF25': 'E',
        '\u00C8': 'E',
        '\u00C9': 'E',
        '\u00CA': 'E',
        '\u1EC0': 'E',
        '\u1EBE': 'E',
        '\u1EC4': 'E',
        '\u1EC2': 'E',
        '\u1EBC': 'E',
        '\u0112': 'E',
        '\u1E14': 'E',
        '\u1E16': 'E',
        '\u0114': 'E',
        '\u0116': 'E',
        '\u00CB': 'E',
        '\u1EBA': 'E',
        '\u011A': 'E',
        '\u0204': 'E',
        '\u0206': 'E',
        '\u1EB8': 'E',
        '\u1EC6': 'E',
        '\u0228': 'E',
        '\u1E1C': 'E',
        '\u0118': 'E',
        '\u1E18': 'E',
        '\u1E1A': 'E',
        '\u0190': 'E',
        '\u018E': 'E',
        '\u24BB': 'F',
        '\uFF26': 'F',
        '\u1E1E': 'F',
        '\u0191': 'F',
        '\uA77B': 'F',
        '\u24BC': 'G',
        '\uFF27': 'G',
        '\u01F4': 'G',
        '\u011C': 'G',
        '\u1E20': 'G',
        '\u011E': 'G',
        '\u0120': 'G',
        '\u01E6': 'G',
        '\u0122': 'G',
        '\u01E4': 'G',
        '\u0193': 'G',
        '\uA7A0': 'G',
        '\uA77D': 'G',
        '\uA77E': 'G',
        '\u24BD': 'H',
        '\uFF28': 'H',
        '\u0124': 'H',
        '\u1E22': 'H',
        '\u1E26': 'H',
        '\u021E': 'H',
        '\u1E24': 'H',
        '\u1E28': 'H',
        '\u1E2A': 'H',
        '\u0126': 'H',
        '\u2C67': 'H',
        '\u2C75': 'H',
        '\uA78D': 'H',
        '\u24BE': 'I',
        '\uFF29': 'I',
        '\u00CC': 'I',
        '\u00CD': 'I',
        '\u00CE': 'I',
        '\u0128': 'I',
        '\u012A': 'I',
        '\u012C': 'I',
        '\u0130': 'I',
        '\u00CF': 'I',
        '\u1E2E': 'I',
        '\u1EC8': 'I',
        '\u01CF': 'I',
        '\u0208': 'I',
        '\u020A': 'I',
        '\u1ECA': 'I',
        '\u012E': 'I',
        '\u1E2C': 'I',
        '\u0197': 'I',
        '\u24BF': 'J',
        '\uFF2A': 'J',
        '\u0134': 'J',
        '\u0248': 'J',
        '\u24C0': 'K',
        '\uFF2B': 'K',
        '\u1E30': 'K',
        '\u01E8': 'K',
        '\u1E32': 'K',
        '\u0136': 'K',
        '\u1E34': 'K',
        '\u0198': 'K',
        '\u2C69': 'K',
        '\uA740': 'K',
        '\uA742': 'K',
        '\uA744': 'K',
        '\uA7A2': 'K',
        '\u24C1': 'L',
        '\uFF2C': 'L',
        '\u013F': 'L',
        '\u0139': 'L',
        '\u013D': 'L',
        '\u1E36': 'L',
        '\u1E38': 'L',
        '\u013B': 'L',
        '\u1E3C': 'L',
        '\u1E3A': 'L',
        '\u0141': 'L',
        '\u023D': 'L',
        '\u2C62': 'L',
        '\u2C60': 'L',
        '\uA748': 'L',
        '\uA746': 'L',
        '\uA780': 'L',
        '\u01C7': 'LJ',
        '\u01C8': 'Lj',
        '\u24C2': 'M',
        '\uFF2D': 'M',
        '\u1E3E': 'M',
        '\u1E40': 'M',
        '\u1E42': 'M',
        '\u2C6E': 'M',
        '\u019C': 'M',
        '\u24C3': 'N',
        '\uFF2E': 'N',
        '\u01F8': 'N',
        '\u0143': 'N',
        '\u00D1': 'N',
        '\u1E44': 'N',
        '\u0147': 'N',
        '\u1E46': 'N',
        '\u0145': 'N',
        '\u1E4A': 'N',
        '\u1E48': 'N',
        '\u0220': 'N',
        '\u019D': 'N',
        '\uA790': 'N',
        '\uA7A4': 'N',
        '\u01CA': 'NJ',
        '\u01CB': 'Nj',
        '\u24C4': 'O',
        '\uFF2F': 'O',
        '\u00D2': 'O',
        '\u00D3': 'O',
        '\u00D4': 'O',
        '\u1ED2': 'O',
        '\u1ED0': 'O',
        '\u1ED6': 'O',
        '\u1ED4': 'O',
        '\u00D5': 'O',
        '\u1E4C': 'O',
        '\u022C': 'O',
        '\u1E4E': 'O',
        '\u014C': 'O',
        '\u1E50': 'O',
        '\u1E52': 'O',
        '\u014E': 'O',
        '\u022E': 'O',
        '\u0230': 'O',
        '\u00D6': 'O',
        '\u022A': 'O',
        '\u1ECE': 'O',
        '\u0150': 'O',
        '\u01D1': 'O',
        '\u020C': 'O',
        '\u020E': 'O',
        '\u01A0': 'O',
        '\u1EDC': 'O',
        '\u1EDA': 'O',
        '\u1EE0': 'O',
        '\u1EDE': 'O',
        '\u1EE2': 'O',
        '\u1ECC': 'O',
        '\u1ED8': 'O',
        '\u01EA': 'O',
        '\u01EC': 'O',
        '\u00D8': 'O',
        '\u01FE': 'O',
        '\u0186': 'O',
        '\u019F': 'O',
        '\uA74A': 'O',
        '\uA74C': 'O',
        '\u01A2': 'OI',
        '\uA74E': 'OO',
        '\u0222': 'OU',
        '\u24C5': 'P',
        '\uFF30': 'P',
        '\u1E54': 'P',
        '\u1E56': 'P',
        '\u01A4': 'P',
        '\u2C63': 'P',
        '\uA750': 'P',
        '\uA752': 'P',
        '\uA754': 'P',
        '\u24C6': 'Q',
        '\uFF31': 'Q',
        '\uA756': 'Q',
        '\uA758': 'Q',
        '\u024A': 'Q',
        '\u24C7': 'R',
        '\uFF32': 'R',
        '\u0154': 'R',
        '\u1E58': 'R',
        '\u0158': 'R',
        '\u0210': 'R',
        '\u0212': 'R',
        '\u1E5A': 'R',
        '\u1E5C': 'R',
        '\u0156': 'R',
        '\u1E5E': 'R',
        '\u024C': 'R',
        '\u2C64': 'R',
        '\uA75A': 'R',
        '\uA7A6': 'R',
        '\uA782': 'R',
        '\u24C8': 'S',
        '\uFF33': 'S',
        '\u1E9E': 'S',
        '\u015A': 'S',
        '\u1E64': 'S',
        '\u015C': 'S',
        '\u1E60': 'S',
        '\u0160': 'S',
        '\u1E66': 'S',
        '\u1E62': 'S',
        '\u1E68': 'S',
        '\u0218': 'S',
        '\u015E': 'S',
        '\u2C7E': 'S',
        '\uA7A8': 'S',
        '\uA784': 'S',
        '\u24C9': 'T',
        '\uFF34': 'T',
        '\u1E6A': 'T',
        '\u0164': 'T',
        '\u1E6C': 'T',
        '\u021A': 'T',
        '\u0162': 'T',
        '\u1E70': 'T',
        '\u1E6E': 'T',
        '\u0166': 'T',
        '\u01AC': 'T',
        '\u01AE': 'T',
        '\u023E': 'T',
        '\uA786': 'T',
        '\uA728': 'TZ',
        '\u24CA': 'U',
        '\uFF35': 'U',
        '\u00D9': 'U',
        '\u00DA': 'U',
        '\u00DB': 'U',
        '\u0168': 'U',
        '\u1E78': 'U',
        '\u016A': 'U',
        '\u1E7A': 'U',
        '\u016C': 'U',
        '\u00DC': 'U',
        '\u01DB': 'U',
        '\u01D7': 'U',
        '\u01D5': 'U',
        '\u01D9': 'U',
        '\u1EE6': 'U',
        '\u016E': 'U',
        '\u0170': 'U',
        '\u01D3': 'U',
        '\u0214': 'U',
        '\u0216': 'U',
        '\u01AF': 'U',
        '\u1EEA': 'U',
        '\u1EE8': 'U',
        '\u1EEE': 'U',
        '\u1EEC': 'U',
        '\u1EF0': 'U',
        '\u1EE4': 'U',
        '\u1E72': 'U',
        '\u0172': 'U',
        '\u1E76': 'U',
        '\u1E74': 'U',
        '\u0244': 'U',
        '\u24CB': 'V',
        '\uFF36': 'V',
        '\u1E7C': 'V',
        '\u1E7E': 'V',
        '\u01B2': 'V',
        '\uA75E': 'V',
        '\u0245': 'V',
        '\uA760': 'VY',
        '\u24CC': 'W',
        '\uFF37': 'W',
        '\u1E80': 'W',
        '\u1E82': 'W',
        '\u0174': 'W',
        '\u1E86': 'W',
        '\u1E84': 'W',
        '\u1E88': 'W',
        '\u2C72': 'W',
        '\u24CD': 'X',
        '\uFF38': 'X',
        '\u1E8A': 'X',
        '\u1E8C': 'X',
        '\u24CE': 'Y',
        '\uFF39': 'Y',
        '\u1EF2': 'Y',
        '\u00DD': 'Y',
        '\u0176': 'Y',
        '\u1EF8': 'Y',
        '\u0232': 'Y',
        '\u1E8E': 'Y',
        '\u0178': 'Y',
        '\u1EF6': 'Y',
        '\u1EF4': 'Y',
        '\u01B3': 'Y',
        '\u024E': 'Y',
        '\u1EFE': 'Y',
        '\u24CF': 'Z',
        '\uFF3A': 'Z',
        '\u0179': 'Z',
        '\u1E90': 'Z',
        '\u017B': 'Z',
        '\u017D': 'Z',
        '\u1E92': 'Z',
        '\u1E94': 'Z',
        '\u01B5': 'Z',
        '\u0224': 'Z',
        '\u2C7F': 'Z',
        '\u2C6B': 'Z',
        '\uA762': 'Z',
        '\u24D0': 'a',
        '\uFF41': 'a',
        '\u1E9A': 'a',
        '\u00E0': 'a',
        '\u00E1': 'a',
        '\u00E2': 'a',
        '\u1EA7': 'a',
        '\u1EA5': 'a',
        '\u1EAB': 'a',
        '\u1EA9': 'a',
        '\u00E3': 'a',
        '\u0101': 'a',
        '\u0103': 'a',
        '\u1EB1': 'a',
        '\u1EAF': 'a',
        '\u1EB5': 'a',
        '\u1EB3': 'a',
        '\u0227': 'a',
        '\u01E1': 'a',
        '\u00E4': 'a',
        '\u01DF': 'a',
        '\u1EA3': 'a',
        '\u00E5': 'a',
        '\u01FB': 'a',
        '\u01CE': 'a',
        '\u0201': 'a',
        '\u0203': 'a',
        '\u1EA1': 'a',
        '\u1EAD': 'a',
        '\u1EB7': 'a',
        '\u1E01': 'a',
        '\u0105': 'a',
        '\u2C65': 'a',
        '\u0250': 'a',
        '\uA733': 'aa',
        '\u00E6': 'ae',
        '\u01FD': 'ae',
        '\u01E3': 'ae',
        '\uA735': 'ao',
        '\uA737': 'au',
        '\uA739': 'av',
        '\uA73B': 'av',
        '\uA73D': 'ay',
        '\u24D1': 'b',
        '\uFF42': 'b',
        '\u1E03': 'b',
        '\u1E05': 'b',
        '\u1E07': 'b',
        '\u0180': 'b',
        '\u0183': 'b',
        '\u0253': 'b',
        '\u24D2': 'c',
        '\uFF43': 'c',
        '\u0107': 'c',
        '\u0109': 'c',
        '\u010B': 'c',
        '\u010D': 'c',
        '\u00E7': 'c',
        '\u1E09': 'c',
        '\u0188': 'c',
        '\u023C': 'c',
        '\uA73F': 'c',
        '\u2184': 'c',
        '\u24D3': 'd',
        '\uFF44': 'd',
        '\u1E0B': 'd',
        '\u010F': 'd',
        '\u1E0D': 'd',
        '\u1E11': 'd',
        '\u1E13': 'd',
        '\u1E0F': 'd',
        '\u0111': 'd',
        '\u018C': 'd',
        '\u0256': 'd',
        '\u0257': 'd',
        '\uA77A': 'd',
        '\u01F3': 'dz',
        '\u01C6': 'dz',
        '\u24D4': 'e',
        '\uFF45': 'e',
        '\u00E8': 'e',
        '\u00E9': 'e',
        '\u00EA': 'e',
        '\u1EC1': 'e',
        '\u1EBF': 'e',
        '\u1EC5': 'e',
        '\u1EC3': 'e',
        '\u1EBD': 'e',
        '\u0113': 'e',
        '\u1E15': 'e',
        '\u1E17': 'e',
        '\u0115': 'e',
        '\u0117': 'e',
        '\u00EB': 'e',
        '\u1EBB': 'e',
        '\u011B': 'e',
        '\u0205': 'e',
        '\u0207': 'e',
        '\u1EB9': 'e',
        '\u1EC7': 'e',
        '\u0229': 'e',
        '\u1E1D': 'e',
        '\u0119': 'e',
        '\u1E19': 'e',
        '\u1E1B': 'e',
        '\u0247': 'e',
        '\u025B': 'e',
        '\u01DD': 'e',
        '\u24D5': 'f',
        '\uFF46': 'f',
        '\u1E1F': 'f',
        '\u0192': 'f',
        '\uA77C': 'f',
        '\u24D6': 'g',
        '\uFF47': 'g',
        '\u01F5': 'g',
        '\u011D': 'g',
        '\u1E21': 'g',
        '\u011F': 'g',
        '\u0121': 'g',
        '\u01E7': 'g',
        '\u0123': 'g',
        '\u01E5': 'g',
        '\u0260': 'g',
        '\uA7A1': 'g',
        '\u1D79': 'g',
        '\uA77F': 'g',
        '\u24D7': 'h',
        '\uFF48': 'h',
        '\u0125': 'h',
        '\u1E23': 'h',
        '\u1E27': 'h',
        '\u021F': 'h',
        '\u1E25': 'h',
        '\u1E29': 'h',
        '\u1E2B': 'h',
        '\u1E96': 'h',
        '\u0127': 'h',
        '\u2C68': 'h',
        '\u2C76': 'h',
        '\u0265': 'h',
        '\u0195': 'hv',
        '\u24D8': 'i',
        '\uFF49': 'i',
        '\u00EC': 'i',
        '\u00ED': 'i',
        '\u00EE': 'i',
        '\u0129': 'i',
        '\u012B': 'i',
        '\u012D': 'i',
        '\u00EF': 'i',
        '\u1E2F': 'i',
        '\u1EC9': 'i',
        '\u01D0': 'i',
        '\u0209': 'i',
        '\u020B': 'i',
        '\u1ECB': 'i',
        '\u012F': 'i',
        '\u1E2D': 'i',
        '\u0268': 'i',
        '\u0131': 'i',
        '\u24D9': 'j',
        '\uFF4A': 'j',
        '\u0135': 'j',
        '\u01F0': 'j',
        '\u0249': 'j',
        '\u24DA': 'k',
        '\uFF4B': 'k',
        '\u1E31': 'k',
        '\u01E9': 'k',
        '\u1E33': 'k',
        '\u0137': 'k',
        '\u1E35': 'k',
        '\u0199': 'k',
        '\u2C6A': 'k',
        '\uA741': 'k',
        '\uA743': 'k',
        '\uA745': 'k',
        '\uA7A3': 'k',
        '\u24DB': 'l',
        '\uFF4C': 'l',
        '\u0140': 'l',
        '\u013A': 'l',
        '\u013E': 'l',
        '\u1E37': 'l',
        '\u1E39': 'l',
        '\u013C': 'l',
        '\u1E3D': 'l',
        '\u1E3B': 'l',
        '\u017F': 'l',
        '\u0142': 'l',
        '\u019A': 'l',
        '\u026B': 'l',
        '\u2C61': 'l',
        '\uA749': 'l',
        '\uA781': 'l',
        '\uA747': 'l',
        '\u01C9': 'lj',
        '\u24DC': 'm',
        '\uFF4D': 'm',
        '\u1E3F': 'm',
        '\u1E41': 'm',
        '\u1E43': 'm',
        '\u0271': 'm',
        '\u026F': 'm',
        '\u24DD': 'n',
        '\uFF4E': 'n',
        '\u01F9': 'n',
        '\u0144': 'n',
        '\u00F1': 'n',
        '\u1E45': 'n',
        '\u0148': 'n',
        '\u1E47': 'n',
        '\u0146': 'n',
        '\u1E4B': 'n',
        '\u1E49': 'n',
        '\u019E': 'n',
        '\u0272': 'n',
        '\u0149': 'n',
        '\uA791': 'n',
        '\uA7A5': 'n',
        '\u01CC': 'nj',
        '\u24DE': 'o',
        '\uFF4F': 'o',
        '\u00F2': 'o',
        '\u00F3': 'o',
        '\u00F4': 'o',
        '\u1ED3': 'o',
        '\u1ED1': 'o',
        '\u1ED7': 'o',
        '\u1ED5': 'o',
        '\u00F5': 'o',
        '\u1E4D': 'o',
        '\u022D': 'o',
        '\u1E4F': 'o',
        '\u014D': 'o',
        '\u1E51': 'o',
        '\u1E53': 'o',
        '\u014F': 'o',
        '\u022F': 'o',
        '\u0231': 'o',
        '\u00F6': 'o',
        '\u022B': 'o',
        '\u1ECF': 'o',
        '\u0151': 'o',
        '\u01D2': 'o',
        '\u020D': 'o',
        '\u020F': 'o',
        '\u01A1': 'o',
        '\u1EDD': 'o',
        '\u1EDB': 'o',
        '\u1EE1': 'o',
        '\u1EDF': 'o',
        '\u1EE3': 'o',
        '\u1ECD': 'o',
        '\u1ED9': 'o',
        '\u01EB': 'o',
        '\u01ED': 'o',
        '\u00F8': 'o',
        '\u01FF': 'o',
        '\u0254': 'o',
        '\uA74B': 'o',
        '\uA74D': 'o',
        '\u0275': 'o',
        '\u01A3': 'oi',
        '\u0223': 'ou',
        '\uA74F': 'oo',
        '\u24DF': 'p',
        '\uFF50': 'p',
        '\u1E55': 'p',
        '\u1E57': 'p',
        '\u01A5': 'p',
        '\u1D7D': 'p',
        '\uA751': 'p',
        '\uA753': 'p',
        '\uA755': 'p',
        '\u24E0': 'q',
        '\uFF51': 'q',
        '\u024B': 'q',
        '\uA757': 'q',
        '\uA759': 'q',
        '\u24E1': 'r',
        '\uFF52': 'r',
        '\u0155': 'r',
        '\u1E59': 'r',
        '\u0159': 'r',
        '\u0211': 'r',
        '\u0213': 'r',
        '\u1E5B': 'r',
        '\u1E5D': 'r',
        '\u0157': 'r',
        '\u1E5F': 'r',
        '\u024D': 'r',
        '\u027D': 'r',
        '\uA75B': 'r',
        '\uA7A7': 'r',
        '\uA783': 'r',
        '\u24E2': 's',
        '\uFF53': 's',
        '\u00DF': 's',
        '\u015B': 's',
        '\u1E65': 's',
        '\u015D': 's',
        '\u1E61': 's',
        '\u0161': 's',
        '\u1E67': 's',
        '\u1E63': 's',
        '\u1E69': 's',
        '\u0219': 's',
        '\u015F': 's',
        '\u023F': 's',
        '\uA7A9': 's',
        '\uA785': 's',
        '\u1E9B': 's',
        '\u24E3': 't',
        '\uFF54': 't',
        '\u1E6B': 't',
        '\u1E97': 't',
        '\u0165': 't',
        '\u1E6D': 't',
        '\u021B': 't',
        '\u0163': 't',
        '\u1E71': 't',
        '\u1E6F': 't',
        '\u0167': 't',
        '\u01AD': 't',
        '\u0288': 't',
        '\u2C66': 't',
        '\uA787': 't',
        '\uA729': 'tz',
        '\u24E4': 'u',
        '\uFF55': 'u',
        '\u00F9': 'u',
        '\u00FA': 'u',
        '\u00FB': 'u',
        '\u0169': 'u',
        '\u1E79': 'u',
        '\u016B': 'u',
        '\u1E7B': 'u',
        '\u016D': 'u',
        '\u00FC': 'u',
        '\u01DC': 'u',
        '\u01D8': 'u',
        '\u01D6': 'u',
        '\u01DA': 'u',
        '\u1EE7': 'u',
        '\u016F': 'u',
        '\u0171': 'u',
        '\u01D4': 'u',
        '\u0215': 'u',
        '\u0217': 'u',
        '\u01B0': 'u',
        '\u1EEB': 'u',
        '\u1EE9': 'u',
        '\u1EEF': 'u',
        '\u1EED': 'u',
        '\u1EF1': 'u',
        '\u1EE5': 'u',
        '\u1E73': 'u',
        '\u0173': 'u',
        '\u1E77': 'u',
        '\u1E75': 'u',
        '\u0289': 'u',
        '\u24E5': 'v',
        '\uFF56': 'v',
        '\u1E7D': 'v',
        '\u1E7F': 'v',
        '\u028B': 'v',
        '\uA75F': 'v',
        '\u028C': 'v',
        '\uA761': 'vy',
        '\u24E6': 'w',
        '\uFF57': 'w',
        '\u1E81': 'w',
        '\u1E83': 'w',
        '\u0175': 'w',
        '\u1E87': 'w',
        '\u1E85': 'w',
        '\u1E98': 'w',
        '\u1E89': 'w',
        '\u2C73': 'w',
        '\u24E7': 'x',
        '\uFF58': 'x',
        '\u1E8B': 'x',
        '\u1E8D': 'x',
        '\u24E8': 'y',
        '\uFF59': 'y',
        '\u1EF3': 'y',
        '\u00FD': 'y',
        '\u0177': 'y',
        '\u1EF9': 'y',
        '\u0233': 'y',
        '\u1E8F': 'y',
        '\u00FF': 'y',
        '\u1EF7': 'y',
        '\u1E99': 'y',
        '\u1EF5': 'y',
        '\u01B4': 'y',
        '\u024F': 'y',
        '\u1EFF': 'y',
        '\u24E9': 'z',
        '\uFF5A': 'z',
        '\u017A': 'z',
        '\u1E91': 'z',
        '\u017C': 'z',
        '\u017E': 'z',
        '\u1E93': 'z',
        '\u1E95': 'z',
        '\u01B6': 'z',
        '\u0225': 'z',
        '\u0240': 'z',
        '\u2C6C': 'z',
        '\uA763': 'z',
        '\u0386': '\u0391',
        '\u0388': '\u0395',
        '\u0389': '\u0397',
        '\u038A': '\u0399',
        '\u03AA': '\u0399',
        '\u038C': '\u039F',
        '\u038E': '\u03A5',
        '\u03AB': '\u03A5',
        '\u038F': '\u03A9',
        '\u03AC': '\u03B1',
        '\u03AD': '\u03B5',
        '\u03AE': '\u03B7',
        '\u03AF': '\u03B9',
        '\u03CA': '\u03B9',
        '\u0390': '\u03B9',
        '\u03CC': '\u03BF',
        '\u03CD': '\u03C5',
        '\u03CB': '\u03C5',
        '\u03B0': '\u03C5',
        '\u03C9': '\u03C9',
        '\u03C2': '\u03C3'
      };
      return diacritics;
    });
    S2.define('select2/data/base', ['../utils'], function(Utils) {
      function BaseAdapter($element, options) {
        BaseAdapter.__super__.constructor.call(this);
      }
      Utils.Extend(BaseAdapter, Utils.Observable);
      BaseAdapter.prototype.current = function(callback) {
        throw new Error('The `current` method must be defined in child classes.');
      };
      BaseAdapter.prototype.query = function(params, callback) {
        throw new Error('The `query` method must be defined in child classes.');
      };
      BaseAdapter.prototype.bind = function(container, $container) {};
      BaseAdapter.prototype.destroy = function() {};
      BaseAdapter.prototype.generateResultId = function(container, data) {
        var id = container.id + '-result-';
        id += Utils.generateChars(4);
        if (data.id != null) {
          id += '-' + data.id.toString();
        } else {
          id += '-' + Utils.generateChars(4);
        }
        return id;
      };
      return BaseAdapter;
    });
    S2.define('select2/data/select', ['./base', '../utils', 'jquery'], function(BaseAdapter, Utils, $) {
      function SelectAdapter($element, options) {
        this.$element = $element;
        this.options = options;
        SelectAdapter.__super__.constructor.call(this);
      }
      Utils.Extend(SelectAdapter, BaseAdapter);
      SelectAdapter.prototype.current = function(callback) {
        var data = [];
        var self = this;
        this.$element.find(':selected').each(function() {
          var $option = $(this);
          var option = self.item($option);
          data.push(option);
        });
        callback(data);
      };
      SelectAdapter.prototype.select = function(data) {
        var self = this;
        data.selected = true;
        if ($(data.element).is('option')) {
          data.element.selected = true;
          this.$element.trigger('change');
          return;
        }
        if (this.$element.prop('multiple')) {
          this.current(function(currentData) {
            var val = [];
            data = [data];
            data.push.apply(data, currentData);
            for (var d = 0; d < data.length; d++) {
              var id = data[d].id;
              if ($.inArray(id, val) === -1) {
                val.push(id);
              }
            }
            self.$element.val(val);
            self.$element.trigger('change');
          });
        } else {
          var val = data.id;
          this.$element.val(val);
          this.$element.trigger('change');
        }
      };
      SelectAdapter.prototype.unselect = function(data) {
        var self = this;
        if (!this.$element.prop('multiple')) {
          return;
        }
        data.selected = false;
        if ($(data.element).is('option')) {
          data.element.selected = false;
          this.$element.trigger('change');
          return;
        }
        this.current(function(currentData) {
          var val = [];
          for (var d = 0; d < currentData.length; d++) {
            var id = currentData[d].id;
            if (id !== data.id && $.inArray(id, val) === -1) {
              val.push(id);
            }
          }
          self.$element.val(val);
          self.$element.trigger('change');
        });
      };
      SelectAdapter.prototype.bind = function(container, $container) {
        var self = this;
        this.container = container;
        container.on('select', function(params) {
          self.select(params.data);
        });
        container.on('unselect', function(params) {
          self.unselect(params.data);
        });
      };
      SelectAdapter.prototype.destroy = function() {
        this.$element.find('*').each(function() {
          $.removeData(this, 'data');
        });
      };
      SelectAdapter.prototype.query = function(params, callback) {
        var data = [];
        var self = this;
        var $options = this.$element.children();
        $options.each(function() {
          var $option = $(this);
          if (!$option.is('option') && !$option.is('optgroup')) {
            return;
          }
          var option = self.item($option);
          var matches = self.matches(params, option);
          if (matches !== null) {
            data.push(matches);
          }
        });
        callback({results: data});
      };
      SelectAdapter.prototype.addOptions = function($options) {
        Utils.appendMany(this.$element, $options);
      };
      SelectAdapter.prototype.option = function(data) {
        var option;
        if (data.children) {
          option = document.createElement('optgroup');
          option.label = data.text;
        } else {
          option = document.createElement('option');
          if (option.textContent !== undefined) {
            option.textContent = data.text;
          } else {
            option.innerText = data.text;
          }
        }
        if (data.id) {
          option.value = data.id;
        }
        if (data.disabled) {
          option.disabled = true;
        }
        if (data.selected) {
          option.selected = true;
        }
        if (data.title) {
          option.title = data.title;
        }
        var $option = $(option);
        var normalizedData = this._normalizeItem(data);
        normalizedData.element = option;
        $.data(option, 'data', normalizedData);
        return $option;
      };
      SelectAdapter.prototype.item = function($option) {
        var data = {};
        data = $.data($option[0], 'data');
        if (data != null) {
          return data;
        }
        if ($option.is('option')) {
          data = {
            id: $option.val(),
            text: $option.text(),
            disabled: $option.prop('disabled'),
            selected: $option.prop('selected'),
            title: $option.prop('title')
          };
        } else if ($option.is('optgroup')) {
          data = {
            text: $option.prop('label'),
            children: [],
            title: $option.prop('title')
          };
          var $children = $option.children('option');
          var children = [];
          for (var c = 0; c < $children.length; c++) {
            var $child = $($children[c]);
            var child = this.item($child);
            children.push(child);
          }
          data.children = children;
        }
        data = this._normalizeItem(data);
        data.element = $option[0];
        $.data($option[0], 'data', data);
        return data;
      };
      SelectAdapter.prototype._normalizeItem = function(item) {
        if (!$.isPlainObject(item)) {
          item = {
            id: item,
            text: item
          };
        }
        item = $.extend({}, {text: ''}, item);
        var defaults = {
          selected: false,
          disabled: false
        };
        if (item.id != null) {
          item.id = item.id.toString();
        }
        if (item.text != null) {
          item.text = item.text.toString();
        }
        if (item._resultId == null && item.id && this.container != null) {
          item._resultId = this.generateResultId(this.container, item);
        }
        return $.extend({}, defaults, item);
      };
      SelectAdapter.prototype.matches = function(params, data) {
        var matcher = this.options.get('matcher');
        return matcher(params, data);
      };
      return SelectAdapter;
    });
    S2.define('select2/data/array', ['./select', '../utils', 'jquery'], function(SelectAdapter, Utils, $) {
      function ArrayAdapter($element, options) {
        var data = options.get('data') || [];
        ArrayAdapter.__super__.constructor.call(this, $element, options);
        this.addOptions(this.convertToOptions(data));
      }
      Utils.Extend(ArrayAdapter, SelectAdapter);
      ArrayAdapter.prototype.select = function(data) {
        var $option = this.$element.find('option').filter(function(i, elm) {
          return elm.value == data.id.toString();
        });
        if ($option.length === 0) {
          $option = this.option(data);
          this.addOptions($option);
        }
        ArrayAdapter.__super__.select.call(this, data);
      };
      ArrayAdapter.prototype.convertToOptions = function(data) {
        var self = this;
        var $existing = this.$element.find('option');
        var existingIds = $existing.map(function() {
          return self.item($(this)).id;
        }).get();
        var $options = [];
        function onlyItem(item) {
          return function() {
            return $(this).val() == item.id;
          };
        }
        for (var d = 0; d < data.length; d++) {
          var item = this._normalizeItem(data[d]);
          if ($.inArray(item.id, existingIds) >= 0) {
            var $existingOption = $existing.filter(onlyItem(item));
            var existingData = this.item($existingOption);
            var newData = $.extend(true, {}, existingData, item);
            var $newOption = this.option(existingData);
            $existingOption.replaceWith($newOption);
            continue;
          }
          var $option = this.option(item);
          if (item.children) {
            var $children = this.convertToOptions(item.children);
            Utils.appendMany($option, $children);
          }
          $options.push($option);
        }
        return $options;
      };
      return ArrayAdapter;
    });
    S2.define('select2/data/ajax', ['./array', '../utils', 'jquery'], function(ArrayAdapter, Utils, $) {
      function AjaxAdapter($element, options) {
        this.ajaxOptions = this._applyDefaults(options.get('ajax'));
        if (this.ajaxOptions.processResults != null) {
          this.processResults = this.ajaxOptions.processResults;
        }
        ArrayAdapter.__super__.constructor.call(this, $element, options);
      }
      Utils.Extend(AjaxAdapter, ArrayAdapter);
      AjaxAdapter.prototype._applyDefaults = function(options) {
        var defaults = {
          data: function(params) {
            return {q: params.term};
          },
          transport: function(params, success, failure) {
            var $request = $.ajax(params);
            $request.then(success);
            $request.fail(failure);
            return $request;
          }
        };
        return $.extend({}, defaults, options, true);
      };
      AjaxAdapter.prototype.processResults = function(results) {
        return results;
      };
      AjaxAdapter.prototype.query = function(params, callback) {
        var matches = [];
        var self = this;
        if (this._request != null) {
          if ($.isFunction(this._request.abort)) {
            this._request.abort();
          }
          this._request = null;
        }
        var options = $.extend({type: 'GET'}, this.ajaxOptions);
        if (typeof options.url === 'function') {
          options.url = options.url(params);
        }
        if (typeof options.data === 'function') {
          options.data = options.data(params);
        }
        function request() {
          var $request = options.transport(options, function(data) {
            var results = self.processResults(data, params);
            if (self.options.get('debug') && window.console && console.error) {
              if (!results || !results.results || !$.isArray(results.results)) {
                console.error('Select2: The AJAX results did not return an array in the ' + '`results` key of the response.');
              }
            }
            callback(results);
          }, function() {});
          self._request = $request;
        }
        if (this.ajaxOptions.delay && params.term !== '') {
          if (this._queryTimeout) {
            window.clearTimeout(this._queryTimeout);
          }
          this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);
        } else {
          request();
        }
      };
      return AjaxAdapter;
    });
    S2.define('select2/data/tags', ['jquery'], function($) {
      function Tags(decorated, $element, options) {
        var tags = options.get('tags');
        var createTag = options.get('createTag');
        if (createTag !== undefined) {
          this.createTag = createTag;
        }
        decorated.call(this, $element, options);
        if ($.isArray(tags)) {
          for (var t = 0; t < tags.length; t++) {
            var tag = tags[t];
            var item = this._normalizeItem(tag);
            var $option = this.option(item);
            this.$element.append($option);
          }
        }
      }
      Tags.prototype.query = function(decorated, params, callback) {
        var self = this;
        this._removeOldTags();
        if (params.term == null || params.page != null) {
          decorated.call(this, params, callback);
          return;
        }
        function wrapper(obj, child) {
          var data = obj.results;
          for (var i = 0; i < data.length; i++) {
            var option = data[i];
            var checkChildren = (option.children != null && !wrapper({results: option.children}, true));
            var checkText = option.text === params.term;
            if (checkText || checkChildren) {
              if (child) {
                return false;
              }
              obj.data = data;
              callback(obj);
              return;
            }
          }
          if (child) {
            return true;
          }
          var tag = self.createTag(params);
          if (tag != null) {
            var $option = self.option(tag);
            $option.attr('data-select2-tag', true);
            self.addOptions([$option]);
            self.insertTag(data, tag);
          }
          obj.results = data;
          callback(obj);
        }
        decorated.call(this, params, wrapper);
      };
      Tags.prototype.createTag = function(decorated, params) {
        var term = $.trim(params.term);
        if (term === '') {
          return null;
        }
        return {
          id: term,
          text: term
        };
      };
      Tags.prototype.insertTag = function(_, data, tag) {
        data.unshift(tag);
      };
      Tags.prototype._removeOldTags = function(_) {
        var tag = this._lastTag;
        var $options = this.$element.find('option[data-select2-tag]');
        $options.each(function() {
          if (this.selected) {
            return;
          }
          $(this).remove();
        });
      };
      return Tags;
    });
    S2.define('select2/data/tokenizer', ['jquery'], function($) {
      function Tokenizer(decorated, $element, options) {
        var tokenizer = options.get('tokenizer');
        if (tokenizer !== undefined) {
          this.tokenizer = tokenizer;
        }
        decorated.call(this, $element, options);
      }
      Tokenizer.prototype.bind = function(decorated, container, $container) {
        decorated.call(this, container, $container);
        this.$search = container.dropdown.$search || container.selection.$search || $container.find('.select2-search__field');
      };
      Tokenizer.prototype.query = function(decorated, params, callback) {
        var self = this;
        function select(data) {
          self.select(data);
        }
        params.term = params.term || '';
        var tokenData = this.tokenizer(params, this.options, select);
        if (tokenData.term !== params.term) {
          if (this.$search.length) {
            this.$search.val(tokenData.term);
            this.$search.focus();
          }
          params.term = tokenData.term;
        }
        decorated.call(this, params, callback);
      };
      Tokenizer.prototype.tokenizer = function(_, params, options, callback) {
        var separators = options.get('tokenSeparators') || [];
        var term = params.term;
        var i = 0;
        var createTag = this.createTag || function(params) {
          return {
            id: params.term,
            text: params.term
          };
        };
        while (i < term.length) {
          var termChar = term[i];
          if ($.inArray(termChar, separators) === -1) {
            i++;
            continue;
          }
          var part = term.substr(0, i);
          var partParams = $.extend({}, params, {term: part});
          var data = createTag(partParams);
          callback(data);
          term = term.substr(i + 1) || '';
          i = 0;
        }
        return {term: term};
      };
      return Tokenizer;
    });
    S2.define('select2/data/minimumInputLength', [], function() {
      function MinimumInputLength(decorated, $e, options) {
        this.minimumInputLength = options.get('minimumInputLength');
        decorated.call(this, $e, options);
      }
      MinimumInputLength.prototype.query = function(decorated, params, callback) {
        params.term = params.term || '';
        if (params.term.length < this.minimumInputLength) {
          this.trigger('results:message', {
            message: 'inputTooShort',
            args: {
              minimum: this.minimumInputLength,
              input: params.term,
              params: params
            }
          });
          return;
        }
        decorated.call(this, params, callback);
      };
      return MinimumInputLength;
    });
    S2.define('select2/data/maximumInputLength', [], function() {
      function MaximumInputLength(decorated, $e, options) {
        this.maximumInputLength = options.get('maximumInputLength');
        decorated.call(this, $e, options);
      }
      MaximumInputLength.prototype.query = function(decorated, params, callback) {
        params.term = params.term || '';
        if (this.maximumInputLength > 0 && params.term.length > this.maximumInputLength) {
          this.trigger('results:message', {
            message: 'inputTooLong',
            args: {
              maximum: this.maximumInputLength,
              input: params.term,
              params: params
            }
          });
          return;
        }
        decorated.call(this, params, callback);
      };
      return MaximumInputLength;
    });
    S2.define('select2/data/maximumSelectionLength', [], function() {
      function MaximumSelectionLength(decorated, $e, options) {
        this.maximumSelectionLength = options.get('maximumSelectionLength');
        decorated.call(this, $e, options);
      }
      MaximumSelectionLength.prototype.query = function(decorated, params, callback) {
        var self = this;
        this.current(function(currentData) {
          var count = currentData != null ? currentData.length : 0;
          if (self.maximumSelectionLength > 0 && count >= self.maximumSelectionLength) {
            self.trigger('results:message', {
              message: 'maximumSelected',
              args: {maximum: self.maximumSelectionLength}
            });
            return;
          }
          decorated.call(self, params, callback);
        });
      };
      return MaximumSelectionLength;
    });
    S2.define('select2/dropdown', ['jquery', './utils'], function($, Utils) {
      function Dropdown($element, options) {
        this.$element = $element;
        this.options = options;
        Dropdown.__super__.constructor.call(this);
      }
      Utils.Extend(Dropdown, Utils.Observable);
      Dropdown.prototype.render = function() {
        var $dropdown = $('<span class="select2-dropdown">' + '<span class="select2-results"></span>' + '</span>');
        $dropdown.attr('dir', this.options.get('dir'));
        this.$dropdown = $dropdown;
        return $dropdown;
      };
      Dropdown.prototype.position = function($dropdown, $container) {};
      Dropdown.prototype.destroy = function() {
        this.$dropdown.remove();
      };
      return Dropdown;
    });
    S2.define('select2/dropdown/search', ['jquery', '../utils'], function($, Utils) {
      function Search() {}
      Search.prototype.render = function(decorated) {
        var $rendered = decorated.call(this);
        var $search = $('<span class="select2-search select2-search--dropdown">' + '<input class="select2-search__field" type="search" tabindex="-1"' + ' autocomplete="off" autocorrect="off" autocapitalize="off"' + ' spellcheck="false" role="textbox" />' + '</span>');
        this.$searchContainer = $search;
        this.$search = $search.find('input');
        $rendered.prepend($search);
        return $rendered;
      };
      Search.prototype.bind = function(decorated, container, $container) {
        var self = this;
        decorated.call(this, container, $container);
        this.$search.on('keydown', function(evt) {
          self.trigger('keypress', evt);
          self._keyUpPrevented = evt.isDefaultPrevented();
        });
        this.$search.on('input', function(evt) {
          $(this).off('keyup');
        });
        this.$search.on('keyup input', function(evt) {
          self.handleSearch(evt);
        });
        container.on('open', function() {
          self.$search.attr('tabindex', 0);
          self.$search.focus();
          window.setTimeout(function() {
            self.$search.focus();
          }, 0);
        });
        container.on('close', function() {
          self.$search.attr('tabindex', -1);
          self.$search.val('');
        });
        container.on('results:all', function(params) {
          if (params.query.term == null || params.query.term === '') {
            var showSearch = self.showSearch(params);
            if (showSearch) {
              self.$searchContainer.removeClass('select2-search--hide');
            } else {
              self.$searchContainer.addClass('select2-search--hide');
            }
          }
        });
      };
      Search.prototype.handleSearch = function(evt) {
        if (!this._keyUpPrevented) {
          var input = this.$search.val();
          this.trigger('query', {term: input});
        }
        this._keyUpPrevented = false;
      };
      Search.prototype.showSearch = function(_, params) {
        return true;
      };
      return Search;
    });
    S2.define('select2/dropdown/hidePlaceholder', [], function() {
      function HidePlaceholder(decorated, $element, options, dataAdapter) {
        this.placeholder = this.normalizePlaceholder(options.get('placeholder'));
        decorated.call(this, $element, options, dataAdapter);
      }
      HidePlaceholder.prototype.append = function(decorated, data) {
        data.results = this.removePlaceholder(data.results);
        decorated.call(this, data);
      };
      HidePlaceholder.prototype.normalizePlaceholder = function(_, placeholder) {
        if (typeof placeholder === 'string') {
          placeholder = {
            id: '',
            text: placeholder
          };
        }
        return placeholder;
      };
      HidePlaceholder.prototype.removePlaceholder = function(_, data) {
        var modifiedData = data.slice(0);
        for (var d = data.length - 1; d >= 0; d--) {
          var item = data[d];
          if (this.placeholder.id === item.id) {
            modifiedData.splice(d, 1);
          }
        }
        return modifiedData;
      };
      return HidePlaceholder;
    });
    S2.define('select2/dropdown/infiniteScroll', ['jquery'], function($) {
      function InfiniteScroll(decorated, $element, options, dataAdapter) {
        this.lastParams = {};
        decorated.call(this, $element, options, dataAdapter);
        this.$loadingMore = this.createLoadingMore();
        this.loading = false;
      }
      InfiniteScroll.prototype.append = function(decorated, data) {
        this.$loadingMore.remove();
        this.loading = false;
        decorated.call(this, data);
        if (this.showLoadingMore(data)) {
          this.$results.append(this.$loadingMore);
        }
      };
      InfiniteScroll.prototype.bind = function(decorated, container, $container) {
        var self = this;
        decorated.call(this, container, $container);
        container.on('query', function(params) {
          self.lastParams = params;
          self.loading = true;
        });
        container.on('query:append', function(params) {
          self.lastParams = params;
          self.loading = true;
        });
        this.$results.on('scroll', function() {
          var isLoadMoreVisible = $.contains(document.documentElement, self.$loadingMore[0]);
          if (self.loading || !isLoadMoreVisible) {
            return;
          }
          var currentOffset = self.$results.offset().top + self.$results.outerHeight(false);
          var loadingMoreOffset = self.$loadingMore.offset().top + self.$loadingMore.outerHeight(false);
          if (currentOffset + 50 >= loadingMoreOffset) {
            self.loadMore();
          }
        });
      };
      InfiniteScroll.prototype.loadMore = function() {
        this.loading = true;
        var params = $.extend({}, {page: 1}, this.lastParams);
        params.page++;
        this.trigger('query:append', params);
      };
      InfiniteScroll.prototype.showLoadingMore = function(_, data) {
        return data.pagination && data.pagination.more;
      };
      InfiniteScroll.prototype.createLoadingMore = function() {
        var $option = $('<li class="option load-more" role="treeitem"></li>');
        var message = this.options.get('translations').get('loadingMore');
        $option.html(message(this.lastParams));
        return $option;
      };
      return InfiniteScroll;
    });
    S2.define('select2/dropdown/attachBody', ['jquery', '../utils'], function($, Utils) {
      function AttachBody(decorated, $element, options) {
        this.$dropdownParent = options.get('dropdownParent') || document.body;
        decorated.call(this, $element, options);
      }
      AttachBody.prototype.bind = function(decorated, container, $container) {
        var self = this;
        var setupResultsEvents = false;
        decorated.call(this, container, $container);
        container.on('open', function() {
          self._showDropdown();
          self._attachPositioningHandler(container);
          if (!setupResultsEvents) {
            setupResultsEvents = true;
            container.on('results:all', function() {
              self._positionDropdown();
              self._resizeDropdown();
            });
            container.on('results:append', function() {
              self._positionDropdown();
              self._resizeDropdown();
            });
          }
        });
        container.on('close', function() {
          self._hideDropdown();
          self._detachPositioningHandler(container);
        });
        this.$dropdownContainer.on('mousedown', function(evt) {
          evt.stopPropagation();
        });
      };
      AttachBody.prototype.position = function(decorated, $dropdown, $container) {
        $dropdown.attr('class', $container.attr('class'));
        $dropdown.removeClass('select2');
        $dropdown.addClass('select2-container--open');
        $dropdown.css({
          position: 'absolute',
          top: -999999
        });
        this.$container = $container;
      };
      AttachBody.prototype.render = function(decorated) {
        var $container = $('<span></span>');
        var $dropdown = decorated.call(this);
        $container.append($dropdown);
        this.$dropdownContainer = $container;
        return $container;
      };
      AttachBody.prototype._hideDropdown = function(decorated) {
        this.$dropdownContainer.detach();
      };
      AttachBody.prototype._attachPositioningHandler = function(container) {
        var self = this;
        var scrollEvent = 'scroll.select2.' + container.id;
        var resizeEvent = 'resize.select2.' + container.id;
        var orientationEvent = 'orientationchange.select2.' + container.id;
        var $watchers = this.$container.parents().filter(Utils.hasScroll);
        $watchers.each(function() {
          $(this).data('select2-scroll-position', {
            x: $(this).scrollLeft(),
            y: $(this).scrollTop()
          });
        });
        $watchers.on(scrollEvent, function(ev) {
          var position = $(this).data('select2-scroll-position');
          $(this).scrollTop(position.y);
        });
        $(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent, function(e) {
          self._positionDropdown();
          self._resizeDropdown();
        });
      };
      AttachBody.prototype._detachPositioningHandler = function(container) {
        var scrollEvent = 'scroll.select2.' + container.id;
        var resizeEvent = 'resize.select2.' + container.id;
        var orientationEvent = 'orientationchange.select2.' + container.id;
        var $watchers = this.$container.parents().filter(Utils.hasScroll);
        $watchers.off(scrollEvent);
        $(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);
      };
      AttachBody.prototype._positionDropdown = function() {
        var $window = $(window);
        var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');
        var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');
        var newDirection = null;
        var position = this.$container.position();
        var offset = this.$container.offset();
        offset.bottom = offset.top + this.$container.outerHeight(false);
        var container = {height: this.$container.outerHeight(false)};
        container.top = offset.top;
        container.bottom = offset.top + container.height;
        var dropdown = {height: this.$dropdown.outerHeight(false)};
        var viewport = {
          top: $window.scrollTop(),
          bottom: $window.scrollTop() + $window.height()
        };
        var enoughRoomAbove = viewport.top < (offset.top - dropdown.height);
        var enoughRoomBelow = viewport.bottom > (offset.bottom + dropdown.height);
        var css = {
          left: offset.left,
          top: container.bottom
        };
        if (!isCurrentlyAbove && !isCurrentlyBelow) {
          newDirection = 'below';
        }
        if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {
          newDirection = 'above';
        } else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {
          newDirection = 'below';
        }
        if (newDirection == 'above' || (isCurrentlyAbove && newDirection !== 'below')) {
          css.top = container.top - dropdown.height;
        }
        if (newDirection != null) {
          this.$dropdown.removeClass('select2-dropdown--below select2-dropdown--above').addClass('select2-dropdown--' + newDirection);
          this.$container.removeClass('select2-container--below select2-container--above').addClass('select2-container--' + newDirection);
        }
        this.$dropdownContainer.css(css);
      };
      AttachBody.prototype._resizeDropdown = function() {
        this.$dropdownContainer.width();
        var css = {width: this.$container.outerWidth(false) + 'px'};
        if (this.options.get('dropdownAutoWidth')) {
          css.minWidth = css.width;
          css.width = 'auto';
        }
        this.$dropdown.css(css);
      };
      AttachBody.prototype._showDropdown = function(decorated) {
        this.$dropdownContainer.appendTo(this.$dropdownParent);
        this._positionDropdown();
        this._resizeDropdown();
      };
      return AttachBody;
    });
    S2.define('select2/dropdown/minimumResultsForSearch', [], function() {
      function countResults(data) {
        var count = 0;
        for (var d = 0; d < data.length; d++) {
          var item = data[d];
          if (item.children) {
            count += countResults(item.children);
          } else {
            count++;
          }
        }
        return count;
      }
      function MinimumResultsForSearch(decorated, $element, options, dataAdapter) {
        this.minimumResultsForSearch = options.get('minimumResultsForSearch');
        if (this.minimumResultsForSearch < 0) {
          this.minimumResultsForSearch = Infinity;
        }
        decorated.call(this, $element, options, dataAdapter);
      }
      MinimumResultsForSearch.prototype.showSearch = function(decorated, params) {
        if (countResults(params.data.results) < this.minimumResultsForSearch) {
          return false;
        }
        return decorated.call(this, params);
      };
      return MinimumResultsForSearch;
    });
    S2.define('select2/dropdown/selectOnClose', [], function() {
      function SelectOnClose() {}
      SelectOnClose.prototype.bind = function(decorated, container, $container) {
        var self = this;
        decorated.call(this, container, $container);
        container.on('close', function() {
          self._handleSelectOnClose();
        });
      };
      SelectOnClose.prototype._handleSelectOnClose = function() {
        var $highlightedResults = this.getHighlightedResults();
        if ($highlightedResults.length < 1) {
          return;
        }
        this.trigger('select', {data: $highlightedResults.data('data')});
      };
      return SelectOnClose;
    });
    S2.define('select2/dropdown/closeOnSelect', [], function() {
      function CloseOnSelect() {}
      CloseOnSelect.prototype.bind = function(decorated, container, $container) {
        var self = this;
        decorated.call(this, container, $container);
        container.on('select', function(evt) {
          self._selectTriggered(evt);
        });
        container.on('unselect', function(evt) {
          self._selectTriggered(evt);
        });
      };
      CloseOnSelect.prototype._selectTriggered = function(_, evt) {
        var originalEvent = evt.originalEvent;
        if (originalEvent && originalEvent.ctrlKey) {
          return;
        }
        this.trigger('close');
      };
      return CloseOnSelect;
    });
    S2.define('select2/i18n/en', [], function() {
      return {
        errorLoading: function() {
          return 'The results could not be loaded.';
        },
        inputTooLong: function(args) {
          var overChars = args.input.length - args.maximum;
          var message = 'Please delete ' + overChars + ' character';
          if (overChars != 1) {
            message += 's';
          }
          return message;
        },
        inputTooShort: function(args) {
          var remainingChars = args.minimum - args.input.length;
          var message = 'Please enter ' + remainingChars + ' or more characters';
          return message;
        },
        loadingMore: function() {
          return 'Loading more results…';
        },
        maximumSelected: function(args) {
          var message = 'You can only select ' + args.maximum + ' item';
          if (args.maximum != 1) {
            message += 's';
          }
          return message;
        },
        noResults: function() {
          return 'No results found';
        },
        searching: function() {
          return 'Searching…';
        }
      };
    });
    S2.define('select2/defaults', ['jquery', 'require', './results', './selection/single', './selection/multiple', './selection/placeholder', './selection/allowClear', './selection/search', './selection/eventRelay', './utils', './translation', './diacritics', './data/select', './data/array', './data/ajax', './data/tags', './data/tokenizer', './data/minimumInputLength', './data/maximumInputLength', './data/maximumSelectionLength', './dropdown', './dropdown/search', './dropdown/hidePlaceholder', './dropdown/infiniteScroll', './dropdown/attachBody', './dropdown/minimumResultsForSearch', './dropdown/selectOnClose', './dropdown/closeOnSelect', './i18n/en'], function($, require, ResultsList, SingleSelection, MultipleSelection, Placeholder, AllowClear, SelectionSearch, EventRelay, Utils, Translation, DIACRITICS, SelectData, ArrayData, AjaxData, Tags, Tokenizer, MinimumInputLength, MaximumInputLength, MaximumSelectionLength, Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll, AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect, EnglishTranslation) {
      function Defaults() {
        this.reset();
      }
      Defaults.prototype.apply = function(options) {
        options = $.extend({}, this.defaults, options);
        if (options.dataAdapter == null) {
          if (options.ajax != null) {
            options.dataAdapter = AjaxData;
          } else if (options.data != null) {
            options.dataAdapter = ArrayData;
          } else {
            options.dataAdapter = SelectData;
          }
          if (options.minimumInputLength > 0) {
            options.dataAdapter = Utils.Decorate(options.dataAdapter, MinimumInputLength);
          }
          if (options.maximumInputLength > 0) {
            options.dataAdapter = Utils.Decorate(options.dataAdapter, MaximumInputLength);
          }
          if (options.maximumSelectionLength > 0) {
            options.dataAdapter = Utils.Decorate(options.dataAdapter, MaximumSelectionLength);
          }
          if (options.tags) {
            options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);
          }
          if (options.tokenSeparators != null || options.tokenizer != null) {
            options.dataAdapter = Utils.Decorate(options.dataAdapter, Tokenizer);
          }
          if (options.query != null) {
            var Query = require(options.amdBase + 'compat/query');
            options.dataAdapter = Utils.Decorate(options.dataAdapter, Query);
          }
          if (options.initSelection != null) {
            var InitSelection = require(options.amdBase + 'compat/initSelection');
            options.dataAdapter = Utils.Decorate(options.dataAdapter, InitSelection);
          }
        }
        if (options.resultsAdapter == null) {
          options.resultsAdapter = ResultsList;
          if (options.ajax != null) {
            options.resultsAdapter = Utils.Decorate(options.resultsAdapter, InfiniteScroll);
          }
          if (options.placeholder != null) {
            options.resultsAdapter = Utils.Decorate(options.resultsAdapter, HidePlaceholder);
          }
          if (options.selectOnClose) {
            options.resultsAdapter = Utils.Decorate(options.resultsAdapter, SelectOnClose);
          }
        }
        if (options.dropdownAdapter == null) {
          if (options.multiple) {
            options.dropdownAdapter = Dropdown;
          } else {
            var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);
            options.dropdownAdapter = SearchableDropdown;
          }
          if (options.minimumResultsForSearch !== 0) {
            options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, MinimumResultsForSearch);
          }
          if (options.closeOnSelect) {
            options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, CloseOnSelect);
          }
          if (options.dropdownCssClass != null || options.dropdownCss != null || options.adaptDropdownCssClass != null) {
            var DropdownCSS = require(options.amdBase + 'compat/dropdownCss');
            options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, DropdownCSS);
          }
          options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, AttachBody);
        }
        if (options.selectionAdapter == null) {
          if (options.multiple) {
            options.selectionAdapter = MultipleSelection;
          } else {
            options.selectionAdapter = SingleSelection;
          }
          if (options.placeholder != null) {
            options.selectionAdapter = Utils.Decorate(options.selectionAdapter, Placeholder);
          }
          if (options.allowClear) {
            options.selectionAdapter = Utils.Decorate(options.selectionAdapter, AllowClear);
          }
          if (options.multiple) {
            options.selectionAdapter = Utils.Decorate(options.selectionAdapter, SelectionSearch);
          }
          if (options.containerCssClass != null || options.containerCss != null || options.adaptContainerCssClass != null) {
            var ContainerCSS = require(options.amdBase + 'compat/containerCss');
            options.selectionAdapter = Utils.Decorate(options.selectionAdapter, ContainerCSS);
          }
          options.selectionAdapter = Utils.Decorate(options.selectionAdapter, EventRelay);
        }
        if (typeof options.language === 'string') {
          if (options.language.indexOf('-') > 0) {
            var languageParts = options.language.split('-');
            var baseLanguage = languageParts[0];
            options.language = [options.language, baseLanguage];
          } else {
            options.language = [options.language];
          }
        }
        if ($.isArray(options.language)) {
          var languages = new Translation();
          options.language.push('en');
          var languageNames = options.language;
          for (var l = 0; l < languageNames.length; l++) {
            var name = languageNames[l];
            var language = {};
            try {
              language = Translation.loadPath(name);
            } catch (e) {
              try {
                name = this.defaults.amdLanguageBase + name;
                language = Translation.loadPath(name);
              } catch (ex) {
                if (options.debug && window.console && console.warn) {
                  console.warn('Select2: The language file for "' + name + '" could not be ' + 'automatically loaded. A fallback will be used instead.');
                }
                continue;
              }
            }
            languages.extend(language);
          }
          options.translations = languages;
        } else {
          var baseTranslation = Translation.loadPath(this.defaults.amdLanguageBase + 'en');
          var customTranslation = new Translation(options.language);
          customTranslation.extend(baseTranslation);
          options.translations = customTranslation;
        }
        return options;
      };
      Defaults.prototype.reset = function() {
        function stripDiacritics(text) {
          function match(a) {
            return DIACRITICS[a] || a;
          }
          return text.replace(/[^\u0000-\u007E]/g, match);
        }
        function matcher(params, data) {
          if ($.trim(params.term) === '') {
            return data;
          }
          if (data.children && data.children.length > 0) {
            var match = $.extend(true, {}, data);
            for (var c = data.children.length - 1; c >= 0; c--) {
              var child = data.children[c];
              var matches = matcher(params, child);
              if (matches == null) {
                match.children.splice(c, 1);
              }
            }
            if (match.children.length > 0) {
              return match;
            }
            return matcher(params, match);
          }
          var original = stripDiacritics(data.text).toUpperCase();
          var term = stripDiacritics(params.term).toUpperCase();
          if (original.indexOf(term) > -1) {
            return data;
          }
          return null;
        }
        this.defaults = {
          amdBase: './',
          amdLanguageBase: './i18n/',
          closeOnSelect: true,
          debug: false,
          dropdownAutoWidth: false,
          escapeMarkup: Utils.escapeMarkup,
          language: EnglishTranslation,
          matcher: matcher,
          minimumInputLength: 0,
          maximumInputLength: 0,
          maximumSelectionLength: 0,
          minimumResultsForSearch: 0,
          selectOnClose: false,
          sorter: function(data) {
            return data;
          },
          templateResult: function(result) {
            return result.text;
          },
          templateSelection: function(selection) {
            return selection.text;
          },
          theme: 'default',
          width: 'resolve'
        };
      };
      Defaults.prototype.set = function(key, value) {
        var camelKey = $.camelCase(key);
        var data = {};
        data[camelKey] = value;
        var convertedData = Utils._convertData(data);
        $.extend(this.defaults, convertedData);
      };
      var defaults = new Defaults();
      return defaults;
    });
    S2.define('select2/options', ['require', 'jquery', './defaults', './utils'], function(require, $, Defaults, Utils) {
      function Options(options, $element) {
        this.options = options;
        if ($element != null) {
          this.fromElement($element);
        }
        this.options = Defaults.apply(this.options);
        if ($element && $element.is('input')) {
          var InputCompat = require(this.get('amdBase') + 'compat/inputData');
          this.options.dataAdapter = Utils.Decorate(this.options.dataAdapter, InputCompat);
        }
      }
      Options.prototype.fromElement = function($e) {
        var excludedData = ['select2'];
        if (this.options.multiple == null) {
          this.options.multiple = $e.prop('multiple');
        }
        if (this.options.disabled == null) {
          this.options.disabled = $e.prop('disabled');
        }
        if (this.options.language == null) {
          if ($e.prop('lang')) {
            this.options.language = $e.prop('lang').toLowerCase();
          } else if ($e.closest('[lang]').prop('lang')) {
            this.options.language = $e.closest('[lang]').prop('lang');
          }
        }
        if (this.options.dir == null) {
          if ($e.prop('dir')) {
            this.options.dir = $e.prop('dir');
          } else if ($e.closest('[dir]').prop('dir')) {
            this.options.dir = $e.closest('[dir]').prop('dir');
          } else {
            this.options.dir = 'ltr';
          }
        }
        $e.prop('disabled', this.options.disabled);
        $e.prop('multiple', this.options.multiple);
        if ($e.data('select2Tags')) {
          if (this.options.debug && window.console && console.warn) {
            console.warn('Select2: The `data-select2-tags` attribute has been changed to ' + 'use the `data-data` and `data-tags="true"` attributes and will be ' + 'removed in future versions of Select2.');
          }
          $e.data('data', $e.data('select2Tags'));
          $e.data('tags', true);
        }
        if ($e.data('ajaxUrl')) {
          if (this.options.debug && window.console && console.warn) {
            console.warn('Select2: The `data-ajax-url` attribute has been changed to ' + '`data-ajax--url` and support for the old attribute will be removed' + ' in future versions of Select2.');
          }
          $e.attr('ajax--url', $e.data('ajaxUrl'));
          $e.data('ajax--url', $e.data('ajaxUrl'));
        }
        var dataset = {};
        if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {
          dataset = $.extend(true, {}, $e[0].dataset, $e.data());
        } else {
          dataset = $e.data();
        }
        var data = $.extend(true, {}, dataset);
        data = Utils._convertData(data);
        for (var key in data) {
          if ($.inArray(key, excludedData) > -1) {
            continue;
          }
          if ($.isPlainObject(this.options[key])) {
            $.extend(this.options[key], data[key]);
          } else {
            this.options[key] = data[key];
          }
        }
        return this;
      };
      Options.prototype.get = function(key) {
        return this.options[key];
      };
      Options.prototype.set = function(key, val) {
        this.options[key] = val;
      };
      return Options;
    });
    S2.define('select2/core', ['jquery', './options', './utils', './keys'], function($, Options, Utils, KEYS) {
      var Select2 = function($element, options) {
        if ($element.data('select2') != null) {
          $element.data('select2').destroy();
        }
        this.$element = $element;
        this.id = this._generateId($element);
        options = options || {};
        this.options = new Options(options, $element);
        Select2.__super__.constructor.call(this);
        var tabindex = $element.attr('tabindex') || 0;
        $element.data('old-tabindex', tabindex);
        $element.attr('tabindex', '-1');
        var DataAdapter = this.options.get('dataAdapter');
        this.dataAdapter = new DataAdapter($element, this.options);
        var $container = this.render();
        this._placeContainer($container);
        var SelectionAdapter = this.options.get('selectionAdapter');
        this.selection = new SelectionAdapter($element, this.options);
        this.$selection = this.selection.render();
        this.selection.position(this.$selection, $container);
        var DropdownAdapter = this.options.get('dropdownAdapter');
        this.dropdown = new DropdownAdapter($element, this.options);
        this.$dropdown = this.dropdown.render();
        this.dropdown.position(this.$dropdown, $container);
        var ResultsAdapter = this.options.get('resultsAdapter');
        this.results = new ResultsAdapter($element, this.options, this.dataAdapter);
        this.$results = this.results.render();
        this.results.position(this.$results, this.$dropdown);
        var self = this;
        this._bindAdapters();
        this._registerDomEvents();
        this._registerDataEvents();
        this._registerSelectionEvents();
        this._registerDropdownEvents();
        this._registerResultsEvents();
        this._registerEvents();
        this.dataAdapter.current(function(initialData) {
          self.trigger('selection:update', {data: initialData});
        });
        $element.addClass('select2-hidden-accessible');
        $element.attr('aria-hidden', 'true');
        this._syncAttributes();
        $element.data('select2', this);
      };
      Utils.Extend(Select2, Utils.Observable);
      Select2.prototype._generateId = function($element) {
        var id = '';
        if ($element.attr('id') != null) {
          id = $element.attr('id');
        } else if ($element.attr('name') != null) {
          id = $element.attr('name') + '-' + Utils.generateChars(2);
        } else {
          id = Utils.generateChars(4);
        }
        id = 'select2-' + id;
        return id;
      };
      Select2.prototype._placeContainer = function($container) {
        $container.insertAfter(this.$element);
        var width = this._resolveWidth(this.$element, this.options.get('width'));
        if (width != null) {
          $container.css('width', width);
        }
      };
      Select2.prototype._resolveWidth = function($element, method) {
        var WIDTH = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
        if (method == 'resolve') {
          var styleWidth = this._resolveWidth($element, 'style');
          if (styleWidth != null) {
            return styleWidth;
          }
          return this._resolveWidth($element, 'element');
        }
        if (method == 'element') {
          var elementWidth = $element.outerWidth(false);
          if (elementWidth <= 0) {
            return 'auto';
          }
          return elementWidth + 'px';
        }
        if (method == 'style') {
          var style = $element.attr('style');
          if (typeof(style) !== 'string') {
            return null;
          }
          var attrs = style.split(';');
          for (var i = 0,
              l = attrs.length; i < l; i = i + 1) {
            var attr = attrs[i].replace(/\s/g, '');
            var matches = attr.match(WIDTH);
            if (matches !== null && matches.length >= 1) {
              return matches[1];
            }
          }
          return null;
        }
        return method;
      };
      Select2.prototype._bindAdapters = function() {
        this.dataAdapter.bind(this, this.$container);
        this.selection.bind(this, this.$container);
        this.dropdown.bind(this, this.$container);
        this.results.bind(this, this.$container);
      };
      Select2.prototype._registerDomEvents = function() {
        var self = this;
        this.$element.on('change.select2', function() {
          self.dataAdapter.current(function(data) {
            self.trigger('selection:update', {data: data});
          });
        });
        this._sync = Utils.bind(this._syncAttributes, this);
        if (this.$element[0].attachEvent) {
          this.$element[0].attachEvent('onpropertychange', this._sync);
        }
        var observer = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
        ;
        if (observer != null) {
          this._observer = new observer(function(mutations) {
            $.each(mutations, self._sync);
          });
          this._observer.observe(this.$element[0], {
            attributes: true,
            subtree: false
          });
        } else if (this.$element[0].addEventListener) {
          this.$element[0].addEventListener('DOMAttrModified', self._sync, false);
        }
      };
      Select2.prototype._registerDataEvents = function() {
        var self = this;
        this.dataAdapter.on('*', function(name, params) {
          self.trigger(name, params);
        });
      };
      Select2.prototype._registerSelectionEvents = function() {
        var self = this;
        var nonRelayEvents = ['toggle'];
        this.selection.on('toggle', function() {
          self.toggleDropdown();
        });
        this.selection.on('*', function(name, params) {
          if ($.inArray(name, nonRelayEvents) !== -1) {
            return;
          }
          self.trigger(name, params);
        });
      };
      Select2.prototype._registerDropdownEvents = function() {
        var self = this;
        this.dropdown.on('*', function(name, params) {
          self.trigger(name, params);
        });
      };
      Select2.prototype._registerResultsEvents = function() {
        var self = this;
        this.results.on('*', function(name, params) {
          self.trigger(name, params);
        });
      };
      Select2.prototype._registerEvents = function() {
        var self = this;
        this.on('open', function() {
          self.$container.addClass('select2-container--open');
        });
        this.on('close', function() {
          self.$container.removeClass('select2-container--open');
        });
        this.on('enable', function() {
          self.$container.removeClass('select2-container--disabled');
        });
        this.on('disable', function() {
          self.$container.addClass('select2-container--disabled');
        });
        this.on('focus', function() {
          self.$container.addClass('select2-container--focus');
        });
        this.on('blur', function() {
          self.$container.removeClass('select2-container--focus');
        });
        this.on('query', function(params) {
          if (!self.isOpen()) {
            self.trigger('open');
          }
          this.dataAdapter.query(params, function(data) {
            self.trigger('results:all', {
              data: data,
              query: params
            });
          });
        });
        this.on('query:append', function(params) {
          this.dataAdapter.query(params, function(data) {
            self.trigger('results:append', {
              data: data,
              query: params
            });
          });
        });
        this.on('keypress', function(evt) {
          var key = evt.which;
          if (self.isOpen()) {
            if (key === KEYS.ENTER) {
              self.trigger('results:select');
              evt.preventDefault();
            } else if ((key === KEYS.SPACE && evt.ctrlKey)) {
              self.trigger('results:toggle');
              evt.preventDefault();
            } else if (key === KEYS.UP) {
              self.trigger('results:previous');
              evt.preventDefault();
            } else if (key === KEYS.DOWN) {
              self.trigger('results:next');
              evt.preventDefault();
            } else if (key === KEYS.ESC || key === KEYS.TAB) {
              self.close();
              evt.preventDefault();
            }
          } else {
            if (key === KEYS.ENTER || key === KEYS.SPACE || ((key === KEYS.DOWN || key === KEYS.UP) && evt.altKey)) {
              self.open();
              evt.preventDefault();
            }
          }
        });
      };
      Select2.prototype._syncAttributes = function() {
        this.options.set('disabled', this.$element.prop('disabled'));
        if (this.options.get('disabled')) {
          if (this.isOpen()) {
            this.close();
          }
          this.trigger('disable');
        } else {
          this.trigger('enable');
        }
      };
      Select2.prototype.trigger = function(name, args) {
        var actualTrigger = Select2.__super__.trigger;
        var preTriggerMap = {
          'open': 'opening',
          'close': 'closing',
          'select': 'selecting',
          'unselect': 'unselecting'
        };
        if (name in preTriggerMap) {
          var preTriggerName = preTriggerMap[name];
          var preTriggerArgs = {
            prevented: false,
            name: name,
            args: args
          };
          actualTrigger.call(this, preTriggerName, preTriggerArgs);
          if (preTriggerArgs.prevented) {
            args.prevented = true;
            return;
          }
        }
        actualTrigger.call(this, name, args);
      };
      Select2.prototype.toggleDropdown = function() {
        if (this.options.get('disabled')) {
          return;
        }
        if (this.isOpen()) {
          this.close();
        } else {
          this.open();
        }
      };
      Select2.prototype.open = function() {
        if (this.isOpen()) {
          return;
        }
        this.trigger('query', {});
        this.trigger('open');
      };
      Select2.prototype.close = function() {
        if (!this.isOpen()) {
          return;
        }
        this.trigger('close');
      };
      Select2.prototype.isOpen = function() {
        return this.$container.hasClass('select2-container--open');
      };
      Select2.prototype.enable = function(args) {
        if (this.options.get('debug') && window.console && console.warn) {
          console.warn('Select2: The `select2("enable")` method has been deprecated and will' + ' be removed in later Select2 versions. Use $element.prop("disabled")' + ' instead.');
        }
        if (args == null || args.length === 0) {
          args = [true];
        }
        var disabled = !args[0];
        this.$element.prop('disabled', disabled);
      };
      Select2.prototype.data = function() {
        if (this.options.get('debug') && arguments.length > 0 && window.console && console.warn) {
          console.warn('Select2: Data can no longer be set using `select2("data")`. You ' + 'should consider setting the value instead using `$element.val()`.');
        }
        var data = [];
        this.dataAdapter.current(function(currentData) {
          data = currentData;
        });
        return data;
      };
      Select2.prototype.val = function(args) {
        if (this.options.get('debug') && window.console && console.warn) {
          console.warn('Select2: The `select2("val")` method has been deprecated and will be' + ' removed in later Select2 versions. Use $element.val() instead.');
        }
        if (args == null || args.length === 0) {
          return this.$element.val();
        }
        var newVal = args[0];
        if ($.isArray(newVal)) {
          newVal = $.map(newVal, function(obj) {
            return obj.toString();
          });
        }
        this.$element.val(newVal).trigger('change');
      };
      Select2.prototype.destroy = function() {
        this.$container.remove();
        if (this.$element[0].detachEvent) {
          this.$element[0].detachEvent('onpropertychange', this._sync);
        }
        if (this._observer != null) {
          this._observer.disconnect();
          this._observer = null;
        } else if (this.$element[0].removeEventListener) {
          this.$element[0].removeEventListener('DOMAttrModified', this._sync, false);
        }
        this._sync = null;
        this.$element.off('.select2');
        this.$element.attr('tabindex', this.$element.data('old-tabindex'));
        this.$element.removeClass('select2-hidden-accessible');
        this.$element.attr('aria-hidden', 'false');
        this.$element.removeData('select2');
        this.dataAdapter.destroy();
        this.selection.destroy();
        this.dropdown.destroy();
        this.results.destroy();
        this.dataAdapter = null;
        this.selection = null;
        this.dropdown = null;
        this.results = null;
      };
      Select2.prototype.render = function() {
        var $container = $('<span class="select2 select2-container">' + '<span class="selection"></span>' + '<span class="dropdown-wrapper" aria-hidden="true"></span>' + '</span>');
        $container.attr('dir', this.options.get('dir'));
        this.$container = $container;
        this.$container.addClass('select2-container--' + this.options.get('theme'));
        $container.data('element', this.$element);
        return $container;
      };
      return Select2;
    });
    S2.define('select2/compat/utils', ['jquery'], function($) {
      function syncCssClasses($dest, $src, adapter) {
        var classes,
            replacements = [],
            adapted;
        classes = $.trim($dest.attr('class'));
        if (classes) {
          classes = '' + classes;
          $(classes.split(/\s+/)).each(function() {
            if (this.indexOf('select2-') === 0) {
              replacements.push(this);
            }
          });
        }
        classes = $.trim($src.attr('class'));
        if (classes) {
          classes = '' + classes;
          $(classes.split(/\s+/)).each(function() {
            if (this.indexOf('select2-') !== 0) {
              adapted = adapter(this);
              if (adapted != null) {
                replacements.push(adapted);
              }
            }
          });
        }
        $dest.attr('class', replacements.join(' '));
      }
      return {syncCssClasses: syncCssClasses};
    });
    S2.define('select2/compat/containerCss', ['jquery', './utils'], function($, CompatUtils) {
      function _containerAdapter(clazz) {
        return null;
      }
      function ContainerCSS() {}
      ContainerCSS.prototype.render = function(decorated) {
        var $container = decorated.call(this);
        var containerCssClass = this.options.get('containerCssClass') || '';
        if ($.isFunction(containerCssClass)) {
          containerCssClass = containerCssClass(this.$element);
        }
        var containerCssAdapter = this.options.get('adaptContainerCssClass');
        containerCssAdapter = containerCssAdapter || _containerAdapter;
        if (containerCssClass.indexOf(':all:') !== -1) {
          containerCssClass = containerCssClass.replace(':all', '');
          var _cssAdapter = containerCssAdapter;
          containerCssAdapter = function(clazz) {
            var adapted = _cssAdapter(clazz);
            if (adapted != null) {
              return adapted + ' ' + clazz;
            }
            return clazz;
          };
        }
        var containerCss = this.options.get('containerCss') || {};
        if ($.isFunction(containerCss)) {
          containerCss = containerCss(this.$element);
        }
        CompatUtils.syncCssClasses($container, this.$element, containerCssAdapter);
        $container.css(containerCss);
        $container.addClass(containerCssClass);
        return $container;
      };
      return ContainerCSS;
    });
    S2.define('select2/compat/dropdownCss', ['jquery', './utils'], function($, CompatUtils) {
      function _dropdownAdapter(clazz) {
        return null;
      }
      function DropdownCSS() {}
      DropdownCSS.prototype.render = function(decorated) {
        var $dropdown = decorated.call(this);
        var dropdownCssClass = this.options.get('dropdownCssClass') || '';
        if ($.isFunction(dropdownCssClass)) {
          dropdownCssClass = dropdownCssClass(this.$element);
        }
        var dropdownCssAdapter = this.options.get('adaptDropdownCssClass');
        dropdownCssAdapter = dropdownCssAdapter || _dropdownAdapter;
        if (dropdownCssClass.indexOf(':all:') !== -1) {
          dropdownCssClass = dropdownCssClass.replace(':all', '');
          var _cssAdapter = dropdownCssAdapter;
          dropdownCssAdapter = function(clazz) {
            var adapted = _cssAdapter(clazz);
            if (adapted != null) {
              return adapted + ' ' + clazz;
            }
            return clazz;
          };
        }
        var dropdownCss = this.options.get('dropdownCss') || {};
        if ($.isFunction(dropdownCss)) {
          dropdownCss = dropdownCss(this.$element);
        }
        CompatUtils.syncCssClasses($dropdown, this.$element, dropdownCssAdapter);
        $dropdown.css(dropdownCss);
        $dropdown.addClass(dropdownCssClass);
        return $dropdown;
      };
      return DropdownCSS;
    });
    S2.define('select2/compat/initSelection', ['jquery'], function($) {
      function InitSelection(decorated, $element, options) {
        if (options.get('debug') && window.console && console.warn) {
          console.warn('Select2: The `initSelection` option has been deprecated in favor' + ' of a custom data adapter that overrides the `current` method. ' + 'This method is now called multiple times instead of a single ' + 'time when the instance is initialized. Support will be removed ' + 'for the `initSelection` option in future versions of Select2');
        }
        this.initSelection = options.get('initSelection');
        this._isInitialized = false;
        decorated.call(this, $element, options);
      }
      InitSelection.prototype.current = function(decorated, callback) {
        var self = this;
        if (this._isInitialized) {
          decorated.call(this, callback);
          return;
        }
        this.initSelection.call(null, this.$element, function(data) {
          self._isInitialized = true;
          if (!$.isArray(data)) {
            data = [data];
          }
          callback(data);
        });
      };
      return InitSelection;
    });
    S2.define('select2/compat/inputData', ['jquery'], function($) {
      function InputData(decorated, $element, options) {
        this._currentData = [];
        this._valueSeparator = options.get('valueSeparator') || ',';
        if ($element.prop('type') === 'hidden') {
          if (options.get('debug') && console && console.warn) {
            console.warn('Select2: Using a hidden input with Select2 is no longer ' + 'supported and may stop working in the future. It is recommended ' + 'to use a `<select>` element instead.');
          }
        }
        decorated.call(this, $element, options);
      }
      InputData.prototype.current = function(_, callback) {
        function getSelected(data, selectedIds) {
          var selected = [];
          if (data.selected || $.inArray(data.id, selectedIds) !== -1) {
            data.selected = true;
            selected.push(data);
          } else {
            data.selected = false;
          }
          if (data.children) {
            selected.push.apply(selected, getSelected(data.children, selectedIds));
          }
          return selected;
        }
        var selected = [];
        for (var d = 0; d < this._currentData.length; d++) {
          var data = this._currentData[d];
          selected.push.apply(selected, getSelected(data, this.$element.val().split(this._valueSeparator)));
        }
        callback(selected);
      };
      InputData.prototype.select = function(_, data) {
        if (!this.options.get('multiple')) {
          this.current(function(allData) {
            $.map(allData, function(data) {
              data.selected = false;
            });
          });
          this.$element.val(data.id);
          this.$element.trigger('change');
        } else {
          var value = this.$element.val();
          value += this._valueSeparator + data.id;
          this.$element.val(value);
          this.$element.trigger('change');
        }
      };
      InputData.prototype.unselect = function(_, data) {
        var self = this;
        data.selected = false;
        this.current(function(allData) {
          var values = [];
          for (var d = 0; d < allData.length; d++) {
            var item = allData[d];
            if (data.id == item.id) {
              continue;
            }
            values.push(item.id);
          }
          self.$element.val(values.join(self._valueSeparator));
          self.$element.trigger('change');
        });
      };
      InputData.prototype.query = function(_, params, callback) {
        var results = [];
        for (var d = 0; d < this._currentData.length; d++) {
          var data = this._currentData[d];
          var matches = this.matches(params, data);
          if (matches !== null) {
            results.push(matches);
          }
        }
        callback({results: results});
      };
      InputData.prototype.addOptions = function(_, $options) {
        var options = $.map($options, function($option) {
          return $.data($option[0], 'data');
        });
        this._currentData.push.apply(this._currentData, options);
      };
      return InputData;
    });
    S2.define('select2/compat/matcher', ['jquery'], function($) {
      function oldMatcher(matcher) {
        function wrappedMatcher(params, data) {
          var match = $.extend(true, {}, data);
          if (params.term == null || $.trim(params.term) === '') {
            return match;
          }
          if (data.children) {
            for (var c = data.children.length - 1; c >= 0; c--) {
              var child = data.children[c];
              var doesMatch = matcher(params.term, child.text, child);
              if (!doesMatch) {
                match.children.splice(c, 1);
              }
            }
            if (match.children.length > 0) {
              return match;
            }
          }
          if (matcher(params.term, data.text, data)) {
            return match;
          }
          return null;
        }
        return wrappedMatcher;
      }
      return oldMatcher;
    });
    S2.define('select2/compat/query', [], function() {
      function Query(decorated, $element, options) {
        if (options.get('debug') && window.console && console.warn) {
          console.warn('Select2: The `query` option has been deprecated in favor of a ' + 'custom data adapter that overrides the `query` method. Support ' + 'will be removed for the `query` option in future versions of ' + 'Select2.');
        }
        decorated.call(this, $element, options);
      }
      Query.prototype.query = function(_, params, callback) {
        params.callback = callback;
        var query = this.options.get('query');
        query.call(null, params);
      };
      return Query;
    });
    S2.define('select2/dropdown/attachContainer', [], function() {
      function AttachContainer(decorated, $element, options) {
        decorated.call(this, $element, options);
      }
      AttachContainer.prototype.position = function(decorated, $dropdown, $container) {
        var $dropdownContainer = $container.find('.dropdown-wrapper');
        $dropdownContainer.append($dropdown);
        $dropdown.addClass('select2-dropdown--below');
        $container.addClass('select2-container--below');
      };
      return AttachContainer;
    });
    S2.define('select2/dropdown/stopPropagation', [], function() {
      function StopPropagation() {}
      StopPropagation.prototype.bind = function(decorated, container, $container) {
        decorated.call(this, container, $container);
        var stoppedEvents = ['blur', 'change', 'click', 'dblclick', 'focus', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'keypress', 'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseover', 'mouseup', 'search', 'touchend', 'touchstart'];
        this.$dropdown.on(stoppedEvents.join(' '), function(evt) {
          evt.stopPropagation();
        });
      };
      return StopPropagation;
    });
    S2.define('select2/selection/stopPropagation', [], function() {
      function StopPropagation() {}
      StopPropagation.prototype.bind = function(decorated, container, $container) {
        decorated.call(this, container, $container);
        var stoppedEvents = ['blur', 'change', 'click', 'dblclick', 'focus', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'keypress', 'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseover', 'mouseup', 'search', 'touchend', 'touchstart'];
        this.$selection.on(stoppedEvents.join(' '), function(evt) {
          evt.stopPropagation();
        });
      };
      return StopPropagation;
    });
    S2.define('jquery.select2', ['jquery', 'require', './select2/core', './select2/defaults'], function($, require, Select2, Defaults) {
      require('jquery.mousewheel');
      if ($.fn.select2 == null) {
        var thisMethods = ['open', 'close', 'destroy'];
        $.fn.select2 = function(options) {
          options = options || {};
          if (typeof options === 'object') {
            this.each(function() {
              var instanceOptions = $.extend({}, options, true);
              var instance = new Select2($(this), instanceOptions);
            });
            return this;
          } else if (typeof options === 'string') {
            var instance = this.data('select2');
            if (instance == null && window.console && console.error) {
              console.error('The select2(\'' + options + '\') method was called on an ' + 'element that is not using Select2.');
            }
            var args = Array.prototype.slice.call(arguments, 1);
            var ret = instance[options](args);
            if ($.inArray(options, thisMethods) > -1) {
              return this;
            }
            return ret;
          } else {
            throw new Error('Invalid arguments for Select2: ' + options);
          }
        };
      }
      if ($.fn.select2.defaults == null) {
        $.fn.select2.defaults = Defaults;
      }
      return Select2;
    });
    (function(factory) {
      if (typeof S2.define === 'function' && S2.define.amd) {
        S2.define('jquery.mousewheel', ['jquery'], factory);
      } else if (typeof exports === 'object') {
        module.exports = factory;
      } else {
        factory(jQuery);
      }
    }(function($) {
      var toFix = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
          toBind = ('onwheel' in document || document.documentMode >= 9) ? ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
          slice = Array.prototype.slice,
          nullLowestDeltaTimeout,
          lowestDelta;
      if ($.event.fixHooks) {
        for (var i = toFix.length; i; ) {
          $.event.fixHooks[toFix[--i]] = $.event.mouseHooks;
        }
      }
      var special = $.event.special.mousewheel = {
        version: '3.1.12',
        setup: function() {
          if (this.addEventListener) {
            for (var i = toBind.length; i; ) {
              this.addEventListener(toBind[--i], handler, false);
            }
          } else {
            this.onmousewheel = handler;
          }
          $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
          $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },
        teardown: function() {
          if (this.removeEventListener) {
            for (var i = toBind.length; i; ) {
              this.removeEventListener(toBind[--i], handler, false);
            }
          } else {
            this.onmousewheel = null;
          }
          $.removeData(this, 'mousewheel-line-height');
          $.removeData(this, 'mousewheel-page-height');
        },
        getLineHeight: function(elem) {
          var $elem = $(elem),
              $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
          if (!$parent.length) {
            $parent = $('body');
          }
          return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
        },
        getPageHeight: function(elem) {
          return $(elem).height();
        },
        settings: {
          adjustOldDeltas: true,
          normalizeOffset: true
        }
      };
      $.fn.extend({
        mousewheel: function(fn) {
          return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },
        unmousewheel: function(fn) {
          return this.unbind('mousewheel', fn);
        }
      });
      function handler(event) {
        var orgEvent = event || window.event,
            args = slice.call(arguments, 1),
            delta = 0,
            deltaX = 0,
            deltaY = 0,
            absDelta = 0,
            offsetX = 0,
            offsetY = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';
        if ('detail' in orgEvent) {
          deltaY = orgEvent.detail * -1;
        }
        if ('wheelDelta' in orgEvent) {
          deltaY = orgEvent.wheelDelta;
        }
        if ('wheelDeltaY' in orgEvent) {
          deltaY = orgEvent.wheelDeltaY;
        }
        if ('wheelDeltaX' in orgEvent) {
          deltaX = orgEvent.wheelDeltaX * -1;
        }
        if ('axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {
          deltaX = deltaY * -1;
          deltaY = 0;
        }
        delta = deltaY === 0 ? deltaX : deltaY;
        if ('deltaY' in orgEvent) {
          deltaY = orgEvent.deltaY * -1;
          delta = deltaY;
        }
        if ('deltaX' in orgEvent) {
          deltaX = orgEvent.deltaX;
          if (deltaY === 0) {
            delta = deltaX * -1;
          }
        }
        if (deltaY === 0 && deltaX === 0) {
          return;
        }
        if (orgEvent.deltaMode === 1) {
          var lineHeight = $.data(this, 'mousewheel-line-height');
          delta *= lineHeight;
          deltaY *= lineHeight;
          deltaX *= lineHeight;
        } else if (orgEvent.deltaMode === 2) {
          var pageHeight = $.data(this, 'mousewheel-page-height');
          delta *= pageHeight;
          deltaY *= pageHeight;
          deltaX *= pageHeight;
        }
        absDelta = Math.max(Math.abs(deltaY), Math.abs(deltaX));
        if (!lowestDelta || absDelta < lowestDelta) {
          lowestDelta = absDelta;
          if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
            lowestDelta /= 40;
          }
        }
        if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
          delta /= 40;
          deltaX /= 40;
          deltaY /= 40;
        }
        delta = Math[delta >= 1 ? 'floor' : 'ceil'](delta / lowestDelta);
        deltaX = Math[deltaX >= 1 ? 'floor' : 'ceil'](deltaX / lowestDelta);
        deltaY = Math[deltaY >= 1 ? 'floor' : 'ceil'](deltaY / lowestDelta);
        if (special.settings.normalizeOffset && this.getBoundingClientRect) {
          var boundingRect = this.getBoundingClientRect();
          offsetX = event.clientX - boundingRect.left;
          offsetY = event.clientY - boundingRect.top;
        }
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        event.offsetX = offsetX;
        event.offsetY = offsetY;
        event.deltaMode = 0;
        args.unshift(event, delta, deltaX, deltaY);
        if (nullLowestDeltaTimeout) {
          clearTimeout(nullLowestDeltaTimeout);
        }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);
        return ($.event.dispatch || $.event.handle).apply(this, args);
      }
      function nullLowestDelta() {
        lowestDelta = null;
      }
      function shouldAdjustOldDeltas(orgEvent, absDelta) {
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
      }
    }));
    return {
      define: S2.define,
      require: S2.require
    };
  }());
  var select2 = S2.require('jquery.select2');
  jQuery.fn.select2.amd = S2;
  return select2;
}));

})();
System.register('components/aurelia-select.js', ['npm:jquery@2.2.4.js', 'github:select2/select2@4.0.0/js/select2.full.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/sfdc/remote.js'], function (_export) {
    'use strict';

    var $, select2, EventAggregator, inject, bindable, SfdcRemote, AureliaSelect;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_jquery) {
            $ = _jquery['default'];
        }, function (_select2Select2JsSelect2Full) {
            select2 = _select2Select2JsSelect2Full['default'];
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_commonsSfdcRemote) {
            SfdcRemote = _commonsSfdcRemote.SfdcRemote;
        }],
        execute: function () {
            AureliaSelect = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(AureliaSelect, [{
                    key: 'tags',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'selectUrl',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '';
                    },
                    enumerable: true
                }, {
                    key: 'swidth',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '100%';
                    },
                    enumerable: true
                }, {
                    key: 'selectId',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '';
                    },
                    enumerable: true
                }, {
                    key: 'isMultiple',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return true;
                    },
                    enumerable: true
                }, {
                    key: 'placeHolder',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '';
                    },
                    enumerable: true
                }, {
                    key: 'page',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return 1;
                    },
                    enumerable: true
                }, {
                    key: 'perPage',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return 3;
                    },
                    enumerable: true
                }, {
                    key: 'getOutput',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'setValue',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'maxLength',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'styles',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '';
                    },
                    enumerable: true
                }, {
                    key: 'defaultvalue',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return null;
                    },
                    enumerable: true
                }, {
                    key: 'defaults',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return [];
                    },
                    enumerable: true
                }, {
                    key: 'disableSelect',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'customError',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return null;
                    },
                    enumerable: true
                }, {
                    key: 'methodKey',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '';
                    },
                    enumerable: true
                }, {
                    key: 'minInput',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return 1;
                    },
                    enumerable: true
                }, {
                    key: 'dataSource',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'selectDisabled',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'removeDefaultSelection',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'additionalParams',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return {};
                    },
                    enumerable: true
                }, {
                    key: 'dataCallback',
                    decorators: [bindable],
                    initializer: function initializer() {
                        var _this = this;

                        return function (params) {
                            return $.extend({
                                page: Number(_this.page),
                                per_page: Number(_this.perPage),
                                search: params.term,
                                term: params.term,
                                current_location_uuid: envDetails.current_location_uuid
                            }, _this.additionalParams);
                        };
                    },
                    enumerable: true
                }, {
                    key: 'process',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'clearEvent',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'itemType',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'dataAutomation',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'newItemPrefix',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'selectListen',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return '';
                    },
                    enumerable: true
                }, {
                    key: 'allowClear',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return true;
                    },
                    enumerable: true
                }], null, _instanceInitializers);

                function AureliaSelect(ea, SfdcRemote) {
                    _classCallCheck(this, _AureliaSelect);

                    _defineDecoratedPropertyDescriptor(this, 'tags', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'selectUrl', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'swidth', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'selectId', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'isMultiple', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'placeHolder', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'page', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'perPage', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'getOutput', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'setValue', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'maxLength', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'styles', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'defaultvalue', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'defaults', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'disableSelect', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'customError', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'methodKey', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'minInput', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'dataSource', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'selectDisabled', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'removeDefaultSelection', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'additionalParams', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'dataCallback', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'process', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'clearEvent', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'itemType', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'dataAutomation', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'newItemPrefix', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'selectListen', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'allowClear', _instanceInitializers);

                    this.ea = ea;
                    this.remote = SfdcRemote;
                    this.getOutput = this.getValue;
                    this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
                    this.isNotIE11 = !navigator.userAgent.match(/Trident.*rv\:11\./);
                }

                _createDecoratedClass(AureliaSelect, [{
                    key: 'sfdcRemoteCall',
                    value: function sfdcRemoteCall(url, data, methodType, sfdcMethod) {
                        var request = {
                            url: url,
                            data: data,
                            method_key: sfdcMethod,
                            methodType: methodType
                        };

                        return this.remote.makeRemoteCall(request);
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this2 = this;

                        if (this.clearEvent) {
                            this.subscribeClear = this.ea.subscribe(this.clearEvent, function () {
                                $(_this2.selectBox).val(null).trigger("change");
                            });
                        }
                        this.listenToEvents();
                    }
                }, {
                    key: 'listenToEvents',
                    value: function listenToEvents() {
                        var _this3 = this;

                        $(this.selectBox).on("select2:select", function (ev) {
                            ev.params.data["selected"] = true;
                            ev.params.data["name"] = _this3.selectBox.id;
                            _this3.ea.publish(_this3.selectListen, ev.params.data);
                        });
                        $(this.selectBox).on("select2:unselect", function (ev) {
                            ev.params.data["selected"] = false;
                            ev.params.data["name"] = _this3.selectBox.id;
                            _this3.ea.publish(_this3.selectListen, ev.params.data);
                        });
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        if (this.clearEvent && this.subscribeClear) {
                            this.subscribeClear.dispose();
                        }
                    }
                }, {
                    key: 'attached',
                    value: function attached() {
                        var _this4 = this;

                        var processFunc = this.process;
                        var options = {
                            tags: this.tags,
                            closeOnSelect: true,
                            multiple: this.isMultiple,
                            allowClear: this.allowClear && !this.isMultiple,
                            disabled: this.disableSelect,
                            minimumResultsForSearch: Infinity,
                            minimumInputLength: this.minInput,
                            maximumSelectionLength: this.maxLength,
                            language: {
                                maximumSelected: function maximumSelected() {
                                    return _this4.customError ? _this4.customError : 'You can select only ' + _this4.maxLength + ' ' + _this4.itemType + '(s)';
                                }
                            },
                            templateSelection: function templateSelection(item) {
                                if (_this4.newItemPrefix && item.text.indexOf(_this4.newItemPrefix) == 0) {
                                    item.text = item.text.substring(_this4.newItemPrefix.length, item.text.length);
                                }
                                return item.text;
                            }
                        };

                        if (this.isNotIE11 || !this.isMultiple) {
                            options.placeholder = { id: this.placeHolder, text: this.placeHolder };
                        }

                        if (this.dataSource && this.dataSource.length) {
                            $(this.selectBox).html('');
                            options['data'] = this.dataSource;
                        } else {
                            options['ajax'] = {
                                url: this.selectUrl,
                                dataType: 'json',
                                delay: 250,
                                data: this.dataCallback,
                                processResults: function processResults(data, page) {
                                    var items = [];
                                    items = _this4.process(data, _this4.newItemPrefix);
                                    return {
                                        results: items
                                    };
                                }
                            };
                        }

                        if ((this.isSFDC || this.methodKey != '') && options.ajax) {
                            options.ajax.transport = function (params, success, failure) {
                                var request;
                                var url = _this4.selectUrl;

                                if (url.includes("/filter_options")) {
                                    url = url.split("?")[0];
                                    params.data['field'] = $.urlParam('field', _this4.selectUrl);
                                }
                                request = _this4.sfdcRemoteCall(url, params.data, 'GET', _this4.methodKey);
                                request.then(success);
                                request['catch'](failure);
                                return request;
                            };
                        }

                        if (this.isMultiple) {
                            $(this.selectBox).select2(options);
                        } else {
                            var selector = $(this.selectBox);
                            var dropdownAdapter;
                            $.fn.select2.amd.require(["select2/utils", "select2/dropdown", "select2/dropdown/attachContainer", "select2/dropdown/search", "select2/dropdown/closeOnSelect"], function (Utils, DropdownAdapter, AttachContainer, DropdownSearch, CloseOnSelect) {
                                dropdownAdapter = Utils.Decorate(Utils.Decorate(DropdownAdapter, DropdownSearch), AttachContainer);
                                dropdownAdapter = Utils.Decorate(dropdownAdapter, CloseOnSelect);
                                $.extend(options, { closeOnSelect: true, dropdownAdapter: dropdownAdapter });
                                if (selector.data('select2')) selector.select2('destroy');

                                $(selector).select2(options);
                                if (_this4.removeDefaultSelection) $(selector).val("").trigger("change");
                            });
                        }

                        this.subscribeToEvents();
                    }
                }, {
                    key: 'getDataValues',
                    value: function getDataValues(key) {
                        return _.map($(this.selectBox).select2('data'), key);
                    }
                }, {
                    key: 'getValue',
                    value: function getValue() {
                        return $(this.selectBox).val();
                    }
                }, {
                    key: 'setValue',
                    value: function setValue(value) {
                        return $(this.selectBox).val(value).trigger('change');
                    }
                }, {
                    key: 'setOption',
                    value: function setOption(option) {
                        $(this.selectBox).append('<option value=\'' + option.id + '\'>' + option.text + '</option>');
                    }
                }, {
                    key: 'removeValue',
                    value: function removeValue(value) {
                        var selectedVal = this.getValue();

                        if (this.isMultiple && selectedVal.indexOf(value) !== -1) {
                            var data = this.getDataValues();

                            selectedVal.splice(selectedVal.indexOf(value), 1);
                            $(this.selectBox).val(selectedVal).trigger('change').trigger({ type: 'select2:unselect', params: {
                                    data: data.find(function (data) {
                                        return data.id === value;
                                    })
                                } });
                        }

                        if (!this.isMultiple && selectedVal === value) {
                            var data = this.getDataValues();
                            $(this.selectBox).val(null).trigger("change").trigger({
                                type: 'select2:unselect', params: {
                                    data: data[0]
                                }
                            });
                        }
                    }
                }], null, _instanceInitializers);

                var _AureliaSelect = AureliaSelect;
                AureliaSelect = inject(EventAggregator, SfdcRemote)(AureliaSelect) || AureliaSelect;
                return AureliaSelect;
            }();

            _export('AureliaSelect', AureliaSelect);
        }
    };
});
System.register('view-models/briefings/briefing_request.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-validation@0.6.0.js', 'service/briefing_request_service.js', 'service/topic_request_service.js', 'service/copy_briefing_service.js', 'github:jonthornton/jquery-timepicker@1.8.8.js', 'github:eternicode/bootstrap-datepicker@1.5.0/js/bootstrap-datepicker.js', 'github:jonthornton/Datepair.js@0.4.14.js', 'models/briefing_request.js', 'models/concierge_service.js', 'models/activity.js', 'npm:aurelia-i18n@0.4.1.js', 'view-models/briefings/app.js', 'components/aurelia-select.js'], function (_export) {
	'use strict';

	var $, bindable, inject, EventAggregator, Validation, BriefingRequestService, TopicRequestService, CopyBriefingService, timepicker, datepicker, datepair, BriefingRequestModel, ConciergeServiceModel, Activity, I18N, App, AureliaSelect, BriefingRequest;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	return {
		setters: [function (_jquery) {
			$ = _jquery['default'];
		}, function (_aureliaFramework) {
			bindable = _aureliaFramework.bindable;
			inject = _aureliaFramework.inject;
		}, function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_aureliaValidation) {
			Validation = _aureliaValidation.Validation;
		}, function (_serviceBriefing_request_service) {
			BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
		}, function (_serviceTopic_request_service) {
			TopicRequestService = _serviceTopic_request_service.TopicRequestService;
		}, function (_serviceCopy_briefing_service) {
			CopyBriefingService = _serviceCopy_briefing_service.CopyBriefingService;
		}, function (_jonthorntonJqueryTimepicker) {
			timepicker = _jonthorntonJqueryTimepicker.timepicker;
		}, function (_eternicodeBootstrapDatepickerJsBootstrapDatepicker) {
			datepicker = _eternicodeBootstrapDatepickerJsBootstrapDatepicker.datepicker;
		}, function (_jonthorntonDatepairJs) {
			datepair = _jonthorntonDatepairJs.datepair;
		}, function (_modelsBriefing_request) {
			BriefingRequestModel = _modelsBriefing_request.BriefingRequestModel;
		}, function (_modelsConcierge_service) {
			ConciergeServiceModel = _modelsConcierge_service.ConciergeServiceModel;
		}, function (_modelsActivity) {
			Activity = _modelsActivity.Activity;
		}, function (_aureliaI18n) {
			I18N = _aureliaI18n.I18N;
		}, function (_app) {
			App = _app.App;
		}, function (_componentsAureliaSelect) {
			AureliaSelect = _componentsAureliaSelect.AureliaSelect;
		}],
		execute: function () {
			BriefingRequest = function () {
				function BriefingRequest(ea, briefingRequestService, briefingRouter, validation, topicRequestService, i18n, copyBriefingService) {
					_classCallCheck(this, _BriefingRequest);

					this.uuid = '';
					this.eventInfo = {};
					this.queueManager = {};
					this.activityList = [];
					this.defaultSelect = {};
					this.isAttending = null;
					this.removedActivities = [];
					this.conciergeServices = [];
					this.subscribed = [];
					this.existingBriefing = false;
					this.disableRequestor = false;
					this.attendingChoosen = false;
					this.attendeeMode = 'external';
					this.briefingFormMetaData = [];
					this.accountOpportunities = [];
					this._briefingFormRenderer = {};
					this.renderSelectCompany = false;
					this.showSelectOpportunity = false;
					this.selectedOpportunityList = [];
					this.selectedAccount = { selected: false };
					this.briefingWithSelect = 'briefing-with:select';
					this.opportunityIdSelector = "#briefing_opportunity_ids";
					this.opprtunitySelect = 'sfdc-opportunity:select';
					this.briefingFormRequest = { form_type: "briefing_request_form" };
					this.planApproved = false;
					this.roomList = [{ id: '', text: 'Please Select' }];
					this.opportunitySelectEvent = 'sfdc-opportunity:select';
					this.roomListCustomLabel = '';
					this.roomListHelpText = '';
					this.requestBriefingFormTitle = '';
					this.dateTimeHelpText = '';
					this.briefingFormHasOppMappedFields = false;
					this.capacityHash = {};

					this.ea = ea;
					this.i18n = i18n;
					this.envDetails = envDetails;
					this.briefingRouter = briefingRouter;
					this.i18n.setLocale('en').then(function () {});
					this.topicRequestService = topicRequestService;
					this.briefingRequestService = briefingRequestService;
					this.copyBriefingService = copyBriefingService;
					this.briefingRequest = new BriefingRequestModel();
					this.additional = {};
					this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
					this.isNotIE11 = !navigator.userAgent.match(/Trident.*rv\:11\./);
					this.subscribeToEvents();
					this.briefingRequest.validation = validation.on(this.briefingRequest).ensure('externalAttendees').hasMinLength(1).withMessage("This field is required.");
					if (this.envDetails.role == "AM") {
						this.defaultSelect = {
							id: envDetails.currentUser.uuid,
							text: envDetails.currentUser.first_name + " " + envDetails.currentUser.last_name
						};
					}
					if (this.isSFDC) {
						this.urlAccountID = $.urlParam('accid');
						this.urlOpportunityID = $.urlParam('oppid');
					}

					this.renderSelectCompany = !this.isSFDC;
					this.isLocationActivated = window.locationActive;
					this.disableSubmitBtn = false;
				}

				_createClass(BriefingRequest, [{
					key: 'attached',
					value: function attached() {
						var _this2 = this;

						$(window).off("scroll");
						this.renderBriefingCustomForm();
						this.showAttendeePopover();
						this.briefingRequestService.getEventInfo().then(function (response) {
							if (typeof response.response === "string") response = JSON.parse(response.response);
							if (response.success == true || response.status == 200) {
								_this2.eventInfo = response.data;
								var _eventInfo = _this2.eventInfo;
								var briefingCustomLables = _eventInfo.briefing_custom_labels;
								var allowUserToAddNewExternalAttendee = _eventInfo.allowUserToAddNewExternalAttendee;
								var addAllBriefingParticipantsToAgenda = _eventInfo.add_all_briefing_participants_to_agenda;
								var briefingCopyTopicToMeetingTitle = _eventInfo.briefing_copy_topic_to_meeting_title;

								if (briefingCustomLables) {
									var roomListCustomLabel = briefingCustomLables.room_list_custom_label;
									var roomListHelpText = briefingCustomLables.room_list_help_text;
									var dateTimeHelpText = briefingCustomLables.date_time_help_text;
									var briefingFormHelpText = briefingCustomLables.briefing_form_help_text;

									_this2.roomListCustomLabel = roomListCustomLabel;
									_this2.roomListHelpText = roomListHelpText;
									_this2.dateTimeHelpText = dateTimeHelpText;
									_this2.requestBriefingFormTitle = briefingFormHelpText;
								}
								window.envDetails.allowUserToAddNewExternalAttendee = allowUserToAddNewExternalAttendee;
								window.envDetails.addAllBriefingParticipantsToAgenda = addAllBriefingParticipantsToAgenda;
								window.envDetails.copyTopicToMeetingTitle = briefingCopyTopicToMeetingTitle;
								_this2.onLoadInitialization();
							}
						});

						if (this.isSFDC) {
							this.ea.subscribe(this.opportunitySelectEvent, function (opportunity) {
								_this2.handleOpportunity(opportunity);
							});
						}
					}
				}, {
					key: 'activate',
					value: function activate(params, routeConfig, options) {
						var _this3 = this;

						if (params.uuid) {
							this.uuid = params.uuid;

							return this.briefingRequestService.getBriefingDetails(this.uuid).then(function (response) {
								if (response.response) {
									response = JSON.parse(response.response);
								}
								if (response.success == true || response.status == 200) {
									_this3.originalData = response.data;
									_this3.briefingRequest.setupData(_this3.originalData);
									_this3.briefingRequestService.update_briefing_url = _this3.originalData.actions.briefing_update_url;

									if (_this3.originalData.concierge_services.length) {
										_this3.originalData.concierge_services.forEach(function (service) {
											_this3.conciergeServices.push(new ConciergeServiceModel(service));
										});
									}
									_this3.mapExistingActivities();
									_this3.setAttendingToggleState();
									_this3.existingBriefing = true;
									_this3.defaultSelect = {
										id: _this3.briefingRequest.requestor.uuid,
										text: _this3.briefingRequest.requestor.name
									};
									if (_this3.envDetails.queueManagementEnabled && _this3.originalData.assigned_to.uuid) {
										_this3.queueManager = {
											id: _this3.originalData.assigned_to.uuid,
											text: _this3.originalData.assigned_to.name
										};
									}
									if (_this3.isSFDC || _this3.envDetails.role == "AM" || _this3.envDetails.role == "Executive" || _this3.briefingRequest.status == 'Cancelled') {
										_this3.disableRequestor = true;
									}
									if (!_this3.isSFDC && _this3.originalData.custom_fields.briefing_with) {
										_this3.selectedAccount = {
											selected: true,
											id: _this3.originalData.custom_fields.briefing_with,
											text: _this3.originalData.custom_fields.briefing_with
										};
										_this3.renderSelectCompany = true;
									}
									if (_this3.isSFDC && _this3.originalData.custom_fields.briefing_account_id) {
										var request = {
											accountName: '',
											accountId: _this3.originalData.custom_fields.briefing_account_id
										};
										_this3.getSfdcAccount(request);
									}

									if (_this3.originalData.draft_plans && _this3.originalData.draft_plans.length) {
										_this3.planApproved = _this3.originalData.draft_plans.filter(function (plan) {
											return plan.status === 'Accepted';
										}).length ? true : false;
									}
								}
							});
						} else {
							this.uuid = '';
							this.existingBriefing = false;

							if (selectedRequestor) {
								this.defaultSelect = { id: selectedRequestor.uuid, text: selectedRequestor.name };
							}
							if (this.envDetails.queueManagementEnabled && this.envDetails.role == "MM") {
								this.queueManager = {
									id: this.envDetails.currentUser.uuid,
									text: this.envDetails.currentUser.first_name + " " + this.envDetails.currentUser.last_name
								};
							}
							if (this.isSFDC || this.envDetails.role == "AM" || this.envDetails.role == "Executive" || this.briefingRequest.status == 'Cancelled') {
								this.disableRequestor = true;
							}
							if (this.isSFDC) {
								if (this.urlAccountID) {
									this.getSfdcAccount({ accountName: '', accountId: this.urlAccountID });
								} else {
									this.renderSelectCompany = true;
								}
							}
						}
					}
				}, {
					key: 'showOpportunitySelectBox',
					value: function showOpportunitySelectBox(show, newModel) {
						var _this4 = this;

						var model = Object.assign({
							minInput: 3,
							defaults: [],
							methodKey: 'fetch_opportunity',
							selectId: "sfdc-opportunity-ids",
							process: this.processOpportunity,
							selectListen: this.opportunitySelectEvent,
							placeHolder: window.envDetails.sfdcCustomLabels.opportunity_placeholder,
							labelText: window.envDetails.sfdcCustomLabels.opportunity_label,
							helpText: window.envDetails.sfdcCustomLabels.opportunity_helptext || '',
							dataCallback: function dataCallback(params) {
								return { accountId: _this4.selectedAccount.id, opportunityName: params.term };
							}
						}, newModel);

						this.sfdcOpptyModel = model;
						this.showSelectOpportunity = show;

						if (model.defaults || model.defaultvalue) {
							(function () {
								var values = model.defaultvalue ? [model.defaultvalue.id] : model.defaults.map(function (option) {
									return option.id;
								});
								window.setTimeout(function () {
									$('#sfdc-opportunity-ids').select2('val', values);
								}, 300);
							})();
						}
					}
				}, {
					key: 'getSfdcAccount',
					value: function getSfdcAccount(request) {
						var _this5 = this;

						this.briefingRequestService.getSfdcMethod('', request, 'fetch_account').then(function (response) {
							_this5.selectedAccount = response.data.accounts[0];
							_this5.selectedAccount["text"] = _this5.selectedAccount.name;
							_this5.selectedAccount["id"] = _this5.selectedAccount.account_id;
							_this5.selectedAccount.selected = true;
							_this5.renderSelectCompany = true;
						});
					}
				}, {
					key: 'getSfdcOpportunity',
					value: function getSfdcOpportunity(request) {
						var _this6 = this;

						this.briefingRequestService.getSfdcMethod('', request, 'fetch_opportunity').then(function (response) {
							var first = _.first(response.data.opportunities);
							var firstOppr = { id: first.opportunity_id, text: first.name, name: first.name, selected: true };
							_this6.handleOpportunity(firstOppr);
							_this6.showOpportunitySelectBox(true, { defaultvalue: firstOppr });
						});
					}
				}, {
					key: 'processOpportunity',
					value: function processOpportunity(response) {
						var items = [];
						if (response.data && response.data.opportunities && response.data.opportunities.length) {
							response.data.opportunities.forEach(function (item) {
								items.push({ id: item.opportunity_id, text: item.name, accountid: item.account.account_id, accountname: item.account.name });
							});
						}
						return items;
					}
				}, {
					key: 'isQueueEnabled',
					value: function isQueueEnabled() {
						return this.envDetails.role === "CSM" || this.envDetails.role === "QueueManager";
					}
				}, {
					key: 'copyBriefingCustomFields',
					value: function copyBriefingCustomFields(details) {
						var copyableList = [];
						this.briefingFormMetaData.forEach(function (field) {
							if (field.field_name && !field.hidden && !(field.field_name === 'briefing_with' || field.field_name === 'briefing_account_id' || field.field_name === 'briefing_opportunity_ids' || field.field_name === 'preferred_internal_attendees')) {
								copyableList.push({
									type: field.type,
									field_id: field.field_name,
									value: details.source.custom_fields[field.field_name]
								});
							}
						});
						this._briefingFormRenderer.copyValues(copyableList);
						details.modal.modal('hide');
					}
				}, {
					key: 'initBriefingCustomForm',
					value: function initBriefingCustomForm(response) {
						var _this7 = this;

						if (response.response) {
							response = JSON.parse(response.response);
						}
						var custFormFields = response.data.custom_form_fields;
						this.briefingFormMetaData = custFormFields && custFormFields.briefing_request_form;
						this._briefingFormRenderer = $(this.briefingCustomFormEl).formRenderer({
							fieldCollection: this.briefingFormMetaData.map(function (field) {
								if (field.type === 'multiselect_dropdown' && !_this7.isNotIE11) {
									field.placeholder = '';
								}
								if (!_this7.briefingFormHasOppMappedFields && field.integration_field && field.integration_field.entity_name === 'Opportunity') {
									_this7.briefingFormHasOppMappedFields = true;
								}
								return field;
							})
						});
						this._briefingFormRenderer.init();
						this._briefingFormRenderer.setValues(this.briefingRequest.getCustomFields());
						this._briefingFormRenderer.afterLoad();
						this.hidingBrieifngFields();
					}
				}, {
					key: 'renderBriefingCustomForm',
					value: function renderBriefingCustomForm() {
						var _this8 = this;

						this.briefingRequestService.getBriefingCustomForm(this.briefingFormRequest).then(function (response) {
							_this8.initBriefingCustomForm(response);
							if (_this8.isSFDC && _this8.selectedAccount.id) {
								_this8.handleAccount(_this8.selectedAccount);
							}

							if (_this8.isSFDC && !_this8.existingBriefing) {
								if (_this8.urlOpportunityID) {
									_this8.getSfdcOpportunity({ opportunityId: _this8.urlOpportunityID });
								} else {
									_this8.showOpportunitySelectBox(true);
								}
							}

							if (_this8.existingBriefing && !_.isEmpty(_this8.originalData.custom_fields.briefing_opportunity_ids)) {
								(function () {
									var selectedOppHash = _this8.originalData.custom_fields.briefing_opportunity_ids;
									var oppIds = Object.keys(selectedOppHash);
									oppIds.forEach(function (id) {
										_this8.selectedOpportunityList.push({ id: id, name: selectedOppHash[id], text: selectedOppHash[id], selected: true });
									});

									_this8.showOpportunitySelectBox(true, { defaults: _.cloneDeep(_this8.selectedOpportunityList), disableSelect: !_this8.isSFDC });
								})();
							}
						});
					}
				}, {
					key: 'hidingBrieifngFields',
					value: function hidingBrieifngFields() {
						$("#briefing_with").prop('disabled', true).closest('.form-group').hide();
						$("#briefing_opportunity_ids").prop('disabled', true).closest('.form-group').hide();
					}
				}, {
					key: 'todaysDate',
					value: function todaysDate() {
						return new Date(moment().tz(this.eventInfo.current_location.mapped_time_zone).format("YYYY/MM/DD HH:mm:ss"));
					}
				}, {
					key: 'setStartEndDate',
					value: function setStartEndDate() {
						var dateInit = {
							'format': 'mm/dd/yyyy',
							'autoclose': true,
							'disableTouchKeyboard': true
						};
						var startDateDefaultView = {};
						var endDateDefaultView = {};

						var today = this.todaysDate();
						if (this.existingBriefing) {
							var briefingStartDate = new Date(this.originalData.start_time);
							briefingStartDate = new Date(briefingStartDate.getTime() + briefingStartDate.getTimezoneOffset() * 1000 * 60);
						}
						var startDate = new Date(this.eventInfo.current_location.start_date);
						var endDate = new Date(this.eventInfo.current_location.end_date);
						dateInit.startDate = new Date(startDate);
						dateInit.endDate = new Date(Math.max(endDate, dateInit.startDate.valueOf() - 86400000));

						var defaultViewDate = this.getDefaultViewDate(startDate, endDate, today);

						startDateDefaultView.year = defaultViewDate.getFullYear();
						startDateDefaultView.month = defaultViewDate.getMonth();
						startDateDefaultView.day = defaultViewDate.getDate();

						endDateDefaultView.year = defaultViewDate.getFullYear();
						endDateDefaultView.month = defaultViewDate.getMonth();
						endDateDefaultView.day = defaultViewDate.getDate();

						if (typeof jiffle != "undefined") {
							$.extend(dateInit, { 'container': $('#sf-jiffle-now') });
						}

						$('#briefing_datepair .start.date').datepicker(Object.assign(dateInit, { defaultViewDate: startDateDefaultView })).change({ briefingObjRef: this }, this.handleDateChange);
						$('#briefing_datepair .end.date').datepicker(Object.assign(dateInit, { defaultViewDate: endDateDefaultView }));
					}
				}, {
					key: 'getDefaultViewDate',
					value: function getDefaultViewDate(startDate, endDate, today) {
						if (startDate > today) {
							return startDate;
						}

						if (endDate < today) {
							return endDate;
						}

						return today;
					}
				}, {
					key: 'getStartDate',
					value: function getStartDate(defaultDate) {
						try {
							if (defaultDate) return new Date(defaultDate);
							var startDate = new Date(window.envDetails.event.start_date);
							startDate = Math.max.apply(null, [startDate, new Date()]);
							startDate = new Date(startDate);
							return startDate;
						} catch (e) {
							console.error(e, 'Not able to get start date');
						}
					}
				}, {
					key: 'onLoadInitialization',
					value: function onLoadInitialization() {
						var _this9 = this;

						window.scrollTo(0, 0);
						this.setStartEndDate();
						$('.navbar-set').removeClass("navbar-fixed-top");
						$('.stick-top').css("padding-top", "0");
						$('#briefing_datepair .time').timepicker({
							'timeFormat': 'g:ia',
							'scrollDefault': '8:30am',
							'showDuration': false,
							'disableTextInput': true,
							'disableTouchKeyboard': true
						});
						var datePairParams = {
							defaultTimeDelta: 4 * 60 * 60 * 1000,
							anchor: ''
						};
						var datepair = new Datepair(this.briefingDatepair, datePairParams);
						if (this.existingBriefing) {
							var start_date = this.originalData && this.getStartDate(this.originalData.start_date);
							var end_date = this.originalData && this.getStartDate(this.originalData.end_date);

							var startDateInput = $('#briefing_datepair .start.date');
							var endDateInput = $('#briefing_datepair .end.date');

							start_date = new Date(start_date.getTime() + start_date.getTimezoneOffset() * 1000 * 60);
							startDateInput.datepicker('setDate', moment(start_date).startOf('day').toDate());
							$('#briefing_datepair .start.time').timepicker('setTime', start_date);

							end_date = new Date(end_date.getTime() + end_date.getTimezoneOffset() * 1000 * 60);
							endDateInput.datepicker('setDate', moment(end_date).startOf('day').toDate());
							$('#briefing_datepair .end.time').timepicker('setTime', end_date);
							console.log(startDateInput);
							startDateInput.datepicker('update');
							endDateInput.datepicker('update');
						}
						$(this.briefingDatepair).on('rangeSelected', function () {
							_this9.handleTimeChange();
						}).trigger('rangeSelected');
						Handlebars.registerHelper('ifObject', function (item, opts) {
							if (typeof item === "object") {
								return opts.fn(this);
							} else {
								return opts.inverse(this);
							}
						});
					}
				}, {
					key: 'setRoomPopover',
					value: function setRoomPopover() {
						var capacity = this.capacityHash[$('#roombox').val()];
						var template = '\n\t\t  <div class="item-popover popover roominfo-popover">\n\t\t    <div class="arrow"></div>\n\t\t    <div class="popover-content"></div>\n\t\t  </div>';
						$('#roomInfo').popover({
							trigger: 'hover',
							placement: 'bottom',
							html: true,
							template: template
						}).attr('data-content', capacity ? 'Room Capacity <br/> ' + capacity : 'Select A Room');
					}
				}, {
					key: 'subscribeToEvents',
					value: function subscribeToEvents() {
						var _this10 = this;

						var count = 0;
						this.subscribed[count++] = this.ea.subscribe('import:copy-briefing-source', function (details) {
							if (details.publisher == _this10.i18n.tr('briefings.briefingRequest.customerInfo')) {
								_this10.copyBriefingCustomFields(details);
							} else if (details.publisher == _this10.i18n.tr('briefings.briefingRequest.copyAttendee')) {
								_this10.getAttendees(details);
							}
						});

						this.subscribed[count++] = this.ea.subscribe('activities:changed', function (data) {
							_this10.activityList = data.activityList;
							_this10.removedActivities = data.removedActivities;
						});

						this.subscribed[count++] = this.ea.subscribe(this.briefingWithSelect, function (account) {
							if (_this10.isSFDC) {
								_this10.handleAccount(account);
							} else {
								if (account.selected) {
									_this10.selectedAccount.selected = true;
									$("#briefing_with").val(account.text);
								} else {
									_this10.selectedAccount.selected = false;
								}
							}
						});

						this.subscribed[count++] = this.ea.subscribe('toggle:attend', function (payload) {
							var currentUSer = envDetails.currentUser.first_name + ' ' + envDetails.currentUser.last_name;
							if (_this10.envDetails.briefingInternalAttendeeEnabled) {
								_this10.envDetails.currentUser['selected'] = true;
								_this10.envDetails.currentUser['isNewAttendee'] = true;
								_this10.envDetails.currentUser['available'] = true;
								_this10.ea.publish('internal-attendee:add', _this10.envDetails.currentUser);
							} else {
								_this10.envDetails.currentUser['selected'] = true;
								_this10.envDetails.currentUser['isNewAttendee'] = true;
								_this10.envDetails.currentUser['available'] = true;
								_this10.briefingRequest.internalAttendees.push(_this10.envDetails.currentUser);
							}
							_this10.setAttendeeChosen(true);
						});

						this.subscribed[count++] = this.ea.subscribe('toggle:do_not_attend', function (payload) {
							var currentUSer = envDetails.currentUser.first_name + ' ' + envDetails.currentUser.last_name;
							if (_this10.envDetails.briefingInternalAttendeeEnabled) {
								_this10.envDetails.currentUser['selected'] = false;
								_this10.envDetails.currentUser['available'] = true;
								_this10.ea.publish('internal-attendee:remove', _this10.envDetails.currentUser);
							} else {
								_this10.briefingRequest.internalAttendees.pop();
							}
							_this10.setAttendeeChosen(true);
						});

						this.subscribed[count++] = this.ea.subscribe('agenda:concierge:attendee:not:delete', function (payload) {
							if (payload.uuid == envDetails.currentUser.uuid) {
								_this10.setAttendeeChosen(true);
								_this10.setIsAttending(true);
							}
						});

						this.subscribed[count++] = this.ea.subscribe('toggle:is_attending', function () {
							_this10.setAttendeeChosen(true);
							_this10.setIsAttending(true);
						});

						this.subscribed[count++] = this.ea.subscribe('toggle:is_not_attending', function () {
							_this10.setAttendeeChosen(true);
							_this10.setIsAttending(false);
						});

						this.subscribed[count++] = this.ea.subscribe('agenda:concierge:attendee:check', function (payload) {
							_this10.checkForPresenceOfAttendeeInAgendaORConcierge(payload);
						});
						this.subscribed[count++] = this.ea.subscribe('agenda:edit:inProgress', function (payload) {
							_this10.isActivityEditing = payload.edit;
						});

						this.subscribed[count++] = this.ea.subscribe('roombox:select', function (payload) {
							_this10.setRoomPopover();
							var id = payload.id;
							var text = payload.text;

							if (_this10.originalData && _this10.originalData.room && id && _this10.originalData.room.uuid !== id) {
								_this10.ea.publish("show:notification", {
									title: _this10.i18n.tr('briefings.briefingRequest.roomChangeNotifTitle'),
									message: _this10.i18n.tr('briefings.briefingRequest.roomChangeNotif', { oldRoom: _this10.originalData.room.name, newRoom: text }),
									'class': 'blue',
									isConfirmation: true,
									cancel: function cancel() {
										$('#roombox').val(_this10.originalData.room.uuid).select2();
										_this10.setRoomPopover();
									}
								});
							}
						});

						if (this.isSFDC) {
							this.subscribed[count++] = this.ea.subscribe(this.opprtunitySelect, function (opportunity) {
								_this10.preSelectAccountForOpportunity(opportunity);
							});
						}
					}
				}, {
					key: 'detached',
					value: function detached() {
						if (this.subscribed) {
							this.subscribed.forEach(function (sub) {
								return sub.dispose && sub.dispose();
							});
						}
					}
				}, {
					key: 'preSelectAccountForOpportunity',
					value: function preSelectAccountForOpportunity(opprtunity) {
						if (opprtunity.selected && !this.selectedAccount.id) {
							this.selectedAccount["text"] = opprtunity.accountname;
							this.selectedAccount["id"] = opprtunity.accountid;
							this.ea.publish("setAccountName", opprtunity);
						}
					}
				}, {
					key: 'checkForPresenceOfAttendeeInAgendaORConcierge',
					value: function checkForPresenceOfAttendeeInAgendaORConcierge(payload) {
						var _this11 = this;

						var isAttendeePresentInAgenda = this.checkForPresenceOfAttendeeinAgendas(payload);
						var isAttendeePresentInConciergeServices = this.checkForPresenceOfAttendeeinConciergeServices(payload);
						var message = '';
						if (isAttendeePresentInAgenda && isAttendeePresentInConciergeServices) {
							message = this.i18n.tr('briefings.briefingRequest.attendeePresentInAgendaAndConcierge');
						} else if (isAttendeePresentInConciergeServices) {
							message = this.i18n.tr('briefings.briefingRequest.attendeePresentInConcierge');
						} else if (isAttendeePresentInAgenda) {
							message = this.i18n.tr('briefings.briefingRequest.attendeePresentInAgenda');
						}
						if (message) {
							this.ea.publish("show:notification", {
								title: this.i18n.tr('briefings.commons.areYouSure'),
								message: message,
								'class': 'blue',
								isConfirmation: true,
								cancel: function cancel() {
									_this11.ea.publish("agenda:concierge:attendee:not:delete", payload);
								},
								done: function done() {
									_this11.ea.publish("agenda:concierge:attendee:delete", payload);
								}
							});
						} else {
							this.ea.publish("agenda:concierge:attendee:delete", payload);
						}
					}
				}, {
					key: 'checkForPresenceOfAttendeeinAgendas',
					value: function checkForPresenceOfAttendeeinAgendas(payload) {
						var _this = this;
						return _.find(_.flatten(_this.activityList), function (activity) {
							return _.includes(activity.custom_fields.agenda_participants, payload.uuid);
						});
					}
				}, {
					key: 'checkForPresenceOfAttendeeinConciergeServices',
					value: function checkForPresenceOfAttendeeinConciergeServices(payload) {
						var uuid = payload.uuid;
						for (var i = 0; i < this.conciergeServices.length; i++) {
							var service = this.conciergeServices[i];
							for (var j = 0; service.count > 0 && j < service.concierge_requests.length; j++) {
								var req = service.concierge_requests[j];
								for (var k = 0; req.participants.length > 0 && k < req.participants.length; k++) {
									var p = req.participants[k];
									if (p.user_uuid == uuid) {
										return true;
									}
								}
							}
						}
						return false;
					}
				}, {
					key: 'toggleAttend',
					value: function toggleAttend() {
						var currentUSer = envDetails.currentUser.first_name + ' ' + envDetails.currentUser.last_name;
						if (this.envDetails.briefingInternalAttendeeEnabled) {
							this.envDetails.currentUser['selected'] = true;
							this.envDetails.currentUser['isNewAttendee'] = true;
							this.envDetails.currentUser['available'] = true;
							this.ea.publish('internal-attendee:add', this.envDetails.currentUser);
						} else {
							this.envDetails.currentUser['selected'] = true;
							this.envDetails.currentUser['isNewAttendee'] = true;
							this.envDetails.currentUser['available'] = true;
							this.briefingRequest.internalAttendees.push(this.envDetails.currentUser);
						}
						this.setAttendeeChosen(true);
					}
				}, {
					key: 'toggleNotAttend',
					value: function toggleNotAttend() {
						var currentUSer = envDetails.currentUser.first_name + ' ' + envDetails.currentUser.last_name;
						if (this.envDetails.briefingInternalAttendeeEnabled) {
							this.envDetails.currentUser['selected'] = false;
							this.envDetails.currentUser['available'] = true;
							this.ea.publish('internal-attendee:remove', this.envDetails.currentUser);
						} else {
							this.briefingRequest.internalAttendees.pop();
						}
						this.setAttendeeChosen(true);
					}
				}, {
					key: 'handleAccount',
					value: function handleAccount(account) {
						var _this12 = this;

						var custom = { custom_fields: { briefing_with: '' } };

						if (account.selected) {

							if (this.selectedAccount.id !== account.id && !this.existingBriefing) {
								$("#sfdc-opportunity-ids").val(null).trigger("change");
								this.selectedOpportunityList.splice(0, this.selectedOpportunityList.length);
								this.briefingRequest.externalAttendees.splice(0, this.briefingRequest.externalAttendees.length);
							}

							this.selectedAccount.selected = true;
							custom.custom_fields.briefing_account_id = this.selectedAccount.id = account.id;
							custom.custom_fields.briefing_with = this.selectedAccount.name = this.selectedAccount.text = account.text;

							if (this.existingBriefing) {
								var modelCustomValues = this.briefingRequest.getCustomFields();
								if (!_.isEmpty(modelCustomValues.custom_fields)) {
									custom.custom_fields = Object.assign(_.cloneDeep(modelCustomValues.custom_fields), custom.custom_fields);
								}
								this._briefingFormRenderer.setValues(custom);
							} else {
								this.populateSfdcCustomFields(this.selectedAccount.id, '');
							}
						} else {
							(function () {
								_this12.selectedAccount.selected = false;
								_this12.selectedAccount.id = _this12.selectedAccount.name = _this12.selectedAccount.text = "";

								$("#sfdc-opportunity-ids").val(null).trigger("change");
								_this12.selectedOpportunityList.splice(0, _this12.selectedOpportunityList.length);
								_this12.briefingRequest.externalAttendees.splice(0, _this12.briefingRequest.externalAttendees.length);

								var custom_fields = _this12._briefingFormRenderer.getValues();

								_this12.briefingFormMetaData.forEach(function (formField) {
									if (formField.integration_field && formField.integration_field.uuid) {
										custom_fields[formField.field_name] = '';
									}
								});
								custom.custom_fields = _.assign(custom.custom_fields, custom_fields);
								_this12._briefingFormRenderer.setValues(custom);
							})();
						}

						this.ea.publish('externalAttendee:sfdc', {
							account: account,
							clearSelectedAttendees: !this.existingBriefing
						});
					}
				}, {
					key: 'onlyOneOpportunitySelected',
					value: function onlyOneOpportunitySelected(opportunity) {
						return this.selectedOpportunityList.length === 1;
					}
				}, {
					key: 'secondOpportunitySelect',
					value: function secondOpportunitySelect(opportunity) {
						return this.selectedOpportunityList.length === 2 && opportunity.selected;
					}
				}, {
					key: 'lastOpportunityRemove',
					value: function lastOpportunityRemove(opportunity) {
						return this.selectedOpportunityList.length === 0 && !opportunity.selected;
					}
				}, {
					key: 'handleOpportunity',
					value: function handleOpportunity(opportunity) {
						this.addRemoveOpportunity(opportunity);
						this.ea.publish('bind-opportunities:select');

						if (this.briefingFormHasOppMappedFields) {
							if (this.onlyOneOpportunitySelected(opportunity)) {
								this.populateSfdcCustomFields(this.selectedAccount.id, this.selectedOpportunityList[0].id);
							} else if (this.secondOpportunitySelect(opportunity)) {
								this.promptUserToContinueSelection(opportunity);
							} else if (this.lastOpportunityRemove(opportunity)) {
								this.clearOpportunityDependentFields();
							}
						}
					}
				}, {
					key: 'promptUserToContinueSelection',
					value: function promptUserToContinueSelection(opportunity) {
						this.ea.publish("show:notification", {
							title: this.i18n.tr('briefings.briefingRequest.selectMultipleOpportunitiesTitle'),
							message: this.i18n.tr('briefings.briefingRequest.selectMultipleOpportunitiesMessage'),
							'class': 'yellow',
							isConfirmation: true,
							cancel: function () {
								this.opportunitySelect.au.controller.viewModel.removeValue(opportunity.id);
							}.bind(this),
							done: function () {
								this.clearOpportunityDependentFields();
							}.bind(this)
						});
					}
				}, {
					key: 'populateSfdcCustomFields',
					value: function populateSfdcCustomFields(accountId, opportunityId) {
						var request = {
							mapped_fields: {},
							opportunity_id: opportunityId,
							account_id: accountId,
							mode: this.existingBriefing ? 'edit' : 'new'
						};

						this.briefingFormMetaData.forEach(function (formField) {
							if (formField.integration_field && formField.integration_field.uuid) {
								var requestForm = {
									value: "",
									prefill: "",
									integration_field_uuid: formField.integration_field.uuid
								};
								request.mapped_fields[formField.field_name] = requestForm;
							}
						});
						this.getSfdcCustomValues(request);
					}
				}, {
					key: 'clearOpportunityDependentFields',
					value: function clearOpportunityDependentFields() {
						var custom = { custom_fields: { briefing_with: this.selectedAccount.name } };

						var customFields = this._briefingFormRenderer.getValues();

						this.briefingFormMetaData.forEach(function (formField) {
							if (formField.integration_field && formField.integration_field.uuid && formField.integration_field.entity_name === 'Opportunity') {
								customFields[formField.field_name] = '';
							}
						});
						custom.custom_fields = _.assign(custom.custom_fields, customFields);
						this._briefingFormRenderer.setValues(custom);
					}
				}, {
					key: 'addRemoveOpportunity',
					value: function addRemoveOpportunity(opportunity) {
						if (opportunity.selected) {
							this.selectedOpportunityList.push({ id: opportunity.id, name: opportunity.name, text: opportunity.text });
						} else {
							var index = _.findIndex(this.selectedOpportunityList, { "id": opportunity.id });
							this.selectedOpportunityList.splice(index, 1);
						}
					}
				}, {
					key: 'getSfdcCustomValues',
					value: function getSfdcCustomValues(request) {
						var _this13 = this;

						this.briefingRequestService.getSfdcMethod('', JSON.stringify(request), 'fetch_sf_activity_fields').then(function (response) {

							var customFormFields = _this13.briefingFormMetaData;

							var custom_fields = _this13._briefingFormRenderer.getValues();
							custom_fields.briefing_with = _this13.selectedAccount.name;
							custom_fields.briefing_account_id = _this13.selectedAccount.id;
							custom_fields.briefing_opportunity_id = request.opportunity_id;

							var briefingCustomValues = {
								briefing_with: _this13.selectedAccount.name,
								custom_fields: custom_fields
							};

							var customValues = _.cloneDeep(briefingCustomValues.custom_fields);
							customFormFields.forEach(function (formField) {
								var matchedField = response.mapped_fields[formField.field_name];
								if (matchedField) {
									formField.values = matchedField['prefill'];
									customValues[formField.field_name] = matchedField['value'];
								}
							});
							briefingCustomValues.custom_fields = _.assign(briefingCustomValues.custom_fields, customValues);

							_this13._briefingFormRenderer = $(_this13.briefingCustomFormEl).formRenderer({
								fieldCollection: customFormFields.map(function (field) {
									if (field.type === 'multiselect_dropdown' && !_this13.isNotIE11) {
										field.placeholder = "";
									}
									return field;
								})
							});
							_this13._briefingFormRenderer.init();
							_this13._briefingFormRenderer.setValues(briefingCustomValues);
							_this13._briefingFormRenderer.afterLoad();
							_this13.hidingBrieifngFields();
						});
					}
				}, {
					key: 'getOpportunities',
					value: function getOpportunities() {
						var oppsHash = { keys: [], hash: {} };
						if (this.selectedOpportunityList.length) {
							this.selectedOpportunityList.forEach(function (opp) {
								oppsHash.keys.push(opp.id);
								oppsHash.hash[opp.id] = opp.text;
							});
						}
						return oppsHash;
					}
				}, {
					key: 'requestorDataFunction',
					value: function requestorDataFunction(params) {
						return { search_by_name: params.term, current_location_uuid: envDetails.current_location_uuid };
					}
				}, {
					key: 'processUsers',
					value: function processUsers(data) {
						var items = [];
						if (data.users && data.users.length) {
							data.users.forEach(function (user) {
								items.push({ id: user.uuid, text: user.name });
							});
						}

						return items;
					}
				}, {
					key: 'processManagers',
					value: function processManagers(data) {
						var items = [];
						if (data.data && data.data.length) {
							data.data.forEach(function (mgr) {
								items.push({ id: mgr.uuid, text: mgr.name });
							});
						}

						return items;
					}
				}, {
					key: 'mapExistingActivities',
					value: function mapExistingActivities() {
						var _this14 = this;

						var _loop = function () {
							var count = _this14.activityList.length;
							var temp = _this14.originalData.activityList.activities[i];
							_this14.activityList.push({
								id: temp.id,
								scheduled: temp.scheduled,
								activityUuid: temp.activity.uuid,
								custom_fields: temp.custom_fields,
								display: temp.activity.display_name,
								shortName: temp.activity.display_name[0],
								mapped_activity_type: temp.mapped_activity_type,
								mapped_activity_uuid: temp.mapped_activity_uuid,
								topicName: temp.custom_fields.topic_management && temp.topic ? temp.topic.name : '',
								heading: function heading() {
									return temp.custom_fields.meeting_title || temp.topic && temp.topic.name;
								},
								subheading: function subheading() {
									return temp.custom_fields.meeting_title && temp.topic && temp.topic.name ? temp.topic.name : temp.custom_fields.activity_info;
								}
							});
						};

						for (var i = 0; i < this.originalData.activityList.activities.length; i++) {
							_loop();
						}
						if (this.activityList.length > 0) {
							setTimeout(function () {
								_this14.ea.publish('activities:existing', {
									activityList: _this14.activityList
								});
							}, 300);
						}
					}
				}, {
					key: 'toggleAttendee',
					value: function toggleAttendee(mode) {
						this.attendeeMode = mode;
					}
				}, {
					key: 'setAttendingToggleState',
					value: function setAttendingToggleState() {
						this.setAttendeeChosen(true);
						var index = this.getCurrentUserIndexInAttendeeList(this.briefingRequest.internalAttendees);
						if (index >= 0) {
							var currentUser = this.briefingRequest.internalAttendees[index];
							if (currentUser.ics_status === this.i18n.tr('briefings.commons.declined')) {
								this.briefingRequest.internalAttendees.splice(index, 1);
								this.setIsAttending(false);
							} else {
								this.setIsAttending(true);
							}
						} else {
							this.setIsAttending(false);
						}
					}
				}, {
					key: 'handleDateChange',
					value: function handleDateChange(params) {
						var elementRef = $(this);
						var briefingObjRef = params.data.briefingObjRef;
						var timeField = $('#briefing_datepair .time.start');
						var todaysDate = moment(briefingObjRef.todaysDate());
						var selectedDate = moment(elementRef.val());
						timeField.timepicker('option', 'disableTimeRanges', selectedDate.isSame(todaysDate, 'day') ? [['12am', todaysDate.format('h:mma')]] : []);
					}
				}, {
					key: 'handleTimeChange',
					value: function handleTimeChange() {
						var _this15 = this;

						var startTimeValue = this.startTime.value;
						var endTimeValue = this.endTime.value;
						var startDateValue = this.startDate.value;
						var endDateValue = this.endDate.value;
						var originalData = this.originalData;

						if (startTimeValue && endTimeValue && startDateValue && endDateValue) {
							var params = {
								start_time: startTimeValue,
								end_time: endTimeValue,
								start_date: startDateValue,
								end_date: endDateValue,
								briefing_uuid: originalData && originalData.uuid
							};
							this.briefingRequestService.fetchBriefingRoomList(params).then(function (data) {
								var response = _this15.isSFDC ? data : JSON.parse(data.response);
								var roombox = $('#roombox');
								roombox.html(new Option(_this15.roomList[0].text, _this15.roomList[0].id));
								if (response.data && response.data.length) {
									response.data.forEach(function (_ref) {
										var name = _ref.name;
										var uuid = _ref.uuid;
										var capacity = _ref.capacity;

										roombox.append(new Option(name, uuid));
										_this15.capacityHash[uuid] = capacity;
									});
								}
								roombox.val(_this15.originalData && _this15.originalData.room && _this15.originalData.room.uuid).select2();
								_this15.setRoomPopover();
							});
						}
					}
				}, {
					key: 'showNotificationForEditingAgenda',
					value: function showNotificationForEditingAgenda() {
						this.ea.publish("show:notification", {
							title: this.i18n.tr('briefings.briefingRequest.agendaEditInProgressTitle'),
							message: this.i18n.tr('briefings.briefingRequest.agendaEditInProgressMessage'),
							'class': 'yellow',
							isConfirmation: true,
							cancel: function () {
								this.ea.publish("activityBriefing:agenda:discard", {});
							}.bind(this),
							done: function () {
								this.isActivityEditing = false;
								this.ea.publish("activityBriefing:agenda:Update", {});
								this.saveBriefingRequest();
							}.bind(this)
						});
					}
				}, {
					key: 'saveBriefingRequest',
					value: function saveBriefingRequest() {
						var _this16 = this;

						if (this.isActivityEditing) {
							return this.showNotificationForEditingAgenda();
						}
						if (this.getAttendeeChosen() != true) {
							this.ea.publish("show:notification", {
								title: this.i18n.tr('briefings.briefingRequest.meetingAttendingErrorTitle'),
								message: this.i18n.tr('briefings.briefingRequest.meetingAttendingErrorMessage'),
								'class': 'red',
								autoHideDuration: 4000
							});
							return;
						}
						if (this.selectedAccount.selected == false) {
							var msgKey = 'briefings.briefingRequest.' + (this.isSFDC ? 'selectAccount' : 'SelectBriefingWith');
							this.ea.publish("show:notification", {
								'class': 'red',
								autoHideDuration: 4000,
								message: this.i18n.tr(msgKey),
								title: this.i18n.tr('briefings.commons.fieldMissingTitle')
							});
							return;
						}
						if (this.userbox.au.controller.viewModel.getOutput() == null) {
							this.ea.publish("show:notification", {
								title: this.i18n.tr('briefings.commons.fieldMissingTitle'),
								message: this.i18n.tr('briefings.briefingRequest.requestorInfoMissing'),
								'class': 'red',
								autoHideDuration: 4000
							});
							return;
						}
						if (this.eventInfo.externalAttendeePresence && this.briefingRequest.externalAttendees.length == 0) {
							this.ea.publish("show:notification", {
								title: this.i18n.tr('briefings.commons.fieldMissingTitle'),
								message: this.i18n.tr('briefings.briefingRequest.attendeeError', {
									attendeeType: "External"
								}),
								'class': 'red',
								autoHideDuration: 3000 });
							return;
						}
						if (this.envDetails.briefingInternalAttendeeEnabled && this.eventInfo.internalAttendeePresence && this.briefingRequest.internalAttendees.length == 0) {
							this.ea.publish("show:notification", {
								title: this.i18n.tr('briefings.commons.fieldMissingTitle'),
								message: this.i18n.tr('briefings.briefingRequest.attendeeError', {
									attendeeType: "Internal"
								}),
								'class': 'red',
								autoHideDuration: 3000 });
							return;
						}
						if (this.activityList.length == 0) {
							this.ea.publish("show:notification", {
								title: this.i18n.tr('briefings.commons.fieldMissingTitle'),
								message: this.i18n.tr('briefings.briefingRequest.briefingActivityError'),
								'class': 'red',
								autoHideDuration: 3000 });
							return;
						}
						if (this.existingBriefing == false && ($('.start.date').val() == '' || $('.end.date').val() == '' || $('.start.time').val() == '' || $('.end.time').val() == '')) {
							this.ea.publish("show:notification", {
								title: this.i18n.tr('briefings.commons.fieldMissingTitle'),
								message: this.i18n.tr('briefings.briefingRequest.briefingTimeDateError'),
								'class': 'red',
								autoHideDuration: 3000 });
							return;
						} else {
							this.briefingRequest.validation.validate().then(function () {
								var timezoneDate = new Date(moment().tz(_this16.eventInfo.current_location.mapped_time_zone).format("YYYY/MM/DD HH:mm:ss"));
								var sTime = $('.start.time').timepicker('getTime', timezoneDate).getTime();
								var eTime = $('.end.time').timepicker('getTime', timezoneDate).getTime();
								if (_this16.uuid == '') {
									var curDate = timezoneDate.getMonth() + 1 + '/' + timezoneDate.getDate() + '/' + timezoneDate.getFullYear();
									var curTime = timezoneDate.getTime();
									if (curDate == $('.start.date').val() || curDate == $('.end.date').val() || $('.start.date').val() == $('.end.date').val()) {
										if (($('.start.date').val() == curDate || $('.end.date').val() == curDate) && sTime < curTime || sTime == eTime || sTime > eTime && eTime < curTime && $('.start.date').val() == $('.end.date').val()) {
											_this16.ea.publish("show:notification", {
												title: _this16.i18n.tr('briefings.briefingRequest.pastTimeErrorTitle'),
												message: _this16.i18n.tr('briefings.briefingRequest.pastTimeErrorMessage'),
												'class': 'red',
												autoHideDuration: 4000 });
											return;
										}
									}
								} else {
									if (sTime === eTime) {
										_this16.ea.publish("show:notification", {
											title: _this16.i18n.tr('briefings.briefingRequest.pastTimeErrorTitle'),
											message: _this16.i18n.tr('briefings.briefingRequest.pastTimeErrorMessage'),
											'class': 'red',
											autoHideDuration: 4000 });
										return;
									}
								}
								var briefingFormValidate = $(_this16.briefingCustomFormEl).validate();
								if (!_this16._briefingFormRenderer.isFormValid($(_this16.briefingCustomFormEl))) {
									briefingFormValidate.focusInvalid();
									return;
								}

								_this16.disableSubmitBtn = true;
								if (_this16.uuid != '') {
									_this16.updateBriefingRequest();
									return;
								} else {
									$('#cover').fadeIn();
								}

								var objectModel = _this16.briefingRequest.getServerModelObject(_this16.conciergeServices);
								objectModel.activityList = _this16.activityList.reverse();
								objectModel.requestor.uuid = _this16.userbox.au.controller.viewModel.getOutput();
								objectModel.custom_fields = _this16._briefingFormRenderer.getValues();
								if (objectModel.custom_fields && objectModel.custom_fields.currency_field && typeof objectModel.custom_fields.currency_field === "string") {
									objectModel.custom_fields.currency_field = objectModel.custom_fields.currency_field.replace(/,/g, '');
								}
								objectModel.briefing_with = objectModel.custom_fields.briefing_with;
								objectModel.preferred_internal_attendees = objectModel.custom_fields.preferred_internal_attendees;

								if (_this16.isSFDC) {
									var opportunities = _this16.getOpportunities();
									objectModel.oppIds = opportunities.keys;
									objectModel.custom_fields.briefing_opportunity_ids = opportunities.hash;
									objectModel.contact_mappings = {};
									_this16.briefingRequest.externalAttendees.forEach(function (attendee) {
										objectModel.contact_mappings[attendee.uuid] = attendee.Id || null;
									});
									if (window.envDetails.syncContactsToSfdc) {
										objectModel.sync_users_to_salesforce = [];
										_this16.briefingRequest.externalAttendees.forEach(function (attendee) {
											if (attendee.sync_contact) {
												objectModel.sync_users_to_salesforce.push(attendee.uuid);
											}
										});
									}
								}

								if (_this16.envDetails.queueManagementEnabled && _this16.isQueueEnabled()) {
									objectModel.assigned_to = _this16.qbox.au.controller.viewModel.getOutput();;
								}

								_this16.briefingRequestService.createBriefingRequest(envDetails.briefingCentreUuid, objectModel).then(function (response) {
									_this16.briefingSuccessFailure(response, "requested");
								})['catch'](function (response) {
									_this16.briefingSuccessFailure(response);
								});
							});
						}
					}
				}, {
					key: 'updateBriefingRequest',
					value: function updateBriefingRequest() {
						var _this17 = this;

						var objectModel = this.briefingRequest.getServerModelObject(this.conciergeServices);
						objectModel.activityList = this.activityList.reverse();
						objectModel.removedActivities = this.removedActivities;
						objectModel.requestor.uuid = this.userbox.au.controller.viewModel.getOutput();
						objectModel.custom_fields = this._briefingFormRenderer.getValues();
						objectModel.briefing_with = objectModel.custom_fields.briefing_with;
						objectModel.preferred_internal_attendees = objectModel.custom_fields.preferred_internal_attendees;
						if (objectModel.custom_fields && objectModel.custom_fields.currency_field && typeof objectModel.custom_fields.currency_field === "string") {
							objectModel.custom_fields.currency_field = objectModel.custom_fields.currency_field.replace(/,/g, '');
						}
						var opportunities = this.getOpportunities();
						objectModel.oppIds = opportunities.keys;
						objectModel.custom_fields.briefing_opportunity_ids = opportunities.hash;
						if (this.envDetails.queueManagementEnabled) {
							objectModel.assigned_to = this.qbox.au.controller.viewModel.getOutput();;
						}
						if (this.isSFDC) {
							objectModel.contact_mappings = {};
							this.briefingRequest.externalAttendees.forEach(function (attendee) {
								objectModel.contact_mappings[attendee.uuid] = attendee.Id || null;
							});
						}
						if (window.envDetails.syncContactsToSfdc) {
							objectModel.sync_users_to_salesforce = [];
							this.briefingRequest.externalAttendees.forEach(function (attendee) {
								if (attendee.sync_contact) {
									objectModel.sync_users_to_salesforce.push(attendee.uuid);
								}
							});
						}
						if (this.originalData.status === 'Confirmed') {
							this.ea.publish('show:notification', {
								title: this.i18n.tr('briefings.briefingRequest.are_you_sure'),
								message: this.i18n.tr('briefings.briefingRequest.briefingIcsOptOutMessage'),
								'class': 'blue',
								isConfirmation: true,
								done: function done() {
									objectModel.ics_opt_out = 'no';
									_this17.makeBriefingUpdateCall(_this17.originalData.uuid, objectModel);
								},
								cancel: function cancel() {
									objectModel.ics_opt_out = 'yes';
									_this17.makeBriefingUpdateCall(_this17.originalData.uuid, objectModel);
								}
							});
						} else {
							this.makeBriefingUpdateCall(this.originalData.uuid, objectModel);
						}
					}
				}, {
					key: 'makeBriefingUpdateCall',
					value: function makeBriefingUpdateCall(briefingUuid, model) {
						var _this18 = this;

						this.briefingRequestService.updateBriefingRequest(briefingUuid, model).then(function (response) {
							_this18.briefingSuccessFailure(response, "updated");
						})['catch'](function (response) {
							_this18.briefingSuccessFailure(response);
						});
						$('#cover').fadeIn();
					}
				}, {
					key: 'briefingSuccessFailure',
					value: function briefingSuccessFailure(response, requestedType) {
						var _this19 = this;

						if (typeof response.response === "string") {
							response = JSON.parse(response.response);
						}
						if (response.success == true || response.status == 200) {
							var router = this.briefingRouter;
							this.ea.publish("show:notification", {
								'class': 'green',
								autoHideDuration: 5000,
								title: 'Nice work, ' + envDetails.currentUser.first_name,
								onHide: function onHide() {
									if (_this19.isSFDC) window.commons.redirectPage('/apex/JNNewBriefings?eventName=' + window.envDetails.event.event_system_name + '&current_location_uuid=' + window.envDetails.current_location_uuid + '#briefing_list');else window.commons.redirectPage(window.envDetails.urlPrefix + '/meeting_list?briefings=true');
								},
								message: response.message || this.i18n.tr('briefings.briefingRequest.briefingSuccessMessage', { status: requestedType })
							});
						} else {
							var message = response.message;
							var title = this.i18n.tr('briefings.briefingRequest.cannotRequestBriefing');
							var attendeeList = '';
							if ($.isArray(response.errors && response.errors.AssignedUserNotAvailableError)) {
								response.errors.AssignedUserNotAvailableError.map(function (attendee) {
									attendeeList += '<li>' + attendee + '</li>';
								});
								message = this.i18n.tr('briefings.briefingRequest.briefingDoubleBookingErrorMsg');
								message += '<ol class="attendee-list">' + attendeeList + '</ol>' + this.i18n.tr('briefings.briefingRequest.briefingDoubleBookingErrorNote');

								title = this.i18n.tr('briefings.briefingRequest.briefingDoubleBookingErrorTitle');
							} else if (response.errors && response.errors.CisRoomBlockUpsert) {
								var unavailableRoomList = '';
								response.errors.CisRoomBlockUpsert.map(function (message) {
									unavailableRoomList += '<li>' + message + '</li>';
								});
								message = this.i18n.tr('briefings.briefingRequest.briefingCISRoomUnavailable');
								message += '<ol class="attendee-list">' + unavailableRoomList + '</ol>';
							}
							setTimeout(function () {
								_this19.ea.publish("show:notification", {
									'class': 'red',
									autoHideDuration: 5000,
									message: message,
									title: title,
									onHide: function onHide() {
										return _this19.disableSubmitBtn = false;
									}
								});
							}, 200);
						}
						$('#cover').fadeOut();
					}
				}, {
					key: 'discardChanges',
					value: function discardChanges() {
						location.reload();
					}
				}, {
					key: 'showCopyCustomInfoModal',
					value: function showCopyCustomInfoModal() {
						this.showCopyBriefingModal(this.i18n.tr('briefings.briefingRequest.customerInfo'));
					}
				}, {
					key: 'showCopyAttendeeModal',
					value: function showCopyAttendeeModal() {
						this.showCopyBriefingModal(this.i18n.tr('briefings.briefingRequest.copyAttendee'));
					}
				}, {
					key: 'showCopyBriefingModal',
					value: function showCopyBriefingModal(publisher) {
						this.ea.publish('show:copy-briefing-modal', {
							publisher: publisher
						});
					}
				}, {
					key: 'getAttendees',
					value: function getAttendees(details) {
						var _this20 = this;

						var params = {
							selected_briefing_uuid: details.source.uuid,
							briefing_uuid: this.uuid
						};
						this.copyBriefingService.getAttendees(params).then(function (response) {
							if (typeof response.response === "string") response = JSON.parse(response.response);
							if (response.success == true || response.status == 200) {
								details.modal.modal('hide');
								_this20.copyAttendees(response.data);
							}
						})['catch'](function (response) {
							if (typeof response.response === "string") {
								response = JSON.parse(response.response);
							}
							var message = response.message;
							setTimeout(function () {
								_this20.ea.publish("show:notification", {
									'class': 'red',
									autoHideDuration: 5000,
									message: message,
									title: _this20.i18n.tr('briefings.commons.failure')
								});
							}, 200);
						});
					}
				}, {
					key: 'copyAttendees',
					value: function copyAttendees(data) {
						var _this21 = this;

						var users = _.groupBy(data.users, 'user_type');
						users.internal = users.internal || [];
						users.external = users.external || [];

						var existingAttendees = this.briefingRequest.internalAttendees;
						var existingAttendeesCount = existingAttendees.length;
						if (!this.envDetails.briefingInternalAttendeeEnabled) {
							var index = this.getCurrentUserIndexInAttendeeList(users.internal);
							users.internal = index > -1 ? [users.internal[index]] : [];
						}
						existingAttendees = _.unique(existingAttendees.concat(users.internal), 'uuid');
						existingAttendees = this.handleCurrentUser(existingAttendees);
						this.briefingRequest.internalAttendees = this.addSelectedInAttendees(existingAttendees);
						var addedInternalAttendeesCount = this.briefingRequest.internalAttendees.length - existingAttendeesCount;
						var internalAttendeeMessage = addedInternalAttendeesCount + ' out of ' + data.internal_participant_count + ' internal attendee(s) have been copied.';

						existingAttendees = this.briefingRequest.externalAttendees;
						existingAttendeesCount = existingAttendees.length;
						existingAttendees = _.unique(existingAttendees.concat(users.external), 'uuid');
						this.briefingRequest.externalAttendees = this.addSelectedInAttendees(existingAttendees);
						var addedExternalAttendeesCount = this.briefingRequest.externalAttendees.length - existingAttendeesCount;
						var externalAttendeeMessage = addedExternalAttendeesCount + ' out of ' + data.external_participant_count + ' external attendee(s) have been copied.';

						if (addedExternalAttendeesCount > 0) {
							this.ea.publish('externalAttendees:copy');
						}
						if (addedInternalAttendeesCount > 0 && this.envDetails.briefingInternalAttendeeEnabled) {
							this.ea.publish('internalAttendees:copy');
						}
						if (addedExternalAttendeesCount > 0 || addedInternalAttendeesCount > 0) {
							this.ea.publish('attendees:copy', {
								internal: this.briefingRequest.internalAttendees,
								external: this.briefingRequest.externalAttendees,
								newInternal: users.internal,
								newExternal: users.external
							});
						}
						if (!this.envDetails.briefingInternalAttendeeEnabled) {
							if (!(addedInternalAttendeesCount > 0)) {
								internalAttendeeMessage = '';
							}
						}
						var message = '';
						if (internalAttendeeMessage) {
							message += internalAttendeeMessage + "<br>";
						}
						message += externalAttendeeMessage;
						setTimeout(function () {
							_this21.ea.publish('show:notification', {
								'class': 'green',
								autoHideDuration: 5000,
								message: message,
								title: _this21.i18n.tr('briefings.commons.success')
							});
						}, 200);
					}
				}, {
					key: 'addSelectedInAttendees',
					value: function addSelectedInAttendees(existingAttendees) {
						existingAttendees = _.map(existingAttendees, function (attendee) {
							attendee['selected'] = true;
							return attendee;
						});
						return existingAttendees;
					}
				}, {
					key: 'getCurrentUserIndexInAttendeeList',
					value: function getCurrentUserIndexInAttendeeList(attendees) {
						var _this22 = this;

						var index = _.findIndex(attendees, function (attendee) {
							return attendee.uuid == _this22.envDetails.currentUser.uuid;
						});
						return index;
					}
				}, {
					key: 'handleCurrentUser',
					value: function handleCurrentUser(attendees) {
						var index = this.getCurrentUserIndexInAttendeeList(attendees);
						if (index > -1) {
							this.setIsAttending(true);
							this.setAttendeeChosen(true);
							attendees[index]['isNewAttendee'] = true;
						}
						return attendees;
					}
				}, {
					key: 'setAttendeeChosen',
					value: function setAttendeeChosen(state) {
						this.attendingChoosen = state;
					}
				}, {
					key: 'getAttendeeChosen',
					value: function getAttendeeChosen() {
						return this.attendingChoosen;
					}
				}, {
					key: 'setIsAttending',
					value: function setIsAttending(state) {
						this.isAttending = state;
					}
				}, {
					key: 'showAttendeePopover',
					value: function showAttendeePopover() {
						var template = '<div class="item-popover popover font-11"><div class="arrow"></div><div class="popover-content"></div></div>';
						var message = this.i18n.tr('briefings.briefingRequest.pickAttendeeHelpText');
						$(this.attendeeHelpIcon).popover({
							trigger: 'hover',
							content: message,
							placement: 'bottom',
							html: true,
							template: template
						});
					}
				}]);

				var _BriefingRequest = BriefingRequest;
				BriefingRequest = inject(EventAggregator, BriefingRequestService, App, Validation, TopicRequestService, I18N, CopyBriefingService)(BriefingRequest) || BriefingRequest;
				return BriefingRequest;
			}();

			_export('BriefingRequest', BriefingRequest);
		}
	};
});
System.registerDynamic("view-models/briefings/card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"utils/converters\"></require>\n\n    <div class=\"card ${statusStyle[request.status]}\" if.bind=\"cardType=='listing'\">\n      <div class=\"card-header\">\n        <div class=\"card-header-content\">\n          <div class=\"card-select\">\n            <input type=\"checkbox\" id=\"${request.id}\" checked.bind=\"request.checked\" change.delegate=\"cardSelectionHandler(request)\">\n            <label for=\"${request.id}\">\n              <div>B</div>\n            </label>\n          </div>\n          <div class=\"card-click\" >\n            <a href=\"javascript:void(0)\" click.delegate=\"performActionOnCardClick()\">\n              <div class=\"font-lg\">${request.briefing_with}</div>\n              <div class=\"font-lg\">ID #${request.id}</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"card-content\">\n        <div class=\"card-detail-content\">\n          <div>\n            <div class=\"card-detail icon-sep\">\n              <div class=\"text-content\">\n                <div class=\"font-sm\">${request.start_time | dateFormat:'ddd, MMM D, YYYY hh:mm A'}</div>\n                <div class=\"font-sm\">${request.end_time | dateFormat:'ddd, MMM D, YYYY hh:mm A'}</div>\n              </div>\n              <div class=\"icon-content jif-grey-disabled hide\">\n                  <i class=\"jif-checkin\"></i>\n                  <div i18n=\"briefings.card.checkin\" class=\"font-8\"></div>\n              </div>\n            </div>\n            <div class=\"card-detail icon-sep\">\n              <div class=\"text-content briefing-location\">\n                ${request.location}\n              </div>\n              <div if.bind=\"showSurveyIconForSfdc() && showSurveyLink\" class=\"icon-content jif-blue point-cursor\" data-toggle=\"modal\" data-target=\"#survay-modal\" click.delegate=\"surveyClickAction()\">\n                <i class=\"jif-survey\"></i>\n                <div class=\"font-8\" i18n=\"briefings.commons.survey\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-detail count hide\">\n            <div class=\"item-section attedee-counts\">\n              <div class=\"section-count accepted\">\n                <div class=\"count\">3</div>\n                <div class=\"status\" i18n=\"briefings.commons.accepted\"></div>\n              </div>\n              <div class=\"section-count declined\">\n                <div class=\"count\">4</div>\n                <div class=\"status\" i18n=\"briefings.commons.declined\"></div>\n              </div>\n              <div class=\"section-count pending\">\n                <div class=\"count\">2</div>\n                <div class=\"status\" i18n=\"briefings.commons.pending\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"card-footer ${request.status == 'Past' ? 'briefing-card-footer-border' : ''}\">\n         <div class=\"card-footer-content\" if.bind=\"request.performed_action == 'Cancelled' && request.status != 'Past'\">\n            <div class=\"meeting-cancelled\">\n               <span class=\"font-red\" i18n=\"briefings.commons.cancelled\"></span>\n            </div>\n         </div>\n\n         <div class=\"card-footer-content\" if.bind=\"request.performed_action != 'Cancelled' && request.status != 'Past'\">\n                <div class=\"request-change\" if.bind=\"checkForRequestChange()\">\n                   <a href=\"${requestChangeUrl}\" class=\"icon-box jif-blue\">\n                      <i class=\"jif-retweet\"></i>\n                      <div class=\"card-footer-icon-title font-8\" i18n=\"briefings.card.requestChange\"></div>\n                   </a>\n                </div>\n                <div class=\"request-change\" if.bind=\"request.status =='In Queue' && envDetails.role =='QueueManager'\">\n                   <a href=\"${requestChangeUrl}\" class=\"icon-box jif-blue\">\n                      <i class=\"jif-assign\"></i>\n                      <div class=\"card-footer-icon-title font-8\" i18n=\"briefings.commons.assignToBM\"></div>\n                   </a>\n                </div>\n\n                <!-- Briefing Confirmed -->\n                <div class=\"meeting-approved\" if.bind=\"request.performed_action == 'Confirmed'\">\n                   <span class=\"font-blue\" i18n=\"briefings.commons.confirmed\"></span>\n                </div>\n                <div class=\"meeting-approve\" if.bind=\"!isSFDC && request.actions.briefing_confirm_url && !request.hideConfirmIcon\">\n                   <a href=\"javascript:void(0)\" click.delegate=\"confirm()\" class=\"icon-box jif-blue\">\n                      <i class=\"jif-check\"></i>\n                      <div class=\"font-8\" i18n=\"briefings.commons.confirm\"></div>\n                   </a>\n                </div>\n                <!-- Briefing Confirmed -->\n\n                <!-- Briefing Cancelled -->\n                <div class=\"meeting-cancel\" if.bind=\"request.actions.briefing_delete_url\">\n                   <a href=\"javascript:void(0)\" click.delegate=\"cancelBriefing()\" class=\"icon-box jif-red\">\n                      <i class=\"jif-trash\"></i>\n                      <div i18n=\"briefings.commons.cancel\" class=\"font-8\"></div>\n                   </a>\n                </div>\n                <!-- Briefing Cancelled -->\n\n                <!-- Briefing Accepted -->\n                <div class=\"meeting-accepted\" if.bind=\"request.performed_action == 'Accepted'\">\n                   <span class=\"font-blue\" i18n=\"briefings.commons.accepted\" ></span>\n                </div>\n                <div class=\"meeting-accept\" if.bind=\"request.actions.accept_url && request.performed_action !== 'Declined' && !request.hideAcceptIcon\">\n                   <a href=\"javascript:void(0)\" class=\"icon-box jif-blue\" click.delegate=\"accept()\">\n                      <i class=\"jif-check\"></i>\n                      <div class=\"font-8\" i18n=\"briefings.commons.accept\"></div>\n                   </a>\n                </div>\n                <!-- Briefing Accepted -->\n\n                <!-- Briefing Declined -->\n                <div class=\"meeting-declined\" if.bind=\"request.performed_action == 'Declined'\">\n                   <span class=\"font-red\" i18n=\"briefings.commons.declined\"></span>\n                </div>\n                <div class=\"meeting-decline\" if.bind=\"request.actions.decline_url && !request.hideDeclineIcon\">\n                   <a href=\"javascript:void(0)\" class=\"icon-box jif-red\" click.delegate=\"decline()\">\n                      <i class=\"jif-close\"></i>\n                      <div class=\"font-8\" i18n=\"briefings.commons.decline\"></div>\n                   </a>\n                </div>\n                <!-- Briefing Declined -->\n\n                <div class=\"meeting-summary hide\">\n                   <a href=\"javascript:void(0)\" class=\"icon-box jif-blue\">\n                      <i class=\"jif-summary\"></i>\n                      <div class=\"font-8\" i18n=\"briefings.commons.summary\"></div>\n                   </a>\n                </div>\n         </div>\n      </div>\n    </div>\n\n    <div class=\"card ${statusStyle[request.status]}\" if.bind=\"cardType=='home'\">\n        <div class=\"card-header\">\n            <div class=\"card-header-content\">\n                <div class=\"card-select\">\n                    <input type=\"checkbox\" id=\"req_id\">\n                    <label for=\"req_id\">\n                        <div>B</div>\n                    </label>\n                </div>\n                <div class=\"card-click\" >\n                    <a href=\"${homeCardUrl}\">\n                        <div class=\"font-lg\">${request.briefing_with}</div>\n                        <div class=\"font-lg\">ID #${request.id}</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-content\">\n            <div class=\"card-detail-content\">\n                <div>\n                    <div class=\"card-detail icon-sep\">\n                        <div class=\"text-content\">\n                            <div class=\"font-sm\">${request.start_time | dateFormat:'ddd, MMM D, YYYY hh:mm A'}</div>\n                            <div class=\"font-sm\">${request.end_time | dateFormat:'ddd, MMM D, YYYY hh:mm A'}</div>\n                        </div>\n                        <div class=\"icon-content jif-grey-disabled hide\">\n                            <i class=\"jif-checkin\"></i>\n                            <div i18n=\"briefings.card.checkin\" class=\"font-8\"></div>\n                        </div>\n                    </div>\n                    <div class=\"card-detail icon-sep\">\n                        <div class=\"text-content briefing-location\">\n                            ${request.location}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-detail count hide\">\n                    <div class=\"item-section attedee-counts\">\n                        <div class=\"section-count accepted\">\n                            <div class=\"count\">3</div>\n                            <div class=\"status\" i18n=\"briefings.commons.accepted\"></div>\n                        </div>\n                        <div class=\"section-count declined\">\n                            <div class=\"count\">4</div>\n                            <div class=\"status\" i18n=\"briefings.commons.declined\"></div>\n                        </div>\n                        <div class=\"section-count pending\">\n                            <div class=\"count\">2</div>\n                            <div class=\"status\" i18n=\"briefings.commons.pending\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer ${request.status == 'Past' ? 'briefing-card-footer-border' : ''}\">\n         <div class=\"card-footer-content\" if.bind=\"request.performed_action == 'Cancelled' && request.status != 'Past'\">\n              <div class=\"meeting-cancelled\">\n                <span class=\"font-red\" i18n=\"briefings.commons.cancelled\"></span>\n              </div>\n         </div>\n\n         <div class=\"card-footer-content\" if.bind=\"request.performed_action !== 'Cancelled' && request.status != 'Past'\">\n          \n            <div class=\"request-change\" if.bind=\"checkForRequestChange()\">\n               <a href=\"${requestChangeUrl}\" class=\"icon-box jif-blue\">\n                  <i class=\"jif-retweet\"></i>\n                  <div class=\"card-footer-icon-title font-8\" i18n=\"briefings.card.requestChange\"></div>\n               </a>\n            </div>\n            <div class=\"request-change\" if.bind=\"request.status =='In Queue' && envDetails.role =='QueueManager'\">\n               <a href=\"${requestChangeUrl}\" class=\"icon-box jif-blue\">\n                  <i class=\"jif-assign\"></i>\n                  <div class=\"card-footer-icon-title font-8\" i18n=\"briefings.commons.assignToBM\"></div>\n               </a>\n            </div>\n\n            <!-- Briefing Confirmed -->\n            <div class=\"meeting-approved\" if.bind=\"request.performed_action == 'Confirmed'\">\n               <span class=\"font-blue\" i18n=\"briefings.commons.confirmed\"></span>\n            </div>\n            <div class=\"meeting-approve\" if.bind=\"request.actions.briefing_confirm_url && !request.hideConfirmIcon\">\n               <a href=\"javascript:void(0)\" click.delegate=\"confirm()\" class=\"icon-box jif-blue\">\n                  <i class=\"jif-check\"></i>\n                  <div class=\"font-8\" i18n=\"briefings.commons.confirm\"></div>\n               </a>\n            </div>\n            <!-- Briefing Confirmed -->\n\n            <!-- Briefing Cancelled -->\n            <div class=\"meeting-cancel\" if.bind=\"request.actions.briefing_delete_url\">\n               <a href=\"javascript:void(0)\" click.delegate=\"cancelBriefing()\" class=\"icon-box jif-red\">\n                  <i class=\"jif-trash\"></i>\n                  <div i18n=\"briefings.commons.cancel\" class=\"font-8\"></div>\n               </a>\n            </div>\n            <!-- Briefing Cancelled -->\n\n            <!-- Briefing Accepted -->\n            <div class=\"meeting-accepted\" if.bind=\"request.performed_action == 'Accepted'\">\n               <span class=\"font-blue\" i18n=\"briefings.commons.accepted\" ></span>\n            </div>\n            <div class=\"meeting-accept\" if.bind=\"request.actions.accept_url && request.performed_action !== 'Declined' && !request.hideAcceptIcon\">\n               <a href=\"javascript:void(0)\" class=\"icon-box jif-blue\" click.delegate=\"accept()\">\n                  <i class=\"jif-check\"></i>\n                  <div class=\"font-8\" i18n=\"briefings.commons.accept\"></div>\n               </a>\n            </div>\n            <!-- Briefing Accepted -->\n\n            <!-- Briefing Declined -->\n            <div class=\"meeting-declined\" if.bind=\"request.performed_action == 'Declined'\">\n               <span class=\"font-red\" i18n=\"briefings.commons.declined\"></span>\n            </div>\n            <div class=\"meeting-decline\" if.bind=\"request.actions.decline_url && !request.hideDeclineIcon\">\n               <a href=\"javascript:void(0)\" class=\"icon-box jif-red\" click.delegate=\"decline()\">\n                  <i class=\"jif-close\"></i>\n                  <div class=\"font-8\" i18n=\"briefings.commons.decline\"></div>\n               </a>\n            </div>\n            <!-- Briefing Declined -->\n\n            <div class=\"meeting-summary hide\">\n               <a href=\"javascript:void(0)\" class=\"icon-box jif-blue\">\n                  <i class=\"jif-summary\"></i>\n                  <div class=\"font-8\" i18n=\"briefings.commons.summary\"></div>\n               </a>\n            </div>\n          </div>\n         </div>\n    </div>\n</template>\n";
});
System.register('view-models/briefings/card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-router@1.0.0-beta.1.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/briefing_request_service.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var inject, bindable, customAttribute, Router, EventAggregator, BriefingRequestService, I18N, Card;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
            customAttribute = _aureliaFramework.customAttribute;
        }, function (_aureliaRouter) {
            Router = _aureliaRouter.Router;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_serviceBriefing_request_service) {
            BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            Card = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(Card, [{
                    key: 'request',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'performClickAction',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'index',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'cardType',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'cancelOptions',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return {};
                    },
                    enumerable: true
                }], null, _instanceInitializers);

                function Card(router, brs, ea, i18n) {
                    _classCallCheck(this, _Card);

                    _defineDecoratedPropertyDescriptor(this, 'request', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'performClickAction', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'index', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'cardType', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'cancelOptions', _instanceInitializers);

                    this.showSurveyLink = false;
                    this.statusStyle = {
                        "Requested": "requested",
                        "Confirmed": "approved",
                        "Cancelled": "cancelled",
                        "Pending": "pending",
                        "In Queue": "queue",
                        "Pending Confirmation": "pending-confirmation",
                        "Past": "past"
                    };

                    this.ea = ea;
                    this.i18n = i18n;
                    this.router = router;
                    this.envDetails = envDetails;
                    this.briefingRequestService = brs;
                    this.i18n.setLocale('en').then(function () {});
                    this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
                    this.prefixUrl = this.isSFDC ? "/apex/JNBriefings" : "briefing/list_briefings";
                }

                _createDecoratedClass(Card, [{
                    key: 'attached',
                    value: function attached() {
                        var suffix = this.request.requestor.uuid === this.envDetails.currentUser.uuid ? '#/briefing/' : '#/list_agenda/';
                        this.homeCardUrl = '' + this.prefixUrl + window.location.search + '#/list_agenda/' + this.request.uuid;
                        this.requestChangeUrl = '' + this.prefixUrl + window.location.search + suffix + this.request.uuid;

                        this.showSurveyLink = this.request.show_survey || false;
                    }
                }, {
                    key: 'performActionOnCardClick',
                    value: function performActionOnCardClick() {
                        this.briefingRequestService.briefingDetailsUrl = this.request.actions.briefing_detail_url;
                        if (envDetails.role === "QueueManager" && this.request.status == "In Queue") {
                            this.router.navigateToRoute('BriefingRequest', { uuid: this.request.uuid });
                        } else {
                            this.router.navigateToRoute('ListAgenda', { uuid: this.request.uuid });
                        }
                    }
                }, {
                    key: 'cancelBriefing',
                    value: function cancelBriefing() {
                        var _this = this;

                        var _cancelOptions = this.cancelOptions;
                        var options = _cancelOptions.predefined_cancel_comments;
                        var enabled = _cancelOptions.cancel_comments_enabled;

                        var captureModalOptions = { options: options, enabled: enabled };
                        var status = this.request.status !== 'Confirmed' ? '' : 'Confirmed';

                        var doneHandler = function doneHandler(params) {
                            _this.deleteBriefing(params);
                        };

                        this.ea.publish('show:reason-capture-modal', {
                            config: captureModalOptions,
                            type: 'cancel',
                            status: status,
                            doneHandler: doneHandler
                        });
                    }
                }, {
                    key: 'deleteBriefing',
                    value: function deleteBriefing(params) {
                        var _this2 = this;

                        this.briefingRequestService.deleteBriefingRequest(this.request.actions.briefing_delete_url, params).then(function (response) {
                            if (typeof response.response === "string") response = JSON.parse(response.response);
                            _this2.request.status = "Cancelled";
                            _this2.request.performed_action = "Cancelled";
                            if (_this2.cardType == "home") {
                                _this2.ea.publish("briefing:cancelled", _this2.index);
                            }
                        })['catch'](function (response) {
                            $('#cover').fadeOut();
                            if (typeof response.response === "string") response = JSON.parse(response.response);
                            setTimeout(function () {
                                _this2.ea.publish("show:notification", {
                                    title: _this2.i18n.tr('briefings.commons.cannotCancelBriefing'),
                                    message: response.message,
                                    'class': 'red'
                                });
                            }, 200);
                        });
                    }
                }, {
                    key: 'surveyClickAction',
                    value: function surveyClickAction() {
                        this.ea.publish("survey:showModal", {
                            uuid: this.request.uuid,
                            surveys: this.request.survey_links,
                            show_send_mail: this.request.show_send_mail,
                            bulk: true
                        });
                    }
                }, {
                    key: 'getBaseUrl',
                    value: function getBaseUrl() {
                        var bases = document.getElementsByTagName('base');
                        var baseHref = null;

                        if (bases.length > 0) {
                            baseHref = bases[0].href;
                        }
                        return baseHref;
                    }
                }, {
                    key: 'confirm',
                    value: function confirm() {
                        var _this3 = this;

                        this.briefingRequestService.confirmBriefingUrl = this.request.actions.briefing_confirm_url;
                        this.briefingRequestService.briefingAgendaUrl = this.request.actions.briefing_agenda_url;
                        this.briefingRequestService.briefingDetailsUrl = this.request.actions.briefing_detail_url;
                        this.briefingRequestService.prepareAgendaUrl = this.request.actions.briefing_meetings_url;
                        this.ea.publish("show:notification", {
                            title: this.i18n.tr('briefings.commons.areYouSure'),
                            message: this.i18n.tr('briefings.commons.clickNoMessage'),
                            'class': 'green',
                            isConfirmation: true,
                            done: function done() {
                                if (_this3.request.meetings_count == 0) {
                                    setTimeout(function () {
                                        _this3.errorBriefing();
                                    }, 500);
                                } else {
                                    _this3.confirmBriefing();
                                }
                            }
                        });
                    }
                }, {
                    key: 'confirmBriefing',
                    value: function confirmBriefing() {
                        var _this4 = this;

                        this.briefingRequestService.confirmBriefingRequest().then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == false) {
                                _this4.ea.publish("show:notification", {
                                    'class': 'red',
                                    autoHideDuration: 5000,
                                    message: response.errors,
                                    title: _this4.i18n.tr('briefings.commons.cannotConfirmBriefing')
                                });
                            } else {
                                _this4.request.status = 'Confirmed';
                                _this4.request.performed_action = 'Confirmed';
                                _this4.request.hideConfirmIcon = true;
                            }
                        });
                    }
                }, {
                    key: 'accept',
                    value: function accept() {
                        var _this5 = this;

                        this.briefingRequestService.acceptBriefingRequest(this.request.actions.accept_url).then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == false) {
                                _this5.showNotification('red', _this5.i18n.tr('briefings.commons.cannotAcceptBriefing'), response.errors);
                            } else {
                                _this5.request.performed_action = 'Accepted';
                                _this5.request.hideAcceptIcon = true;
                                _this5.showNotification('green', _this5.i18n.tr('briefings.commons.briefingAcceptedTitle'), _this5.i18n.tr('briefings.commons.briefingAcceptedBody'));
                            }
                        });
                    }
                }, {
                    key: 'decline',
                    value: function decline() {
                        var _this6 = this;

                        this.briefingRequestService.declineBriefingRequest(this.request.actions.decline_url).then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == false) {
                                _this6.showNotification('red', _this6.i18n.tr('briefings.commons.cannotDeclineBriefing'), response.errors);
                            } else {
                                _this6.request.performed_action = 'Declined';
                                _this6.request.hideDeclineIcon = true;
                                _this6.showNotification('green', _this6.i18n.tr('briefings.commons.briefingDeclineTitle'), _this6.i18n.tr('briefings.commons.briefingDeclinedBody'));
                            }
                        });
                    }
                }, {
                    key: 'showNotification',
                    value: function showNotification(className, title, message) {
                        this.ea.publish("show:notification", {
                            title: title,
                            message: message,
                            'class': className,
                            autoHideDuration: 5000
                        });
                    }
                }, {
                    key: 'errorBriefing',
                    value: function errorBriefing() {
                        this.ea.publish("show:notification", {
                            title: this.i18n.tr('briefings.commons.briefingNotReady'),
                            message: this.i18n.tr('briefings.commons.briefingMeetingErrorMessage'),
                            'class': 'red',
                            autoHideDuration: 5000
                        });
                    }
                }, {
                    key: 'checkForRequestChange',
                    value: function checkForRequestChange() {
                        return this.request.status != 'Confirmed' && !this.isAdmin() && (this.isCurrentUserRequestor() || this.isCurrentUserCreator());
                    }
                }, {
                    key: 'cardSelectionHandler',
                    value: function cardSelectionHandler(request) {
                        this.ea.publish("checkbox:clicked", request);
                    }
                }, {
                    key: 'isAdmin',
                    value: function isAdmin() {
                        return this.envDetails.isCSM() || this.envDetails.isJuniorMM() || this.envDetails.isMeetingManager() || this.envDetails.isQueueManager();
                    }
                }, {
                    key: 'isCurrentUserRequestor',
                    value: function isCurrentUserRequestor() {
                        return this.envDetails.currentUser.uuid === this.request.requestor.uuid;
                    }
                }, {
                    key: 'isCurrentUserCreator',
                    value: function isCurrentUserCreator() {
                        return this.envDetails.currentUser.uuid === this.request.creator.uuid;
                    }
                }, {
                    key: 'showSurveyIconForSfdc',
                    value: function showSurveyIconForSfdc() {
                        return !(this.isSFDC && this.isAdmin());
                    }
                }], null, _instanceInitializers);

                var _Card = Card;
                Card = inject(Router, BriefingRequestService, EventAggregator, I18N)(Card) || Card;
                return Card;
            }();

            _export('Card', Card);
        }
    };
});
System.registerDynamic("view-models/briefings/copy-briefing-form/copy-briefing-list.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>  \n  <require from=\"./list-item\"></require>\n  \n  <div class=\"modal jn-c-modal modal-copy-customer-info fade\" id=\"copy-briefing-modal\" ref=\"copyBriefingModal\" aria-hidden=\"false\">\n\t  <div class=\"modal-dialog\">\n\t    <div class=\"modal-content\">\n\t      <div class=\"modal-header\">\n\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t          <span aria-hidden=\"true\">×</span>\n\t        </button>\n\t        <h4 class=\"modal-title\" i18n=\"briefings.copyBriefing.copyBriefingTitle\"></h4>\n\t      </div>\n\t      <div class=\"modal-body\">\n\t        <form autocomplete=\"off\">\n\t          <div class=\"form-group jn-c-form-control--search-icon\">\n\t            <input type=\"text\" class=\"jn-c-form-control--search form-control\" keyup.trigger=\"searchTrigger()\" value.bind=\"searchText\" placeholder=\"Search\" autocomplete=\"off\">\n\t          </div>\n\t        </form>\n\t        <div class=\"\">\n\t            <div class=\"jn-l-card-list-view\" ref=\"copyBriefingList\">\n\t            \t<div class=\"text-center margin-top-70\" if.bind=\"items.length == 0\">\n\t            \t\t<span i18n.bind=\"!fetching ? 'briefings.copyBriefing.noBriefing': 'briefings.copyBriefing.loading'\" class=\"text-center margin-top-70\"></span>\n\t            \t</div>\n\t            \t<list-item  if.bind=\"items.length !== 0\" repeat.for=\"briefing of items\" selected-briefing.two-way=\"selectedBriefing\" briefing.bind=\"briefing\"></list-item>\n\t            </div>\n\t        </div>\n\t      </div>\n\t      <div class=\"modal-footer\">\n\t        <button class=\"jn-c-btn--blue btn\" click.delegate=\"importCopyBriefingSource()\" i18n=\"briefings.copyBriefing.done\"></button>\n\t      </div>\n\t    </div>\n\t  </div>\n  </div>\n</template>\n";
});
System.register('view-models/briefings/copy-briefing-form/copy-briefing-list.js', ['npm:aurelia-i18n@0.4.1.js', 'utils/converters.js', 'components/listing.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/briefing_request_service.js'], function (_export) {
  'use strict';

  var I18N, Utils, Listing, inject, bindable, EventAggregator, BriefingRequestService, CopyBriefingList;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_utilsConverters) {
      Utils = _utilsConverters.Utils;
    }, function (_componentsListing) {
      Listing = _componentsListing.Listing;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceBriefing_request_service) {
      BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
    }],
    execute: function () {
      CopyBriefingList = function (_Listing) {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _inherits(CopyBriefingList, _Listing);

        _createDecoratedClass(CopyBriefingList, [{
          key: 'existingBriefingUuid',
          decorators: [bindable],
          initializer: function initializer() {
            return '';
          },
          enumerable: true
        }], null, _instanceInitializers);

        function CopyBriefingList(briefingRequestService, ea, utils, i18n) {
          _classCallCheck(this, _CopyBriefingList);

          _get(Object.getPrototypeOf(_CopyBriefingList.prototype), 'constructor', this).call(this, ea, 'copy-briefing');
          this.searchText = "";
          this.filtersMetaInfo = [];
          this.selectedBriefing = {};
          this.eventPrefix = 'copy-briefing';

          _defineDecoratedPropertyDescriptor(this, 'existingBriefingUuid', _instanceInitializers);

          this.publisher = '';
          this.localSubscriber = '';
          this.i18n = i18n;
          this.utils = utils;
          this.envDetails = window.envDetails;
          this.briefingRequestService = briefingRequestService;
          this.searchTrigger = utils.debounce(this.searchEntered, 369);
          if (briefings_url) this.briefingRequestService.briefing_list_url = briefings_url;
          this.subscribeClassEvents();
        }

        _createDecoratedClass(CopyBriefingList, [{
          key: 'attached',
          value: function attached() {
            _get(Object.getPrototypeOf(_CopyBriefingList.prototype), 'attached', this).call(this, { domElement: this.copyBriefingList });
          }
        }, {
          key: 'searchEntered',
          value: function searchEntered() {
            this.pushToSearchQueue(this.searchText.trim());
            this.ea.publish(this.eventPrefix + '-search:text');
          }
        }, {
          key: 'fetchFromServer',
          value: function fetchFromServer(params) {
            var _this = this;

            var reqParams = _.assign(params, {
              copy_from: 'briefing',
              current_briefing_uuid: this.existingBriefingUuid
            });
            this.briefingRequestService.getBreifingRequests(reqParams).then(function (response) {
              if (response.response) {
                response = JSON.parse(response.response);
              }
              if (response.status == 200 || response.status == 'success') {
                response.data.briefing_requests.forEach(function (briefing) {
                  _this.items.push(briefing);
                });
                _this.totalEntries = response.data.total_entries;
              }
              _this.fetching = false;
              _this.fetchForSearch();
            })['catch'](function (response) {
              _this.fetching = false;
              _this.fetchForSearch();
            });
          }
        }, {
          key: 'importCopyBriefingSource',
          value: function importCopyBriefingSource() {
            var _this2 = this;

            if (!this.selectedBriefing.uuid) {
              this.ea.publish("show:notification", {
                'class': 'yellow',
                title: this.i18n.tr('briefings.copyBriefing.selectOneBriefingTitle'),
                message: this.i18n.tr('briefings.copyBriefing.selectOneBriefingMsg')
              });
              return;
            }
            var message = '';
            if (this.publisher == this.i18n.tr('briefings.briefingRequest.customerInfo')) {
              message = this.i18n.tr('briefings.copyBriefing.overwritingMessage');
            } else if (this.publisher == this.i18n.tr('briefings.activityBriefing.agenda')) {
              message = this.i18n.tr('briefings.copyBriefing.copyAgendaConfirmationMessage');
            } else if (this.publisher == this.i18n.tr('briefings.briefingRequest.copyAttendee')) {
              message = this.i18n.tr('briefings.copyBriefing.copyAttendeeConfirmationMessage');
            }

            this.ea.publish("show:notification", {
              'class': 'blue',
              isConfirmation: true,
              title: this.i18n.tr('briefings.commons.areYouSure'),
              message: message,
              done: function done() {
                _this2.ea.publish('import:copy-briefing-source', {
                  source: _this2.selectedBriefing,
                  modal: $(_this2.copyBriefingModal),
                  publisher: _this2.publisher
                });
              }
            });
          }
        }, {
          key: 'subscribeClassEvents',
          value: function subscribeClassEvents() {
            var _this3 = this;

            this.localSubscriber = this.ea.subscribe('show:copy-briefing-modal', function (publisherInfo) {
              _this3.selectedBriefing = {};
              _this3.clearSearchQueue();
              _this3.searchText = _this3.searchString = "";
              _this3.resetAndList();
              $(_this3.copyBriefingModal).modal('show');
              _this3.publisher = publisherInfo.publisher;
            });
          }
        }, {
          key: 'detached',
          value: function detached() {
            _get(Object.getPrototypeOf(_CopyBriefingList.prototype), 'detached', this).call(this, { domElement: this.copyBriefingList });
            this.allSubscribes.forEach(function (sub) {
              sub.dispose();
            });
            this.localSubscriber.dispose();
          }
        }, {
          key: 'fetchFiltersMetaData',
          value: function fetchFiltersMetaData() {}
        }], null, _instanceInitializers);

        var _CopyBriefingList = CopyBriefingList;
        CopyBriefingList = inject(BriefingRequestService, EventAggregator, Utils, I18N)(CopyBriefingList) || CopyBriefingList;
        return CopyBriefingList;
      }(Listing);

      _export('CopyBriefingList', CopyBriefingList);
    }
  };
});
System.registerDynamic("view-models/briefings/copy-briefing-form/list-item.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <require from=\"utils/converters\"></require>\n\n  <div class=\"col-md-12\">\n    <input type=\"radio\" change.delegate=\"radioClick(briefing)\" name=\"briefing-copy-card\" id=\"briefing-card-${briefing.id}\" class=\"jn-c-card-select\">\n    <label class=\"jn-c-card ${statusStyle[briefing.status]}\" for=\"briefing-card-${briefing.id}\">\n      <div class=\"jn-c-card-head\">\n        <div class=\"text-ellipsis font-bold\">${briefing.briefing_with}</div>\n        <div class=\"font-12\">ID #${briefing.id}</div>\n      </div>\n      <div class=\"jn-c-card-block\"> \n        <div class=\"font-bold\">${briefing.start_time | time} - ${briefing.end_time | time}</div>\n        <div class=\"font-12\">${briefing.start_date | dateFormat:'ddd, MMM D, YYYY'} - ${briefing.end_date | dateFormat:'ddd, MMM D, YYYY'}</div>\n      </div>\n      <div class=\"jn-c-card-block text-right\">\n        <div class=\"font-11\" i18n=\"briefings.copyBriefing.requested_by\"></div>\n        <div class=\"font-11 font-bold text-right\">${briefing.requestor.first_name} ${briefing.requestor.last_name}</div>\n        <div class=\"font-11\" i18n=\"[append]briefings.copyBriefing.no_of_participants\">${briefing.participant_count}&nbsp;</div>\n      </div>\n    </label>\n  </div>\n</template>\n";
});
System.register('view-models/briefings/copy-briefing-form/list-item.js', ['npm:aurelia-i18n@0.4.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
    'use strict';

    var I18N, inject, bindable, ListItem;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }],
        execute: function () {
            ListItem = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(ListItem, [{
                    key: 'briefing',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'selectedBriefing',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function ListItem(i18n) {
                    _classCallCheck(this, _ListItem);

                    _defineDecoratedPropertyDescriptor(this, 'briefing', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'selectedBriefing', _instanceInitializers);

                    this.statusStyle = {
                        "Past": "past",
                        "In Queue": "queue",
                        "Pending": "pending",
                        "Confirmed": "approved",
                        "Requested": "requested",
                        "Cancelled": "cancelled",
                        "Pending Confirmation": "pending-confirmation"
                    };

                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(ListItem, [{
                    key: 'radioClick',
                    value: function radioClick(briefing) {
                        this.selectedBriefing = briefing;
                        return true;
                    }
                }], null, _instanceInitializers);

                var _ListItem = ListItem;
                ListItem = inject(I18N)(ListItem) || ListItem;
                return ListItem;
            }();

            _export('ListItem', ListItem);
        }
    };
});
System.registerDynamic("view-models/briefings/filters/briefing-filters.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"components/aurelia-select\"></require>\n    <div class=\"filter-item col-md-6\" repeat.for='filter of filters'>\n      <label>${filter.display_name}</label>\n      <div class=\"filter-values token-input-fld\">\n      \t<div if.bind=\"filter.date_field\" class=\"form-field-icon jif-blue jif-calendar-month\">\n\t\t\t  <input id=\"${filter.name}\" type=\"text\" readonly=\"true\" class=\"date form-control ${filter.class}\" placeholder.bind=\"filter.class === 'start' ? i18n.tr('briefings.briefingRequest.selectStartDate') : i18n.tr('briefings.briefingRequest.selectEndDate')\" data-automation=\"briefing-start-date\" />\n\t\t</div>\n\t    <aurelia-select if.bind=\"!filter.date_field\" select-id.bind=\"filter.name\" page.bind=\"1\" per-page.bind=\"500\" defaults.bind=\"filter.defaults\" is-multiple.bind=\"true\" swidth.bind=\"'100%'\" data-source.bind=\"filter.dataSource\" place-holder.bind=\"filter.placeholder\" place-holder.bind=\"filter.placeholder\" select-url.bind=\"filter.urlToGet\" process.bind=\"$parent.processEntities\" min-input.bind=\"filter.min_input\" style=\"width:100%\"></aurelia-select>\n      </div>\n    </div>\n</template>\n";
});
(function() {
var define = System.amdDefine;
(function(factory) {
  if (typeof define === "function" && define.amd) {
    define("github:eternicode/bootstrap-datepicker@1.5.0/js/bootstrap-datepicker.js", ["npm:jquery@2.2.4.js"], factory);
  } else if (typeof exports === 'object') {
    factory(require('jquery'));
  } else {
    factory(jQuery);
  }
}(function($, undefined) {
  function UTCDate() {
    return new Date(Date.UTC.apply(Date, arguments));
  }
  function UTCToday() {
    var today = new Date();
    return UTCDate(today.getFullYear(), today.getMonth(), today.getDate());
  }
  function isUTCEquals(date1, date2) {
    return (date1.getUTCFullYear() === date2.getUTCFullYear() && date1.getUTCMonth() === date2.getUTCMonth() && date1.getUTCDate() === date2.getUTCDate());
  }
  function alias(method) {
    return function() {
      return this[method].apply(this, arguments);
    };
  }
  function isValidDate(d) {
    return d && !isNaN(d.getTime());
  }
  var DateArray = (function() {
    var extras = {
      get: function(i) {
        return this.slice(i)[0];
      },
      contains: function(d) {
        var val = d && d.valueOf();
        for (var i = 0,
            l = this.length; i < l; i++)
          if (this[i].valueOf() === val)
            return i;
        return -1;
      },
      remove: function(i) {
        this.splice(i, 1);
      },
      replace: function(new_array) {
        if (!new_array)
          return;
        if (!$.isArray(new_array))
          new_array = [new_array];
        this.clear();
        this.push.apply(this, new_array);
      },
      clear: function() {
        this.length = 0;
      },
      copy: function() {
        var a = new DateArray();
        a.replace(this);
        return a;
      }
    };
    return function() {
      var a = [];
      a.push.apply(a, arguments);
      $.extend(a, extras);
      return a;
    };
  })();
  var Datepicker = function(element, options) {
    this._process_options(options);
    this.dates = new DateArray();
    this.viewDate = this.o.defaultViewDate;
    this.focusDate = null;
    this.element = $(element);
    this.isInline = false;
    this.isInput = this.element.is('input');
    this.component = this.element.hasClass('date') ? this.element.find('.add-on, .input-group-addon, .btn') : false;
    this.hasInput = this.component && this.element.find('input').length;
    if (this.component && this.component.length === 0)
      this.component = false;
    this.picker = $(DPGlobal.template);
    this._buildEvents();
    this._attachEvents();
    if (this.isInline) {
      this.picker.addClass('datepicker-inline').appendTo(this.element);
    } else {
      this.picker.addClass('datepicker-dropdown dropdown-menu');
    }
    if (this.o.rtl) {
      this.picker.addClass('datepicker-rtl');
    }
    this.viewMode = this.o.startView;
    if (this.o.calendarWeeks)
      this.picker.find('tfoot .today, tfoot .clear').attr('colspan', function(i, val) {
        return parseInt(val) + 1;
      });
    this._allow_update = false;
    this.setStartDate(this._o.startDate);
    this.setEndDate(this._o.endDate);
    this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled);
    this.setDaysOfWeekHighlighted(this.o.daysOfWeekHighlighted);
    this.setDatesDisabled(this.o.datesDisabled);
    this.fillDow();
    this.fillMonths();
    this._allow_update = true;
    this.update();
    this.showMode();
    if (this.isInline) {
      this.show();
    }
  };
  Datepicker.prototype = {
    constructor: Datepicker,
    _process_options: function(opts) {
      this._o = $.extend({}, this._o, opts);
      var o = this.o = $.extend({}, this._o);
      var lang = o.language;
      if (!dates[lang]) {
        lang = lang.split('-')[0];
        if (!dates[lang])
          lang = defaults.language;
      }
      o.language = lang;
      switch (o.startView) {
        case 2:
        case 'decade':
          o.startView = 2;
          break;
        case 1:
        case 'year':
          o.startView = 1;
          break;
        default:
          o.startView = 0;
      }
      switch (o.minViewMode) {
        case 1:
        case 'months':
          o.minViewMode = 1;
          break;
        case 2:
        case 'years':
          o.minViewMode = 2;
          break;
        default:
          o.minViewMode = 0;
      }
      switch (o.maxViewMode) {
        case 0:
        case 'days':
          o.maxViewMode = 0;
          break;
        case 1:
        case 'months':
          o.maxViewMode = 1;
          break;
        default:
          o.maxViewMode = 2;
      }
      o.startView = Math.min(o.startView, o.maxViewMode);
      o.startView = Math.max(o.startView, o.minViewMode);
      if (o.multidate !== true) {
        o.multidate = Number(o.multidate) || false;
        if (o.multidate !== false)
          o.multidate = Math.max(0, o.multidate);
      }
      o.multidateSeparator = String(o.multidateSeparator);
      o.weekStart %= 7;
      o.weekEnd = ((o.weekStart + 6) % 7);
      var format = DPGlobal.parseFormat(o.format);
      if (o.startDate !== -Infinity) {
        if (!!o.startDate) {
          if (o.startDate instanceof Date)
            o.startDate = this._local_to_utc(this._zero_time(o.startDate));
          else
            o.startDate = DPGlobal.parseDate(o.startDate, format, o.language);
        } else {
          o.startDate = -Infinity;
        }
      }
      if (o.endDate !== Infinity) {
        if (!!o.endDate) {
          if (o.endDate instanceof Date)
            o.endDate = this._local_to_utc(this._zero_time(o.endDate));
          else
            o.endDate = DPGlobal.parseDate(o.endDate, format, o.language);
        } else {
          o.endDate = Infinity;
        }
      }
      o.daysOfWeekDisabled = o.daysOfWeekDisabled || [];
      if (!$.isArray(o.daysOfWeekDisabled))
        o.daysOfWeekDisabled = o.daysOfWeekDisabled.split(/[,\s]*/);
      o.daysOfWeekDisabled = $.map(o.daysOfWeekDisabled, function(d) {
        return parseInt(d, 10);
      });
      o.daysOfWeekHighlighted = o.daysOfWeekHighlighted || [];
      if (!$.isArray(o.daysOfWeekHighlighted))
        o.daysOfWeekHighlighted = o.daysOfWeekHighlighted.split(/[,\s]*/);
      o.daysOfWeekHighlighted = $.map(o.daysOfWeekHighlighted, function(d) {
        return parseInt(d, 10);
      });
      o.datesDisabled = o.datesDisabled || [];
      if (!$.isArray(o.datesDisabled)) {
        var datesDisabled = [];
        datesDisabled.push(DPGlobal.parseDate(o.datesDisabled, format, o.language));
        o.datesDisabled = datesDisabled;
      }
      o.datesDisabled = $.map(o.datesDisabled, function(d) {
        return DPGlobal.parseDate(d, format, o.language);
      });
      var plc = String(o.orientation).toLowerCase().split(/\s+/g),
          _plc = o.orientation.toLowerCase();
      plc = $.grep(plc, function(word) {
        return /^auto|left|right|top|bottom$/.test(word);
      });
      o.orientation = {
        x: 'auto',
        y: 'auto'
      };
      if (!_plc || _plc === 'auto')
        ;
      else if (plc.length === 1) {
        switch (plc[0]) {
          case 'top':
          case 'bottom':
            o.orientation.y = plc[0];
            break;
          case 'left':
          case 'right':
            o.orientation.x = plc[0];
            break;
        }
      } else {
        _plc = $.grep(plc, function(word) {
          return /^left|right$/.test(word);
        });
        o.orientation.x = _plc[0] || 'auto';
        _plc = $.grep(plc, function(word) {
          return /^top|bottom$/.test(word);
        });
        o.orientation.y = _plc[0] || 'auto';
      }
      if (o.defaultViewDate) {
        var year = o.defaultViewDate.year || new Date().getFullYear();
        var month = o.defaultViewDate.month || 0;
        var day = o.defaultViewDate.day || 1;
        o.defaultViewDate = UTCDate(year, month, day);
      } else {
        o.defaultViewDate = UTCToday();
      }
      o.showOnFocus = o.showOnFocus !== undefined ? o.showOnFocus : true;
      o.zIndexOffset = o.zIndexOffset !== undefined ? o.zIndexOffset : 10;
    },
    _events: [],
    _secondaryEvents: [],
    _applyEvents: function(evs) {
      for (var i = 0,
          el,
          ch,
          ev; i < evs.length; i++) {
        el = evs[i][0];
        if (evs[i].length === 2) {
          ch = undefined;
          ev = evs[i][1];
        } else if (evs[i].length === 3) {
          ch = evs[i][1];
          ev = evs[i][2];
        }
        el.on(ev, ch);
      }
    },
    _unapplyEvents: function(evs) {
      for (var i = 0,
          el,
          ev,
          ch; i < evs.length; i++) {
        el = evs[i][0];
        if (evs[i].length === 2) {
          ch = undefined;
          ev = evs[i][1];
        } else if (evs[i].length === 3) {
          ch = evs[i][1];
          ev = evs[i][2];
        }
        el.off(ev, ch);
      }
    },
    _buildEvents: function() {
      var events = {
        keyup: $.proxy(function(e) {
          if ($.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) === -1)
            this.update();
        }, this),
        keydown: $.proxy(this.keydown, this),
        paste: $.proxy(this.paste, this)
      };
      if (this.o.showOnFocus === true) {
        events.focus = $.proxy(this.show, this);
      }
      if (this.isInput) {
        this._events = [[this.element, events]];
      } else if (this.component && this.hasInput) {
        this._events = [[this.element.find('input'), events], [this.component, {click: $.proxy(this.show, this)}]];
      } else if (this.element.is('div')) {
        this.isInline = true;
      } else {
        this._events = [[this.element, {click: $.proxy(this.show, this)}]];
      }
      this._events.push([this.element, '*', {blur: $.proxy(function(e) {
          this._focused_from = e.target;
        }, this)}], [this.element, {blur: $.proxy(function(e) {
          this._focused_from = e.target;
        }, this)}]);
      if (this.o.immediateUpdates) {
        this._events.push([this.element, {'changeYear changeMonth': $.proxy(function(e) {
            this.update(e.date);
          }, this)}]);
      }
      this._secondaryEvents = [[this.picker, {click: $.proxy(this.click, this)}], [$(window), {resize: $.proxy(this.place, this)}], [$(document), {mousedown: $.proxy(function(e) {
          if (!(this.element.is(e.target) || this.element.find(e.target).length || this.picker.is(e.target) || this.picker.find(e.target).length || this.picker.hasClass('datepicker-inline'))) {
            this.hide();
          }
        }, this)}]];
    },
    _attachEvents: function() {
      this._detachEvents();
      this._applyEvents(this._events);
    },
    _detachEvents: function() {
      this._unapplyEvents(this._events);
    },
    _attachSecondaryEvents: function() {
      this._detachSecondaryEvents();
      this._applyEvents(this._secondaryEvents);
    },
    _detachSecondaryEvents: function() {
      this._unapplyEvents(this._secondaryEvents);
    },
    _trigger: function(event, altdate) {
      var date = altdate || this.dates.get(-1),
          local_date = this._utc_to_local(date);
      this.element.trigger({
        type: event,
        date: local_date,
        dates: $.map(this.dates, this._utc_to_local),
        format: $.proxy(function(ix, format) {
          if (arguments.length === 0) {
            ix = this.dates.length - 1;
            format = this.o.format;
          } else if (typeof ix === 'string') {
            format = ix;
            ix = this.dates.length - 1;
          }
          format = format || this.o.format;
          var date = this.dates.get(ix);
          return DPGlobal.formatDate(date, format, this.o.language);
        }, this)
      });
    },
    show: function() {
      if (this.element.attr('readonly') && this.o.enableOnReadonly === false)
        return;
      if (!this.isInline)
        this.picker.appendTo(this.o.container);
      this.place();
      this.picker.show();
      this._attachSecondaryEvents();
      this._trigger('show');
      if ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && this.o.disableTouchKeyboard) {
        $(this.element).blur();
      }
      return this;
    },
    hide: function() {
      if (this.isInline)
        return this;
      if (!this.picker.is(':visible'))
        return this;
      this.focusDate = null;
      this.picker.hide().detach();
      this._detachSecondaryEvents();
      this.viewMode = this.o.startView;
      this.showMode();
      if (this.o.forceParse && (this.isInput && this.element.val() || this.hasInput && this.element.find('input').val()))
        this.setValue();
      this._trigger('hide');
      return this;
    },
    remove: function() {
      this.hide();
      this._detachEvents();
      this._detachSecondaryEvents();
      this.picker.remove();
      delete this.element.data().datepicker;
      if (!this.isInput) {
        delete this.element.data().date;
      }
      return this;
    },
    paste: function(evt) {
      var dateString;
      if (evt.originalEvent.clipboardData && evt.originalEvent.clipboardData.types && $.inArray('text/plain', evt.originalEvent.clipboardData.types) !== -1) {
        dateString = evt.originalEvent.clipboardData.getData('text/plain');
      } else if (window.clipboardData) {
        dateString = window.clipboardData.getData('Text');
      } else {
        return;
      }
      this.setDate(dateString);
      this.update();
      evt.preventDefault();
    },
    _utc_to_local: function(utc) {
      return utc && new Date(utc.getTime() + (utc.getTimezoneOffset() * 60000));
    },
    _local_to_utc: function(local) {
      return local && new Date(local.getTime() - (local.getTimezoneOffset() * 60000));
    },
    _zero_time: function(local) {
      return local && new Date(local.getFullYear(), local.getMonth(), local.getDate());
    },
    _zero_utc_time: function(utc) {
      return utc && new Date(Date.UTC(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate()));
    },
    getDates: function() {
      return $.map(this.dates, this._utc_to_local);
    },
    getUTCDates: function() {
      return $.map(this.dates, function(d) {
        return new Date(d);
      });
    },
    getDate: function() {
      return this._utc_to_local(this.getUTCDate());
    },
    getUTCDate: function() {
      var selected_date = this.dates.get(-1);
      if (typeof selected_date !== 'undefined') {
        return new Date(selected_date);
      } else {
        return null;
      }
    },
    clearDates: function() {
      var element;
      if (this.isInput) {
        element = this.element;
      } else if (this.component) {
        element = this.element.find('input');
      }
      if (element) {
        element.val('');
      }
      this.update();
      this._trigger('changeDate');
      if (this.o.autoclose) {
        this.hide();
      }
    },
    setDates: function() {
      var args = $.isArray(arguments[0]) ? arguments[0] : arguments;
      this.update.apply(this, args);
      this._trigger('changeDate');
      this.setValue();
      return this;
    },
    setUTCDates: function() {
      var args = $.isArray(arguments[0]) ? arguments[0] : arguments;
      this.update.apply(this, $.map(args, this._utc_to_local));
      this._trigger('changeDate');
      this.setValue();
      return this;
    },
    setDate: alias('setDates'),
    setUTCDate: alias('setUTCDates'),
    setValue: function() {
      var formatted = this.getFormattedDate();
      if (!this.isInput) {
        if (this.component) {
          this.element.find('input').val(formatted);
        }
      } else {
        this.element.val(formatted);
      }
      return this;
    },
    getFormattedDate: function(format) {
      if (format === undefined)
        format = this.o.format;
      var lang = this.o.language;
      return $.map(this.dates, function(d) {
        return DPGlobal.formatDate(d, format, lang);
      }).join(this.o.multidateSeparator);
    },
    setStartDate: function(startDate) {
      this._process_options({startDate: startDate});
      this.update();
      this.updateNavArrows();
      return this;
    },
    setEndDate: function(endDate) {
      this._process_options({endDate: endDate});
      this.update();
      this.updateNavArrows();
      return this;
    },
    setDaysOfWeekDisabled: function(daysOfWeekDisabled) {
      this._process_options({daysOfWeekDisabled: daysOfWeekDisabled});
      this.update();
      this.updateNavArrows();
      return this;
    },
    setDaysOfWeekHighlighted: function(daysOfWeekHighlighted) {
      this._process_options({daysOfWeekHighlighted: daysOfWeekHighlighted});
      this.update();
      return this;
    },
    setDatesDisabled: function(datesDisabled) {
      this._process_options({datesDisabled: datesDisabled});
      this.update();
      this.updateNavArrows();
    },
    place: function() {
      if (this.isInline)
        return this;
      var calendarWidth = this.picker.outerWidth(),
          calendarHeight = this.picker.outerHeight(),
          visualPadding = 10,
          container = $(this.o.container),
          windowWidth = container.width(),
          scrollTop = container.scrollTop(),
          appendOffset = container.offset();
      var parentsZindex = [];
      this.element.parents().each(function() {
        var itemZIndex = $(this).css('z-index');
        if (itemZIndex !== 'auto' && itemZIndex !== 0)
          parentsZindex.push(parseInt(itemZIndex));
      });
      var zIndex = Math.max.apply(Math, parentsZindex) + this.o.zIndexOffset;
      var offset = this.component ? this.component.parent().offset() : this.element.offset();
      var height = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false);
      var width = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false);
      var left = offset.left - appendOffset.left,
          top = offset.top - appendOffset.top;
      this.picker.removeClass('datepicker-orient-top datepicker-orient-bottom ' + 'datepicker-orient-right datepicker-orient-left');
      if (this.o.orientation.x !== 'auto') {
        this.picker.addClass('datepicker-orient-' + this.o.orientation.x);
        if (this.o.orientation.x === 'right')
          left -= calendarWidth - width;
      } else {
        if (offset.left < 0) {
          this.picker.addClass('datepicker-orient-left');
          left -= offset.left - visualPadding;
        } else if (left + calendarWidth > windowWidth) {
          this.picker.addClass('datepicker-orient-right');
          left = offset.left + width - calendarWidth;
        } else {
          this.picker.addClass('datepicker-orient-left');
        }
      }
      var yorient = this.o.orientation.y,
          top_overflow;
      if (yorient === 'auto') {
        top_overflow = -scrollTop + top - calendarHeight;
        yorient = top_overflow < 0 ? 'bottom' : 'top';
      }
      this.picker.addClass('datepicker-orient-' + yorient);
      if (yorient === 'top')
        top -= calendarHeight + parseInt(this.picker.css('padding-top'));
      else
        top += height;
      if (this.o.rtl) {
        var right = windowWidth - (left + width);
        this.picker.css({
          top: top,
          right: right,
          zIndex: zIndex
        });
      } else {
        this.picker.css({
          top: top,
          left: left,
          zIndex: zIndex
        });
      }
      return this;
    },
    _allow_update: true,
    update: function() {
      if (!this._allow_update)
        return this;
      var oldDates = this.dates.copy(),
          dates = [],
          fromArgs = false;
      if (arguments.length) {
        $.each(arguments, $.proxy(function(i, date) {
          if (date instanceof Date)
            date = this._local_to_utc(date);
          dates.push(date);
        }, this));
        fromArgs = true;
      } else {
        dates = this.isInput ? this.element.val() : this.element.data('date') || this.element.find('input').val();
        if (dates && this.o.multidate)
          dates = dates.split(this.o.multidateSeparator);
        else
          dates = [dates];
        delete this.element.data().date;
      }
      dates = $.map(dates, $.proxy(function(date) {
        return DPGlobal.parseDate(date, this.o.format, this.o.language);
      }, this));
      dates = $.grep(dates, $.proxy(function(date) {
        return (date < this.o.startDate || date > this.o.endDate || !date);
      }, this), true);
      this.dates.replace(dates);
      if (this.dates.length)
        this.viewDate = new Date(this.dates.get(-1));
      else if (this.viewDate < this.o.startDate)
        this.viewDate = new Date(this.o.startDate);
      else if (this.viewDate > this.o.endDate)
        this.viewDate = new Date(this.o.endDate);
      else
        this.viewDate = this.o.defaultViewDate;
      if (fromArgs) {
        this.setValue();
      } else if (dates.length) {
        if (String(oldDates) !== String(this.dates))
          this._trigger('changeDate');
      }
      if (!this.dates.length && oldDates.length)
        this._trigger('clearDate');
      this.fill();
      this.element.change();
      return this;
    },
    fillDow: function() {
      var dowCnt = this.o.weekStart,
          html = '<tr>';
      if (this.o.calendarWeeks) {
        this.picker.find('.datepicker-days .datepicker-switch').attr('colspan', function(i, val) {
          return parseInt(val) + 1;
        });
        html += '<th class="cw">&#160;</th>';
      }
      while (dowCnt < this.o.weekStart + 7) {
        html += '<th class="dow">' + dates[this.o.language].daysMin[(dowCnt++) % 7] + '</th>';
      }
      html += '</tr>';
      this.picker.find('.datepicker-days thead').append(html);
    },
    fillMonths: function() {
      var html = '',
          i = 0;
      while (i < 12) {
        html += '<span class="month">' + dates[this.o.language].monthsShort[i++] + '</span>';
      }
      this.picker.find('.datepicker-months td').html(html);
    },
    setRange: function(range) {
      if (!range || !range.length)
        delete this.range;
      else
        this.range = $.map(range, function(d) {
          return d.valueOf();
        });
      this.fill();
    },
    getClassNames: function(date) {
      var cls = [],
          year = this.viewDate.getUTCFullYear(),
          month = this.viewDate.getUTCMonth(),
          today = new Date();
      if (date.getUTCFullYear() < year || (date.getUTCFullYear() === year && date.getUTCMonth() < month)) {
        cls.push('old');
      } else if (date.getUTCFullYear() > year || (date.getUTCFullYear() === year && date.getUTCMonth() > month)) {
        cls.push('new');
      }
      if (this.focusDate && date.valueOf() === this.focusDate.valueOf())
        cls.push('focused');
      if (this.o.todayHighlight && date.getUTCFullYear() === today.getFullYear() && date.getUTCMonth() === today.getMonth() && date.getUTCDate() === today.getDate()) {
        cls.push('today');
      }
      if (this.dates.contains(date) !== -1)
        cls.push('active');
      if (date.valueOf() < this.o.startDate || date.valueOf() > this.o.endDate || $.inArray(date.getUTCDay(), this.o.daysOfWeekDisabled) !== -1) {
        cls.push('disabled');
      }
      if ($.inArray(date.getUTCDay(), this.o.daysOfWeekHighlighted) !== -1) {
        cls.push('highlighted');
      }
      if (this.o.datesDisabled.length > 0 && $.grep(this.o.datesDisabled, function(d) {
        return isUTCEquals(date, d);
      }).length > 0) {
        cls.push('disabled', 'disabled-date');
      }
      if (this.range) {
        if (date > this.range[0] && date < this.range[this.range.length - 1]) {
          cls.push('range');
        }
        if ($.inArray(date.valueOf(), this.range) !== -1) {
          cls.push('selected');
        }
        if (date.valueOf() === this.range[0]) {
          cls.push('range-start');
        }
        if (date.valueOf() === this.range[this.range.length - 1]) {
          cls.push('range-end');
        }
      }
      return cls;
    },
    fill: function() {
      var d = new Date(this.viewDate),
          year = d.getUTCFullYear(),
          month = d.getUTCMonth(),
          startYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,
          startMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,
          endYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,
          endMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,
          todaytxt = dates[this.o.language].today || dates['en'].today || '',
          cleartxt = dates[this.o.language].clear || dates['en'].clear || '',
          titleFormat = dates[this.o.language].titleFormat || dates['en'].titleFormat,
          tooltip;
      if (isNaN(year) || isNaN(month))
        return;
      this.picker.find('.datepicker-days thead .datepicker-switch').text(DPGlobal.formatDate(new UTCDate(year, month), titleFormat, this.o.language));
      this.picker.find('tfoot .today').text(todaytxt).toggle(this.o.todayBtn !== false);
      this.picker.find('tfoot .clear').text(cleartxt).toggle(this.o.clearBtn !== false);
      this.picker.find('thead .datepicker-title').text(this.o.title).toggle(this.o.title !== '');
      this.updateNavArrows();
      this.fillMonths();
      var prevMonth = UTCDate(year, month - 1, 28),
          day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
      prevMonth.setUTCDate(day);
      prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.o.weekStart + 7) % 7);
      var nextMonth = new Date(prevMonth);
      if (prevMonth.getUTCFullYear() < 100) {
        nextMonth.setUTCFullYear(prevMonth.getUTCFullYear());
      }
      nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
      nextMonth = nextMonth.valueOf();
      var html = [];
      var clsName;
      while (prevMonth.valueOf() < nextMonth) {
        if (prevMonth.getUTCDay() === this.o.weekStart) {
          html.push('<tr>');
          if (this.o.calendarWeeks) {
            var ws = new Date(+prevMonth + (this.o.weekStart - prevMonth.getUTCDay() - 7) % 7 * 864e5),
                th = new Date(Number(ws) + (7 + 4 - ws.getUTCDay()) % 7 * 864e5),
                yth = new Date(Number(yth = UTCDate(th.getUTCFullYear(), 0, 1)) + (7 + 4 - yth.getUTCDay()) % 7 * 864e5),
                calWeek = (th - yth) / 864e5 / 7 + 1;
            html.push('<td class="cw">' + calWeek + '</td>');
          }
        }
        clsName = this.getClassNames(prevMonth);
        clsName.push('day');
        if (this.o.beforeShowDay !== $.noop) {
          var before = this.o.beforeShowDay(this._utc_to_local(prevMonth));
          if (before === undefined)
            before = {};
          else if (typeof(before) === 'boolean')
            before = {enabled: before};
          else if (typeof(before) === 'string')
            before = {classes: before};
          if (before.enabled === false)
            clsName.push('disabled');
          if (before.classes)
            clsName = clsName.concat(before.classes.split(/\s+/));
          if (before.tooltip)
            tooltip = before.tooltip;
        }
        clsName = $.unique(clsName);
        html.push('<td class="' + clsName.join(' ') + '"' + (tooltip ? ' title="' + tooltip + '"' : '') + '>' + prevMonth.getUTCDate() + '</td>');
        tooltip = null;
        if (prevMonth.getUTCDay() === this.o.weekEnd) {
          html.push('</tr>');
        }
        prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);
      }
      this.picker.find('.datepicker-days tbody').empty().append(html.join(''));
      var months = this.picker.find('.datepicker-months').find('.datepicker-switch').text(this.o.maxViewMode < 2 ? 'Months' : year).end().find('span').removeClass('active');
      $.each(this.dates, function(i, d) {
        if (d.getUTCFullYear() === year)
          months.eq(d.getUTCMonth()).addClass('active');
      });
      if (year < startYear || year > endYear) {
        months.addClass('disabled');
      }
      if (year === startYear) {
        months.slice(0, startMonth).addClass('disabled');
      }
      if (year === endYear) {
        months.slice(endMonth + 1).addClass('disabled');
      }
      if (this.o.beforeShowMonth !== $.noop) {
        var that = this;
        $.each(months, function(i, month) {
          if (!$(month).hasClass('disabled')) {
            var moDate = new Date(year, i, 1);
            var before = that.o.beforeShowMonth(moDate);
            if (before === false)
              $(month).addClass('disabled');
          }
        });
      }
      html = '';
      year = parseInt(year / 10, 10) * 10;
      var yearCont = this.picker.find('.datepicker-years').find('.datepicker-switch').text(year + '-' + (year + 9)).end().find('td');
      year -= 1;
      var years = $.map(this.dates, function(d) {
        return d.getUTCFullYear();
      }),
          classes;
      for (var i = -1; i < 11; i++) {
        classes = ['year'];
        tooltip = null;
        if (i === -1)
          classes.push('old');
        else if (i === 10)
          classes.push('new');
        if ($.inArray(year, years) !== -1)
          classes.push('active');
        if (year < startYear || year > endYear)
          classes.push('disabled');
        if (this.o.beforeShowYear !== $.noop) {
          var yrBefore = this.o.beforeShowYear(new Date(year, 0, 1));
          if (yrBefore === undefined)
            yrBefore = {};
          else if (typeof(yrBefore) === 'boolean')
            yrBefore = {enabled: yrBefore};
          else if (typeof(yrBefore) === 'string')
            yrBefore = {classes: yrBefore};
          if (yrBefore.enabled === false)
            classes.push('disabled');
          if (yrBefore.classes)
            classes = classes.concat(yrBefore.classes.split(/\s+/));
          if (yrBefore.tooltip)
            tooltip = yrBefore.tooltip;
        }
        html += '<span class="' + classes.join(' ') + '"' + (tooltip ? ' title="' + tooltip + '"' : '') + '>' + year + '</span>';
        year += 1;
      }
      yearCont.html(html);
    },
    updateNavArrows: function() {
      if (!this._allow_update)
        return;
      var d = new Date(this.viewDate),
          year = d.getUTCFullYear(),
          month = d.getUTCMonth();
      switch (this.viewMode) {
        case 0:
          if (this.o.startDate !== -Infinity && year <= this.o.startDate.getUTCFullYear() && month <= this.o.startDate.getUTCMonth()) {
            this.picker.find('.prev').css({visibility: 'hidden'});
          } else {
            this.picker.find('.prev').css({visibility: 'visible'});
          }
          if (this.o.endDate !== Infinity && year >= this.o.endDate.getUTCFullYear() && month >= this.o.endDate.getUTCMonth()) {
            this.picker.find('.next').css({visibility: 'hidden'});
          } else {
            this.picker.find('.next').css({visibility: 'visible'});
          }
          break;
        case 1:
        case 2:
          if (this.o.startDate !== -Infinity && year <= this.o.startDate.getUTCFullYear() || this.o.maxViewMode < 2) {
            this.picker.find('.prev').css({visibility: 'hidden'});
          } else {
            this.picker.find('.prev').css({visibility: 'visible'});
          }
          if (this.o.endDate !== Infinity && year >= this.o.endDate.getUTCFullYear() || this.o.maxViewMode < 2) {
            this.picker.find('.next').css({visibility: 'hidden'});
          } else {
            this.picker.find('.next').css({visibility: 'visible'});
          }
          break;
      }
    },
    click: function(e) {
      e.preventDefault();
      e.stopPropagation();
      var target = $(e.target).closest('span, td, th'),
          year,
          month,
          day;
      if (target.length === 1) {
        switch (target[0].nodeName.toLowerCase()) {
          case 'th':
            switch (target[0].className) {
              case 'datepicker-switch':
                this.showMode(1);
                break;
              case 'prev':
              case 'next':
                var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1);
                switch (this.viewMode) {
                  case 0:
                    this.viewDate = this.moveMonth(this.viewDate, dir);
                    this._trigger('changeMonth', this.viewDate);
                    break;
                  case 1:
                  case 2:
                    this.viewDate = this.moveYear(this.viewDate, dir);
                    if (this.viewMode === 1)
                      this._trigger('changeYear', this.viewDate);
                    break;
                }
                this.fill();
                break;
              case 'today':
                var date = new Date();
                date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);
                this.showMode(-2);
                var which = this.o.todayBtn === 'linked' ? null : 'view';
                this._setDate(date, which);
                break;
              case 'clear':
                this.clearDates();
                break;
            }
            break;
          case 'span':
            if (!target.hasClass('disabled')) {
              this.viewDate.setUTCDate(1);
              if (target.hasClass('month')) {
                day = 1;
                month = target.parent().find('span').index(target);
                year = this.viewDate.getUTCFullYear();
                this.viewDate.setUTCMonth(month);
                this._trigger('changeMonth', this.viewDate);
                if (this.o.minViewMode === 1) {
                  this._setDate(UTCDate(year, month, day));
                  this.showMode();
                } else {
                  this.showMode(-1);
                }
              } else {
                day = 1;
                month = 0;
                year = parseInt(target.text(), 10) || 0;
                this.viewDate.setUTCFullYear(year);
                this._trigger('changeYear', this.viewDate);
                if (this.o.minViewMode === 2) {
                  this._setDate(UTCDate(year, month, day));
                }
                this.showMode(-1);
              }
              this.fill();
            }
            break;
          case 'td':
            if (target.hasClass('day') && !target.hasClass('disabled')) {
              day = parseInt(target.text(), 10) || 1;
              year = this.viewDate.getUTCFullYear();
              month = this.viewDate.getUTCMonth();
              if (target.hasClass('old')) {
                if (month === 0) {
                  month = 11;
                  year -= 1;
                } else {
                  month -= 1;
                }
              } else if (target.hasClass('new')) {
                if (month === 11) {
                  month = 0;
                  year += 1;
                } else {
                  month += 1;
                }
              }
              this._setDate(UTCDate(year, month, day));
            }
            break;
        }
      }
      if (this.picker.is(':visible') && this._focused_from) {
        $(this._focused_from).focus();
      }
      delete this._focused_from;
    },
    _toggle_multidate: function(date) {
      var ix = this.dates.contains(date);
      if (!date) {
        this.dates.clear();
      }
      if (ix !== -1) {
        if (this.o.multidate === true || this.o.multidate > 1 || this.o.toggleActive) {
          this.dates.remove(ix);
        }
      } else if (this.o.multidate === false) {
        this.dates.clear();
        this.dates.push(date);
      } else {
        this.dates.push(date);
      }
      if (typeof this.o.multidate === 'number')
        while (this.dates.length > this.o.multidate)
          this.dates.remove(0);
    },
    _setDate: function(date, which) {
      if (!which || which === 'date')
        this._toggle_multidate(date && new Date(date));
      if (!which || which === 'view')
        this.viewDate = date && new Date(date);
      this.fill();
      this.setValue();
      if (!which || which !== 'view') {
        this._trigger('changeDate');
      }
      var element;
      if (this.isInput) {
        element = this.element;
      } else if (this.component) {
        element = this.element.find('input');
      }
      if (element) {
        element.change();
      }
      if (this.o.autoclose && (!which || which === 'date')) {
        this.hide();
      }
    },
    moveMonth: function(date, dir) {
      if (!isValidDate(date))
        return this.o.defaultViewDate;
      if (!dir)
        return date;
      var new_date = new Date(date.valueOf()),
          day = new_date.getUTCDate(),
          month = new_date.getUTCMonth(),
          mag = Math.abs(dir),
          new_month,
          test;
      dir = dir > 0 ? 1 : -1;
      if (mag === 1) {
        test = dir === -1 ? function() {
          return new_date.getUTCMonth() === month;
        } : function() {
          return new_date.getUTCMonth() !== new_month;
        };
        new_month = month + dir;
        new_date.setUTCMonth(new_month);
        if (new_month < 0 || new_month > 11)
          new_month = (new_month + 12) % 12;
      } else {
        for (var i = 0; i < mag; i++)
          new_date = this.moveMonth(new_date, dir);
        new_month = new_date.getUTCMonth();
        new_date.setUTCDate(day);
        test = function() {
          return new_month !== new_date.getUTCMonth();
        };
      }
      while (test()) {
        new_date.setUTCDate(--day);
        new_date.setUTCMonth(new_month);
      }
      return new_date;
    },
    moveYear: function(date, dir) {
      return this.moveMonth(date, dir * 12);
    },
    dateWithinRange: function(date) {
      return date >= this.o.startDate && date <= this.o.endDate;
    },
    keydown: function(e) {
      if (!this.picker.is(':visible')) {
        if (e.keyCode === 40 || e.keyCode === 27) {
          this.show();
          e.stopPropagation();
        }
        return;
      }
      var dateChanged = false,
          dir,
          newDate,
          newViewDate,
          focusDate = this.focusDate || this.viewDate;
      switch (e.keyCode) {
        case 27:
          if (this.focusDate) {
            this.focusDate = null;
            this.viewDate = this.dates.get(-1) || this.viewDate;
            this.fill();
          } else
            this.hide();
          e.preventDefault();
          e.stopPropagation();
          break;
        case 37:
        case 39:
          if (!this.o.keyboardNavigation)
            break;
          dir = e.keyCode === 37 ? -1 : 1;
          if (e.ctrlKey) {
            newDate = this.moveYear(this.dates.get(-1) || UTCToday(), dir);
            newViewDate = this.moveYear(focusDate, dir);
            this._trigger('changeYear', this.viewDate);
          } else if (e.shiftKey) {
            newDate = this.moveMonth(this.dates.get(-1) || UTCToday(), dir);
            newViewDate = this.moveMonth(focusDate, dir);
            this._trigger('changeMonth', this.viewDate);
          } else {
            newDate = new Date(this.dates.get(-1) || UTCToday());
            newDate.setUTCDate(newDate.getUTCDate() + dir);
            newViewDate = new Date(focusDate);
            newViewDate.setUTCDate(focusDate.getUTCDate() + dir);
          }
          if (this.dateWithinRange(newViewDate)) {
            this.focusDate = this.viewDate = newViewDate;
            this.setValue();
            this.fill();
            e.preventDefault();
          }
          break;
        case 38:
        case 40:
          if (!this.o.keyboardNavigation)
            break;
          dir = e.keyCode === 38 ? -1 : 1;
          if (e.ctrlKey) {
            newDate = this.moveYear(this.dates.get(-1) || UTCToday(), dir);
            newViewDate = this.moveYear(focusDate, dir);
            this._trigger('changeYear', this.viewDate);
          } else if (e.shiftKey) {
            newDate = this.moveMonth(this.dates.get(-1) || UTCToday(), dir);
            newViewDate = this.moveMonth(focusDate, dir);
            this._trigger('changeMonth', this.viewDate);
          } else {
            newDate = new Date(this.dates.get(-1) || UTCToday());
            newDate.setUTCDate(newDate.getUTCDate() + dir * 7);
            newViewDate = new Date(focusDate);
            newViewDate.setUTCDate(focusDate.getUTCDate() + dir * 7);
          }
          if (this.dateWithinRange(newViewDate)) {
            this.focusDate = this.viewDate = newViewDate;
            this.setValue();
            this.fill();
            e.preventDefault();
          }
          break;
        case 32:
          break;
        case 13:
          if (!this.o.forceParse) {
            break;
          }
          focusDate = this.focusDate || this.dates.get(-1) || this.viewDate;
          if (this.o.keyboardNavigation) {
            this._toggle_multidate(focusDate);
            dateChanged = true;
          }
          this.focusDate = null;
          this.viewDate = this.dates.get(-1) || this.viewDate;
          this.setValue();
          this.fill();
          if (this.picker.is(':visible')) {
            e.preventDefault();
            if (typeof e.stopPropagation === 'function') {
              e.stopPropagation();
            } else {
              e.cancelBubble = true;
            }
            if (this.o.autoclose)
              this.hide();
          }
          break;
        case 9:
          this.focusDate = null;
          this.viewDate = this.dates.get(-1) || this.viewDate;
          this.fill();
          this.hide();
          break;
      }
      if (dateChanged) {
        if (this.dates.length)
          this._trigger('changeDate');
        else
          this._trigger('clearDate');
        var element;
        if (this.isInput) {
          element = this.element;
        } else if (this.component) {
          element = this.element.find('input');
        }
        if (element) {
          element.change();
        }
      }
    },
    showMode: function(dir) {
      if (dir) {
        this.viewMode = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, this.viewMode + dir));
      }
      this.picker.children('div').hide().filter('.datepicker-' + DPGlobal.modes[this.viewMode].clsName).show();
      this.updateNavArrows();
    }
  };
  var DateRangePicker = function(element, options) {
    this.element = $(element);
    this.inputs = $.map(options.inputs, function(i) {
      return i.jquery ? i[0] : i;
    });
    delete options.inputs;
    datepickerPlugin.call($(this.inputs), options).on('changeDate', $.proxy(this.dateUpdated, this));
    this.pickers = $.map(this.inputs, function(i) {
      return $(i).data('datepicker');
    });
    this.updateDates();
  };
  DateRangePicker.prototype = {
    updateDates: function() {
      this.dates = $.map(this.pickers, function(i) {
        return i.getUTCDate();
      });
      this.updateRanges();
    },
    updateRanges: function() {
      var range = $.map(this.dates, function(d) {
        return d.valueOf();
      });
      $.each(this.pickers, function(i, p) {
        p.setRange(range);
      });
    },
    dateUpdated: function(e) {
      if (this.updating)
        return;
      this.updating = true;
      var dp = $(e.target).data('datepicker');
      if (typeof(dp) === "undefined") {
        return;
      }
      var new_date = dp.getUTCDate(),
          i = $.inArray(e.target, this.inputs),
          j = i - 1,
          k = i + 1,
          l = this.inputs.length;
      if (i === -1)
        return;
      $.each(this.pickers, function(i, p) {
        if (!p.getUTCDate())
          p.setUTCDate(new_date);
      });
      if (new_date < this.dates[j]) {
        while (j >= 0 && new_date < this.dates[j]) {
          this.pickers[j--].setUTCDate(new_date);
        }
      } else if (new_date > this.dates[k]) {
        while (k < l && new_date > this.dates[k]) {
          this.pickers[k++].setUTCDate(new_date);
        }
      }
      this.updateDates();
      delete this.updating;
    },
    remove: function() {
      $.map(this.pickers, function(p) {
        p.remove();
      });
      delete this.element.data().datepicker;
    }
  };
  function opts_from_el(el, prefix) {
    var data = $(el).data(),
        out = {},
        inkey,
        replace = new RegExp('^' + prefix.toLowerCase() + '([A-Z])');
    prefix = new RegExp('^' + prefix.toLowerCase());
    function re_lower(_, a) {
      return a.toLowerCase();
    }
    for (var key in data)
      if (prefix.test(key)) {
        inkey = key.replace(replace, re_lower);
        out[inkey] = data[key];
      }
    return out;
  }
  function opts_from_locale(lang) {
    var out = {};
    if (!dates[lang]) {
      lang = lang.split('-')[0];
      if (!dates[lang])
        return;
    }
    var d = dates[lang];
    $.each(locale_opts, function(i, k) {
      if (k in d)
        out[k] = d[k];
    });
    return out;
  }
  var old = $.fn.datepicker;
  var datepickerPlugin = function(option) {
    var args = Array.apply(null, arguments);
    args.shift();
    var internal_return;
    this.each(function() {
      var $this = $(this),
          data = $this.data('datepicker'),
          options = typeof option === 'object' && option;
      if (!data) {
        var elopts = opts_from_el(this, 'date'),
            xopts = $.extend({}, defaults, elopts, options),
            locopts = opts_from_locale(xopts.language),
            opts = $.extend({}, defaults, locopts, elopts, options);
        if ($this.hasClass('input-daterange') || opts.inputs) {
          var ropts = {inputs: opts.inputs || $this.find('input').toArray()};
          $this.data('datepicker', (data = new DateRangePicker(this, $.extend(opts, ropts))));
        } else {
          $this.data('datepicker', (data = new Datepicker(this, opts)));
        }
      }
      if (typeof option === 'string' && typeof data[option] === 'function') {
        internal_return = data[option].apply(data, args);
      }
    });
    if (internal_return === undefined || internal_return instanceof Datepicker || internal_return instanceof DateRangePicker)
      return this;
    if (this.length > 1)
      throw new Error('Using only allowed for the collection of a single element (' + option + ' function)');
    else
      return internal_return;
  };
  $.fn.datepicker = datepickerPlugin;
  var defaults = $.fn.datepicker.defaults = {
    autoclose: false,
    beforeShowDay: $.noop,
    beforeShowMonth: $.noop,
    beforeShowYear: $.noop,
    calendarWeeks: false,
    clearBtn: false,
    toggleActive: false,
    daysOfWeekDisabled: [],
    daysOfWeekHighlighted: [],
    datesDisabled: [],
    endDate: Infinity,
    forceParse: true,
    format: 'mm/dd/yyyy',
    keyboardNavigation: true,
    language: 'en',
    minViewMode: 0,
    maxViewMode: 2,
    multidate: false,
    multidateSeparator: ',',
    orientation: "auto",
    rtl: false,
    startDate: -Infinity,
    startView: 0,
    todayBtn: false,
    todayHighlight: false,
    weekStart: 0,
    disableTouchKeyboard: false,
    enableOnReadonly: true,
    container: 'body',
    immediateUpdates: false,
    title: ''
  };
  var locale_opts = $.fn.datepicker.locale_opts = ['format', 'rtl', 'weekStart'];
  $.fn.datepicker.Constructor = Datepicker;
  var dates = $.fn.datepicker.dates = {en: {
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      today: "Today",
      clear: "Clear",
      titleFormat: "MM yyyy"
    }};
  var DPGlobal = {
    modes: [{
      clsName: 'days',
      navFnc: 'Month',
      navStep: 1
    }, {
      clsName: 'months',
      navFnc: 'FullYear',
      navStep: 1
    }, {
      clsName: 'years',
      navFnc: 'FullYear',
      navStep: 10
    }],
    isLeapYear: function(year) {
      return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));
    },
    getDaysInMonth: function(year, month) {
      return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
    },
    validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
    nonpunctuation: /[^ -\/:-@\[\u3400-\u9fff-`{-~\t\n\r]+/g,
    parseFormat: function(format) {
      if (typeof format.toValue === 'function' && typeof format.toDisplay === 'function')
        return format;
      var separators = format.replace(this.validParts, '\0').split('\0'),
          parts = format.match(this.validParts);
      if (!separators || !separators.length || !parts || parts.length === 0) {
        throw new Error("Invalid date format.");
      }
      return {
        separators: separators,
        parts: parts
      };
    },
    parseDate: function(date, format, language) {
      if (!date)
        return undefined;
      if (date instanceof Date)
        return date;
      if (typeof format === 'string')
        format = DPGlobal.parseFormat(format);
      if (format.toValue)
        return format.toValue(date, format, language);
      var part_re = /([\-+]\d+)([dmwy])/,
          parts = date.match(/([\-+]\d+)([dmwy])/g),
          part,
          dir,
          i;
      if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/.test(date)) {
        date = new Date();
        for (i = 0; i < parts.length; i++) {
          part = part_re.exec(parts[i]);
          dir = parseInt(part[1]);
          switch (part[2]) {
            case 'd':
              date.setUTCDate(date.getUTCDate() + dir);
              break;
            case 'm':
              date = Datepicker.prototype.moveMonth.call(Datepicker.prototype, date, dir);
              break;
            case 'w':
              date.setUTCDate(date.getUTCDate() + dir * 7);
              break;
            case 'y':
              date = Datepicker.prototype.moveYear.call(Datepicker.prototype, date, dir);
              break;
          }
        }
        return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0);
      }
      parts = date && date.match(this.nonpunctuation) || [];
      date = new Date();
      var parsed = {},
          setters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],
          setters_map = {
            yyyy: function(d, v) {
              return d.setUTCFullYear(v);
            },
            yy: function(d, v) {
              return d.setUTCFullYear(2000 + v);
            },
            m: function(d, v) {
              if (isNaN(d))
                return d;
              v -= 1;
              while (v < 0)
                v += 12;
              v %= 12;
              d.setUTCMonth(v);
              while (d.getUTCMonth() !== v)
                d.setUTCDate(d.getUTCDate() - 1);
              return d;
            },
            d: function(d, v) {
              return d.setUTCDate(v);
            }
          },
          val,
          filtered;
      setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];
      setters_map['dd'] = setters_map['d'];
      date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);
      var fparts = format.parts.slice();
      if (parts.length !== fparts.length) {
        fparts = $(fparts).filter(function(i, p) {
          return $.inArray(p, setters_order) !== -1;
        }).toArray();
      }
      function match_part() {
        var m = this.slice(0, parts[i].length),
            p = parts[i].slice(0, m.length);
        return m.toLowerCase() === p.toLowerCase();
      }
      if (parts.length === fparts.length) {
        var cnt;
        for (i = 0, cnt = fparts.length; i < cnt; i++) {
          val = parseInt(parts[i], 10);
          part = fparts[i];
          if (isNaN(val)) {
            switch (part) {
              case 'MM':
                filtered = $(dates[language].months).filter(match_part);
                val = $.inArray(filtered[0], dates[language].months) + 1;
                break;
              case 'M':
                filtered = $(dates[language].monthsShort).filter(match_part);
                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
                break;
            }
          }
          parsed[part] = val;
        }
        var _date,
            s;
        for (i = 0; i < setters_order.length; i++) {
          s = setters_order[i];
          if (s in parsed && !isNaN(parsed[s])) {
            _date = new Date(date);
            setters_map[s](_date, parsed[s]);
            if (!isNaN(_date))
              date = _date;
          }
        }
      }
      return date;
    },
    formatDate: function(date, format, language) {
      if (!date)
        return '';
      if (typeof format === 'string')
        format = DPGlobal.parseFormat(format);
      if (format.toDisplay)
        return format.toDisplay(date, format, language);
      var val = {
        d: date.getUTCDate(),
        D: dates[language].daysShort[date.getUTCDay()],
        DD: dates[language].days[date.getUTCDay()],
        m: date.getUTCMonth() + 1,
        M: dates[language].monthsShort[date.getUTCMonth()],
        MM: dates[language].months[date.getUTCMonth()],
        yy: date.getUTCFullYear().toString().substring(2),
        yyyy: date.getUTCFullYear()
      };
      val.dd = (val.d < 10 ? '0' : '') + val.d;
      val.mm = (val.m < 10 ? '0' : '') + val.m;
      date = [];
      var seps = $.extend([], format.separators);
      for (var i = 0,
          cnt = format.parts.length; i <= cnt; i++) {
        if (seps.length)
          date.push(seps.shift());
        date.push(val[format.parts[i]]);
      }
      return date.join('');
    },
    headTemplate: '<thead>' + '<tr>' + '<th colspan="7" class="datepicker-title"></th>' + '</tr>' + '<tr>' + '<th class="prev">&#171;</th>' + '<th colspan="5" class="datepicker-switch"></th>' + '<th class="next">&#187;</th>' + '</tr>' + '</thead>',
    contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
    footTemplate: '<tfoot>' + '<tr>' + '<th colspan="7" class="today"></th>' + '</tr>' + '<tr>' + '<th colspan="7" class="clear"></th>' + '</tr>' + '</tfoot>'
  };
  DPGlobal.template = '<div class="datepicker">' + '<div class="datepicker-days">' + '<table class=" table-condensed">' + DPGlobal.headTemplate + '<tbody></tbody>' + DPGlobal.footTemplate + '</table>' + '</div>' + '<div class="datepicker-months">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + DPGlobal.footTemplate + '</table>' + '</div>' + '<div class="datepicker-years">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + DPGlobal.footTemplate + '</table>' + '</div>' + '</div>';
  $.fn.datepicker.DPGlobal = DPGlobal;
  $.fn.datepicker.noConflict = function() {
    $.fn.datepicker = old;
    return this;
  };
  $.fn.datepicker.version = '1.5.0';
  $(document).on('focus.datepicker.data-api click.datepicker.data-api', '[data-provide="datepicker"]', function(e) {
    var $this = $(this);
    if ($this.data('datepicker'))
      return;
    e.preventDefault();
    datepickerPlugin.call($this, 'show');
  });
  $(function() {
    datepickerPlugin.call($('[data-provide="datepicker-inline"]'));
  });
}));

})();
System.register('view-models/briefings/filters/briefing-filters.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js', 'commons/api.js', 'github:eternicode/bootstrap-datepicker@1.5.0/js/bootstrap-datepicker.js'], function (_export) {
  'use strict';

  var $, EventAggregator, inject, bindable, I18N, API, datepicker, BriefingFilters;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_jquery) {
      $ = _jquery['default'];
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_commonsApi) {
      API = _commonsApi.API;
    }, function (_eternicodeBootstrapDatepickerJsBootstrapDatepicker) {
      datepicker = _eternicodeBootstrapDatepickerJsBootstrapDatepicker.datepicker;
    }],
    execute: function () {
      BriefingFilters = function () {
        function BriefingFilters(ea, i18n, API) {
          _classCallCheck(this, _BriefingFilters);

          this.sd = "selectEndDate";
          this.filters = [];
          this.searchHash = {
            briefing_subjects: 'briefing_with_field',
            briefing_requesters: 'briefing_requestors_field',
            briefing_internal_invitees: 'briefing_internal_attendee_field',
            briefing_external_invitees: 'briefing_external_attendee_field',
            briefing_ids: 'briefing_ids_field',
            briefing_creators: 'briefing_creators_field',
            briefing_rooms: 'briefing_rooms_field'
          };
          this.eventPrefix = "briefing";
          this.subscriptions = [];

          this.ea = ea;
          this.api = API;
          this.i18n = i18n;
          this.i18n.setLocale('en').then(function () {});
          this.commonUrlSuffix = this.api.getBaseUrl() + ('/bc/' + window.envDetails.briefingCentreUuid + '/briefing/filter_options');
        }

        _createClass(BriefingFilters, [{
          key: 'processEntities',
          value: function processEntities(items) {
            if (items.data instanceof Array) {
              items.data = items.data.map(function (u) {
                return { id: u[0], text: u[1] };
              });
            }
            return items.data;
          }
        }, {
          key: 'attached',
          value: function attached() {
            var _this = this;

            var count = 0;
            var briefingStartEndDate = {};
            this.subscriptions[count++] = this.ea.subscribe(this.eventPrefix + '-render:filters', function (filters) {
              filters.forEach(function (filter) {
                if (!filter.dataSource.length) {
                  filter.min_input = 1;
                  if (_this.searchHash[filter.name]) filter['urlToGet'] = _this.commonUrlSuffix + '?' + $.param({ field: _this.searchHash[filter.name] });else filter['urlToGet'] = _this.commonUrlSuffix + '?' + $.param({ field: filter.name });
                }
                if (filter.name === 'briefing_end_date' || filter.name === 'briefing_start_date') {
                  var start = filter.name === 'briefing_start_date' ? 'start' : 'end';
                  filter['class'] = start;
                  filter['date_field'] = true;
                  if (filter.dataSource[0]['selected']) {
                    briefingStartEndDate[start] = filter.dataSource[0]['text'];
                  }
                }

                _this.filters.push(filter);
              });
              window.setTimeout(function () {
                _this.setStartEndDate(briefingStartEndDate);
                _this.ea.publish(_this.eventPrefix + '-filters:rendered', '.filter_panel');
              }, 1000);
            });
          }
        }, {
          key: 'updateDateRange',
          value: function updateDateRange(event) {
            var el = $(event.target);
            var value = el.val() ? el.val() : null;
            if (el.hasClass('end')) {
              $('.filter_panel').find('.date.start').datepicker("setEndDate", value);
            } else {
              $('.filter_panel').find('.date.end').datepicker("setStartDate", value);
            }
          }
        }, {
          key: 'setStartEndDate',
          value: function setStartEndDate(startEndDate) {
            var _this2 = this;

            var dateInit = {
              'autoclose': true,
              'orientation': 'auto',
              'format': 'yyyy-mm-dd',
              'disableTouchKeyboard': true
            };
            if (typeof jiffle != "undefined") {
              $.extend(dateInit, { 'container': $('#sf-jiffle-now') });
            }

            $('.filter_panel').find('.date').each(function (i, element) {
              var isStart = $(element).hasClass('start');
              var dateVal = startEndDate[isStart ? 'start' : 'end'];
              var appliedObj = $(element).datepicker(Object.assign(dateInit));

              appliedObj.on('changeDate', function (e) {
                _this2.updateDateRange(e);
              });

              if (dateVal) {
                appliedObj.datepicker("update", dateVal);
                window.setTimeout(function () {
                  appliedObj.trigger('changeDate');
                }, 200);
              }
            });
          }
        }, {
          key: 'detached',
          value: function detached() {
            this.subscriptions.forEach(function (sub) {
              sub.dispose();
            });
          }
        }]);

        var _BriefingFilters = BriefingFilters;
        BriefingFilters = inject(EventAggregator, I18N, API)(BriefingFilters) || BriefingFilters;
        return BriefingFilters;
      }();

      _export('BriefingFilters', BriefingFilters);
    }
  };
});
System.registerDynamic("view-models/briefings/history-view.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n<div class=\"page-pad-top\" id=\"history-tab\">\n  <div class=\"jn-p-meeting_history__header\">\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-6\">\n        <span class=\"font-semi-bold line-height-35 all_updates\" data-i18n=\"all_history_header\"></span>\n      </div>\n      <div class=\"col-md-4 col-sm-6 col-md-offset-2\">\n        <form autocomplete=\"off\">\n          <div class=\"form-group bottom-margin-0 jn-c-form-control--search-icon\">\n            <input type=\"text\" class=\"jn-c-form-control--search form-control history-search-box\" name=\"\" placeholder=\"Search\" autocomplete=\"off\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <div id=\"history-view\">\n  </div>\n  <div id=\"load_more\" class=\"load_more_history\">\n  </div>\n</div>\n</template>";
});
System.register('view-models/briefings/history-view.js', ['npm:aurelia-i18n@0.4.1.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
    'use strict';

    var I18N, EventAggregator, inject, bindable, customAttribute, HistoryView;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
            customAttribute = _aureliaFramework.customAttribute;
        }],
        execute: function () {
            HistoryView = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(HistoryView, [{
                    key: 'briefing',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function HistoryView(ea, i18n) {
                    _classCallCheck(this, _HistoryView);

                    _defineDecoratedPropertyDescriptor(this, 'briefing', _instanceInitializers);

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(HistoryView, [{
                    key: 'attached',
                    value: function attached() {
                        window.historyLoder({
                            fetchUrl: '/briefing/' + this.briefing.uuid + '/history',
                            perPage: 20
                        });
                    }
                }], null, _instanceInitializers);

                var _HistoryView = HistoryView;
                HistoryView = inject(EventAggregator, I18N)(HistoryView) || HistoryView;
                return HistoryView;
            }();

            _export('HistoryView', HistoryView);
        }
    };
});
System.registerDynamic("view-models/briefings/homelist.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"./card\"></require>\n    <require from=\"../../components/survey/survey-modal\"></require>\n    <require from=\"../../components/notification/notification-modal\"></require>\n    <require from=\"../../utils/converters\"></require>\n    <require from=\"components/reason-capture/reason-capture-modal\"></require>\n\n    <div ref=\"briefingList\" class=\"card-container x-scroll scroll-x meeting-list briefing-list tile-view\">\n        <div class=\"eventmeeting-emptystate\" if.bind=\"items.length == 0\">\n            <div class=\"eventmeeting-emptystate-section1\"></div>\n            <div class=\"eventmeeting-emptystate-section2\">\n                <div class=\"eventmeeting-emptystate-content\">\n                    <span i18n.bind=\"showEmptyState ? 'briefings.homelist.noBriefing': 'briefings.homelist.loading'\"></span>\n                    <span i18n=\"briefings.homelist.briefingAppearHere\"></span>\n                </div>\n            </div>\n        </div>\n        <card class=\"item\" repeat.for=\"briefingRequest of items\" perform-click-action=\"true\" card-type=\"home\" index.bind=\"$index\" request.bind=\"briefingRequest\" cancel-options.bind=\"cancelOptions\"></card>\n    </div>\n    <survey-modal></survey-modal>\n    <notification-modal></notification-modal>\n    <reason-capture-modal></reason-capture-modal>\n</template>\n";
});
System.register('view-models/briefings/homelist.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-templating-resources@1.0.0-beta.1.0.2.js', 'service/briefing_request_service.js', 'components/listing.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var EventAggregator, inject, bindable, BindingSignaler, BriefingRequestService, Listing, I18N, BriefingHomeList;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    var _get = function get(_x, _x2, _x3) {
        var _again = true;_function: while (_again) {
            var object = _x,
                property = _x2,
                receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
                var parent = Object.getPrototypeOf(object);if (parent === null) {
                    return undefined;
                } else {
                    _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
                }
            } else if ('value' in desc) {
                return desc.value;
            } else {
                var getter = desc.get;if (getter === undefined) {
                    return undefined;
                }return getter.call(receiver);
            }
        }
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    return {
        setters: [function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaTemplatingResources) {
            BindingSignaler = _aureliaTemplatingResources.BindingSignaler;
        }, function (_serviceBriefing_request_service) {
            BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
        }, function (_componentsListing) {
            Listing = _componentsListing.Listing;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            BriefingHomeList = function (_Listing) {
                _inherits(BriefingHomeList, _Listing);

                function BriefingHomeList(briefingRequestService, ea, bindingSignaler, i18n) {
                    _classCallCheck(this, _BriefingHomeList);

                    _get(Object.getPrototypeOf(_BriefingHomeList.prototype), 'constructor', this).call(this, ea);
                    this.showEmptyState = false;
                    this.i18n = i18n;
                    this.envDetails = envDetails;
                    this.viewStyle = this.gridViewStyleName;
                    this.i18n.setLocale('en').then(function () {});
                    this.briefingRequestService = briefingRequestService;
                    if (briefings_url) {
                        this.briefingRequestService.briefing_list_url = briefings_url;
                    }
                }

                _createClass(BriefingHomeList, [{
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        this.ea.subscribe("briefing:cancelled", function (index) {
                            _this.items.splice(index, 1);
                            if (_this.totalEntries > 0) {
                                _this.totalEntries--;
                            }
                        });
                    }
                }, {
                    key: 'attached',
                    value: function attached() {
                        var scrollOpts = {
                            domElement: this.briefingList,
                            direction: "horizontal",
                            offset: 200
                        };
                        _get(Object.getPrototypeOf(_BriefingHomeList.prototype), 'attached', this).call(this, scrollOpts);
                    }
                }, {
                    key: 'exportListing',
                    value: function exportListing() {
                        window.open(envDetails.urlPrefix + "/briefings/export?bc_uuid=" + envDetails.briefingCentreUuid, "download");
                    }
                }, {
                    key: 'fetchFromServer',
                    value: function fetchFromServer(params) {
                        var _this2 = this;

                        var filter = {
                            "briefing_status": ["Requested", "Pending", "Confirmed"],
                            "event_home_page": true
                        };
                        $.extend(true, params, filter);
                        this.briefingRequestService.getBreifingRequests(params).then(function (response) {
                            _this2.fetching = false;
                            _this2.showEmptyState = true;
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }

                            if (response.status == 200) {
                                _this2.updateBriefingRequests(response.data.briefing_requests);
                                _this2.totalEntries = response.data.total_entries || 0;
                                _this2.cancelOptions = response.data.cancel_options;

                                _this2.briefingRequestService.new_briefing_url = response.data.new_briefing;
                            }
                        })['catch'](function () {});
                    }
                }, {
                    key: 'updateBriefingRequests',
                    value: function updateBriefingRequests(requests) {
                        var _this3 = this;

                        requests.forEach(function (req) {
                            _this3.items.push(req);
                        });
                    }
                }]);

                var _BriefingHomeList = BriefingHomeList;
                BriefingHomeList = inject(BriefingRequestService, EventAggregator, BindingSignaler, I18N)(BriefingHomeList) || BriefingHomeList;
                return BriefingHomeList;
            }(Listing);

            _export('BriefingHomeList', BriefingHomeList);
        }
    };
});
System.registerDynamic("view-models/briefings/list.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <require from=\"./add-card\"></require>\n  <require from=\"./card\"></require>\n  <require from=\"components/survey/survey-modal\"></require>\n  <require from=\"components/notification/notification-modal\"></require>\n  <require from=\"components/page-nav\"></require>\n  <require from=\"components/bulk-action/bulk-action\"></require>\n\n  <page-nav search-text.bind=\"searchString\" items.bind=\"totalEntries\" enable-export.bind=\"envDetails.role=='MM' || envDetails.role=='CSM'\" enable-search.bind=\"true\" filter-view=\"view-models/briefings/filters/briefing-filters\" event-prefix=\"${eventPrefix}\" enable-filter=\"true\" show-filter-option=\"true\" containerless>\n  </page-nav>\n\n  <div class=\"page-pad-top bottom-margin-50\">\n    <div class=\"container-fluid listing-page\" id=\"briefing-list\">\n                \n      <div class=\"card-container briefing-list ${viewStyle} meeting-list\">\n\n          <add-card class=\"${$parent.itemStyle} au-stagger\" availability-label=\"Request Briefing\" footer-text=\"Lets you request briefing right from this page\" containerless></add-card>\n\n          <card class=\"${$parent.itemStyle} au-stagger\" perform-click-action=\"true\" card-type=\"listing\" repeat.for=\"briefingRequest of items\" request.bind=\"briefingRequest\" containerless></card>\n          \n      </div>\n    </div>\n  </div>\n    <survey-modal></survey-modal>\n    <notification-modal></notification-modal>\n    <bulk-action show.bind=\"showSurvey\" bulk-action-meeting.bind=\"false\" survey-links.bind=\"surveyLinks\" containerless></bulk-action>\n</template>\n";
});
System.register('view-models/briefings/list.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/briefing_request_service.js', 'components/listing.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
  'use strict';

  var EventAggregator, inject, bindable, BriefingRequestService, Listing, _, BriefingList;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_serviceBriefing_request_service) {
      BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
    }, function (_componentsListing) {
      Listing = _componentsListing.Listing;
    }, function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }],
    execute: function () {
      BriefingList = function (_Listing) {
        _inherits(BriefingList, _Listing);

        function BriefingList(briefingRequestService, ea) {
          _classCallCheck(this, _BriefingList);

          _get(Object.getPrototypeOf(_BriefingList.prototype), 'constructor', this).call(this, ea, "briefing");
          this.selectedBriefingCardList = [];
          this.filtersMetaInfo = [];
          this.filterDisplayTextHash = {};
          this.surveyLinks = [];
          this.showSurvey = false;
          this.envDetails = envDetails;
          this.viewStyle = this.gridViewStyleName;
          this.briefingRequestService = briefingRequestService;
          if (briefings_url) {
            this.briefingRequestService.briefing_list_url = briefings_url;
          }
        }

        _createClass(BriefingList, [{
          key: 'attached',
          value: function attached() {
            _get(Object.getPrototypeOf(_BriefingList.prototype), 'attached', this).call(this, { from: 'briefing_list' });
          }
        }, {
          key: 'exportListing',
          value: function exportListing() {
            var url = envDetails.urlPrefix + "/briefings/export?bc_uuid=" + envDetails.briefingCentreUuid;
            if (window.envDetails.current_location_uuid) {
              url += "&current_location_uuid=" + window.envDetails.current_location_uuid;
            }
            window.open(url, "download");
          }
        }, {
          key: 'fetchFiltersMetaData',
          value: function fetchFiltersMetaData() {
            var _this = this;

            this.briefingRequestService.getBriefingFilterMeta(window.envDetails.briefingCentreUuid, {}).then(function (response) {
              if (response.response) {
                response = JSON.parse(response.response);
              }
              _this.searchString = response.applied_search;
              var appliedFilterKeys = Object.keys(response.applied_filters);

              response.filters.forEach(function (filter) {
                var values = [];
                if (filter.value.length) {
                  filter.value.forEach(function (value) {
                    values.push({ id: value.value, text: value.display_label, selected: value.selected });
                  });
                }
                var filterToBePushed = {
                  min_input: 0,
                  dataSource: values,
                  name: filter.field_name,
                  display_name: filter.display_text,
                  placeholder: 'Search by ' + filter.display_text
                };
                if (values.length == 0) {
                  if (_.indexOf(appliedFilterKeys, filter.field_name) >= 0) {
                    var valuesToBePushed = [];
                    if (response.applied_filters[filter.field_name].length) {
                      response.applied_filters[filter.field_name].forEach(function (val) {
                        valuesToBePushed.push({ id: val.value, text: val.display_label, selected: val.selected });
                      });
                    }
                    filterToBePushed['defaults'] = valuesToBePushed;
                  }
                }
                _this.filtersMetaInfo.push(filterToBePushed);
                _this.filterDisplayTextHash[filter.field_name] = filter.display_text;
              });

              _.forEach(response.applied_filters, function (filterValue, key) {
                if (filterValue.length && typeof filterValue === 'object') {
                  filterValue.forEach(function (value) {
                    _this.filtersApplied.push({
                      type: key,
                      id: value.value,
                      name: value.display_label,
                      applied_filters_display_key: _this.filterDisplayTextHash[key]
                    });
                  });
                }
              });

              _this.ea.publish(_this.eventPrefix + '-render:filters', _this.filtersMetaInfo);
            });
          }
        }, {
          key: 'fetchFromServer',
          value: function fetchFromServer(params) {
            var _this2 = this;

            this.briefingRequestService.getBreifingRequests(params).then(function (response) {
              _this2.fetching = false;
              if (response.response) {
                response = JSON.parse(response.response);
              }
              if (response.status == 200) {
                _this2.updateBriefingRequests(response.data.briefing_requests);
                _this2.totalEntries = response.data.total_entries || 0;

                _this2.briefingRequestService.new_briefing_url = response.data.new_briefing;
                _this2.surveyLinks = response.data.survey_links;
                _this2.showSurvey = response.data.show_survey;
              }
              var defaultOpts = {
                domElement: window,
                direction: 'vertical',
                offset: 200
              };
              _this2.attachScrollToElement(defaultOpts);
            });
          }
        }, {
          key: 'updateBriefingRequests',
          value: function updateBriefingRequests(requests) {
            var _this3 = this;

            requests.forEach(function (req) {
              _this3.items.push(req);
            });
          }
        }, {
          key: 'getAppliedFilterSet',
          value: function getAppliedFilterSet(filterRef) {
            var _this4 = this;

            var filters = {};
            var storableFilterData = {};
            this.filtersApplied.splice(0, this.filtersApplied.length);
            $(filterRef).find('select').each(function (i, select) {
              var filterKey = $(select).attr('id');
              var filterValue = $(select).val() || [];
              filters[filterKey] = filterValue;
              var storableFilterValues = [];
              $(select).find('option:selected').each(function (idx, opt) {
                var option = $(opt);
                _this4.filtersApplied.push({
                  type: filterKey,
                  id: option.val(),
                  name: option.text(),
                  applied_filters_display_key: _this4.filterDisplayTextHash[filterKey]
                });
                storableFilterValues.push({ value: option.val(), display_label: option.text() });
              });
              storableFilterData[filterKey] = storableFilterValues;
            });

            $(filterRef).find('input.date').each(function (i, input) {
              var filterKey = $(input).attr('id');
              var filterValue = $(input).val();
              var storableFilterValues = [];
              if (filterValue) {
                filters[filterKey] = [filterValue];
                _this4.filtersApplied.push({
                  type: filterKey,
                  id: filterValue,
                  name: filterValue,
                  applied_filters_display_key: _this4.filterDisplayTextHash[filterKey]
                });
                storableFilterValues.push({ value: filterValue, display_label: filterValue });
              }
              storableFilterData[filterKey] = storableFilterValues;
            });

            filters.storable_filters = JSON.stringify(storableFilterData);
            return filters;
          }
        }, {
          key: 'removeFilter',
          value: function removeFilter(filter) {
            var element = $('#' + filter.type);
            if (element.is('input')) {
              if (filter.type == 'briefing_start_date' || filter.type == 'briefing_end_date') {
                element.datepicker("setDate", null);
              } else {
                element.val("");
              }
            } else {
              element.find('option[value="' + filter.id + '"]').prop('selected', false);
            }

            this.filters[filter.type].splice(this.filters[filter.type].indexOf(filter.id), 1);
            var storableFilters = JSON.parse(this.filters.storable_filters);
            var storedValues = storableFilters[filter.type];
            _.remove(storedValues, function (stotedValue) {
              return stotedValue.value === filter.id;
            });
            this.filters.storable_filters = JSON.stringify(storableFilters);
            _.remove(this.filtersApplied, function (filterToken) {
              return filterToken.id === filter.id && filterToken.type === filter.type;
            });
            element.trigger('change');
          }
        }, {
          key: 'removeSelectedFilters',
          value: function removeSelectedFilters(filterRef) {
            $(filterRef).find('select').each(function (i, select) {
              $(select).find('option:selected').each(function (idx, opt) {
                $(opt).prop('selected', false);
              }).trigger('change');
            });

            $(filterRef).find('.date').datepicker("setDate", null);
          }
        }, {
          key: 'detached',
          value: function detached() {
            _get(Object.getPrototypeOf(_BriefingList.prototype), 'detached', this).call(this);
            this.allSubscribes.forEach(function (sub) {
              sub.dispose();
            });
          }
        }]);

        var _BriefingList = BriefingList;
        BriefingList = inject(BriefingRequestService, EventAggregator)(BriefingList) || BriefingList;
        return BriefingList;
      }(Listing);

      _export('BriefingList', BriefingList);
    }
  };
});
System.registerDynamic("view-models/briefings/list_agenda.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n     <require from=\"components/briefing-agenda/attendee\"></require>\n     <require from=\"components/briefing-agenda/concierge-service\"></require>\n     <require from=\"components/briefing-agenda/concierge-modal\"></require>\n     <require from=\"components/briefing-agenda/requested-meeting\"></require>\n     <require from=\"components/briefing-agenda/draft-plan\"></require>\n     <require from=\"utils/converters\"></require>\n     <require from=\"components/dhtmlx-calendar\"></require>\n     <require from=\"./meeting-card\"></require>\n     <require from=\"./listagenda-footer\"></require>\n     <require from=\"components/notification/notification-modal\"></require>\n     <require from=\"components/reason-capture/reason-capture-modal\"></require>\n     <require from=\"components/survey/survey-modal\"></require>\n     <require from=\"components/bulk-action/bulk-action\"></require>\n      <require from=\"./history-view\"></require>\n\n     <nav class=\"navbar navbar-light\">\n          <div class=\"container-fluid padding-left-right-55\">\n             <ul class=\"pull-left subnav-block col-xs-12 no-padding\">\n                <li class=\"no-padding no-margin\">\n                    <div class=\"pull-left briefing-status\" title=\"${briefingRequest.status}\">\n                        <div class=\"${statusStyle[briefingRequest.status]}\"></div>\n                    </div>\n                </li>\n                 <li class=\"subnav-header subnav-border text-uppercase\">REQUEST - ${briefingRequest.id}</li>\n                 <li class=\"subnav-border briefing-title-detail\">\n                     For <span class=\"font-blue\">${briefingRequest.briefingWith}</span>\n                 </li>\n                 <li class=\"subnav-border font-blue\">\n                     <!-- <div>${briefingRequest.startDate} to ${briefingRequest.endDate}</div> -->\n                     <div class=\"font-semi-bold\">\n                         ${dateValueConverter.toMediumDate(briefingRequest.startDate)}\n                         ${timeValueConverter.toView(briefingRequest.startDate)}\n                         to\n                         ${dateValueConverter.toMediumDate(briefingRequest.endDate)}\n                         ${timeValueConverter.toView(briefingRequest.endDate)}\n                     </div>\n                     <!-- <div>${briefingRequest.startDate | dateTime} to ${briefingRequest.endDate | dateTime}</div> -->\n                 </li>\n                 <li if.bind=\"originalData.actions.briefing_update_url && briefingRequest.status!='Cancelled'\" class=\"icon-box no-padding\">\n                     <a href=\"javascript:void(0)\" click.delegate=\"edit_briefing()\" class=\"jif-blue\" if.bind=\"!showAssignButton\">\n                         <i class=\"jif-pencil jif-18\"></i>\n                         <div class=\"font-10\" i18n=\"briefings.listAgenda.edit\"></div>\n                     </a>\n                     <a href=\"javascript:void(0)\" click.delegate=\"edit_briefing()\" class=\"jif-blue\" if.bind=\"showAssignButton\">\n                         <i class=\"jif-assign jif-18\"></i>\n                         <div class=\"font-10\" i18n=\"briefings.commons.assignToBm\"></div>\n                     </a>\n                 </li>\n                 <li class=\"icon-box pull-right no-padding dropdown\" if.bind=showMoreActions(originalData.actions)>\n                    <a href=\"javascript:void(0)\" ref=\"briefingDrop\" data-toggle=\"dropdown\" class=\"cursor-pointer dropdown-toggle jif-blue\">\n                        <i class=\"jif-export jif-18\"></i>\n                        <div class=\"font-10\" i18n=\"briefings.commons.export\">Export</div>\n                    </a>\n                    <ul class=\"dropdown-menu font-12 briefing-dropdown\">\n                        <li if.bind=\"originalData.actions.download_briefing_report_all_url\">\n                            <a href=\"javascript:void(0)\" click.delegate=\"downloadReport($event, originalData.actions.download_briefing_report_all_url)\">\n                                <label i18n=\"briefings.briefingNav.all_attendees\"></label>\n                            </a>\n                        </li>\n                        <li if.bind=\"originalData.actions.download_briefing_report_internal_url\">\n                            <a href=\"javascript:void(0)\" click.delegate=\"downloadReport($event, originalData.actions.download_briefing_report_internal_url)\">\n                                <label i18n=\"briefings.briefingNav.all_internal_attendees\"></label>\n                            </a>\n                        </li>\n                        <li if.bind=\"originalData.actions.download_briefing_report_external_url\">\n                            <a href=\"javascript:void(0)\" click.delegate=\"downloadReport($event, originalData.actions.download_briefing_report_external_url)\">\n                                <label i18n=\"briefings.briefingNav.all_external_attendees\"></label>\n                            </a>\n                        </li>\n                        <li if.bind=\"originalData.actions.briefing_export_report_url\">\n                            <a href=\"javascript:void(0)\" click.delegate=\"downloadReport($event, originalData.actions.briefing_export_report_url)\">\n                                <label i18n=\"briefings.briefingNav.briefing_report\"></label>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n                 <li class=\"icon-box pull-right no-padding\" if.bind=\"!isSFDC && originalData.actions.briefing_confirm_url && isAdmin() && briefingRequest.status!='Confirmed' && briefingRequest.status!='Past'\">\n                     <a href=\"javascript:void(0)\" click.delegate=\"confirm()\" class=\"jif-blue\">\n                         <i class=\"jif-check jif-18\"></i>\n                         <div class=\"font-10\" i18n=\"briefings.commons.confirm\"></div>\n                     </a>\n                 </li>\n                 <li class=\"icon-box pull-right no-padding\" if.bind=\"originalData.actions.accept_url && acceptedStatus!='Accepted' && declinedStatus!='Declined'\">\n                     <a href=\"javascript:void(0)\" click.delegate=\"acceptBriefing()\" class=\"jif-blue\">\n                         <i class=\"jif-check jif-18\"></i>\n                         <div class=\"font-10\" i18n=\"briefings.commons.accept\"></div>\n                     </a>\n                 </li>\n                 <li class=\"icon-box pull-right no-padding\" if.bind=\"originalData.actions.decline_url && declinedStatus!='Declined'\">\n                     <a href=\"javascript:void(0)\" click.delegate=\"declineBriefing()\" class=\"jif-red\">\n                         <i class=\"jif-close jif-18\"></i>\n                         <div class=\"font-10\" i18n=\"briefings.commons.decline\"></div>\n                     </a>\n                 </li>\n                 <li class=\"icon-box pull-right no-padding\" if.bind=\"briefingRequest.status!='Cancelled' && originalData.actions.briefing_delete_url\">\n                     <a href=\"javascript:void(0)\" click.delegate=\"deleteMe()\" class=\"jif-red\">\n                         <i class=\"jif-trash jif-18\"></i>\n                         <div class=\"font-10\" i18n=\"briefings.commons.cancel\"></div>\n                     </a>\n                 </li>\n                 <li if.bind=\"showSurveyIconForSfdc() && showActionSurveyLink && declinedStatus!='Declined'\" class=\"icon-box pull-right no-padding\">\n                    <a href=\"javascript:void(0)\" click.delegate=\"agendaSurveyClickAction($event)\" class=\"jif-blue\">\n                        <i class=\"jif-survey jif-18\"></i>\n                        <div class=\"font-10\">Survey</div>\n                    </a>\n                </li>\n             </ul>\n          </div>\n     </nav>\n\n    <div class=\"container-fluid page-pad-top briefing-agenda-container\">\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-md-4\">\n\n                <div class=\"briefing-agenda-block\">\n                    <div class=\"briefing-agenda-block-title text-uppercase clearfix\">\n                        <span>${meetings.length}</span>\n                        <span i18n=\"briefings.listAgenda.requestedActivities\"></span>\n                        <a href=\"javascript:void(0)\" if.bind=\"originalData.is_draft_enabled && briefingRequest.status!='Cancelled'\">\n                            <div class=\"col-xs-2 icon-box jif-blue pull-right\" style=\"white-space: nowrap;\" click.delegate=\"planAll()\">\n                                <i class=\"jif-plus-circle jif-20\" if.bind=\"briefingRequest.status!='Cancelled' && actionName == 'Plan'\"></i>\n                                <i class=\"jif-minus-circle-o jif-20\" if.bind=\"briefingRequest.status!='Cancelled' && actionName == 'Remove'\"></i>\n                                <div class=\"font-8 text-capitalize\" show.bind=\"actionName\">${actionName} all</div>\n                            </div>\n                        </a>\n                    </div>\n                    <div class=\"briefing-activity-inner-container scroll-y\">\n                        <requested-meeting repeat.for=\"meeting of meetings\" briefing-request.bind=\"$parent.briefingRequest\" meeting.bind=\"meeting\" is-draft-enabled.bind=\"originalData.is_draft_enabled\" order.bind=\"$index\"></requested-meeting>\n                    </div>\n                </div>\n\n                <div class=\"briefing-agenda-block\">\n                    <div class=\"briefing-agenda-block-title text-uppercase\" i18n=\"[append]briefings.listAgenda.selectedExternalAttendee\">\n                        <span>${externalAttendees.length}</span>&nbsp;\n                    </div>\n                    <div class=\"briefing-activity-inner-container scroll-y\" ref=\"externalAttendeeContainer\">\n                        <attendee containerless repeat.for=\"attendee of externalAttendees\" attendee.bind=\"attendee\" briefing.bind=\"briefingRequest\" attendee-type=\"external\" invite-options.bind=\"inviteOptions\">${attendee}</attendee>\n                    </div>\n                </div>\n\n                <div if.bind=\"internalAttendees.length > 0 && envDetails.briefingInternalAttendeeEnabled\">\n                    <div class=\"briefing-agenda-block\">\n                        <div class=\"briefing-agenda-block-title text-uppercase\" i18n=\"[append]briefings.listAgenda.selectedInternalAttendee\">\n                            <span>${internalAttendees.length}</span>&nbsp;\n                        </div>\n                        <div class=\"briefing-activity-inner-container scroll-y\" ref=\"internalAttendeeContainer\">\n                            <attendee containerless repeat.for=\"attendee of internalAttendees\" attendee.bind=\"attendee\" briefing.bind=\"briefingRequest\" attendee-type=\"internal\" invite-options.bind=\"inviteOptions\"></attendee>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"briefing-agenda-block preferred-attendee\">\n                    <div class=\"briefing-agenda-block-title text-uppercase\" i18n=\"[append]briefings.listAgenda.preferredInternalAttendee\">\n                        <span>${preferred_internal_attendees.length}</span>&nbsp;\n                    </div>\n                    <div class=\"briefing-activity-inner-container scroll-y\">\n                        <attendee containerless repeat.for=\"attendee of preferred_internal_attendees\" attendee.bind=\"attendee\" briefing.bind=\"briefingRequest\" attendee-type=\"preferred\"></attendee>\n                    </div>\n                </div>\n\n                <div if.bind=\"conciergeServices.length > 0 && conciergeCount > 0\">\n                    <div class=\"briefing-agenda-block\">\n                        <div class=\"briefing-agenda-block-title text-uppercase\" i18n=\"[append]briefings.listAgenda.conciergeServicesRequested\">\n                            <span>${conciergeCount}</span>&nbsp;\n                        </div>\n                        <div class=\"briefing-activity-inner-container scroll-y\">\n                            <concierge-service repeat.for=\"conciergeService of conciergeServices\" service.bind=\"conciergeService\" service-requests.bind=\"conciergeService.concierge_requests\" briefing-status.bind=\"briefingRequest.status\"></concierge-service>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-xs-12 col-md-8 bottom-margin-15\" ref=\"meetingView\">\n\n                <ul class=\"jn-c-tabs meeting-detail-tabs\" role=\"tablist\">\n                  <li role=\"presentation\" class=\"active\" click.trigger=\"updateCalendar()\">\n                    <a href=\"#breifing-info\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"true\">BRIEFING INFO</a>\n                  </li>\n                  <li role=\"presentation\" if.bind=\"canViewBriefingHistory\">\n                    <a href=\"#history-list\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"true\">HISTORY</a>\n                  </li>\n                </ul>\n\n                <div class=\"tab-content jn-c-tab-content\">\n                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"breifing-info\">\n                        <div class=\"row\">\n                            <div class=\"meeting-requestor-info\">\n                                <div class=\"pull-left\">\n                                    <span class=\"text-uppercase\" i18n=\"briefings.listAgenda.briefingAgenda\"></span>\n                                    <span class=\"font-blue\">${briefingRequest.requestor.name}</span>\n                                </div>\n                                <ul class=\"toggle-menu-list list-unstlyed list-inline pull-right\" data-toggle-store=\"meeting-list\">\n                                    <li class=\"pull-left\" if.bind=\"items.length\">\n                                      <a href=\"#\" class=\"font-blue toggle-btn ${view === 'tile' ? 'active' : ''}\" id='icon-grid-view' data-switch-type=\"grid\" click.trigger=\"gridView()\">\n                                        <div class=\"icon-holder\">\n                                          <i class=\"jif-tile jif-12\"></i>\n                                        </div>\n                                        <label i18n=\"components.listGridToggle.tileView\" class=\"font-blue\"></label>\n                                      </a>\n                                    </li>\n                                    <li class=\"pull-left hidden-xs\" if.bind=\"items.length\">\n                                      <a href=\"#\" class=\"font-blue toggle-btn ${view === 'list' ? 'active' : ''}\" id='icon-list-view' data-switch-type=\"list\" click.trigger=\"listView()\">\n                                        <div class=\"icon-holder\">\n                                          <i class=\"jif-list jif-12\"></i>\n                                        </div>\n                                        <label class=\"font-blue\" i18n=\"briefings.listAgenda.list\"></label>\n                                      </a>\n                                    </li>\n                                    <li class=\"pull-right\">\n                                      <a href=\"#\" class=\"font-blue toggle-btn ${view === 'calendar' ? 'active' : ''}\" id='icon-list-view' data-switch-type=\"calendar\" click.trigger=\"calendarView()\">\n                                        <div class=\"icon-holder\">\n                                          <i class=\"jif-calendar-month jif-12\"></i>\n                                        </div>\n                                        <label class=\"font-blue\" i18n=\"briefings.listAgenda.cal\"></label>\n                                      </a>\n                                    </li>\n                                </ul>\n                                <ul class=\"list-unstlyed list-inline pull-right margin-top-4 bottom-margin-0\">\n                                    <li if.bind=\"showRequestorSurveyLink == true\" class=\"icon-box pull-right no-padding\">\n                                        <a href=\"javascript:void(0)\" click.delegate=\"agendaSurveyClickAction($event, true)\" class=\"jif-blue\">\n                                            <i class=\"jif-survey jif-18\"></i>\n                                            <div class=\"font-8\">Survey</div>\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <draft-plan if.bind=\"originalData.is_draft_enabled && renderDraftPlanCalendar\" briefing-details.bind=\"originalData\" agenda-plan-data.bind=\"draftAgendaPlans\" meetings.bind=\"items\" long-day.bind=\"longDay\" room-availability.bind=\"roomAvailabilities\" minimum-duration.bind=\"minimumDuration\" activities.bind=\"meetings\" view.bind=\"view\"></draft-plan>\n                        <div class=\"card-container meeting-list ${view=='tile' ? 'tile-view' : 'list-view'} briefingagenda-card-container\" if.bind=\"view=='tile' || view=='list'\" id=\"briefing-list\">\n                            <meeting-card class=\"au-stagger briefing-meeting-card no-padding\"  repeat.for=\"agenda of items\" request.bind=\"agenda\" briefing.bind=\"briefingRequest\" containerless></meeting-card>  \n                        </div>\n                        <bulk-action if.bind=\"showSurvey\" bulk-action-meeting.bind=\"true\" survey-links.bind=\"surveyLinks\"></bulk-action>\n                        <div if.bind=\"!originalData.is_draft_enabled\">\n                            <div class=\"ebc-agenda-calendar\" if.bind=\"view=='calendar'\">\n                                <dhtmlx-calendar calid.bind=\"'dcal'\" dwidth.bind=\"'100%'\" dheight.bind=\"'375px'\" xy.bind=\"calendarXY\" conf.bind=\"calendarConfig\"\n                                display-event.bind=\"event\" display-data.bind=\"calendarData\" minimum-duration.bind=\"minimumDuration\" long-day.bind=\"longDay\" availables.bind=\"roomAvailabilities\" mode.bind=\"'week'\" draft-enabled.bind=\"false\"></dhtmlx-calendar>\n                            </div>\n                        </div>\n                    </div>\n                    <div role=\"tabpanel\" class=\"tab-pane\" id=\"history-list\" if.bind=\"canViewBriefingHistory\">\n                        <div class=\"\">\n                            <history-view briefing.bind=\"briefingRequest\" class=\"briefing-history-tab\"></history-view>\n                        </div>\n                    </div>\n                </div>\n\n                \n            </div>\n        </div>\n    </div>\n\n    <concierge-modal></concierge-modal>\n    <survey-modal></survey-modal>\n    <notification-modal></notification-modal>\n    <reason-capture-modal></reason-capture-modal>\n</template>\n";
});
System.register('models/briefing_request.js', ['npm:jquery@2.2.4.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
  'use strict';

  var $, _, BriefingRequestModel;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_jquery) {
      $ = _jquery['default'];
    }, function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }],
    execute: function () {
      BriefingRequestModel = function () {
        function BriefingRequestModel() {
          _classCallCheck(this, BriefingRequestModel);

          this.customFields = { custom_fields: {} };
          this.briefingWith = '';
          this.startDate = '';
          this.endDate = '';
          this.customInfo = '';
          this.preferred_internal_attendees = '';
          this.internalAttendees = [];
          this.externalAttendees = [];
          this.uuid = '';
          this.startTime = '';
          this.endTime = '';
          this.id = '';
          this.status = '';
          this.requestor = { uuid: '', name: '' };
          this.creator = { uuid: '', name: '' };
          this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
        }

        _createClass(BriefingRequestModel, [{
          key: 'setupData',
          value: function setupData(briefingRequest) {
            this.customFields.custom_fields = briefingRequest.custom_fields;
            this.briefingWith = briefingRequest.briefing_info.briefing_with;
            this.customInfo = briefingRequest.briefing_info.custom_info;
            this.preferred_internal_attendees = briefingRequest.briefing_info.preferred_internal_attendees;
            this.startDate = new Date(briefingRequest.start_time);
            this.endDate = new Date(briefingRequest.end_time);
            this.uuid = briefingRequest.uuid;
            this.id = briefingRequest.id;
            this.status = briefingRequest.status;
            if (briefingRequest.requestor) {
              this.requestor.uuid = briefingRequest.requestor.uuid;
              this.requestor.name = briefingRequest.requestor.first_name + " " + briefingRequest.requestor.last_name;
            }
            if (briefingRequest.creator) {
              this.creator.uuid = briefingRequest.creator.uuid;
              this.creator.name = briefingRequest.creator.first_name + " " + briefingRequest.creator.last_name;
            }

            this.internalAttendees = _.map(briefingRequest.internal_attendees, function (attendee) {
              attendee['selected'] = true;
              return attendee;
            });

            this.externalAttendees = _.map(briefingRequest.external_attendee, function (attendee) {
              attendee['selected'] = true;
              return attendee;
            });
          }
        }, {
          key: 'getCustomFields',
          value: function getCustomFields() {
            return this.customFields;
          }
        }, {
          key: 'getConciergeServerModel',
          value: function getConciergeServerModel(services) {
            var ConciergeServices = [];
            services.forEach(function (service) {
              ConciergeServices.push(service.getServerModelObject());
            });

            return ConciergeServices;
          }
        }, {
          key: 'getUserMetaInfo',
          value: function getUserMetaInfo(users) {
            var _this = this;

            var metaInfo = {};
            users.forEach(function (user) {
              metaInfo[user.uuid] = {
                meta_info: _this.isSFDC && user.Id ? {
                  sfdc_contact_id: user.Id
                } : {}
              };
            });
            return metaInfo;
          }
        }, {
          key: 'getServerModelObject',
          value: function getServerModelObject(conciergeServices) {

            return {
              briefing_with: this.briefingWith,
              start_date: $('.start.date').val(),
              end_date: $('.end.date').val(),
              start_time: $('.start.time').val(),
              end_time: $('.end.time').val(),
              room_uuid: $('select#roombox').val(),
              custom_info: this.customInfo,
              requestor: this.requestor,
              internal_attendees: _.pluck(this.internalAttendees, 'uuid'),
              preferred_internal_attendees: this.preferred_internal_attendees,
              external_attendees: _.pluck(this.externalAttendees, 'uuid'),
              concierge_services: this.getConciergeServerModel(conciergeServices),
              user_preferences: this.getUserMetaInfo(this.externalAttendees)
            };
          }
        }]);

        return BriefingRequestModel;
      }();

      _export('BriefingRequestModel', BriefingRequestModel);
    }
  };
});
System.register('components/dhtmlx-calendar.js', ['npm:jquery@2.2.4.js', 'github:lodash/lodash@3.10.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var $, _, bindable, inject, EventAggregator, I18N, DhtmlxCalendar;

    var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }return target;
    };

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_jquery) {
            $ = _jquery['default'];
        }, function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }, function (_aureliaFramework) {
            bindable = _aureliaFramework.bindable;
            inject = _aureliaFramework.inject;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            DhtmlxCalendar = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(DhtmlxCalendar, [{
                    key: 'dwidth',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'dheight',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'calid',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'mode',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'conf',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'xy',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'displayEvent',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'displayData',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'longDay',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'availables',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'scheduler',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'minimumDuration',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'draftEnabled',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }], null, _instanceInitializers);

                function DhtmlxCalendar(ea, i18n) {
                    _classCallCheck(this, _DhtmlxCalendar);

                    _defineDecoratedPropertyDescriptor(this, 'dwidth', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'dheight', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'calid', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'mode', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'conf', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'xy', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'displayEvent', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'displayData', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'longDay', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'availables', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'scheduler', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'minimumDuration', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'draftEnabled', _instanceInitializers);

                    this.activePlanTabScheduler = {};
                    this.subscriptions = [];
                    this.showTooltip = true;

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(DhtmlxCalendar, [{
                    key: 'attached',
                    value: function attached() {
                        var _this = this;

                        this.scheduler = Scheduler.getSchedulerInstance(this.calid);

                        $(this.cal).css({ width: this.dwidth, height: this.dheight });
                        $("#" + this.calid).data("scheduler", this.scheduler);
                        initI18n(enLocale['user_master_calendar']);
                        Handlebars.registerHelper("add", function () {
                            var total = _.sum(arguments);
                            return new Handlebars.SafeString(total);
                        });
                        this.scheduler.clearAll();
                        this.subscribeToEvents();
                        setTimeout(function () {
                            if (_this.displayEvent.startDate && _this.displayEvent.endDate) {
                                _this.startDate = _this.scheduler.date.date_part(moment(_this.displayEvent.startDate.split('T')[0])._d);
                                _this.endDate = _this.scheduler.date.date_part(moment(_this.displayEvent.endDate.split('T')[0])._d);
                            }
                            if (_this.conf) {
                                $.extend(_this.scheduler.config, _this.conf);
                                if (_this.startDate && _this.endDate) {
                                    _this.scheduler.config.limit_start = _this.scheduler.date.add(_this.startDate, -1, 'day');
                                    _this.scheduler.config.limit_end = _this.scheduler.date.add(_this.endDate, 1, 'day');
                                }
                            }
                            if (_this.xy) {
                                $.extend(_this.scheduler.xy, _this.xy);
                            }
                            _this.scheduler.config.collision_limit = 20;
                            _this.scheduler.config.time_step = _this.minimumDuration;
                            _this.setupSchedulerTemplates();
                            _this.setWeekStart(_this.startDate, _this.endDate);
                            var displayDate = _this.displayEvent.startDate ? _this.displayEvent.startDate : new Date();
                            _this.scheduler.init(_this.calid, displayDate);
                            _this.scheduler.parse(_this.displayData, 'json');
                            _this.setupSchedulerListeners();
                            _this.setupBlocking();

                            $(window).add('.dhx_cal_data').on('scroll', _this.scrollHandler);
                        }, 250);
                    }
                }, {
                    key: 'scrollHandler',
                    value: function scrollHandler(event) {
                        var tooltip = $('.dhtmlXTooltip.tooltip');
                        tooltip.length && tooltip.remove();
                    }
                }, {
                    key: 'updateCalendarView',
                    value: function updateCalendarView() {
                        this.scheduler.update_view();
                        setTimeout(function () {
                            $('.dhx_marked_timespan').on('dblclick', function (e) {
                                e.preventDefault();
                                e.stopPropagation();
                                e.stopImmediatePropagation();
                            });
                        }, 369);
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this2 = this;

                        var count = 0;
                        this.subscriptions[count++] = this.ea.subscribe('change:config', function (config) {
                            Object.assign(_this2.scheduler.config, config);
                        });

                        this.subscriptions[count++] = this.ea.subscribe('update:dataChange', function () {
                            setTimeout(function () {
                                return _this2.updateCalendarView();
                            }, 369);
                        });

                        this.subscriptions[count++] = this.ea.subscribe('draft-plan:tabchange', function (params) {
                            if (params.tab_id === _this2.calid) {
                                _this2.updateCalendarView();
                                _this2.activePlanTabScheduler = _this2.scheduler;
                                _this2.showTooltip = !params.plan || params.plan.status !== 'Declined';
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('trigger-plan-activity:selected', function (params) {
                            if (_this2.calid == params.tab_id) {
                                var availabilities = Object.values(_this2.availables);
                                var scheduler = _this2.activePlanTabScheduler;
                                var addedEvents = scheduler.getEvents();
                                var startEndDate = _this2.getNextAvailableEventSlot({ addedEvents: addedEvents, timeSlot: params.minimumTime });

                                scheduler.config.scroll_hour = moment(startEndDate.start_date, 'DD-MM-YYYY HH:mm').hours();
                                scheduler.addEvent({
                                    slot_uuid: '',
                                    text: params.activity_name,
                                    end_date: startEndDate.end_date,
                                    start_date: startEndDate.start_date,
                                    customOrder: startEndDate.customOrder,
                                    activity_agenda_id: params.activity_id,
                                    order: addedEvents.length,
                                    maximumTime: params.maximumTime,
                                    minimumTime: params.minimumTime
                                });

                                _this2.updateCalendarView();
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('calender:acitivity:remove', function (removable) {
                            if (_this2.calid == removable.tab_id) {
                                var evs = _this2.scheduler.getEvents();
                                if (evs.length > 0) {
                                    var removeEvent = _.find(evs, function (ev) {
                                        return ev.activity_agenda_id == removable.removed_id || ev.meetingId == removable.removed_id;
                                    });
                                    if (removeEvent) {
                                        var toRemoveId = removeEvent.id;
                                        _this2.scheduler.deleteEvent(toRemoveId);
                                    }
                                }
                            }
                        });
                    }
                }, {
                    key: 'getNextAvailableEventSlot',
                    value: function getNextAvailableEventSlot(_ref) {
                        var _this3 = this;

                        var addedEvents = _ref.addedEvents;
                        var _ref$timeSlot = _ref.timeSlot;
                        var timeSlot = _ref$timeSlot === undefined ? 30 : _ref$timeSlot;

                        var format = 'DD-MM-YYYY HH:mm';
                        var dateFormat = 'YYYY-MM-DD';
                        var firstDateAvailability = Object.keys(this.availables)[0];

                        var initHour = this.availables[firstDateAvailability][0] / 60;
                        var firstSlotMomentObj = moment(firstDateAvailability).add(initHour, 'h');
                        var firstAvailability = {
                            start_date: firstSlotMomentObj.format(format),
                            end_date: firstSlotMomentObj.add(timeSlot, 'm').format(format)
                        };

                        if (!addedEvents.length) {
                            return _extends({}, firstAvailability, { customOrder: 1 });
                        }

                        var prevTime = firstAvailability.start_date;
                        var slotDetails = { start_date: '', end_date: '' };
                        var customOrderArrLength = Math.max.apply(Math, addedEvents.map(function (addedEvent) {
                            return addedEvent.customOrder;
                        }));
                        var slotFound = false;

                        var _loop = function (i) {
                            if (slotFound) {
                                return 'break';
                            }

                            var filteredEvents = addedEvents.filter(function (addEvent) {
                                return addEvent.customOrder === i;
                            }).sort(function (a, b) {
                                return new Date(a.start_date) - new Date(b.start_date);
                            });

                            filteredEvents.map(function (filteredEvent, index) {
                                slotDetails.customOrder = filteredEvent.customOrder;
                                if (moment.duration(moment(moment(filteredEvent.start_date).format(format), format).diff(moment(prevTime, format))).asMinutes() >= timeSlot) {
                                    slotDetails.start_date = prevTime;
                                    slotDetails.end_date = moment(prevTime, format).add(timeSlot, 'm')._d;
                                    slotFound = true;

                                    return false;
                                } else {
                                    prevTime = moment(filteredEvent.end_date).format(format);

                                    if (index === filteredEvents.length - 1) {
                                        slotDetails.start_date = filteredEvent.end_date;
                                        slotDetails.end_date = moment(filteredEvent.end_date).add(timeSlot, 'm');

                                        var currentDay = moment(slotDetails.end_date).format(dateFormat);
                                        var lastAvailableHour = _this3.availables[currentDay] || [];
                                        lastAvailableHour = lastAvailableHour[1] / 60;

                                        if (!isNaN(lastAvailableHour)) {
                                            var nextAvailableSlotEndDate = moment(currentDay).add(lastAvailableHour, 'h');

                                            if (!slotDetails.end_date.isAfter(nextAvailableSlotEndDate)) {
                                                slotDetails.end_date = slotDetails.end_date._d;
                                                slotFound = true;
                                            }
                                        }
                                    }
                                }
                            });
                        };

                        for (var i = 1; i <= customOrderArrLength; i++) {
                            var _ret = _loop(i);

                            if (_ret === 'break') break;
                        }

                        if (!slotFound) {
                            return _extends({}, firstAvailability, { customOrder: customOrderArrLength + 1 });
                        }

                        return slotDetails;
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        this.subscriptions.forEach(function (sub) {
                            sub.dispose();
                        });

                        $(window).add('.dhx_cal_data').off('scroll', this.scrollHandler);
                    }
                }, {
                    key: 'setWeekStart',
                    value: function setWeekStart(startDate, endDate) {
                        var _this4 = this;

                        var weekStartIndex;
                        if (this.scheduler.date.getISOWeek(startDate) === this.scheduler.date.getISOWeek(this.scheduler.date.add(endDate, 1, "day"))) {
                            weekStartIndex = 0;
                        } else {
                            weekStartIndex = startDate.getDay();
                        }
                        this.scheduler.date.week_start = function (date) {
                            var shift = date.getDay();
                            if (weekStartIndex) {
                                if (shift) {
                                    shift -= weekStartIndex;
                                } else {
                                    shift = weekStartIndex;
                                }
                            }
                            return _this4.scheduler.date.date_part(_this4.scheduler.date.add(date, -1 * shift, "day"));
                        };
                    }
                }, {
                    key: 'setupBlocking',
                    value: function setupBlocking(options) {
                        var _this5 = this;

                        options = options || {};
                        options = _.assign(options, { includeFullDay: true });
                        this.scheduler.deleteMarkedTimespan();
                        this.scheduler.updateView();

                        if (this.startDate && this.endDate) {
                            var state = this.scheduler.getState();
                            var date = state.min_date;
                            var stopDate = state.max_date;
                            while (date < stopDate) {
                                if (date < this.startDate || date > this.endDate) {
                                    this.scheduler.blockTime(date, "fullday");
                                }
                                date = this.scheduler.date.add(date, 1, 'day');
                            }
                        }
                        var max = 0;
                        var min = 1000000;
                        if (this.availables) {
                            var availabilities;
                            availabilities = this.availables;
                            _.forOwn(availabilities, function (availability, date) {
                                var flattened = _.flatten(availability);
                                min = _.min(flattened) < min ? _.min(flattened) : min;
                                max = _.max(flattened) > max ? _.max(flattened) : max;
                                var date = moment(date).utc()._d;
                                _this5.scheduler.addMarkedTimespan({
                                    days: date,
                                    zones: availability
                                });

                                _this5.scheduler.addMarkedTimespan({
                                    css: 'initial-block',
                                    type: 'dhx_time_block',
                                    days: date,
                                    zones: _this5.scheduler.invertZones(availability)
                                });
                            });
                        }

                        this.scrollCalendar(availabilities);

                        this.updateSchedulerViewToBCLongDay(min, max);
                    }
                }, {
                    key: 'scrollCalendar',
                    value: function scrollCalendar(availabilities) {
                        var firstAvailability = Object.keys(availabilities)[0] && availabilities[Object.keys(availabilities)[0]][0];

                        if (firstAvailability) {
                            this.scheduler.config.scroll_hour = firstAvailability / 60;
                        }
                    }
                }, {
                    key: 'updateSchedulerViewToBCLongDay',
                    value: function updateSchedulerViewToBCLongDay(min, max) {
                        if (this.longDay && this.longDay.length) {
                            if (min && min < this.longDay[0]) {
                                this.scheduler.config.first_hour = Math.floor(min / 60);
                            } else {
                                this.scheduler.config.first_hour = Math.floor(this.longDay[0] / 60);
                            }
                            if (max && max > this.longDay[1]) {
                                this.scheduler.config.last_hour = Math.ceil(max / 60);
                            } else {
                                this.scheduler.config.last_hour = Math.ceil(this.longDay[1] / 60);
                            }
                        } else {
                            if (max != 0 && min != 1000000) {
                                this.scheduler.config.first_hour = Math.floor(min / 60);
                                this.scheduler.config.last_hour = Math.ceil(max / 60);
                            }
                        }

                        this.scheduler.update_view();
                    }
                }, {
                    key: 'setupSchedulerListeners',
                    value: function setupSchedulerListeners() {
                        var _this6 = this;

                        var currentEvent = undefined;

                        this.scheduler.locale.labels.confirm_deleting = "";

                        this.scheduler.attachEvent("onClick", function (id, event) {
                            var ev = _this6.scheduler.getEvent(id);
                            if (ev.navigate) {
                                if (_this6.draftEnabled) {
                                    _this6.ea.publish('draft-plan:activity-click', {
                                        meetingURL: ev.navigate,
                                        agendaPlans: _this6.scheduler.getEvents()
                                    });
                                    return;
                                }
                                window.location.href = ev.navigate;
                            }

                            if (ev.deletable != undefined && ev.deletable == true) {
                                return true;
                            } else if (ev.deletable != undefined && ev.deletable == false) {
                                return false;
                            } else {
                                return true;
                            }
                        });

                        this.scheduler.attachEvent("onEmptyClick", function (date, event) {
                            return false;
                        });

                        this.scheduler.attachEvent("onBeforeDrag", function (id, mode, event) {
                            currentEvent = _.clone(_this6.scheduler.getEvent(id));
                            if (id) {
                                var ev = _this6.scheduler.getEvent(id);
                                if (ev.draggable != undefined && ev.draggable == false) {
                                    return false;
                                } else {
                                    return true;
                                }
                            } else {
                                return true;
                            }
                        });

                        this.scheduler.attachEvent("onBeforeEventDelete", function (id, event) {
                            var ev = _this6.scheduler.getEvent(id);
                            if (ev.activity_agenda_id) {
                                _this6.ea.publish('activity:change', ev.activity_agenda_id);
                            } else if (ev.meetingId) {
                                _this6.ea.publish('activity:change', ev.meetingId);
                            }

                            _this6.ea.publish('draft-plan:show-submit');
                            return true;
                        });

                        this.scheduler.attachEvent('onDblClick', function (id, e) {
                            return false;
                        });

                        setTimeout(function () {
                            $('.dhx_marked_timespan').on('dblclick', function (e) {
                                e.preventDefault();
                                e.stopPropagation();
                                e.stopImmediatePropagation();
                            });
                        }, 1000);

                        this.scheduler.attachEvent('onDragEnd', function (id) {
                            var draggedEvent = _this6.scheduler.getEvent(id);
                            var singleRowEventsOrder = _this6.scheduler.getEvents(draggedEvent.start_date, draggedEvent.end_date).filter(function (event) {
                                return event.activity_agenda_id !== draggedEvent.activity_agenda_id;
                            }).map(function (event) {
                                return event.customOrder;
                            });
                            var customOrder = singleRowEventsOrder.length ? Math.max.apply(Math, singleRowEventsOrder) + 1 : 1;

                            draggedEvent.customOrder = customOrder;
                            var startDate = draggedEvent.start_date;
                            var endDate = draggedEvent.end_date;
                            var maximumTime = draggedEvent.maximumTime;
                            var minimumTime = draggedEvent.minimumTime;

                            var eventDuration = (new Date(endDate) - new Date(startDate)) / (60 * 1000);

                            if (minimumTime && eventDuration < minimumTime || maximumTime && eventDuration > maximumTime) {
                                _this6.ea.publish('show:notification', {
                                    title: _this6.i18n.tr('components.briefingAgenda.draftPlan.invalidTimeHeader'),
                                    message: _this6.i18n.tr('components.briefingAgenda.draftPlan.invalidTimeBody', {
                                        maximumTime: maximumTime,
                                        minimumTime: minimumTime
                                    }),
                                    'class': 'red',
                                    autoHideDuration: 4000,
                                    onHide: function onHide() {
                                        _this6.updateCalendarView();
                                    }
                                });

                                var correction = eventDuration < minimumTime ? minimumTime : maximumTime;
                                draggedEvent.end_date = _this6.scheduler.date.add(startDate, correction, 'minute');
                            }

                            if (currentEvent && (currentEvent.start_date !== startDate || currentEvent.end_date !== endDate)) {
                                _this6.ea.publish('plan-activity:bulk-action');
                            }

                            return false;
                        });

                        this.scheduler.attachEvent('onBeforeTooltip', function () {
                            return _this6.showTooltip;
                        });
                    }
                }, {
                    key: 'setupSchedulerTemplates',
                    value: function setupSchedulerTemplates() {
                        var _this7 = this;

                        var step = 60;
                        var format = this.scheduler.date.date_to_str("%g%a");

                        this.scheduler.ignore_week = function (date) {
                            if (date.getTime() < _this7.startDate.getTime() || date.getTime() > _this7.endDate.getTime()) return true;
                        };

                        this.scheduler.templates.hour_scale = function (date) {
                            var html = "";
                            if (date.getHours() + date.getMinutes() / 60 < _this7.scheduler.config.last_hour - 0.5) {
                                for (var i = 0; i < 60 / step; i++) {
                                    html += "<div style='height:21px;line-height:21px;'>" + format(date) + "</div>";
                                    date = _this7.scheduler.date.add(date, step, "minute");
                                }
                            }
                            return html;
                        };

                        this.scheduler.templates.day_scale_date = this.scheduler.date.date_to_str(this.scheduler.config.day_date);

                        this.scheduler.templates.event_class = function (start, end, ev) {
                            if (ev.meeting_uuid && ev.meeting_uuid.length) {
                                return 'ebc-scheduled-meeting ' + ev.status;
                            }
                            return '';
                        };

                        this.scheduler.templates.event_text = function (start, end, ev) {
                            return "";
                        };

                        this.scheduler.templates.tooltip_text = function (start, end, event) {
                            var tooltipText;
                            var meetingDetailTemplate = HandlebarsTemplates['master_calendar/meeting_briefing_detail'];
                            var meetingDetails = {
                                meetingAsset: event.text,
                                startTime: event.start_date.toTime(),
                                endTime: event.end_date.toTime(),
                                meetingId: event.activityMeetingId,
                                meetingDate: event.start_date.toMediumDate(),
                                accepted_invitees_count: event.accepted_invitees_count,
                                status: event.status || 'summary'
                            };
                            if (event.location) {
                                meetingDetails['roomName'] = event.location;
                            }
                            meetingDetails['fontSize'] = window.commons.getFontSize(meetingDetails.meetingAsset || "", 3);
                            tooltipText = meetingDetailTemplate(meetingDetails);
                            return tooltipText;
                        };

                        this.scheduler.templates.event_header = function (start, end, ev) {
                            var start = moment(start).format("h:mm");
                            var end = moment(end).format("h:mm");
                            var text = ev.text || ev.meeting_title;
                            var title = text ? ", " + text : "";
                            return start + " - " + end + title;
                        };
                    }
                }], null, _instanceInitializers);

                var _DhtmlxCalendar = DhtmlxCalendar;
                DhtmlxCalendar = inject(EventAggregator, I18N)(DhtmlxCalendar) || DhtmlxCalendar;
                return DhtmlxCalendar;
            }();

            _export('DhtmlxCalendar', DhtmlxCalendar);
        }
    };
});
System.register('components/briefing-agenda/attendee.js', ['github:lodash/lodash@3.10.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/briefing_request_service.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var _, inject, bindable, EventAggregator, BriefingRequestService, I18N, Attendee;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_serviceBriefing_request_service) {
            BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            Attendee = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(Attendee, [{
                    key: 'attendee',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return "";
                    },
                    enumerable: true
                }, {
                    key: 'added',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return "";
                    },
                    enumerable: true
                }, {
                    key: 'briefing',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'attendeeType',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return "";
                    },
                    enumerable: true
                }, {
                    key: 'showSurveyLink',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'inviteOptions',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return {};
                    },
                    enumerable: true
                }], null, _instanceInitializers);

                function Attendee(ea, briefingRequestService, i18n) {
                    _classCallCheck(this, _Attendee);

                    _defineDecoratedPropertyDescriptor(this, 'attendee', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'added', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'briefing', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'attendeeType', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'showSurveyLink', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'inviteOptions', _instanceInitializers);

                    this.icsStatuses = {
                        Accepted: "jif-check-circle",
                        Tentative: "jif-check-circle",
                        Declined: "jif-close-circle",
                        Pending: "jif-close-circle"
                    };

                    this.ea = ea;
                    this.i18n = i18n;
                    this.attendee_status = '';
                    this.envDetails = envDetails;
                    this.i18n.setLocale('en').then(function () {});
                    this.isSFDC = $('#sf-jiffle-now').length >= 1;
                    this.briefingRequestService = briefingRequestService;
                }

                _createDecoratedClass(Attendee, [{
                    key: 'attached',
                    value: function attached() {
                        if (this.attendee.ics_status) switch (this.attendee.ics_status) {
                            case "Accepted":
                                this.attendee_status = "jif-check-circle";
                                break;
                            case "Tentative":
                                this.attendee_status = "jif-check-circle";
                                break;
                            case "Declined":
                                this.attendee_status = "jif-close-circle";
                                break;
                            case "Pending":
                                this.attendee_status = "jif-question-circle";
                                break;
                            default:
                                this.attendee_status = '';
                                break;
                        }
                        if (this.attendeeType === "external" || this.attendeeType === "internal") {
                            this.showSurveyLink = this.attendee.show_survey || false;
                        }

                        $('.dropdown-toggle').dropdown();
                    }
                }, {
                    key: 'edit',
                    value: function edit() {
                        this.ea.publish('edit:briefing');
                    }
                }, {
                    key: 'surveyClickAction',
                    value: function surveyClickAction(e) {
                        e.stopPropagation();
                        e.preventDefault();
                        this.ea.publish("survey:showModal", {
                            uuid: this.briefing.uuid,
                            attendee: this.attendee.uuid,
                            surveys: this.attendee.survey_links,
                            show_send_mail: this.attendee.show_send_mail
                        });
                    }
                }, {
                    key: 'isAdmin',
                    value: function isAdmin() {
                        if (this.envDetails.role == "CSM" || this.envDetails.role == "MM" || this.envDetails.role == "QueueManager") {
                            return true;
                        } else {
                            return false;
                        }
                    }
                }, {
                    key: 'briefingUserAction',
                    value: function briefingUserAction(url) {
                        var _this = this;

                        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

                        this.briefingRequestService.fireBriefingAction(url, params).then(function (response) {
                            if (typeof response.response === "string") response = JSON.parse(response.response);
                            if (response.status == 200) {
                                _this.ea.publish("briefing:update", response.data);
                                _this.attendee = response.data.user;
                                _this.attached();
                            }
                        })['catch'](function () {});
                    }
                }, {
                    key: 'confirmAction',
                    value: function confirmAction(e, action, url) {
                        var _this2 = this;

                        e.stopPropagation();
                        e.preventDefault();

                        if (action === 'Report') {
                            window.commons.redirectPage(url);
                            return;
                        }

                        if (action === 'Decline') {
                            var _inviteOptions = this.inviteOptions;
                            var options = _inviteOptions.predefined_decline_comments;
                            var enabled = _inviteOptions.decline_comments_enabled;

                            var config = { options: options, enabled: enabled };

                            this.ea.publish('show:reason-capture-modal', {
                                config: config,
                                doneHandler: function doneHandler(params) {
                                    return _this2.briefingUserAction(url, params);
                                }
                            });

                            return;
                        }

                        var message = action === 'Accept' ? this.i18n.tr('components.briefingAgenda.attendee.acceptConfirmMessage') : action === 'Decline' ? this.i18n.tr('components.briefingAgenda.attendee.declineConfirmMessage') : this.i18n.tr('components.briefingAgenda.attendee.reinviteConfirmMessage');
                        this.ea.publish("show:notification", {
                            title: this.i18n.tr('components.briefingAgenda.attendee.areYouSure'),
                            message: message,
                            'class': 'blue',
                            isConfirmation: true,
                            done: function done() {
                                _this2.briefingUserAction(url);
                            }
                        });
                    }
                }, {
                    key: 'showDivider',
                    value: function showDivider() {
                        return this.attendee.actions && (this.attendee.actions.decline_url || this.attendee.actions.reinvite_url) || this.showSurveyLink;
                    }
                }, {
                    key: 'showMoreAction',
                    value: function showMoreAction() {
                        return this.showDivider() || this.attendee.actions && this.attendee.actions.download_briefing_report_url;
                    }
                }, {
                    key: 'dropdownHandler',
                    value: function dropdownHandler(event) {
                        var currentEle = $(event.currentTarget);
                        var dropdownEle = currentEle.siblings('.briefing-dropdown');

                        var _currentEle$offset = currentEle.offset();

                        var top = _currentEle$offset.top;
                        var left = _currentEle$offset.left;

                        top = top - $(window).scrollTop() + 'px';
                        left = left + currentEle.width() - dropdownEle.width() + 'px';

                        dropdownEle.css({
                            position: 'fixed',
                            top: top,
                            left: left,
                            right: 'auto'
                        });
                    }
                }], null, _instanceInitializers);

                var _Attendee = Attendee;
                Attendee = inject(EventAggregator, BriefingRequestService, I18N)(Attendee) || Attendee;
                return Attendee;
            }();

            _export('Attendee', Attendee);
        }
    };
});
(function() {
var define = System.amdDefine;
"format amd";
(function(undefined) {
  var moment,
      VERSION = "2.6.0",
      globalScope = typeof global !== 'undefined' ? global : this,
      oldGlobalMoment,
      round = Math.round,
      i,
      YEAR = 0,
      MONTH = 1,
      DATE = 2,
      HOUR = 3,
      MINUTE = 4,
      SECOND = 5,
      MILLISECOND = 6,
      languages = {},
      momentProperties = {
        _isAMomentObject: null,
        _i: null,
        _f: null,
        _l: null,
        _strict: null,
        _isUTC: null,
        _offset: null,
        _pf: null,
        _lang: null
      },
      hasModule = (typeof module !== 'undefined' && module.exports),
      aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,
      aspNetTimeSpanJsonRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,
      isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,
      formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,
      localFormattingTokens = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,
      parseTokenOneOrTwoDigits = /\d\d?/,
      parseTokenOneToThreeDigits = /\d{1,3}/,
      parseTokenOneToFourDigits = /\d{1,4}/,
      parseTokenOneToSixDigits = /[+\-]?\d{1,6}/,
      parseTokenDigits = /\d+/,
      parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
      parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/gi,
      parseTokenT = /T/i,
      parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/,
      parseTokenOrdinal = /\d{1,2}/,
      parseTokenOneDigit = /\d/,
      parseTokenTwoDigits = /\d\d/,
      parseTokenThreeDigits = /\d{3}/,
      parseTokenFourDigits = /\d{4}/,
      parseTokenSixDigits = /[+-]?\d{6}/,
      parseTokenSignedNumber = /[+-]?\d+/,
      isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
      isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',
      isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/], ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/], ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/], ['GGGG-[W]WW', /\d{4}-W\d{2}/], ['YYYY-DDD', /\d{4}-\d{3}/]],
      isoTimes = [['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/], ['HH:mm', /(T| )\d\d:\d\d/], ['HH', /(T| )\d\d/]],
      parseTimezoneChunker = /([\+\-]|\d\d)/gi,
      proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
      unitMillisecondFactors = {
        'Milliseconds': 1,
        'Seconds': 1e3,
        'Minutes': 6e4,
        'Hours': 36e5,
        'Days': 864e5,
        'Months': 2592e6,
        'Years': 31536e6
      },
      unitAliases = {
        ms: 'millisecond',
        s: 'second',
        m: 'minute',
        h: 'hour',
        d: 'day',
        D: 'date',
        w: 'week',
        W: 'isoWeek',
        M: 'month',
        Q: 'quarter',
        y: 'year',
        DDD: 'dayOfYear',
        e: 'weekday',
        E: 'isoWeekday',
        gg: 'weekYear',
        GG: 'isoWeekYear'
      },
      camelFunctions = {
        dayofyear: 'dayOfYear',
        isoweekday: 'isoWeekday',
        isoweek: 'isoWeek',
        weekyear: 'weekYear',
        isoweekyear: 'isoWeekYear'
      },
      formatFunctions = {},
      ordinalizeTokens = 'DDD w W M D d'.split(' '),
      paddedTokens = 'M D H h m s w W'.split(' '),
      formatTokenFunctions = {
        M: function() {
          return this.month() + 1;
        },
        MMM: function(format) {
          return this.lang().monthsShort(this, format);
        },
        MMMM: function(format) {
          return this.lang().months(this, format);
        },
        D: function() {
          return this.date();
        },
        DDD: function() {
          return this.dayOfYear();
        },
        d: function() {
          return this.day();
        },
        dd: function(format) {
          return this.lang().weekdaysMin(this, format);
        },
        ddd: function(format) {
          return this.lang().weekdaysShort(this, format);
        },
        dddd: function(format) {
          return this.lang().weekdays(this, format);
        },
        w: function() {
          return this.week();
        },
        W: function() {
          return this.isoWeek();
        },
        YY: function() {
          return leftZeroFill(this.year() % 100, 2);
        },
        YYYY: function() {
          return leftZeroFill(this.year(), 4);
        },
        YYYYY: function() {
          return leftZeroFill(this.year(), 5);
        },
        YYYYYY: function() {
          var y = this.year(),
              sign = y >= 0 ? '+' : '-';
          return sign + leftZeroFill(Math.abs(y), 6);
        },
        gg: function() {
          return leftZeroFill(this.weekYear() % 100, 2);
        },
        gggg: function() {
          return leftZeroFill(this.weekYear(), 4);
        },
        ggggg: function() {
          return leftZeroFill(this.weekYear(), 5);
        },
        GG: function() {
          return leftZeroFill(this.isoWeekYear() % 100, 2);
        },
        GGGG: function() {
          return leftZeroFill(this.isoWeekYear(), 4);
        },
        GGGGG: function() {
          return leftZeroFill(this.isoWeekYear(), 5);
        },
        e: function() {
          return this.weekday();
        },
        E: function() {
          return this.isoWeekday();
        },
        a: function() {
          return this.lang().meridiem(this.hours(), this.minutes(), true);
        },
        A: function() {
          return this.lang().meridiem(this.hours(), this.minutes(), false);
        },
        H: function() {
          return this.hours();
        },
        h: function() {
          return this.hours() % 12 || 12;
        },
        m: function() {
          return this.minutes();
        },
        s: function() {
          return this.seconds();
        },
        S: function() {
          return toInt(this.milliseconds() / 100);
        },
        SS: function() {
          return leftZeroFill(toInt(this.milliseconds() / 10), 2);
        },
        SSS: function() {
          return leftZeroFill(this.milliseconds(), 3);
        },
        SSSS: function() {
          return leftZeroFill(this.milliseconds(), 3);
        },
        Z: function() {
          var a = -this.zone(),
              b = "+";
          if (a < 0) {
            a = -a;
            b = "-";
          }
          return b + leftZeroFill(toInt(a / 60), 2) + ":" + leftZeroFill(toInt(a) % 60, 2);
        },
        ZZ: function() {
          var a = -this.zone(),
              b = "+";
          if (a < 0) {
            a = -a;
            b = "-";
          }
          return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);
        },
        z: function() {
          return this.zoneAbbr();
        },
        zz: function() {
          return this.zoneName();
        },
        X: function() {
          return this.unix();
        },
        Q: function() {
          return this.quarter();
        }
      },
      lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];
  function defaultParsingFlags() {
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false
    };
  }
  function deprecate(msg, fn) {
    var firstTime = true;
    function printMsg() {
      if (moment.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
        console.warn("Deprecation warning: " + msg);
      }
    }
    return extend(function() {
      if (firstTime) {
        printMsg();
        firstTime = false;
      }
      return fn.apply(this, arguments);
    }, fn);
  }
  function padToken(func, count) {
    return function(a) {
      return leftZeroFill(func.call(this, a), count);
    };
  }
  function ordinalizeToken(func, period) {
    return function(a) {
      return this.lang().ordinal(func.call(this, a), period);
    };
  }
  while (ordinalizeTokens.length) {
    i = ordinalizeTokens.pop();
    formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
  }
  while (paddedTokens.length) {
    i = paddedTokens.pop();
    formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
  }
  formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);
  function Language() {}
  function Moment(config) {
    checkOverflow(config);
    extend(this, config);
  }
  function Duration(duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;
    this._milliseconds = +milliseconds + seconds * 1e3 + minutes * 6e4 + hours * 36e5;
    this._days = +days + weeks * 7;
    this._months = +months + quarters * 3 + years * 12;
    this._data = {};
    this._bubble();
  }
  function extend(a, b) {
    for (var i in b) {
      if (b.hasOwnProperty(i)) {
        a[i] = b[i];
      }
    }
    if (b.hasOwnProperty("toString")) {
      a.toString = b.toString;
    }
    if (b.hasOwnProperty("valueOf")) {
      a.valueOf = b.valueOf;
    }
    return a;
  }
  function cloneMoment(m) {
    var result = {},
        i;
    for (i in m) {
      if (m.hasOwnProperty(i) && momentProperties.hasOwnProperty(i)) {
        result[i] = m[i];
      }
    }
    return result;
  }
  function absRound(number) {
    if (number < 0) {
      return Math.ceil(number);
    } else {
      return Math.floor(number);
    }
  }
  function leftZeroFill(number, targetLength, forceSign) {
    var output = '' + Math.abs(number),
        sign = number >= 0;
    while (output.length < targetLength) {
      output = '0' + output;
    }
    return (sign ? (forceSign ? '+' : '') : '-') + output;
  }
  function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = duration._days,
        months = duration._months;
    updateOffset = updateOffset == null ? true : updateOffset;
    if (milliseconds) {
      mom._d.setTime(+mom._d + milliseconds * isAdding);
    }
    if (days) {
      rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);
    }
    if (months) {
      rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);
    }
    if (updateOffset) {
      moment.updateOffset(mom, days || months);
    }
  }
  function isArray(input) {
    return Object.prototype.toString.call(input) === '[object Array]';
  }
  function isDate(input) {
    return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;
  }
  function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
      if ((dontConvert && array1[i] !== array2[i]) || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }
  function normalizeUnits(units) {
    if (units) {
      var lowered = units.toLowerCase().replace(/(.)s$/, '$1');
      units = unitAliases[units] || camelFunctions[lowered] || lowered;
    }
    return units;
  }
  function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;
    for (prop in inputObject) {
      if (inputObject.hasOwnProperty(prop)) {
        normalizedProp = normalizeUnits(prop);
        if (normalizedProp) {
          normalizedInput[normalizedProp] = inputObject[prop];
        }
      }
    }
    return normalizedInput;
  }
  function makeList(field) {
    var count,
        setter;
    if (field.indexOf('week') === 0) {
      count = 7;
      setter = 'day';
    } else if (field.indexOf('month') === 0) {
      count = 12;
      setter = 'month';
    } else {
      return;
    }
    moment[field] = function(format, index) {
      var i,
          getter,
          method = moment.fn._lang[field],
          results = [];
      if (typeof format === 'number') {
        index = format;
        format = undefined;
      }
      getter = function(i) {
        var m = moment().utc().set(setter, i);
        return method.call(moment.fn._lang, m, format || '');
      };
      if (index != null) {
        return getter(index);
      } else {
        for (i = 0; i < count; i++) {
          results.push(getter(i));
        }
        return results;
      }
    };
  }
  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;
    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
      if (coercedNumber >= 0) {
        value = Math.floor(coercedNumber);
      } else {
        value = Math.ceil(coercedNumber);
      }
    }
    return value;
  }
  function daysInMonth(year, month) {
    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
  }
  function weeksInYear(year, dow, doy) {
    return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;
  }
  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
  }
  function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
  }
  function checkOverflow(m) {
    var overflow;
    if (m._a && m._pf.overflow === -2) {
      overflow = m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH : m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE : m._a[HOUR] < 0 || m._a[HOUR] > 23 ? HOUR : m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE : m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND : m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND : -1;
      if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
        overflow = DATE;
      }
      m._pf.overflow = overflow;
    }
  }
  function isValid(m) {
    if (m._isValid == null) {
      m._isValid = !isNaN(m._d.getTime()) && m._pf.overflow < 0 && !m._pf.empty && !m._pf.invalidMonth && !m._pf.nullInput && !m._pf.invalidFormat && !m._pf.userInvalidated;
      if (m._strict) {
        m._isValid = m._isValid && m._pf.charsLeftOver === 0 && m._pf.unusedTokens.length === 0;
      }
    }
    return m._isValid;
  }
  function normalizeLanguage(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
  }
  function makeAs(input, model) {
    return model._isUTC ? moment(input).zone(model._offset || 0) : moment(input).local();
  }
  extend(Language.prototype, {
    set: function(config) {
      var prop,
          i;
      for (i in config) {
        prop = config[i];
        if (typeof prop === 'function') {
          this[i] = prop;
        } else {
          this['_' + i] = prop;
        }
      }
    },
    _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
    months: function(m) {
      return this._months[m.month()];
    },
    _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
    monthsShort: function(m) {
      return this._monthsShort[m.month()];
    },
    monthsParse: function(monthName) {
      var i,
          mom,
          regex;
      if (!this._monthsParse) {
        this._monthsParse = [];
      }
      for (i = 0; i < 12; i++) {
        if (!this._monthsParse[i]) {
          mom = moment.utc([2000, i]);
          regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
          this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        if (this._monthsParse[i].test(monthName)) {
          return i;
        }
      }
    },
    _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
    weekdays: function(m) {
      return this._weekdays[m.day()];
    },
    _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
    weekdaysShort: function(m) {
      return this._weekdaysShort[m.day()];
    },
    _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
    weekdaysMin: function(m) {
      return this._weekdaysMin[m.day()];
    },
    weekdaysParse: function(weekdayName) {
      var i,
          mom,
          regex;
      if (!this._weekdaysParse) {
        this._weekdaysParse = [];
      }
      for (i = 0; i < 7; i++) {
        if (!this._weekdaysParse[i]) {
          mom = moment([2000, 1]).day(i);
          regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
          this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        if (this._weekdaysParse[i].test(weekdayName)) {
          return i;
        }
      }
    },
    _longDateFormat: {
      LT: "h:mm A",
      L: "MM/DD/YYYY",
      LL: "MMMM D YYYY",
      LLL: "MMMM D YYYY LT",
      LLLL: "dddd, MMMM D YYYY LT"
    },
    longDateFormat: function(key) {
      var output = this._longDateFormat[key];
      if (!output && this._longDateFormat[key.toUpperCase()]) {
        output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(val) {
          return val.slice(1);
        });
        this._longDateFormat[key] = output;
      }
      return output;
    },
    isPM: function(input) {
      return ((input + '').toLowerCase().charAt(0) === 'p');
    },
    _meridiemParse: /[ap]\.?m?\.?/i,
    meridiem: function(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'pm' : 'PM';
      } else {
        return isLower ? 'am' : 'AM';
      }
    },
    _calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L'
    },
    calendar: function(key, mom) {
      var output = this._calendar[key];
      return typeof output === 'function' ? output.apply(mom) : output;
    },
    _relativeTime: {
      future: "in %s",
      past: "%s ago",
      s: "a few seconds",
      m: "a minute",
      mm: "%d minutes",
      h: "an hour",
      hh: "%d hours",
      d: "a day",
      dd: "%d days",
      M: "a month",
      MM: "%d months",
      y: "a year",
      yy: "%d years"
    },
    relativeTime: function(number, withoutSuffix, string, isFuture) {
      var output = this._relativeTime[string];
      return (typeof output === 'function') ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
    },
    pastFuture: function(diff, output) {
      var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
      return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
    },
    ordinal: function(number) {
      return this._ordinal.replace("%d", number);
    },
    _ordinal: "%d",
    preparse: function(string) {
      return string;
    },
    postformat: function(string) {
      return string;
    },
    week: function(mom) {
      return weekOfYear(mom, this._week.dow, this._week.doy).week;
    },
    _week: {
      dow: 0,
      doy: 6
    },
    _invalidDate: 'Invalid date',
    invalidDate: function() {
      return this._invalidDate;
    }
  });
  function loadLang(key, values) {
    values.abbr = key;
    if (!languages[key]) {
      languages[key] = new Language();
    }
    languages[key].set(values);
    return languages[key];
  }
  function unloadLang(key) {
    delete languages[key];
  }
  function getLangDefinition(key) {
    var i = 0,
        j,
        lang,
        next,
        split,
        get = function(k) {
          if (!languages[k] && hasModule) {
            try {
              require('./lang/' + k);
            } catch (e) {}
          }
          return languages[k];
        };
    if (!key) {
      return moment.fn._lang;
    }
    if (!isArray(key)) {
      lang = get(key);
      if (lang) {
        return lang;
      }
      key = [key];
    }
    while (i < key.length) {
      split = normalizeLanguage(key[i]).split('-');
      j = split.length;
      next = normalizeLanguage(key[i + 1]);
      next = next ? next.split('-') : null;
      while (j > 0) {
        lang = get(split.slice(0, j).join('-'));
        if (lang) {
          return lang;
        }
        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
          break;
        }
        j--;
      }
      i++;
    }
    return moment.fn._lang;
  }
  function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
      return input.replace(/^\[|\]$/g, "");
    }
    return input.replace(/\\/g, "");
  }
  function makeFormatFunction(format) {
    var array = format.match(formattingTokens),
        i,
        length;
    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }
    return function(mom) {
      var output = "";
      for (i = 0; i < length; i++) {
        output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
      }
      return output;
    };
  }
  function formatMoment(m, format) {
    if (!m.isValid()) {
      return m.lang().invalidDate();
    }
    format = expandFormat(format, m.lang());
    if (!formatFunctions[format]) {
      formatFunctions[format] = makeFormatFunction(format);
    }
    return formatFunctions[format](m);
  }
  function expandFormat(format, lang) {
    var i = 5;
    function replaceLongDateFormatTokens(input) {
      return lang.longDateFormat(input) || input;
    }
    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
      localFormattingTokens.lastIndex = 0;
      i -= 1;
    }
    return format;
  }
  function getParseRegexForToken(token, config) {
    var a,
        strict = config._strict;
    switch (token) {
      case 'Q':
        return parseTokenOneDigit;
      case 'DDDD':
        return parseTokenThreeDigits;
      case 'YYYY':
      case 'GGGG':
      case 'gggg':
        return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;
      case 'Y':
      case 'G':
      case 'g':
        return parseTokenSignedNumber;
      case 'YYYYYY':
      case 'YYYYY':
      case 'GGGGG':
      case 'ggggg':
        return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;
      case 'S':
        if (strict) {
          return parseTokenOneDigit;
        }
      case 'SS':
        if (strict) {
          return parseTokenTwoDigits;
        }
      case 'SSS':
        if (strict) {
          return parseTokenThreeDigits;
        }
      case 'DDD':
        return parseTokenOneToThreeDigits;
      case 'MMM':
      case 'MMMM':
      case 'dd':
      case 'ddd':
      case 'dddd':
        return parseTokenWord;
      case 'a':
      case 'A':
        return getLangDefinition(config._l)._meridiemParse;
      case 'X':
        return parseTokenTimestampMs;
      case 'Z':
      case 'ZZ':
        return parseTokenTimezone;
      case 'T':
        return parseTokenT;
      case 'SSSS':
        return parseTokenDigits;
      case 'MM':
      case 'DD':
      case 'YY':
      case 'GG':
      case 'gg':
      case 'HH':
      case 'hh':
      case 'mm':
      case 'ss':
      case 'ww':
      case 'WW':
        return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;
      case 'M':
      case 'D':
      case 'd':
      case 'H':
      case 'h':
      case 'm':
      case 's':
      case 'w':
      case 'W':
      case 'e':
      case 'E':
        return parseTokenOneOrTwoDigits;
      case 'Do':
        return parseTokenOrdinal;
      default:
        a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\', '')), "i"));
        return a;
    }
  }
  function timezoneMinutesFromString(string) {
    string = string || "";
    var possibleTzMatches = (string.match(parseTokenTimezone) || []),
        tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],
        parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],
        minutes = +(parts[1] * 60) + toInt(parts[2]);
    return parts[0] === '+' ? -minutes : minutes;
  }
  function addTimeToArrayFromToken(token, input, config) {
    var a,
        datePartArray = config._a;
    switch (token) {
      case 'Q':
        if (input != null) {
          datePartArray[MONTH] = (toInt(input) - 1) * 3;
        }
        break;
      case 'M':
      case 'MM':
        if (input != null) {
          datePartArray[MONTH] = toInt(input) - 1;
        }
        break;
      case 'MMM':
      case 'MMMM':
        a = getLangDefinition(config._l).monthsParse(input);
        if (a != null) {
          datePartArray[MONTH] = a;
        } else {
          config._pf.invalidMonth = input;
        }
        break;
      case 'D':
      case 'DD':
        if (input != null) {
          datePartArray[DATE] = toInt(input);
        }
        break;
      case 'Do':
        if (input != null) {
          datePartArray[DATE] = toInt(parseInt(input, 10));
        }
        break;
      case 'DDD':
      case 'DDDD':
        if (input != null) {
          config._dayOfYear = toInt(input);
        }
        break;
      case 'YY':
        datePartArray[YEAR] = moment.parseTwoDigitYear(input);
        break;
      case 'YYYY':
      case 'YYYYY':
      case 'YYYYYY':
        datePartArray[YEAR] = toInt(input);
        break;
      case 'a':
      case 'A':
        config._isPm = getLangDefinition(config._l).isPM(input);
        break;
      case 'H':
      case 'HH':
      case 'h':
      case 'hh':
        datePartArray[HOUR] = toInt(input);
        break;
      case 'm':
      case 'mm':
        datePartArray[MINUTE] = toInt(input);
        break;
      case 's':
      case 'ss':
        datePartArray[SECOND] = toInt(input);
        break;
      case 'S':
      case 'SS':
      case 'SSS':
      case 'SSSS':
        datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);
        break;
      case 'X':
        config._d = new Date(parseFloat(input) * 1000);
        break;
      case 'Z':
      case 'ZZ':
        config._useUTC = true;
        config._tzm = timezoneMinutesFromString(input);
        break;
      case 'w':
      case 'ww':
      case 'W':
      case 'WW':
      case 'd':
      case 'dd':
      case 'ddd':
      case 'dddd':
      case 'e':
      case 'E':
        token = token.substr(0, 1);
      case 'gg':
      case 'gggg':
      case 'GG':
      case 'GGGG':
      case 'GGGGG':
        token = token.substr(0, 2);
        if (input) {
          config._w = config._w || {};
          config._w[token] = input;
        }
        break;
    }
  }
  function dateFromConfig(config) {
    var i,
        date,
        input = [],
        currentDate,
        yearToUse,
        fixYear,
        w,
        temp,
        lang,
        weekday,
        week;
    if (config._d) {
      return;
    }
    currentDate = currentDateArray(config);
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
      fixYear = function(val) {
        var intVal = parseInt(val, 10);
        return val ? (val.length < 3 ? (intVal > 68 ? 1900 + intVal : 2000 + intVal) : intVal) : (config._a[YEAR] == null ? moment().weekYear() : config._a[YEAR]);
      };
      w = config._w;
      if (w.GG != null || w.W != null || w.E != null) {
        temp = dayOfYearFromWeeks(fixYear(w.GG), w.W || 1, w.E, 4, 1);
      } else {
        lang = getLangDefinition(config._l);
        weekday = w.d != null ? parseWeekday(w.d, lang) : (w.e != null ? parseInt(w.e, 10) + lang._week.dow : 0);
        week = parseInt(w.w, 10) || 1;
        if (w.d != null && weekday < lang._week.dow) {
          week++;
        }
        temp = dayOfYearFromWeeks(fixYear(w.gg), week, weekday, lang._week.doy, lang._week.dow);
      }
      config._a[YEAR] = temp.year;
      config._dayOfYear = temp.dayOfYear;
    }
    if (config._dayOfYear) {
      yearToUse = config._a[YEAR] == null ? currentDate[YEAR] : config._a[YEAR];
      if (config._dayOfYear > daysInYear(yearToUse)) {
        config._pf._overflowDayOfYear = true;
      }
      date = makeUTCDate(yearToUse, 0, config._dayOfYear);
      config._a[MONTH] = date.getUTCMonth();
      config._a[DATE] = date.getUTCDate();
    }
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
      config._a[i] = input[i] = currentDate[i];
    }
    for (; i < 7; i++) {
      config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }
    input[HOUR] += toInt((config._tzm || 0) / 60);
    input[MINUTE] += toInt((config._tzm || 0) % 60);
    config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);
  }
  function dateFromObject(config) {
    var normalizedInput;
    if (config._d) {
      return;
    }
    normalizedInput = normalizeObjectUnits(config._i);
    config._a = [normalizedInput.year, normalizedInput.month, normalizedInput.day, normalizedInput.hour, normalizedInput.minute, normalizedInput.second, normalizedInput.millisecond];
    dateFromConfig(config);
  }
  function currentDateArray(config) {
    var now = new Date();
    if (config._useUTC) {
      return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
    } else {
      return [now.getFullYear(), now.getMonth(), now.getDate()];
    }
  }
  function makeDateFromStringAndFormat(config) {
    config._a = [];
    config._pf.empty = true;
    var lang = getLangDefinition(config._l),
        string = '' + config._i,
        i,
        parsedInput,
        tokens,
        token,
        skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;
    tokens = expandFormat(config._f, lang).match(formattingTokens) || [];
    for (i = 0; i < tokens.length; i++) {
      token = tokens[i];
      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
      if (parsedInput) {
        skipped = string.substr(0, string.indexOf(parsedInput));
        if (skipped.length > 0) {
          config._pf.unusedInput.push(skipped);
        }
        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
        totalParsedInputLength += parsedInput.length;
      }
      if (formatTokenFunctions[token]) {
        if (parsedInput) {
          config._pf.empty = false;
        } else {
          config._pf.unusedTokens.push(token);
        }
        addTimeToArrayFromToken(token, parsedInput, config);
      } else if (config._strict && !parsedInput) {
        config._pf.unusedTokens.push(token);
      }
    }
    config._pf.charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
      config._pf.unusedInput.push(string);
    }
    if (config._isPm && config._a[HOUR] < 12) {
      config._a[HOUR] += 12;
    }
    if (config._isPm === false && config._a[HOUR] === 12) {
      config._a[HOUR] = 0;
    }
    dateFromConfig(config);
    checkOverflow(config);
  }
  function unescapeFormat(s) {
    return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4;
    });
  }
  function regexpEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }
  function makeDateFromStringAndArray(config) {
    var tempConfig,
        bestMoment,
        scoreToBeat,
        i,
        currentScore;
    if (config._f.length === 0) {
      config._pf.invalidFormat = true;
      config._d = new Date(NaN);
      return;
    }
    for (i = 0; i < config._f.length; i++) {
      currentScore = 0;
      tempConfig = extend({}, config);
      tempConfig._pf = defaultParsingFlags();
      tempConfig._f = config._f[i];
      makeDateFromStringAndFormat(tempConfig);
      if (!isValid(tempConfig)) {
        continue;
      }
      currentScore += tempConfig._pf.charsLeftOver;
      currentScore += tempConfig._pf.unusedTokens.length * 10;
      tempConfig._pf.score = currentScore;
      if (scoreToBeat == null || currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
    extend(config, bestMoment || tempConfig);
  }
  function makeDateFromString(config) {
    var i,
        l,
        string = config._i,
        match = isoRegex.exec(string);
    if (match) {
      config._pf.iso = true;
      for (i = 0, l = isoDates.length; i < l; i++) {
        if (isoDates[i][1].exec(string)) {
          config._f = isoDates[i][0] + (match[6] || " ");
          break;
        }
      }
      for (i = 0, l = isoTimes.length; i < l; i++) {
        if (isoTimes[i][1].exec(string)) {
          config._f += isoTimes[i][0];
          break;
        }
      }
      if (string.match(parseTokenTimezone)) {
        config._f += "Z";
      }
      makeDateFromStringAndFormat(config);
    } else {
      moment.createFromInputFallback(config);
    }
  }
  function makeDateFromInput(config) {
    var input = config._i,
        matched = aspNetJsonRegex.exec(input);
    if (input === undefined) {
      config._d = new Date();
    } else if (matched) {
      config._d = new Date(+matched[1]);
    } else if (typeof input === 'string') {
      makeDateFromString(config);
    } else if (isArray(input)) {
      config._a = input.slice(0);
      dateFromConfig(config);
    } else if (isDate(input)) {
      config._d = new Date(+input);
    } else if (typeof(input) === 'object') {
      dateFromObject(config);
    } else if (typeof(input) === 'number') {
      config._d = new Date(input);
    } else {
      moment.createFromInputFallback(config);
    }
  }
  function makeDate(y, m, d, h, M, s, ms) {
    var date = new Date(y, m, d, h, M, s, ms);
    if (y < 1970) {
      date.setFullYear(y);
    }
    return date;
  }
  function makeUTCDate(y) {
    var date = new Date(Date.UTC.apply(null, arguments));
    if (y < 1970) {
      date.setUTCFullYear(y);
    }
    return date;
  }
  function parseWeekday(input, language) {
    if (typeof input === 'string') {
      if (!isNaN(input)) {
        input = parseInt(input, 10);
      } else {
        input = language.weekdaysParse(input);
        if (typeof input !== 'number') {
          return null;
        }
      }
    }
    return input;
  }
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, lang) {
    return lang.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }
  function relativeTime(milliseconds, withoutSuffix, lang) {
    var seconds = round(Math.abs(milliseconds) / 1000),
        minutes = round(seconds / 60),
        hours = round(minutes / 60),
        days = round(hours / 24),
        years = round(days / 365),
        args = seconds < 45 && ['s', seconds] || minutes === 1 && ['m'] || minutes < 45 && ['mm', minutes] || hours === 1 && ['h'] || hours < 22 && ['hh', hours] || days === 1 && ['d'] || days <= 25 && ['dd', days] || days <= 45 && ['M'] || days < 345 && ['MM', round(days / 30)] || years === 1 && ['y'] || ['yy', years];
    args[2] = withoutSuffix;
    args[3] = milliseconds > 0;
    args[4] = lang;
    return substituteTimeAgo.apply({}, args);
  }
  function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
    var end = firstDayOfWeekOfYear - firstDayOfWeek,
        daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
        adjustedMoment;
    if (daysToDayOfWeek > end) {
      daysToDayOfWeek -= 7;
    }
    if (daysToDayOfWeek < end - 7) {
      daysToDayOfWeek += 7;
    }
    adjustedMoment = moment(mom).add('d', daysToDayOfWeek);
    return {
      week: Math.ceil(adjustedMoment.dayOfYear() / 7),
      year: adjustedMoment.year()
    };
  }
  function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
    var d = makeUTCDate(year, 0, 1).getUTCDay(),
        daysToAdd,
        dayOfYear;
    weekday = weekday != null ? weekday : firstDayOfWeek;
    daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
    dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;
    return {
      year: dayOfYear > 0 ? year : year - 1,
      dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear
    };
  }
  function makeMoment(config) {
    var input = config._i,
        format = config._f;
    if (input === null || (format === undefined && input === '')) {
      return moment.invalid({nullInput: true});
    }
    if (typeof input === 'string') {
      config._i = input = getLangDefinition().preparse(input);
    }
    if (moment.isMoment(input)) {
      config = cloneMoment(input);
      config._d = new Date(+input._d);
    } else if (format) {
      if (isArray(format)) {
        makeDateFromStringAndArray(config);
      } else {
        makeDateFromStringAndFormat(config);
      }
    } else {
      makeDateFromInput(config);
    }
    return new Moment(config);
  }
  moment = function(input, format, lang, strict) {
    var c;
    if (typeof(lang) === "boolean") {
      strict = lang;
      lang = undefined;
    }
    c = {};
    c._isAMomentObject = true;
    c._i = input;
    c._f = format;
    c._l = lang;
    c._strict = strict;
    c._isUTC = false;
    c._pf = defaultParsingFlags();
    return makeMoment(c);
  };
  moment.suppressDeprecationWarnings = false;
  moment.createFromInputFallback = deprecate("moment construction falls back to js Date. This is " + "discouraged and will be removed in upcoming major " + "release. Please refer to " + "https://github.com/moment/moment/issues/1407 for more info.", function(config) {
    config._d = new Date(config._i);
  });
  moment.utc = function(input, format, lang, strict) {
    var c;
    if (typeof(lang) === "boolean") {
      strict = lang;
      lang = undefined;
    }
    c = {};
    c._isAMomentObject = true;
    c._useUTC = true;
    c._isUTC = true;
    c._l = lang;
    c._i = input;
    c._f = format;
    c._strict = strict;
    c._pf = defaultParsingFlags();
    return makeMoment(c).utc();
  };
  moment.unix = function(input) {
    return moment(input * 1000);
  };
  moment.duration = function(input, key) {
    var duration = input,
        match = null,
        sign,
        ret,
        parseIso;
    if (moment.isDuration(input)) {
      duration = {
        ms: input._milliseconds,
        d: input._days,
        M: input._months
      };
    } else if (typeof input === 'number') {
      duration = {};
      if (key) {
        duration[key] = input;
      } else {
        duration.milliseconds = input;
      }
    } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {
      sign = (match[1] === "-") ? -1 : 1;
      duration = {
        y: 0,
        d: toInt(match[DATE]) * sign,
        h: toInt(match[HOUR]) * sign,
        m: toInt(match[MINUTE]) * sign,
        s: toInt(match[SECOND]) * sign,
        ms: toInt(match[MILLISECOND]) * sign
      };
    } else if (!!(match = isoDurationRegex.exec(input))) {
      sign = (match[1] === "-") ? -1 : 1;
      parseIso = function(inp) {
        var res = inp && parseFloat(inp.replace(',', '.'));
        return (isNaN(res) ? 0 : res) * sign;
      };
      duration = {
        y: parseIso(match[2]),
        M: parseIso(match[3]),
        d: parseIso(match[4]),
        h: parseIso(match[5]),
        m: parseIso(match[6]),
        s: parseIso(match[7]),
        w: parseIso(match[8])
      };
    }
    ret = new Duration(duration);
    if (moment.isDuration(input) && input.hasOwnProperty('_lang')) {
      ret._lang = input._lang;
    }
    return ret;
  };
  moment.version = VERSION;
  moment.defaultFormat = isoFormat;
  moment.momentProperties = momentProperties;
  moment.updateOffset = function() {};
  moment.lang = function(key, values) {
    var r;
    if (!key) {
      return moment.fn._lang._abbr;
    }
    if (values) {
      loadLang(normalizeLanguage(key), values);
    } else if (values === null) {
      unloadLang(key);
      key = 'en';
    } else if (!languages[key]) {
      getLangDefinition(key);
    }
    r = moment.duration.fn._lang = moment.fn._lang = getLangDefinition(key);
    return r._abbr;
  };
  moment.langData = function(key) {
    if (key && key._lang && key._lang._abbr) {
      key = key._lang._abbr;
    }
    return getLangDefinition(key);
  };
  moment.isMoment = function(obj) {
    return obj instanceof Moment || (obj != null && obj.hasOwnProperty('_isAMomentObject'));
  };
  moment.isDuration = function(obj) {
    return obj instanceof Duration;
  };
  for (i = lists.length - 1; i >= 0; --i) {
    makeList(lists[i]);
  }
  moment.normalizeUnits = function(units) {
    return normalizeUnits(units);
  };
  moment.invalid = function(flags) {
    var m = moment.utc(NaN);
    if (flags != null) {
      extend(m._pf, flags);
    } else {
      m._pf.userInvalidated = true;
    }
    return m;
  };
  moment.parseZone = function() {
    return moment.apply(null, arguments).parseZone();
  };
  moment.parseTwoDigitYear = function(input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };
  extend(moment.fn = Moment.prototype, {
    clone: function() {
      return moment(this);
    },
    valueOf: function() {
      return +this._d + ((this._offset || 0) * 60000);
    },
    unix: function() {
      return Math.floor(+this / 1000);
    },
    toString: function() {
      return this.clone().lang('en').format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
    },
    toDate: function() {
      return this._offset ? new Date(+this) : this._d;
    },
    toISOString: function() {
      var m = moment(this).utc();
      if (0 < m.year() && m.year() <= 9999) {
        return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
      } else {
        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
      }
    },
    toArray: function() {
      var m = this;
      return [m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds()];
    },
    isValid: function() {
      return isValid(this);
    },
    isDSTShifted: function() {
      if (this._a) {
        return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;
      }
      return false;
    },
    parsingFlags: function() {
      return extend({}, this._pf);
    },
    invalidAt: function() {
      return this._pf.overflow;
    },
    utc: function() {
      return this.zone(0);
    },
    local: function() {
      this.zone(0);
      this._isUTC = false;
      return this;
    },
    format: function(inputString) {
      var output = formatMoment(this, inputString || moment.defaultFormat);
      return this.lang().postformat(output);
    },
    add: function(input, val) {
      var dur;
      if (typeof input === 'string') {
        dur = moment.duration(+val, input);
      } else {
        dur = moment.duration(input, val);
      }
      addOrSubtractDurationFromMoment(this, dur, 1);
      return this;
    },
    subtract: function(input, val) {
      var dur;
      if (typeof input === 'string') {
        dur = moment.duration(+val, input);
      } else {
        dur = moment.duration(input, val);
      }
      addOrSubtractDurationFromMoment(this, dur, -1);
      return this;
    },
    diff: function(input, units, asFloat) {
      var that = makeAs(input, this),
          zoneDiff = (this.zone() - that.zone()) * 6e4,
          diff,
          output;
      units = normalizeUnits(units);
      if (units === 'year' || units === 'month') {
        diff = (this.daysInMonth() + that.daysInMonth()) * 432e5;
        output = ((this.year() - that.year()) * 12) + (this.month() - that.month());
        output += ((this - moment(this).startOf('month')) - (that - moment(that).startOf('month'))) / diff;
        output -= ((this.zone() - moment(this).startOf('month').zone()) - (that.zone() - moment(that).startOf('month').zone())) * 6e4 / diff;
        if (units === 'year') {
          output = output / 12;
        }
      } else {
        diff = (this - that);
        output = units === 'second' ? diff / 1e3 : units === 'minute' ? diff / 6e4 : units === 'hour' ? diff / 36e5 : units === 'day' ? (diff - zoneDiff) / 864e5 : units === 'week' ? (diff - zoneDiff) / 6048e5 : diff;
      }
      return asFloat ? output : absRound(output);
    },
    from: function(time, withoutSuffix) {
      return moment.duration(this.diff(time)).lang(this.lang()._abbr).humanize(!withoutSuffix);
    },
    fromNow: function(withoutSuffix) {
      return this.from(moment(), withoutSuffix);
    },
    calendar: function() {
      var sod = makeAs(moment(), this).startOf('day'),
          diff = this.diff(sod, 'days', true),
          format = diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
      return this.format(this.lang().calendar(format, this));
    },
    isLeapYear: function() {
      return isLeapYear(this.year());
    },
    isDST: function() {
      return (this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone());
    },
    day: function(input) {
      var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
      if (input != null) {
        input = parseWeekday(input, this.lang());
        return this.add({d: input - day});
      } else {
        return day;
      }
    },
    month: makeAccessor('Month', true),
    startOf: function(units) {
      units = normalizeUnits(units);
      switch (units) {
        case 'year':
          this.month(0);
        case 'quarter':
        case 'month':
          this.date(1);
        case 'week':
        case 'isoWeek':
        case 'day':
          this.hours(0);
        case 'hour':
          this.minutes(0);
        case 'minute':
          this.seconds(0);
        case 'second':
          this.milliseconds(0);
      }
      if (units === 'week') {
        this.weekday(0);
      } else if (units === 'isoWeek') {
        this.isoWeekday(1);
      }
      if (units === 'quarter') {
        this.month(Math.floor(this.month() / 3) * 3);
      }
      return this;
    },
    endOf: function(units) {
      units = normalizeUnits(units);
      return this.startOf(units).add((units === 'isoWeek' ? 'week' : units), 1).subtract('ms', 1);
    },
    isAfter: function(input, units) {
      units = typeof units !== 'undefined' ? units : 'millisecond';
      return +this.clone().startOf(units) > +moment(input).startOf(units);
    },
    isBefore: function(input, units) {
      units = typeof units !== 'undefined' ? units : 'millisecond';
      return +this.clone().startOf(units) < +moment(input).startOf(units);
    },
    isSame: function(input, units) {
      units = units || 'ms';
      return +this.clone().startOf(units) === +makeAs(input, this).startOf(units);
    },
    min: function(other) {
      other = moment.apply(null, arguments);
      return other < this ? this : other;
    },
    max: function(other) {
      other = moment.apply(null, arguments);
      return other > this ? this : other;
    },
    zone: function(input, keepTime) {
      var offset = this._offset || 0;
      if (input != null) {
        if (typeof input === "string") {
          input = timezoneMinutesFromString(input);
        }
        if (Math.abs(input) < 16) {
          input = input * 60;
        }
        this._offset = input;
        this._isUTC = true;
        if (offset !== input) {
          if (!keepTime || this._changeInProgress) {
            addOrSubtractDurationFromMoment(this, moment.duration(offset - input, 'm'), 1, false);
          } else if (!this._changeInProgress) {
            this._changeInProgress = true;
            moment.updateOffset(this, true);
            this._changeInProgress = null;
          }
        }
      } else {
        return this._isUTC ? offset : this._d.getTimezoneOffset();
      }
      return this;
    },
    zoneAbbr: function() {
      return this._isUTC ? "UTC" : "";
    },
    zoneName: function() {
      return this._isUTC ? "Coordinated Universal Time" : "";
    },
    parseZone: function() {
      if (this._tzm) {
        this.zone(this._tzm);
      } else if (typeof this._i === 'string') {
        this.zone(this._i);
      }
      return this;
    },
    hasAlignedHourOffset: function(input) {
      if (!input) {
        input = 0;
      } else {
        input = moment(input).zone();
      }
      return (this.zone() - input) % 60 === 0;
    },
    daysInMonth: function() {
      return daysInMonth(this.year(), this.month());
    },
    dayOfYear: function(input) {
      var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;
      return input == null ? dayOfYear : this.add("d", (input - dayOfYear));
    },
    quarter: function(input) {
      return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    },
    weekYear: function(input) {
      var year = weekOfYear(this, this.lang()._week.dow, this.lang()._week.doy).year;
      return input == null ? year : this.add("y", (input - year));
    },
    isoWeekYear: function(input) {
      var year = weekOfYear(this, 1, 4).year;
      return input == null ? year : this.add("y", (input - year));
    },
    week: function(input) {
      var week = this.lang().week(this);
      return input == null ? week : this.add("d", (input - week) * 7);
    },
    isoWeek: function(input) {
      var week = weekOfYear(this, 1, 4).week;
      return input == null ? week : this.add("d", (input - week) * 7);
    },
    weekday: function(input) {
      var weekday = (this.day() + 7 - this.lang()._week.dow) % 7;
      return input == null ? weekday : this.add("d", input - weekday);
    },
    isoWeekday: function(input) {
      return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
    },
    isoWeeksInYear: function() {
      return weeksInYear(this.year(), 1, 4);
    },
    weeksInYear: function() {
      var weekInfo = this._lang._week;
      return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    },
    get: function(units) {
      units = normalizeUnits(units);
      return this[units]();
    },
    set: function(units, value) {
      units = normalizeUnits(units);
      if (typeof this[units] === 'function') {
        this[units](value);
      }
      return this;
    },
    lang: function(key) {
      if (key === undefined) {
        return this._lang;
      } else {
        this._lang = getLangDefinition(key);
        return this;
      }
    }
  });
  function rawMonthSetter(mom, value) {
    var dayOfMonth;
    if (typeof value === 'string') {
      value = mom.lang().monthsParse(value);
      if (typeof value !== 'number') {
        return mom;
      }
    }
    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
  }
  function rawGetter(mom, unit) {
    return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
  }
  function rawSetter(mom, unit, value) {
    if (unit === 'Month') {
      return rawMonthSetter(mom, value);
    } else {
      return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
    }
  }
  function makeAccessor(unit, keepTime) {
    return function(value) {
      if (value != null) {
        rawSetter(this, unit, value);
        moment.updateOffset(this, keepTime);
        return this;
      } else {
        return rawGetter(this, unit);
      }
    };
  }
  moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);
  moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);
  moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);
  moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);
  moment.fn.date = makeAccessor('Date', true);
  moment.fn.dates = deprecate("dates accessor is deprecated. Use date instead.", makeAccessor('Date', true));
  moment.fn.year = makeAccessor('FullYear', true);
  moment.fn.years = deprecate("years accessor is deprecated. Use year instead.", makeAccessor('FullYear', true));
  moment.fn.days = moment.fn.day;
  moment.fn.months = moment.fn.month;
  moment.fn.weeks = moment.fn.week;
  moment.fn.isoWeeks = moment.fn.isoWeek;
  moment.fn.quarters = moment.fn.quarter;
  moment.fn.toJSON = moment.fn.toISOString;
  extend(moment.duration.fn = Duration.prototype, {
    _bubble: function() {
      var milliseconds = this._milliseconds,
          days = this._days,
          months = this._months,
          data = this._data,
          seconds,
          minutes,
          hours,
          years;
      data.milliseconds = milliseconds % 1000;
      seconds = absRound(milliseconds / 1000);
      data.seconds = seconds % 60;
      minutes = absRound(seconds / 60);
      data.minutes = minutes % 60;
      hours = absRound(minutes / 60);
      data.hours = hours % 24;
      days += absRound(hours / 24);
      data.days = days % 30;
      months += absRound(days / 30);
      data.months = months % 12;
      years = absRound(months / 12);
      data.years = years;
    },
    weeks: function() {
      return absRound(this.days() / 7);
    },
    valueOf: function() {
      return this._milliseconds + this._days * 864e5 + (this._months % 12) * 2592e6 + toInt(this._months / 12) * 31536e6;
    },
    humanize: function(withSuffix) {
      var difference = +this,
          output = relativeTime(difference, !withSuffix, this.lang());
      if (withSuffix) {
        output = this.lang().pastFuture(difference, output);
      }
      return this.lang().postformat(output);
    },
    add: function(input, val) {
      var dur = moment.duration(input, val);
      this._milliseconds += dur._milliseconds;
      this._days += dur._days;
      this._months += dur._months;
      this._bubble();
      return this;
    },
    subtract: function(input, val) {
      var dur = moment.duration(input, val);
      this._milliseconds -= dur._milliseconds;
      this._days -= dur._days;
      this._months -= dur._months;
      this._bubble();
      return this;
    },
    get: function(units) {
      units = normalizeUnits(units);
      return this[units.toLowerCase() + 's']();
    },
    as: function(units) {
      units = normalizeUnits(units);
      return this['as' + units.charAt(0).toUpperCase() + units.slice(1) + 's']();
    },
    lang: moment.fn.lang,
    toIsoString: function() {
      var years = Math.abs(this.years()),
          months = Math.abs(this.months()),
          days = Math.abs(this.days()),
          hours = Math.abs(this.hours()),
          minutes = Math.abs(this.minutes()),
          seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);
      if (!this.asSeconds()) {
        return 'P0D';
      }
      return (this.asSeconds() < 0 ? '-' : '') + 'P' + (years ? years + 'Y' : '') + (months ? months + 'M' : '') + (days ? days + 'D' : '') + ((hours || minutes || seconds) ? 'T' : '') + (hours ? hours + 'H' : '') + (minutes ? minutes + 'M' : '') + (seconds ? seconds + 'S' : '');
    }
  });
  function makeDurationGetter(name) {
    moment.duration.fn[name] = function() {
      return this._data[name];
    };
  }
  function makeDurationAsGetter(name, factor) {
    moment.duration.fn['as' + name] = function() {
      return +this / factor;
    };
  }
  for (i in unitMillisecondFactors) {
    if (unitMillisecondFactors.hasOwnProperty(i)) {
      makeDurationAsGetter(i, unitMillisecondFactors[i]);
      makeDurationGetter(i.toLowerCase());
    }
  }
  makeDurationAsGetter('Weeks', 6048e5);
  moment.duration.fn.asMonths = function() {
    return (+this - this.years() * 31536e6) / 2592e6 + this.years() * 12;
  };
  moment.lang('en', {ordinal: function(number) {
      var b = number % 10,
          output = (toInt(number % 100 / 10) === 1) ? 'th' : (b === 1) ? 'st' : (b === 2) ? 'nd' : (b === 3) ? 'rd' : 'th';
      return number + output;
    }});
  function makeGlobal(shouldDeprecate) {
    if (typeof ender !== 'undefined') {
      return;
    }
    oldGlobalMoment = globalScope.moment;
    if (shouldDeprecate) {
      globalScope.moment = deprecate("Accessing Moment through the global scope is " + "deprecated, and will be removed in an upcoming " + "release.", moment);
    } else {
      globalScope.moment = moment;
    }
  }
  if (hasModule) {
    module.exports = moment;
  } else if (typeof define === "function" && define.amd) {
    define("npm:moment@2.6.0/moment.js", ["require", "exports", "module"], function(require, exports, module) {
      if (module.config && module.config() && module.config().noGlobal === true) {
        globalScope.moment = oldGlobalMoment;
      }
      return moment;
    }) && define("moment", ["npm:moment@2.6.0/moment.js"], function(m) {
      return m;
    });
    makeGlobal(true);
  } else {
    makeGlobal();
  }
}).call(this);

})();
(function() {
var define = System.amdDefine;
define("npm:moment@2.6.0.js", ["npm:moment@2.6.0/moment.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
"format amd";
(function(root, factory) {
  "use strict";
  if (typeof define === 'function' && define.amd) {
    define("github:moment/moment-timezone@0.4.1/builds/moment-timezone-with-data.js", ["npm:moment@2.6.0.js"], factory);
  } else if (typeof exports === 'object') {
    module.exports = factory(require('moment'));
  } else {
    factory(root.moment);
  }
}(this, function(moment) {
  "use strict";
  if (moment.tz !== undefined) {
    logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
    return moment;
  }
  var VERSION = "0.4.1",
      zones = {},
      links = {},
      names = {},
      momentVersion = moment.version.split('.'),
      major = +momentVersion[0],
      minor = +momentVersion[1];
  if (major < 2 || (major === 2 && minor < 6)) {
    logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');
  }
  function charCodeToInt(charCode) {
    if (charCode > 96) {
      return charCode - 87;
    } else if (charCode > 64) {
      return charCode - 29;
    }
    return charCode - 48;
  }
  function unpackBase60(string) {
    var i = 0,
        parts = string.split('.'),
        whole = parts[0],
        fractional = parts[1] || '',
        multiplier = 1,
        num,
        out = 0,
        sign = 1;
    if (string.charCodeAt(0) === 45) {
      i = 1;
      sign = -1;
    }
    for (i; i < whole.length; i++) {
      num = charCodeToInt(whole.charCodeAt(i));
      out = 60 * out + num;
    }
    for (i = 0; i < fractional.length; i++) {
      multiplier = multiplier / 60;
      num = charCodeToInt(fractional.charCodeAt(i));
      out += num * multiplier;
    }
    return out * sign;
  }
  function arrayToInt(array) {
    for (var i = 0; i < array.length; i++) {
      array[i] = unpackBase60(array[i]);
    }
  }
  function intToUntil(array, length) {
    for (var i = 0; i < length; i++) {
      array[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000));
    }
    array[length - 1] = Infinity;
  }
  function mapIndices(source, indices) {
    var out = [],
        i;
    for (i = 0; i < indices.length; i++) {
      out[i] = source[indices[i]];
    }
    return out;
  }
  function unpack(string) {
    var data = string.split('|'),
        offsets = data[2].split(' '),
        indices = data[3].split(''),
        untils = data[4].split(' ');
    arrayToInt(offsets);
    arrayToInt(indices);
    arrayToInt(untils);
    intToUntil(untils, indices.length);
    return {
      name: data[0],
      abbrs: mapIndices(data[1].split(' '), indices),
      offsets: mapIndices(offsets, indices),
      untils: untils
    };
  }
  function Zone(packedString) {
    if (packedString) {
      this._set(unpack(packedString));
    }
  }
  Zone.prototype = {
    _set: function(unpacked) {
      this.name = unpacked.name;
      this.abbrs = unpacked.abbrs;
      this.untils = unpacked.untils;
      this.offsets = unpacked.offsets;
    },
    _index: function(timestamp) {
      var target = +timestamp,
          untils = this.untils,
          i;
      for (i = 0; i < untils.length; i++) {
        if (target < untils[i]) {
          return i;
        }
      }
    },
    parse: function(timestamp) {
      var target = +timestamp,
          offsets = this.offsets,
          untils = this.untils,
          max = untils.length - 1,
          offset,
          offsetNext,
          offsetPrev,
          i;
      for (i = 0; i < max; i++) {
        offset = offsets[i];
        offsetNext = offsets[i + 1];
        offsetPrev = offsets[i ? i - 1 : i];
        if (offset < offsetNext && tz.moveAmbiguousForward) {
          offset = offsetNext;
        } else if (offset > offsetPrev && tz.moveInvalidForward) {
          offset = offsetPrev;
        }
        if (target < untils[i] - (offset * 60000)) {
          return offsets[i];
        }
      }
      return offsets[max];
    },
    abbr: function(mom) {
      return this.abbrs[this._index(mom)];
    },
    offset: function(mom) {
      return this.offsets[this._index(mom)];
    }
  };
  function normalizeName(name) {
    return (name || '').toLowerCase().replace(/\//g, '_');
  }
  function addZone(packed) {
    var i,
        name,
        normalized;
    if (typeof packed === "string") {
      packed = [packed];
    }
    for (i = 0; i < packed.length; i++) {
      name = packed[i].split('|')[0];
      normalized = normalizeName(name);
      zones[normalized] = packed[i];
      names[normalized] = name;
    }
  }
  function getZone(name, caller) {
    name = normalizeName(name);
    var zone = zones[name];
    var link;
    if (zone instanceof Zone) {
      return zone;
    }
    if (typeof zone === 'string') {
      zone = new Zone(zone);
      zones[name] = zone;
      return zone;
    }
    if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {
      zone = zones[name] = new Zone();
      zone._set(link);
      zone.name = names[name];
      return zone;
    }
    return null;
  }
  function getNames() {
    var i,
        out = [];
    for (i in names) {
      if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
        out.push(names[i]);
      }
    }
    return out.sort();
  }
  function addLink(aliases) {
    var i,
        alias,
        normal0,
        normal1;
    if (typeof aliases === "string") {
      aliases = [aliases];
    }
    for (i = 0; i < aliases.length; i++) {
      alias = aliases[i].split('|');
      normal0 = normalizeName(alias[0]);
      normal1 = normalizeName(alias[1]);
      links[normal0] = normal1;
      names[normal0] = alias[0];
      links[normal1] = normal0;
      names[normal1] = alias[1];
    }
  }
  function loadData(data) {
    addZone(data.zones);
    addLink(data.links);
    tz.dataVersion = data.version;
  }
  function zoneExists(name) {
    if (!zoneExists.didShowError) {
      zoneExists.didShowError = true;
      logError("moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.tz.zone('" + name + "')");
    }
    return !!getZone(name);
  }
  function needsOffset(m) {
    return !!(m._a && (m._tzm === undefined));
  }
  function logError(message) {
    if (typeof console !== 'undefined' && typeof console.error === 'function') {
      console.error(message);
    }
  }
  function tz(input) {
    var args = Array.prototype.slice.call(arguments, 0, -1),
        name = arguments[arguments.length - 1],
        zone = getZone(name),
        out = moment.utc.apply(null, args);
    if (zone && !moment.isMoment(input) && needsOffset(out)) {
      out.add(zone.parse(out), 'minutes');
    }
    out.tz(name);
    return out;
  }
  tz.version = VERSION;
  tz.dataVersion = '';
  tz._zones = zones;
  tz._links = links;
  tz._names = names;
  tz.add = addZone;
  tz.link = addLink;
  tz.load = loadData;
  tz.zone = getZone;
  tz.zoneExists = zoneExists;
  tz.names = getNames;
  tz.Zone = Zone;
  tz.unpack = unpack;
  tz.unpackBase60 = unpackBase60;
  tz.needsOffset = needsOffset;
  tz.moveInvalidForward = true;
  tz.moveAmbiguousForward = false;
  var fn = moment.fn;
  moment.tz = tz;
  moment.defaultZone = null;
  moment.updateOffset = function(mom, keepTime) {
    var zone = moment.defaultZone,
        offset;
    if (mom._z === undefined) {
      if (zone && needsOffset(mom) && !mom._isUTC) {
        mom._d = moment.utc(mom._a)._d;
        mom.utc().add(zone.parse(mom), 'minutes');
      }
      mom._z = zone;
    }
    if (mom._z) {
      offset = mom._z.offset(mom);
      if (Math.abs(offset) < 16) {
        offset = offset / 60;
      }
      if (mom.utcOffset !== undefined) {
        mom.utcOffset(-offset, keepTime);
      } else {
        mom.zone(offset, keepTime);
      }
    }
  };
  fn.tz = function(name) {
    if (name) {
      this._z = getZone(name);
      if (this._z) {
        moment.updateOffset(this);
      } else {
        logError("Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
      }
      return this;
    }
    if (this._z) {
      return this._z.name;
    }
  };
  function abbrWrap(old) {
    return function() {
      if (this._z) {
        return this._z.abbr(this);
      }
      return old.call(this);
    };
  }
  function resetZoneWrap(old) {
    return function() {
      this._z = null;
      return old.apply(this, arguments);
    };
  }
  fn.zoneName = abbrWrap(fn.zoneName);
  fn.zoneAbbr = abbrWrap(fn.zoneAbbr);
  fn.utc = resetZoneWrap(fn.utc);
  moment.tz.setDefault = function(name) {
    if (major < 2 || (major === 2 && minor < 9)) {
      logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');
    }
    moment.defaultZone = name ? getZone(name) : null;
    return moment;
  };
  var momentProperties = moment.momentProperties;
  if (Object.prototype.toString.call(momentProperties) === '[object Array]') {
    momentProperties.push('_z');
    momentProperties.push('_a');
  } else if (momentProperties) {
    momentProperties._z = null;
  }
  loadData({
    "version": "2015g",
    "zones": ["Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q", "Africa/Accra|LMT GMT GHST|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE", "Africa/Addis_Ababa|LMT EAT BEAT BEAUT|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ", "Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0", "Africa/Bangui|LMT WAT|-d.A -10|01|-22y0d.A", "Africa/Bissau|LMT WAT GMT|12.k 10 0|012|-2ldWV.E 2xonV.E", "Africa/Blantyre|LMT CAT|-2a.k -20|01|-2GJea.k", "Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0", "Africa/Casablanca|LMT WET WEST CET|u.k 0 -10 -10|0121212121212121213121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 Rc0 11A0 e00 e00 U00 11A0 8o0 e00 11A0 11A0 5A0 e00 17c0 1fA0 1a00 1a00 1fA0 17c0 1io0 14o0 1lc0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1lc0 14o0 1fA0", "Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18o0 3I00 17c0 1fA0 1a00 1io0 1a00 1y7p0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Africa/El_Aaiun|LMT WAT WET WEST|Q.M 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 Rc0 11A0 e00 e00 U00 11A0 8o0 e00 11A0 11A0 5A0 e00 17c0 1fA0 1a00 1a00 1fA0 17c0 1io0 14o0 1lc0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1lc0 14o0 1fA0", "Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0", "Africa/Juba|LMT CAT CAST EAT|-2a.8 -20 -30 -30|01212121212121212121212121212121213|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0", "Africa/Monrovia|MMT LRT GMT|H.8 I.u 0|012|-23Lzg.Q 29s01.m", "Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0", "Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00", "Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00", "Africa/Windhoek|SWAT SAST SAST CAT WAT WAST|-1u -20 -30 -20 -10 -20|012134545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2GJdu 1Ajdu 1cL0 1SqL0 9NA0 11D0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0", "America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Anchorage|CAT CAWT CAPT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Anguilla|LMT AST|46.4 40|01|-2kNvR.U", "America/Araguaina|LMT BRT BRST|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0", "America/Argentina/Buenos_Aires|CMT ART ARST ART ARST|4g.M 40 30 30 20|0121212121212121212121212121212121212121213434343434343234343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 g0p0 10M0 j3c0 uL0 1qN0 WL0", "America/Argentina/Catamarca|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343454343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 ako0 7B0 8zb0 uL0", "America/Argentina/Cordoba|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343454343234343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 j3c0 uL0 1qN0 WL0", "America/Argentina/Jujuy|CMT ART ARST ART ARST WART WARST|4g.M 40 30 30 20 40 30|01212121212121212121212121212121212121212134343456543432343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 g0p0 10M0 j3c0 uL0", "America/Argentina/La_Rioja|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|01212121212121212121212121212121212121212134343434534343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 g0p0 10M0 ako0 7B0 8zb0 uL0", "America/Argentina/Mendoza|CMT ART ARST ART ARST WART WARST|4g.M 40 30 30 20 40 30|0121212121212121212121212121212121212121213434345656543235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 g0p0 10M0 agM0 Op0 7TX0 uL0", "America/Argentina/Rio_Gallegos|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343434343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 g0p0 10M0 ako0 7B0 8zb0 uL0", "America/Argentina/Salta|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|01212121212121212121212121212121212121212134343434543432343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 j3c0 uL0", "America/Argentina/San_Juan|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|01212121212121212121212121212121212121212134343434534343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 g0p0 10M0 ak00 m10 8lb0 uL0", "America/Argentina/San_Luis|CMT ART ARST ART ARST WART WARST|4g.M 40 30 30 20 40 30|01212121212121212121212121212121212121212134343456536353465653|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 kin0 10M0 ak00 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0", "America/Argentina/Tucuman|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|012121212121212121212121212121212121212121343434345434323534343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 ako0 4N0 8BX0 uL0 1qN0 WL0", "America/Argentina/Ushuaia|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343434343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 g0p0 10M0 ajA0 8p0 8zb0 uL0", "America/Aruba|LMT ANT AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d", "America/Asuncion|AMT PYT PYT PYST|3O.E 40 30 30|012131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0", "America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0", "America/Bahia|LMT BRT BRST|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0", "America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0", "America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0", "America/Belem|LMT BRT BRST|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0", "America/Belize|LMT CST CHDT CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0", "America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0", "America/Boa_Vista|LMT AMT AMST|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0", "America/Bogota|BMT COT COST|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0", "America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Cambridge_Bay|zzz MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Campo_Grande|LMT AMT AMST|3C.s 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0", "America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0", "America/Caracas|CMT VET VET|4r.E 4u 40|0121|-2kV7w.k 28KM2.k 1IwOu", "America/Cayenne|LMT GFT GFT|3t.k 40 30|012|-2mrwu.E 2gWou.E", "America/Cayman|KMT EST EDT|57.b 50 40|0121212121212121212121212121212121212121212121|-2l1uQ.N 4duNQ.N 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0", "America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0", "America/Creston|MST PST|70 80|010|-29DR0 43B0", "America/Cuiaba|LMT AMT AMST|3I.k 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0", "America/Danmarkshavn|LMT WGT WGST GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0", "America/Dawson|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0", "America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|01234252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 Jy10 SL0 dnB0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|01212121212121341212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 LFB0 1cL0 3Cp0 1cL0 66N0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Eirunepe|LMT ACT ACST AMT|4D.s 50 40 40|0121212121212121212121212121212131|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0", "America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0", "America/Ensenada|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOP0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0", "America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Fortaleza|LMT BRT BRST|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0", "America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Godthab|LMT WGT WGST|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Grand_Turk|KMT EST EDT AST|57.b 50 40 40|0121212121212121212121212121212121212121212121212121212121212121212121212123|-2l1uQ.N 2HHBQ.N 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0", "America/Guayaquil|QMT ECT|5e 50|01|-1yVSK", "America/Guyana|LMT GBGT GYT GYT GYT|3Q.E 3J 3J 30 40|01234|-2dvU7.k 24JzQ.k mlc0 Bxbf", "America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0", "America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0", "America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Inuvik|zzz PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Iqaluit|zzz EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Jamaica|KMT EST EDT|57.b 50 40|0121212121212121212121|-2l1uQ.N 2uM1Q.N 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0", "America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 Bb0 10N0 2bB0 8in0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/La_Paz|CMT BOST BOT|4w.A 3w.A 40|012|-1x37r.o 13b0", "America/Lima|LMT PET PEST|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0", "America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp0 1Vb0 3dB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Maceio|LMT BRT BRST|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0", "America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0", "America/Manaus|LMT AMT AMST|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0", "America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0", "America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0", "America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0", "America/Metlakatla|PST PWT PPT PDT|80 70 70 70|0120303030303030303030303030303030|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0", "America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0", "America/Miquelon|LMT AST PMST PMDT|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0", "America/Montevideo|MMT UYT UYHST UYST UYT UYHST|3I.I 3u 30 20 30 2u|012121212121212121212121213434343434345454543453434343434343434343434343434343434343434|-20UIf.g 8jzJ.g 1cLu 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1qMu WLu 1qMu 11zu 1o0u 11zu NAu 11bu 2iMu zWu Dq10 19X0 pd0 jz0 cm10 19X0 1fB0 1on0 11d0 1oL0 1nB0 1fzu 1aou 1fzu 1aou 1fzu 3nAu Jb0 3MN0 1SLu 4jzu 2PB0 Lb0 3Dd0 1pb0 ixd0 An0 1MN0 An0 1wp0 On0 1wp0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0", "America/Montreal|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Noronha|LMT FNT FNST|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0", "America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Panama|CMT EST|5j.A 50|01|-2uduE.o", "America/Pangnirtung|zzz AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Paramaribo|LMT PMT PMT NEGT SRT SRT|3E.E 3E.Q 3E.A 3u 3u 30|012345|-2nDUj.k Wqo0.c qanX.I 1dmLN.o lzc0", "America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0", "America/Port-au-Prince|PPMT EST EDT|4N 50 40|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Porto_Acre|LMT ACT ACST AMT|4v.c 50 40 40|01212121212121212121212121212131|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0", "America/Porto_Velho|LMT AMT AMST|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0", "America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0", "America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Rankin_Inlet|zzz CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Recife|LMT BRT BRST|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0", "America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0", "America/Resolute|zzz CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Santa_Isabel|LMT MST PST PDT PWT PPT|7D.s 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOP0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0", "America/Santarem|LMT AMT AMST BRT|3C.M 40 30 30|0121212121212121212121212121213|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0", "America/Santiago|SMT CLT CLT CLST CLST CLT|4G.K 50 40 40 30 30|01020313131313121242124242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424245|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0", "America/Santo_Domingo|SDMT EST EDT EHDT AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00", "America/Sao_Paulo|LMT BRT BRST|36.s 30 20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0", "America/Scoresbysund|LMT CGT CGST EGST EGT|1r.Q 20 10 0 10|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0", "America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0", "America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Whitehorse|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "America/Yellowknife|zzz MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "Antarctica/Casey|zzz AWST CAST|0 -80 -b0|012121|-2q00 1DjS0 T90 40P0 KL0", "Antarctica/Davis|zzz DAVT DAVT|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0", "Antarctica/DumontDUrville|zzz PMT DDUT|0 -a0 -a0|0102|-U0o0 cfq0 bFm0", "Antarctica/Macquarie|AEST AEDT zzz MIST|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0", "Antarctica/Mawson|zzz MAWT MAWT|0 -60 -50|012|-CEo0 2fyk0", "Antarctica/McMurdo|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00", "Antarctica/Palmer|zzz ARST ART ART ARST CLT CLST CLT|0 30 40 30 20 40 30 30|012121212123435656565656565656565656565656565656565656565656565656565656565656567|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0", "Antarctica/Rothera|zzz ROTT|0 30|01|gOo0", "Antarctica/Syowa|zzz SYOT|0 -30|01|-vs00", "Antarctica/Troll|zzz UTC CEST|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Antarctica/Vostok|zzz VOST|0 -60|01|-tjA0", "Arctic/Longyearbyen|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Asia/Aden|LMT AST|-36.Q -30|01|-TvD6.Q", "Asia/Almaty|LMT ALMT ALMT ALMST|-57.M -50 -60 -70|0123232323232323232323232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3Cl0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0", "Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0", "Asia/Anadyr|LMT ANAT ANAT ANAST ANAST ANAST ANAT|-bN.U -c0 -d0 -e0 -d0 -c0 -b0|01232414141414141414141561414141414141414141414141414141414141561|-1PcbN.U eUnN.U 23CL0 1db0 1cN0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0", "Asia/Aqtau|LMT FORT FORT SHET SHET SHEST AQTT AQTST AQTST AQTT|-3l.4 -40 -50 -50 -60 -60 -50 -60 -50 -40|012345353535353535353536767676898989898989898989896|-1Pc3l.4 eUnl.4 1jcL0 JDc0 1cL0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2UK0 Fz0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cN0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 RW0", "Asia/Aqtobe|LMT AKTT AKTT AKTST AKTT AQTT AQTST|-3M.E -40 -50 -60 -60 -50 -60|01234323232323232323232565656565656565656565656565|-1Pc3M.E eUnM.E 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2UK0 Fz0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0", "Asia/Ashgabat|LMT ASHT ASHT ASHST ASHST TMT TMT|-3R.w -40 -50 -60 -50 -40 -50|012323232323232323232324156|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 ba0 xC0", "Asia/Baghdad|BMT AST ADT|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0", "Asia/Bahrain|LMT GST AST|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8", "Asia/Baku|LMT BAKT BAKT BAKST BAKST AZST AZT AZT AZST|-3j.o -30 -40 -50 -40 -40 -30 -40 -50|0123232323232323232323245657878787878787878787878787878787878787878787878787878787878787878787878787878787878787|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 10K0 c30 1cJ0 1cL0 8wu0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Asia/Bangkok|BMT ICT|-6G.4 -70|01|-218SG.4", "Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0", "Asia/Bishkek|LMT FRUT FRUT FRUST FRUST KGT KGST KGT|-4W.o -50 -60 -70 -60 -50 -60 -60|01232323232323232323232456565656565656565656565656567|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 11c0 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 T8u", "Asia/Brunei|LMT BNT BNT|-7D.E -7u -80|012|-1KITD.E gDc9.E", "Asia/Calcutta|HMT BURT IST IST|-5R.k -6u -5u -6u|01232|-18LFR.k 1unn.k HB0 7zX0", "Asia/Chita|LMT YAKT YAKT YAKST YAKST YAKT IRKT|-7x.Q -80 -90 -a0 -90 -a0 -80|012323232323232323232324123232323232323232323232323232323232323256|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Choibalsan|LMT ULAT ULAT CHOST CHOT CHOT CHOST|-7C -70 -80 -a0 -90 -80 -90|0123434343434343434343434343434343434343434343456565656565656565656565656565656565656565656565|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0", "Asia/Chongqing|CST CDT|-80 -90|01010101010101010|-1c1I0 LX0 16p0 1jz0 1Myp0 Rb0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0", "Asia/Colombo|MMT IST IHST IST LKT LKT|-5j.w -5u -60 -6u -6u -60|01231451|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu", "Asia/Dacca|HMT BURT IST DACT BDT BDST|-5R.k -6u -5u -60 -60 -70|01213454|-18LFR.k 1unn.k HB0 m6n0 LqMu 1x6n0 1i00", "Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0", "Asia/Dili|LMT TLT JST TLT WITA|-8m.k -80 -90 -90 -80|012343|-2le8m.k 1dnXm.k 8HA0 1ew00 Xld0", "Asia/Dubai|LMT GST|-3F.c -40|01|-21JfF.c", "Asia/Dushanbe|LMT DUST DUST DUSST DUSST TJT|-4z.c -50 -60 -70 -60 -50|0123232323232323232323245|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 14N0", "Asia/Gaza|EET EET EEST IST IDT|-20 -30 -30 -20 -30|010101010102020202020202020202023434343434343434343434343430202020202020202020202020202020202020202020202020202020202020202020202020202020202020|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 npB0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0", "Asia/Hebron|EET EET EEST IST IDT|-20 -30 -30 -20 -30|01010101010202020202020202020202343434343434343434343434343020202020202020202020202020202020202020202020202020202020202020202020202020202020202020|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 npB0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0", "Asia/Ho_Chi_Minh|LMT PLMT ICT IDT JST|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0", "Asia/Hong_Kong|LMT HKT HKST JST|-7A.G -80 -90 -90|0121312121212121212121212121212121212121212121212121212121212121212121|-2CFHA.G 1sEP6.G 1cL0 ylu 93X0 1qQu 1tX0 Rd0 1In0 NB0 1cL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1kL0 14N0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0", "Asia/Hovd|LMT HOVT HOVT HOVST|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0", "Asia/Irkutsk|IMT IRKT IRKT IRKST IRKST IRKT|-6V.5 -70 -80 -90 -80 -90|012323232323232323232324123232323232323232323232323232323232323252|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Istanbul|IMT EET EEST TRST TRT|-1U.U -20 -30 -40 -30|012121212121212121212121212121212121212121212121212121234343434342121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSp0 CL0 mN0 1Vz0 1gN0 1pz0 5Rd0 1fz0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1jB0 18L0 1ip0 17z0 qdd0 xX0 3S10 Tz0 dA10 11z0 1o10 11z0 1qN0 11z0 1ze0 11B0 WM0 1qO0 WI0 1nX0 1rB0 10L0 11B0 1in0 17d0 1in0 2pX0 19E0 1fU0 16Q0 1iI0 16Q0 1iI0 1Vd0 pb0 3Kp0 14o0 1df0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Asia/Jakarta|BMT JAVT WIB JST WIB WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu", "Asia/Jayapura|LMT WIT ACST|-9m.M -90 -9u|0121|-1uu9m.M sMMm.M L4nu", "Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|01212121212132121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 npB0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0", "Asia/Kabul|AFT AFT|-40 -4u|01|-10Qs0", "Asia/Kamchatka|LMT PETT PETT PETST PETST|-ay.A -b0 -c0 -d0 -c0|01232323232323232323232412323232323232323232323232323232323232412|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0", "Asia/Karachi|LMT IST IST KART PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy01 1cL0 dK0X 11b0 1610 1jX0", "Asia/Kashgar|LMT XJT|-5O.k -60|01|-1GgtO.k", "Asia/Kathmandu|LMT IST NPT|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g", "Asia/Khandyga|LMT YAKT YAKT YAKST YAKST VLAT VLAST VLAT YAKT|-92.d -80 -90 -a0 -90 -a0 -b0 -b0 -a0|01232323232323232323232412323232323232323232323232565656565656565782|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0", "Asia/Krasnoyarsk|LMT KRAT KRAT KRAST KRAST KRAT|-6b.q -60 -70 -80 -70 -80|012323232323232323232324123232323232323232323232323232323232323252|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Kuala_Lumpur|SMT MALT MALST MALT MALT JST MYT|-6T.p -70 -7k -7k -7u -90 -80|01234546|-2Bg6T.p 17anT.p 7hXE dM00 17bO 8Fyu 1so1u", "Asia/Kuching|LMT BORT BORT BORTST JST MYT|-7l.k -7u -80 -8k -90 -80|01232323232323232425|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0 1so10", "Asia/Macao|LMT MOT MOST CST|-7y.k -80 -90 -80|0121212121212121212121212121212121212121213|-2le7y.k 1XO34.k 1wn0 Rd0 1wn0 R9u 1wqu U10 1tz0 TVu 1tz0 17gu 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cJu 1cL0 1cN0 1fz0 1cN0 1cOu 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cJu 1cL0 1cN0 1fz0 1cN0 1cL0 KEp0", "Asia/Magadan|LMT MAGT MAGT MAGST MAGST MAGT|-a3.c -a0 -b0 -c0 -b0 -c0|012323232323232323232324123232323232323232323232323232323232323251|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Makassar|LMT MMT WITA JST|-7V.A -7V.A -80 -90|01232|-21JjV.A vfc0 myLV.A 8ML0", "Asia/Manila|PHT PHST JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0", "Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Asia/Novokuznetsk|LMT KRAT KRAT KRAST KRAST NOVST NOVT NOVT|-5M.M -60 -70 -80 -70 -70 -60 -70|012323232323232323232324123232323232323232323232323232323232325672|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0 8Hz0", "Asia/Novosibirsk|LMT NOVT NOVT NOVST NOVST|-5v.E -60 -70 -80 -70|0123232323232323232323241232341414141414141414141414141414141414121|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Omsk|LMT OMST OMST OMSST OMSST OMST|-4R.u -50 -60 -70 -60 -70|012323232323232323232324123232323232323232323232323232323232323252|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Oral|LMT URAT URAT URAST URAT URAST ORAT ORAST ORAT|-3p.o -40 -50 -60 -60 -50 -40 -50 -50|012343232323232323251516767676767676767676767676768|-1Pc3p.o eUnp.o 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 2UK0 Fz0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 RW0", "Asia/Pontianak|LMT PMT WIB JST WIB WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu", "Asia/Pyongyang|LMT KST JCST JST KST|-8n -8u -90 -90 -90|012341|-2um8n 97XR 12FXu jdA0 2Onc0", "Asia/Qyzylorda|LMT KIZT KIZT KIZST KIZT QYZT QYZT QYZST|-4l.Q -40 -50 -60 -60 -50 -60 -70|012343232323232323232325676767676767676767676767676|-1Pc4l.Q eUol.Q 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2UK0 dC0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0", "Asia/Rangoon|RMT BURT JST MMT|-6o.E -6u -90 -6u|0123|-21Jio.E SmnS.E 7j9u", "Asia/Sakhalin|LMT JCST JST SAKT SAKST SAKST SAKT|-9u.M -90 -90 -b0 -c0 -b0 -a0|0123434343434343434343435634343434343565656565656565656565656565636|-2AGVu.M 1iaMu.M je00 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o10 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Samarkand|LMT SAMT SAMT SAMST TAST UZST UZT|-4r.R -40 -50 -60 -60 -60 -50|01234323232323232323232356|-1Pc4r.R eUor.R 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 11x0 bf0", "Asia/Seoul|LMT KST JCST JST KST KDT KDT|-8r.Q -8u -90 -90 -90 -9u -a0|01234151515151515146464|-2um8r.Q 97XV.Q 12FXu jjA0 kKo0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0", "Asia/Singapore|SMT MALT MALST MALT MALT JST SGT SGT|-6T.p -70 -7k -7k -7u -90 -7u -80|012345467|-2Bg6T.p 17anT.p 7hXE dM00 17bO 8Fyu Mspu DTA0", "Asia/Srednekolymsk|LMT MAGT MAGT MAGST MAGST MAGT SRET|-ae.Q -a0 -b0 -c0 -b0 -c0 -b0|012323232323232323232324123232323232323232323232323232323232323256|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Taipei|JWST JST CST CDT|-80 -90 -80 -90|01232323232323232323232323232323232323232|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0", "Asia/Tashkent|LMT TAST TAST TASST TASST UZST UZT|-4B.b -50 -60 -70 -60 -60 -50|01232323232323232323232456|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 11y0 bf0", "Asia/Tbilisi|TBMT TBIT TBIT TBIST TBIST GEST GET GET GEST|-2X.b -30 -40 -50 -40 -40 -30 -40 -50|0123232323232323232323245656565787878787878787878567|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 3y0 19f0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cM0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0", "Asia/Tehran|LMT TMT IRST IRST IRDT IRDT|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0", "Asia/Thimbu|LMT IST BTT|-5W.A -5u -60|012|-Su5W.A 1BGMs.A", "Asia/Tokyo|JCST JST JDT|-90 -90 -a0|0121212121|-1iw90 pKq0 QL0 1lB0 13X0 1zB0 NX0 1zB0 NX0", "Asia/Ulaanbaatar|LMT ULAT ULAT ULAST|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0", "Asia/Ust-Nera|LMT YAKT YAKT MAGST MAGT MAGST MAGT MAGT VLAT VLAT|-9w.S -80 -90 -c0 -b0 -b0 -a0 -c0 -b0 -a0|0123434343434343434343456434343434343434343434343434343434343434789|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0", "Asia/Vladivostok|LMT VLAT VLAT VLAST VLAST VLAT|-8L.v -90 -a0 -b0 -a0 -b0|012323232323232323232324123232323232323232323232323232323232323252|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Yakutsk|LMT YAKT YAKT YAKST YAKST YAKT|-8C.W -80 -90 -a0 -90 -a0|012323232323232323232324123232323232323232323232323232323232323252|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Yekaterinburg|LMT PMT SVET SVET SVEST SVEST YEKT YEKST YEKT|-42.x -3J.5 -40 -50 -60 -50 -50 -60 -60|0123434343434343434343435267676767676767676767676767676767676767686|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Asia/Yerevan|LMT YERT YERT YERST YERST AMST AMT AMT AMST|-2W -30 -40 -50 -40 -40 -30 -40 -50|0123232323232323232323245656565657878787878787878787878787878787|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1am0 2r0 1cJ0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fb0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0", "Atlantic/Azores|HMT AZOT AZOST AZOMT AZOT AZOST WET|1S.w 20 10 0 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545456545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldW5.s aPX5.s Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "Atlantic/Canary|LMT CANT WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Atlantic/Cape_Verde|LMT CVT CVST CVT|1y.4 20 10 10|01213|-2xomp.U 1qOMp.U 7zX0 1djf0", "Atlantic/Faeroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Atlantic/Madeira|FMT MADT MADST MADMT WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldWQ.o aPWQ.o Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Atlantic/Reykjavik|LMT IST ISST GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0", "Atlantic/South_Georgia|GST|20|0|", "Atlantic/Stanley|SMT FKT FKST FKT FKST|3P.o 40 30 30 20|0121212121212134343212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 U10 1qM0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10", "Australia/ACT|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0", "Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0", "Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0", "Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0", "Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0", "Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0", "Australia/Eucla|ACWST ACWDT|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0", "Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0", "Australia/LHI|AEST LHST LHDT LHDT|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu", "Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0", "Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0", "Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0", "CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "Chile/EasterIsland|EMT EAST EASST EAST EASST EAST|7h.s 70 60 60 50 50|012121212121212121212121212123434343434343434343434343434343434343434343434343434343434343434345|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0", "EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "EST|EST|50|0|", "EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "Eire|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g5X0 14p0 1wn0 17d0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Etc/GMT+0|GMT|0|0|", "Etc/GMT+1|GMT+1|10|0|", "Etc/GMT+10|GMT+10|a0|0|", "Etc/GMT+11|GMT+11|b0|0|", "Etc/GMT+12|GMT+12|c0|0|", "Etc/GMT+2|GMT+2|20|0|", "Etc/GMT+3|GMT+3|30|0|", "Etc/GMT+4|GMT+4|40|0|", "Etc/GMT+5|GMT+5|50|0|", "Etc/GMT+6|GMT+6|60|0|", "Etc/GMT+7|GMT+7|70|0|", "Etc/GMT+8|GMT+8|80|0|", "Etc/GMT+9|GMT+9|90|0|", "Etc/GMT-1|GMT-1|-10|0|", "Etc/GMT-10|GMT-10|-a0|0|", "Etc/GMT-11|GMT-11|-b0|0|", "Etc/GMT-12|GMT-12|-c0|0|", "Etc/GMT-13|GMT-13|-d0|0|", "Etc/GMT-14|GMT-14|-e0|0|", "Etc/GMT-2|GMT-2|-20|0|", "Etc/GMT-3|GMT-3|-30|0|", "Etc/GMT-4|GMT-4|-40|0|", "Etc/GMT-5|GMT-5|-50|0|", "Etc/GMT-6|GMT-6|-60|0|", "Etc/GMT-7|GMT-7|-70|0|", "Etc/GMT-8|GMT-8|-80|0|", "Etc/GMT-9|GMT-9|-90|0|", "Etc/UCT|UCT|0|0|", "Etc/UTC|UTC|0|0|", "Europe/Amsterdam|AMT NST NEST NET CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Belfast|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Bratislava|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 16M0 1lc0 1tA0 17A0 11c0 1io0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Busingen|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|0123232323232323232345454676767676767676767623232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1ty0 2bD0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Kaliningrad|CET CEST CET CEST MSK MSD EEST EET FET|-10 -20 -20 -30 -30 -40 -30 -20 -30|0101010101010232454545454545454545454676767676767676767676767676767676767676787|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 Am0 Lb0 1en0 op0 1pNz0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1cJ0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ldXn.f aPWn.f Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|01010101010101010101010121212121234343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-28dd0 11A0 1go0 19A0 1co0 1dA0 b1A0 18o0 3I00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 iyo0 Rc0 18o0 1hc0 1io0 1a00 14o0 5aL0 MM0 1vc0 17A0 1i00 1bc0 1eo0 17d0 1in0 17A0 6hA0 10N0 XIL0 1a10 1in0 17d0 19X0 1cN0 1fz0 1a10 1fX0 1cp0 1cO0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2as10 M00 1cM0 1cM0 14o0 1o00 WM0 1qM0 17c0 1cM0 M3A0 5M20 WM0 1fA0 1cM0 1cM0 1cM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 Lz0 1C10 Lz0 1EN0 Lz0 1C10 Lz0 1zd0 Oo0 1C00 On0 1cp0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Minsk|MMT EET MSK CEST CET MSD EEST FET|-1O -20 -30 -20 -10 -40 -30 -30|012343432525252525252525252616161616161616161616161616161616161616172|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cK0 1cM0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hy0", "Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Moscow|MMT MMT MST MDST MSD MSK MSM EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c20 imv.j 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2as10 M00 1cM0 1cM0 14o0 1o00 WM0 1qM0 17c0 1cM0 M3A0 5M20 WM0 1fA0 1cM0 16K0 1iO0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 Lz0 1C10 Lz0 1EN0 Lz0 1C10 Lz0 1zd0 Oo0 1C00 On0 1C10 Lz0 1zd0 On0 1C10 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Samara|LMT SAMT SAMT KUYT KUYST MSD MSK EEST KUYT SAMST SAMST|-3k.k -30 -40 -40 -50 -40 -30 -30 -30 -50 -40|012343434343434343435656782929292929292929292929292929292929292a12|-22WNk.k qHak.k bcn0 1Qqo0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cN0 8o0 14j0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0", "Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0", "Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1a00 1cM0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646464647373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Volgograd|LMT TSAT STAT STAT VOLT VOLST VOLST VOLT MSD MSK MSK|-2V.E -30 -30 -40 -40 -50 -40 -30 -40 -30 -40|0123454545454545454546767489898989898989898989898989898989898989a9|-21IqV.E cLXV.E cEM0 1gqn0 Lco0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 2pz0 1cJ0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0", "Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "Europe/Zaporozhye|CUT EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "HST|HST|a0|0|", "Indian/Chagos|LMT IOT IOT|-4N.E -50 -60|012|-2xosN.E 3AGLN.E", "Indian/Christmas|CXT|-70|0|", "Indian/Cocos|CCT|-6u|0|", "Indian/Kerguelen|zzz TFT|0 -50|01|-MG00", "Indian/Mahe|LMT SCT|-3F.M -40|01|-2yO3F.M", "Indian/Maldives|MMT MVT|-4S -50|01|-olgS", "Indian/Mauritius|LMT MUT MUST|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0", "Indian/Reunion|LMT RET|-3F.Q -40|01|-2mDDF.Q", "Kwajalein|MHT KWAT MHT|-b0 c0 -c0|012|-AX0 W9X0", "MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00", "MST|MST|70|0|", "MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "NZ-CHAT|CHAST CHAST CHADT|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00", "PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0", "Pacific/Apia|LMT WSST SST SDT WSDT WSST|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00", "Pacific/Bougainville|PGT JST BST|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0", "Pacific/Chuuk|CHUT|-a0|0|", "Pacific/Efate|LMT VUT VUST|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0", "Pacific/Enderbury|PHOT PHOT PHOT|c0 b0 -d0|012|nIc0 B8n0", "Pacific/Fakaofo|TKT TKT|b0 -d0|01|1Gfn0", "Pacific/Fiji|LMT FJT FJST|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1SM0 uM0 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1SM0 uM0", "Pacific/Funafuti|TVT|-c0|0|", "Pacific/Galapagos|LMT ECT GALT|5W.o 50 60|012|-1yVS1.A 2dTz1.A", "Pacific/Gambier|LMT GAMT|8X.M 90|01|-2jof0.c", "Pacific/Guadalcanal|LMT SBT|-aD.M -b0|01|-2joyD.M", "Pacific/Guam|GST ChST|-a0 -a0|01|1fpq0", "Pacific/Honolulu|HST HDT HST|au 9u a0|010102|-1thLu 8x0 lef0 8Pz0 46p0", "Pacific/Kiritimati|LINT LINT LINT|aE a0 -e0|012|nIaE B8nk", "Pacific/Kosrae|KOST KOST|-b0 -c0|010|-AX0 1bdz0", "Pacific/Majuro|MHT MHT|-b0 -c0|01|-AX0", "Pacific/Marquesas|LMT MART|9i 9u|01|-2joeG", "Pacific/Midway|LMT NST BST SST|bm.M b0 b0 b0|0123|-2nDMB.c 2gVzB.c EyM0", "Pacific/Nauru|LMT NRT JST NRT|-b7.E -bu -90 -c0|01213|-1Xdn7.E PvzB.E 5RCu 1ouJu", "Pacific/Niue|NUT NUT NUT|bk bu b0|012|-KfME 17y0a", "Pacific/Norfolk|NMT NFT NFST NFT|-bc -bu -cu -b0|01213|-Kgbc W01G On0 1COp0", "Pacific/Noumea|LMT NCT NCST|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0", "Pacific/Palau|PWT|-90|0|", "Pacific/Pitcairn|PNT PST|8u 80|01|18Vku", "Pacific/Pohnpei|PONT|-b0|0|", "Pacific/Port_Moresby|PGT|-a0|0|", "Pacific/Rarotonga|CKT CKHST CKT|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu", "Pacific/Tahiti|LMT TAHT|9W.g a0|01|-2joe1.I", "Pacific/Tarawa|GILT|-c0|0|", "Pacific/Tongatapu|TOT TOT TOST|-ck -d0 -e0|01212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0", "Pacific/Wake|WAKT|-c0|0|", "Pacific/Wallis|WFT|-c0|0|", "WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00"],
    "links": ["Africa/Abidjan|Africa/Bamako", "Africa/Abidjan|Africa/Banjul", "Africa/Abidjan|Africa/Conakry", "Africa/Abidjan|Africa/Dakar", "Africa/Abidjan|Africa/Freetown", "Africa/Abidjan|Africa/Lome", "Africa/Abidjan|Africa/Nouakchott", "Africa/Abidjan|Africa/Ouagadougou", "Africa/Abidjan|Africa/Sao_Tome", "Africa/Abidjan|Africa/Timbuktu", "Africa/Abidjan|Atlantic/St_Helena", "Africa/Addis_Ababa|Africa/Asmara", "Africa/Addis_Ababa|Africa/Asmera", "Africa/Addis_Ababa|Africa/Dar_es_Salaam", "Africa/Addis_Ababa|Africa/Djibouti", "Africa/Addis_Ababa|Africa/Kampala", "Africa/Addis_Ababa|Africa/Mogadishu", "Africa/Addis_Ababa|Africa/Nairobi", "Africa/Addis_Ababa|Indian/Antananarivo", "Africa/Addis_Ababa|Indian/Comoro", "Africa/Addis_Ababa|Indian/Mayotte", "Africa/Bangui|Africa/Brazzaville", "Africa/Bangui|Africa/Douala", "Africa/Bangui|Africa/Kinshasa", "Africa/Bangui|Africa/Lagos", "Africa/Bangui|Africa/Libreville", "Africa/Bangui|Africa/Luanda", "Africa/Bangui|Africa/Malabo", "Africa/Bangui|Africa/Niamey", "Africa/Bangui|Africa/Porto-Novo", "Africa/Blantyre|Africa/Bujumbura", "Africa/Blantyre|Africa/Gaborone", "Africa/Blantyre|Africa/Harare", "Africa/Blantyre|Africa/Kigali", "Africa/Blantyre|Africa/Lubumbashi", "Africa/Blantyre|Africa/Lusaka", "Africa/Blantyre|Africa/Maputo", "Africa/Cairo|Egypt", "Africa/Johannesburg|Africa/Maseru", "Africa/Johannesburg|Africa/Mbabane", "Africa/Juba|Africa/Khartoum", "Africa/Tripoli|Libya", "America/Adak|America/Atka", "America/Adak|US/Aleutian", "America/Anchorage|US/Alaska", "America/Anguilla|America/Antigua", "America/Anguilla|America/Dominica", "America/Anguilla|America/Grenada", "America/Anguilla|America/Guadeloupe", "America/Anguilla|America/Marigot", "America/Anguilla|America/Montserrat", "America/Anguilla|America/Port_of_Spain", "America/Anguilla|America/St_Barthelemy", "America/Anguilla|America/St_Kitts", "America/Anguilla|America/St_Lucia", "America/Anguilla|America/St_Thomas", "America/Anguilla|America/St_Vincent", "America/Anguilla|America/Tortola", "America/Anguilla|America/Virgin", "America/Argentina/Buenos_Aires|America/Buenos_Aires", "America/Argentina/Catamarca|America/Argentina/ComodRivadavia", "America/Argentina/Catamarca|America/Catamarca", "America/Argentina/Cordoba|America/Cordoba", "America/Argentina/Cordoba|America/Rosario", "America/Argentina/Jujuy|America/Jujuy", "America/Argentina/Mendoza|America/Mendoza", "America/Aruba|America/Curacao", "America/Aruba|America/Kralendijk", "America/Aruba|America/Lower_Princes", "America/Atikokan|America/Coral_Harbour", "America/Chicago|US/Central", "America/Denver|America/Shiprock", "America/Denver|Navajo", "America/Denver|US/Mountain", "America/Detroit|US/Michigan", "America/Edmonton|Canada/Mountain", "America/Ensenada|America/Tijuana", "America/Ensenada|Mexico/BajaNorte", "America/Fort_Wayne|America/Indiana/Indianapolis", "America/Fort_Wayne|America/Indianapolis", "America/Fort_Wayne|US/East-Indiana", "America/Halifax|Canada/Atlantic", "America/Havana|Cuba", "America/Indiana/Knox|America/Knox_IN", "America/Indiana/Knox|US/Indiana-Starke", "America/Jamaica|Jamaica", "America/Kentucky/Louisville|America/Louisville", "America/Los_Angeles|US/Pacific", "America/Los_Angeles|US/Pacific-New", "America/Manaus|Brazil/West", "America/Mazatlan|Mexico/BajaSur", "America/Mexico_City|Mexico/General", "America/Montreal|America/Toronto", "America/Montreal|Canada/Eastern", "America/New_York|US/Eastern", "America/Noronha|Brazil/DeNoronha", "America/Phoenix|US/Arizona", "America/Porto_Acre|America/Rio_Branco", "America/Porto_Acre|Brazil/Acre", "America/Regina|Canada/East-Saskatchewan", "America/Regina|Canada/Saskatchewan", "America/Santiago|Chile/Continental", "America/Sao_Paulo|Brazil/East", "America/St_Johns|Canada/Newfoundland", "America/Vancouver|Canada/Pacific", "America/Whitehorse|Canada/Yukon", "America/Winnipeg|Canada/Central", "Antarctica/McMurdo|Antarctica/South_Pole", "Antarctica/McMurdo|NZ", "Antarctica/McMurdo|Pacific/Auckland", "Arctic/Longyearbyen|Atlantic/Jan_Mayen", "Arctic/Longyearbyen|Europe/Oslo", "Asia/Aden|Asia/Kuwait", "Asia/Aden|Asia/Riyadh", "Asia/Ashgabat|Asia/Ashkhabad", "Asia/Bahrain|Asia/Qatar", "Asia/Bangkok|Asia/Phnom_Penh", "Asia/Bangkok|Asia/Vientiane", "Asia/Calcutta|Asia/Kolkata", "Asia/Chongqing|Asia/Chungking", "Asia/Chongqing|Asia/Harbin", "Asia/Chongqing|Asia/Shanghai", "Asia/Chongqing|PRC", "Asia/Dacca|Asia/Dhaka", "Asia/Dubai|Asia/Muscat", "Asia/Ho_Chi_Minh|Asia/Saigon", "Asia/Hong_Kong|Hongkong", "Asia/Istanbul|Europe/Istanbul", "Asia/Istanbul|Turkey", "Asia/Jerusalem|Asia/Tel_Aviv", "Asia/Jerusalem|Israel", "Asia/Kashgar|Asia/Urumqi", "Asia/Kathmandu|Asia/Katmandu", "Asia/Macao|Asia/Macau", "Asia/Makassar|Asia/Ujung_Pandang", "Asia/Nicosia|Europe/Nicosia", "Asia/Seoul|ROK", "Asia/Singapore|Singapore", "Asia/Taipei|ROC", "Asia/Tehran|Iran", "Asia/Thimbu|Asia/Thimphu", "Asia/Tokyo|Japan", "Asia/Ulaanbaatar|Asia/Ulan_Bator", "Atlantic/Faeroe|Atlantic/Faroe", "Atlantic/Reykjavik|Iceland", "Australia/ACT|Australia/Canberra", "Australia/ACT|Australia/NSW", "Australia/ACT|Australia/Sydney", "Australia/Adelaide|Australia/South", "Australia/Brisbane|Australia/Queensland", "Australia/Broken_Hill|Australia/Yancowinna", "Australia/Darwin|Australia/North", "Australia/Hobart|Australia/Tasmania", "Australia/LHI|Australia/Lord_Howe", "Australia/Melbourne|Australia/Victoria", "Australia/Perth|Australia/West", "Chile/EasterIsland|Pacific/Easter", "Eire|Europe/Dublin", "Etc/GMT+0|Etc/GMT", "Etc/GMT+0|Etc/GMT-0", "Etc/GMT+0|Etc/GMT0", "Etc/GMT+0|Etc/Greenwich", "Etc/GMT+0|GMT", "Etc/GMT+0|GMT+0", "Etc/GMT+0|GMT-0", "Etc/GMT+0|GMT0", "Etc/GMT+0|Greenwich", "Etc/UCT|UCT", "Etc/UTC|Etc/Universal", "Etc/UTC|Etc/Zulu", "Etc/UTC|UTC", "Etc/UTC|Universal", "Etc/UTC|Zulu", "Europe/Belfast|Europe/Guernsey", "Europe/Belfast|Europe/Isle_of_Man", "Europe/Belfast|Europe/Jersey", "Europe/Belfast|Europe/London", "Europe/Belfast|GB", "Europe/Belfast|GB-Eire", "Europe/Belgrade|Europe/Ljubljana", "Europe/Belgrade|Europe/Podgorica", "Europe/Belgrade|Europe/Sarajevo", "Europe/Belgrade|Europe/Skopje", "Europe/Belgrade|Europe/Zagreb", "Europe/Bratislava|Europe/Prague", "Europe/Busingen|Europe/Vaduz", "Europe/Busingen|Europe/Zurich", "Europe/Chisinau|Europe/Tiraspol", "Europe/Helsinki|Europe/Mariehamn", "Europe/Lisbon|Portugal", "Europe/Moscow|W-SU", "Europe/Rome|Europe/San_Marino", "Europe/Rome|Europe/Vatican", "Europe/Warsaw|Poland", "Kwajalein|Pacific/Kwajalein", "NZ-CHAT|Pacific/Chatham", "Pacific/Chuuk|Pacific/Truk", "Pacific/Chuuk|Pacific/Yap", "Pacific/Guam|Pacific/Saipan", "Pacific/Honolulu|Pacific/Johnston", "Pacific/Honolulu|US/Hawaii", "Pacific/Midway|Pacific/Pago_Pago", "Pacific/Midway|Pacific/Samoa", "Pacific/Midway|US/Samoa", "Pacific/Pohnpei|Pacific/Ponape"]
  });
  return moment;
}));

})();
(function() {
var define = System.amdDefine;
define("github:moment/moment-timezone@0.4.1.js", ["github:moment/moment-timezone@0.4.1/builds/moment-timezone-with-data.js"], function(main) {
  return main;
});

})();
System.register('utils/converters.js', ['github:moment/moment-timezone@0.4.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var moment, noView, TimeValueConverter, DateValueConverter, DateTimeValueConverter, DateFormatValueConverter, Utils, CancelValueConverter, DestroyValueConverter, PlanSortValueConverter, SortValueConverter, TextTrimValueConverter;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_momentTz) {
      moment = _momentTz['default'];
    }, function (_aureliaFramework) {
      noView = _aureliaFramework.noView;
    }],
    execute: function () {
      TimeValueConverter = function () {
        function TimeValueConverter() {
          _classCallCheck(this, _TimeValueConverter);
        }

        _createClass(TimeValueConverter, [{
          key: 'toView',
          value: function toView(value) {
            return moment(value).utc().format("hh:mm A");
          }
        }]);

        var _TimeValueConverter = TimeValueConverter;
        TimeValueConverter = noView(TimeValueConverter) || TimeValueConverter;
        return TimeValueConverter;
      }();

      _export('TimeValueConverter', TimeValueConverter);

      DateValueConverter = function () {
        function DateValueConverter() {
          _classCallCheck(this, _DateValueConverter);
        }

        _createClass(DateValueConverter, [{
          key: 'toView',
          value: function toView(value) {
            return moment(value).utc().format("DD MMMM, dddd");
          }
        }, {
          key: 'toMediumDate',
          value: function toMediumDate(value) {
            return moment(value).utc().format('ddd, MMM D, YYYY');
          }
        }, {
          key: 'toLongDate',
          value: function toLongDate(value) {
            return moment(value).utc().format('dddd, MMMM D, YYYY');
          }
        }, {
          key: 'toShortDate',
          value: function toShortDate(value) {
            return moment(value).utc().format('M-D-YY');
          }
        }]);

        var _DateValueConverter = DateValueConverter;
        DateValueConverter = noView(DateValueConverter) || DateValueConverter;
        return DateValueConverter;
      }();

      _export('DateValueConverter', DateValueConverter);

      DateTimeValueConverter = function () {
        function DateTimeValueConverter() {
          _classCallCheck(this, _DateTimeValueConverter);
        }

        _createClass(DateTimeValueConverter, [{
          key: 'toView',
          value: function toView(value) {
            var format = "MM-DD-YYYY hh:mm A";
            var tz = "UTC";
            return moment(value).tz(tz).format(format);
          }
        }, {
          key: 'toDateTime',
          value: function toDateTime(value) {
            var format = "MM-DD-YYYY hh:mm A";
            var tz = "UTC";
            return moment(value).tz(tz).format(format);
          }
        }]);

        var _DateTimeValueConverter = DateTimeValueConverter;
        DateTimeValueConverter = noView(DateTimeValueConverter) || DateTimeValueConverter;
        return DateTimeValueConverter;
      }();

      _export('DateTimeValueConverter', DateTimeValueConverter);

      DateFormatValueConverter = function () {
        function DateFormatValueConverter() {
          _classCallCheck(this, _DateFormatValueConverter);
        }

        _createClass(DateFormatValueConverter, [{
          key: 'toView',
          value: function toView(value, format) {
            var tz = "UTC";
            return moment(value).tz(tz).format(format);
          }
        }]);

        var _DateFormatValueConverter = DateFormatValueConverter;
        DateFormatValueConverter = noView(DateFormatValueConverter) || DateFormatValueConverter;
        return DateFormatValueConverter;
      }();

      _export('DateFormatValueConverter', DateFormatValueConverter);

      Utils = function () {
        function Utils() {
          _classCallCheck(this, _Utils);
        }

        _createClass(Utils, [{
          key: 'debounce',
          value: function debounce(func, wait, immediate) {
            var timeout;
            return function () {
              var context = this,
                  args = arguments;
              var later = function later() {
                timeout = null;
                if (!immediate) func.apply(context, args);
              };
              var callNow = immediate && !timeout;
              clearTimeout(timeout);
              timeout = setTimeout(later, wait);
              if (callNow) func.apply(context, args);
            };
          }
        }]);

        var _Utils = Utils;
        Utils = noView(Utils) || Utils;
        return Utils;
      }();

      _export('Utils', Utils);

      CancelValueConverter = function () {
        function CancelValueConverter() {
          _classCallCheck(this, _CancelValueConverter);
        }

        _createClass(CancelValueConverter, [{
          key: 'toView',
          value: function toView(array) {
            var temps = [];
            array.forEach(function (item) {
              if (item.status != "Cancelled") {
                temps.push(item);
              }
            });
            return temps;
          }
        }]);

        var _CancelValueConverter = CancelValueConverter;
        CancelValueConverter = noView(CancelValueConverter) || CancelValueConverter;
        return CancelValueConverter;
      }();

      _export('CancelValueConverter', CancelValueConverter);

      DestroyValueConverter = function () {
        function DestroyValueConverter() {
          _classCallCheck(this, _DestroyValueConverter);
        }

        _createClass(DestroyValueConverter, [{
          key: 'toView',
          value: function toView(array) {
            var temps = [];
            array.forEach(function (item) {
              if (!item._destroy) {
                temps.push(item);
              }
            });
            return temps;
          }
        }]);

        var _DestroyValueConverter = DestroyValueConverter;
        DestroyValueConverter = noView(DestroyValueConverter) || DestroyValueConverter;
        return DestroyValueConverter;
      }();

      _export('DestroyValueConverter', DestroyValueConverter);

      PlanSortValueConverter = function () {
        function PlanSortValueConverter() {
          _classCallCheck(this, _PlanSortValueConverter);
        }

        _createClass(PlanSortValueConverter, [{
          key: 'toView',
          value: function toView(array) {
            return _.sortByAll(array, ["action_name"]);
          }
        }]);

        var _PlanSortValueConverter = PlanSortValueConverter;
        PlanSortValueConverter = noView(PlanSortValueConverter) || PlanSortValueConverter;
        return PlanSortValueConverter;
      }();

      _export('PlanSortValueConverter', PlanSortValueConverter);

      SortValueConverter = function () {
        function SortValueConverter() {
          _classCallCheck(this, _SortValueConverter);
        }

        _createClass(SortValueConverter, [{
          key: 'toView',
          value: function toView(array, propertyName) {
            return array.slice(0).sort(function (a, b) {
              return a[propertyName] - b[propertyName];
            });
          }
        }]);

        var _SortValueConverter = SortValueConverter;
        SortValueConverter = noView(SortValueConverter) || SortValueConverter;
        return SortValueConverter;
      }();

      _export('SortValueConverter', SortValueConverter);

      TextTrimValueConverter = function () {
        function TextTrimValueConverter() {
          _classCallCheck(this, _TextTrimValueConverter);
        }

        _createClass(TextTrimValueConverter, [{
          key: 'toView',
          value: function toView(value) {
            return value.trim();
          }
        }]);

        var _TextTrimValueConverter = TextTrimValueConverter;
        TextTrimValueConverter = noView(TextTrimValueConverter) || TextTrimValueConverter;
        return TextTrimValueConverter;
      }();

      _export('TextTrimValueConverter', TextTrimValueConverter);
    }
  };
});
System.register('view-models/briefings/list_agenda.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/briefing_request_service.js', 'models/briefing_request.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'components/dhtmlx-calendar.js', 'components/briefing-agenda/attendee.js', 'components/listing.js', 'npm:aurelia-router@1.0.0-beta.1.js', 'github:lodash/lodash@3.10.1.js', 'utils/converters.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var inject, bindable, BriefingRequestService, BriefingRequestModel, EventAggregator, DhtmlxCalendar, Attendee, Listing, Router, _, DateValueConverter, TimeValueConverter, I18N, ListAgenda;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    var _get = function get(_x, _x2, _x3) {
        var _again = true;_function: while (_again) {
            var object = _x,
                property = _x2,
                receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
                var parent = Object.getPrototypeOf(object);if (parent === null) {
                    return undefined;
                } else {
                    _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
                }
            } else if ('value' in desc) {
                return desc.value;
            } else {
                var getter = desc.get;if (getter === undefined) {
                    return undefined;
                }return getter.call(receiver);
            }
        }
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_serviceBriefing_request_service) {
            BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
        }, function (_modelsBriefing_request) {
            BriefingRequestModel = _modelsBriefing_request.BriefingRequestModel;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_componentsDhtmlxCalendar) {
            DhtmlxCalendar = _componentsDhtmlxCalendar.DhtmlxCalendar;
        }, function (_componentsBriefingAgendaAttendee) {
            Attendee = _componentsBriefingAgendaAttendee.Attendee;
        }, function (_componentsListing) {
            Listing = _componentsListing.Listing;
        }, function (_aureliaRouter) {
            Router = _aureliaRouter.Router;
        }, function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }, function (_utilsConverters) {
            DateValueConverter = _utilsConverters.DateValueConverter;
            TimeValueConverter = _utilsConverters.TimeValueConverter;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            ListAgenda = function (_Listing) {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _inherits(ListAgenda, _Listing);

                _createDecoratedClass(ListAgenda, [{
                    key: 'request',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function ListAgenda(brs, ea, Router, i18n) {
                    _classCallCheck(this, _ListAgenda);

                    _get(Object.getPrototypeOf(_ListAgenda.prototype), 'constructor', this).call(this, ea);

                    _defineDecoratedPropertyDescriptor(this, 'request', _instanceInitializers);

                    this.view = '';
                    this.items = [];
                    this.event = {};
                    this.meetings = [];
                    this.longDay = [];
                    this.calendarXY = {};
                    this.surveyLinks = [];
                    this.calendarData = [];
                    this.showSurvey = false;
                    this.conciergeCount = 0;
                    this.calendarConfig = {};
                    this.externalAttendees = [];
                    this.conciergeServices = [];
                    this.showAssignButton = false;
                    this.roomAvailabilities = {};
                    this.room_offsite_configs = {};
                    this.showActionSurveyLink = false;
                    this.showRequestorSurveyLink = false;
                    this.renderDraftPlanCalendar = false;
                    this.preferred_internal_attendees = [];
                    this.agendaActionBarSurvey = {};
                    this.statusStyle = {
                        "Past": "past",
                        "In Queue": "queue",
                        "Pending": "pending",
                        "Confirmed": "approved",
                        "Requested": "requested",
                        "Cancelled": "cancelled",
                        "Pending Confirmation": "pending-confirmation"
                    };
                    this.actionName = '';
                    this.ea = ea;
                    this.i18n = i18n;
                    this.router = Router;
                    this.envDetails = envDetails;
                    this.briefingRequestService = brs;
                    this.i18n.setLocale('en').then(function () {});
                    this.isSFDC = $('#sf-jiffle-now').length >= 1;
                    this.briefingRequest = new BriefingRequestModel();
                    this.dateValueConverter = new DateValueConverter();
                    this.timeValueConverter = new TimeValueConverter();
                    this.canViewBriefingHistory = window.canViewBriefingHistory;
                }

                _createDecoratedClass(ListAgenda, [{
                    key: 'activate',
                    value: function activate(params, routeConfig, options) {
                        var _this = this;

                        this.uuid = params.uuid;
                        return this.briefingRequestService.getBriefingDetails(this.uuid).then(function (response) {
                            if (response.response) {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == true || response.status == 200) {
                                _this.isSFDC && _this.setSfdcMeetingUrlForDraft(response);
                                _this.originalData = response.data;
                                _this.briefingRequest.setupData(response.data);
                                _this.draftAgendaPlans = _this.originalData.draft_plans;
                                _this.conciergeServices = _this.originalData.concierge_services;
                                _this.conciergeServices.forEach(function (con) {
                                    _this.conciergeCount += con.count;
                                });
                                _this.briefingRequestService.update_briefing_url = response.data.actions.briefing_update_url;
                                _this.briefingRequestService.deleteBriefingUrl = response.data.actions.briefing_delete_url;
                                _this.briefingRequestService.confirmBriefingUrl = response.data.actions.briefing_confirm_url;
                                _this.briefingRequestService.prepareAgendaUrl = response.data.actions.briefing_meetings_url;
                                _this.briefingRequestService.briefingAgendaUrl = response.data.actions.briefing_agenda_url;
                                _this.prepareAgendaUrl = _this.briefingRequestService.getPrepareAgendaUrl(_this.briefingRequest.uuid);
                                _this.showAssignButton = _this.envDetails.role == "QueueManager" && _this.briefingRequest.status == "In Queue";
                                _this.externalAttendees = _this.briefingRequest.externalAttendees;
                                _this.internalAttendees = _this.briefingRequest.internalAttendees;
                                _this.briefingRoom = response.data.room;
                                _this.meetings = _this.originalData.activityList.activities;
                                if (_this.briefingRequest.preferred_internal_attendees) {
                                    _this.preferred_internal_attendees = _.map(_this.briefingRequest.preferred_internal_attendees.split(','), function (attendee) {
                                        return { last_name: '', first_name: attendee };
                                    });
                                }
                                _this.briefingRequestService.getRoomActivities({ location_uuid: location_uuid }).then(function (response) {
                                    if (response.response) {
                                        response = JSON.parse(response.response);
                                    }
                                    if (response.success == true || response.status == 200) {
                                        _this.room_offsite_configs = response.data.room_offsite_configs;
                                    }
                                });
                                _this.inviteOptions = response.data.invite_options || {};
                                _this.cancelOptions = response.data.cancel_options || {};
                            }
                        });
                    }
                }, {
                    key: 'attached',
                    value: function attached() {
                        _get(Object.getPrototypeOf(_ListAgenda.prototype), 'attached', this).call(this, { domElement: this.meetingView });
                        $(window).off("scroll");
                        Handlebars.registerHelper('ifObject', function (item, opts) {
                            if (typeof item === "object") {
                                return opts.fn(this);
                            } else {
                                return opts.inverse(this);
                            }
                        });
                        Handlebars.registerHelper('check_multiselects', function (widget, opts) {
                            if (widget == "multiselect_dropdown") {
                                return opts.fn(this);
                            } else {
                                return opts.inverse(this);
                            }
                        });

                        $(this.briefingDrop).dropdown();
                        this.setAgendaSurveyDetails();

                        $([this.internalAttendeeContainer, this.externalAttendeeContainer]).off('scroll').on('scroll', function (event) {
                            $(this).find('.dropdown.open').removeClass('open');
                        });

                        $(window).on('scroll', function () {
                            $('.briefing-activity-list .dropdown.open').removeClass('open');
                        });
                    }
                }, {
                    key: 'setAgendaSurveyDetails',
                    value: function setAgendaSurveyDetails() {
                        if (this.originalData) {
                            this.showActionSurveyLink = this.originalData.fill_survey || false;
                            this.showRequestorSurveyLink = this.originalData.requestor_fill_survey || false;
                        }
                    }
                }, {
                    key: 'agendaSurveyClickAction',
                    value: function agendaSurveyClickAction(event, isRequestor) {
                        var surveyDetails = isRequestor ? this.originalData.requestor_fill_survey_links : this.originalData.fill_survey_links;
                        var attedeeUuid = isRequestor ? this.originalData.requestor.uuid : '';
                        this.ea.publish("survey:showModal", {
                            uuid: this.originalData.uuid,
                            surveys: surveyDetails.survey_links,
                            attendee: attedeeUuid,
                            show_send_mail: surveyDetails.show_send_mail
                        });
                    }
                }, {
                    key: 'updateCalendar',
                    value: function updateCalendar(date) {
                        this.ea.publish('update:dataChange');
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        _get(Object.getPrototypeOf(_ListAgenda.prototype), 'detached', this).call(this, { domElement: this.meetingView });
                        this.subscription.dispose();
                    }
                }, {
                    key: 'gridView',
                    value: function gridView() {
                        this.view = 'tile';
                    }
                }, {
                    key: 'showHistory',
                    value: function showHistory() {
                        this.view = 'history';
                    }
                }, {
                    key: 'calendarView',
                    value: function calendarView() {
                        var _this2 = this;

                        if (!this.renderDraftPlanCalendar) {
                            var availParam = {
                                book_meeting: true,
                                briefing_uuid: this.briefingRequest.uuid
                            };
                            this.briefingRequestService.getBriefingCenterAvailability(availParam).then(function (response) {
                                if (response.response) {
                                    response = JSON.parse(response.response);
                                }
                                if (response.success == true || response.status == 200) {
                                    _this2.minimumDuration = response.data.meeting_types_minimum_slot;
                                    _this2.roomAvailabilities = response.data.briefing_centre_availability;
                                }

                                _this2.loadCalendar();
                            });
                        } else {
                            this.view = 'calendar';
                            this.ea.publish('update:dataChange');
                        }
                    }
                }, {
                    key: 'showAgendaHeading',
                    value: function showAgendaHeading() {
                        var show = false;
                        if (this.originalData.is_draft_enabled && this.draftAgendaPlans.length) {
                            this.draftAgendaPlans.forEach(function (plan) {
                                if (plan.status == 'Accepted') {
                                    show = true;
                                }
                            });
                            return show;
                        } else {
                            return true;
                        }
                    }
                }, {
                    key: 'loadCalendar',
                    value: function loadCalendar() {
                        if (this.originalData.is_draft_enabled) {
                            this.renderDraftPlanCalendar = true;
                        } else {
                            this.fillCalendarData();
                            this.configureCalendar();
                        }

                        this.view = 'calendar';
                    }
                }, {
                    key: 'listView',
                    value: function listView() {
                        this.view = 'list';
                    }
                }, {
                    key: 'fillCalendarData',
                    value: function fillCalendarData() {
                        var _this3 = this;

                        this.calendarData.splice(0, this.calendarData.length);
                        this.items.forEach(function (item) {
                            if (item.status !== "cancelled") {
                                var title = _.find(_this3.meetings, function (meeting) {
                                    return meeting.activity.id == item.activity_id;
                                }.bind(_this3))['meeting_title'];

                                _this3.calendarData.push({
                                    meetingId: item.id,
                                    status: item.status,
                                    meeting_uuid: item.uuid,
                                    location: item.room_name,
                                    meeting_title: title || "",
                                    text: item.briefing_meeting_title,
                                    navigate: item.meeting_detail_url,
                                    end_date: moment(item.end_time.replace('Z', '')).format('YYYY-MM-DD HH:mm'),
                                    start_date: moment(item.start_time.replace('Z', '')).format('YYYY-MM-DD HH:mm')
                                });
                            }
                        });
                    }
                }, {
                    key: 'configureCalendar',
                    value: function configureCalendar() {
                        this.calendarConfig = {
                            now_date: new Date(1970, 1, 1),
                            xml_date: "%Y-%m-%d %H:%i",
                            day_date: "%D, %M %j",
                            drag_move: false,
                            drag_resize: 0,
                            drag_create: 0,
                            limit_view: true,
                            details_on_create: false,
                            hour_size_px: Math.ceil(60 / this.minimumDuration) * 22,
                            separate_short_events: true,
                            multi_day: false,
                            mark_now: false,
                            readonly: true,
                            icons_select: [],
                            icons_edit: [],
                            dblclick_create: false
                        };
                        this.calendarXY = {
                            nav_height: 0,
                            min_event_height: 20
                        };

                        this.event = {
                            startDate: this.originalData.start_time,
                            endDate: this.originalData.end_time
                        };
                    }
                }, {
                    key: 'deleteMe',
                    value: function deleteMe() {
                        var _this4 = this;

                        var _cancelOptions = this.cancelOptions;
                        var options = _cancelOptions.predefined_cancel_comments;
                        var enabled = _cancelOptions.cancel_comments_enabled;

                        var captureModalOptions = { options: options, enabled: enabled };
                        var status = this.briefingRequest.status !== 'Confirmed' ? '' : 'Confirmed';

                        var doneHandler = function doneHandler(params) {
                            _this4.deleteBriefing(params);
                        };

                        this.ea.publish('show:reason-capture-modal', {
                            config: captureModalOptions,
                            type: 'cancel',
                            status: status,
                            doneHandler: doneHandler
                        });
                    }
                }, {
                    key: 'deleteBriefing',
                    value: function deleteBriefing(params) {
                        var _this5 = this;

                        this.briefingRequestService.deleteBriefingRequest(null, params).then(function (response) {
                            _this5.goToBriefingList();
                        })['catch'](function (response) {
                            $('#cover').fadeOut();
                            if (response.response && typeof response.response === "string") {
                                response = JSON.parse(response.response);
                            }
                            window.setTimeout(function () {
                                _this5.ea.publish("show:notification", {
                                    title: _this5.i18n.tr('briefings.commons.cannotCancelBriefing'),
                                    message: response.message,
                                    'class': 'red',
                                    onHide: function onHide() {
                                        if (response.already_cancelled_briefing) {
                                            _this5.goToBriefingList();
                                        }
                                    }
                                });
                            }, 200);
                        });
                    }
                }, {
                    key: 'goToBriefingList',
                    value: function goToBriefingList() {
                        if (this.isSFDC) window.commons.redirectPage('/apex/JNNewBriefings?briefings=true&eventName=' + window.envDetails.event.event_system_name + '&current_location_uuid=' + window.envDetails.current_location_uuid);else window.commons.redirectPage(window.envDetails.urlPrefix + '/meeting_list?briefings=true');
                    }
                }, {
                    key: 'fetchFromServer',
                    value: function fetchFromServer(params) {
                        var _this6 = this;

                        params.per_page = 100;
                        this.briefingRequestService.getBriefingAgenda(this.uuid, params).then(function (response) {
                            _this6.fetching = false;
                            if (response.response) {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == true || response.status == 200) {
                                var meetings = response.data.meeting_requests || [];
                                _this6.setMeetingDetailUrl(meetings);
                                _this6.items = _this6.items.concat(meetings);
                                _this6.surveyLinks = response.data.survey_links;
                                _this6.showSurvey = response.data.show_survey;
                                _this6.calendarView();
                            }
                        });
                    }
                }, {
                    key: 'setSfdcMeetingUrlForDraft',
                    value: function setSfdcMeetingUrlForDraft(response) {
                        var _this7 = this;

                        if (response.data.draft_plans.length == 0 || !response.data.draft_plans[0].agenda_slots) return;

                        var agenda_slots = response.data.draft_plans[0].agenda_slots;
                        agenda_slots.forEach(function (slot) {
                            if (slot.meeting_request_uuid) {
                                slot.meeting_request_url = _this7.getSfdcMeetingDetailUrl({
                                    uuid: slot.meeting_request_uuid
                                }, slot.meeting_request_url.indexOf('/edit') > 0);
                            }
                        });
                    }
                }, {
                    key: 'setMeetingDetailUrl',
                    value: function setMeetingDetailUrl(meetings) {
                        var _this8 = this;

                        meetings.forEach(function (meeting) {
                            var canEdit = false;
                            var meetingDetailUrl = '';
                            if (meeting.meeting_detail_url) {
                                canEdit = meeting.meeting_detail_url.indexOf('/edit') > 0;
                                meetingDetailUrl = meeting.meeting_detail_url + '?current_location_uuid=' + window.envDetails.current_location_uuid;
                            } else {
                                meetingDetailUrl = envDetails.jiffleRootUrl + envDetails.urlPrefix;
                                meetingDetailUrl += meetingDetailUrl.charAt(meetingDetailUrl.length - 1) == "/" ? "" : "/";
                                meetingDetailUrl += 'meeting_request/' + meeting.uuid + '/view?current_location_uuid=' + window.envDetails.current_location_uuid;
                            }
                            if (_this8.isSFDC) {
                                meetingDetailUrl = _this8.getSfdcMeetingDetailUrl(meeting, canEdit);
                            }

                            meeting.meeting_detail_url = meetingDetailUrl;
                        });
                    }
                }, {
                    key: 'getSfdcMeetingDetailUrl',
                    value: function getSfdcMeetingDetailUrl(meeting, canEdit) {
                        var mode = canEdit ? 'edit' : 'view';
                        var search = window.location.search;
                        var vfPageName = canEdit ? 'JNEbcBookMeeting' : 'JNViewMeeting';
                        var meetingQuery = '&mode=' + mode + '&meeting=' + meeting.uuid + '&ebc=' + true;
                        search += search ? meetingQuery : meetingQuery + '?current_location_uuid=' + window.envDetails.current_location_uuid;
                        return '/apex/' + vfPageName + search;
                    }
                }, {
                    key: 'edit_briefing',
                    value: function edit_briefing() {
                        if (this.originalData.is_draft_enabled) {
                            this.ea.publish('draft-plan:get-submit-plan-status');
                        } else {
                            this.navigateToBriefingEditPage();
                        }
                    }
                }, {
                    key: 'navigateToBriefingEditPage',
                    value: function navigateToBriefingEditPage() {
                        this.router.navigateToRoute('BriefingRequest', { uuid: this.uuid });
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this9 = this;

                        this.subscription = this.ea.subscribe('request:agenda', function (meeting) {
                            var url = _this9.prepareAgendaUrl;
                            if (meeting.topic != null) {
                                url = url + '?topic_uuid=' + meeting.topic;
                                if (meeting.meeting != null) {
                                    url = url + '&bam_uuid=' + meeting.meeting;
                                }
                            } else {
                                if (meeting.meeting != null) {
                                    url = url + '?bam_uuid=' + meeting.meeting;
                                }
                            }
                            url = url + '&current_location_uuid=' + window.envDetails.current_location_uuid;
                            if (_this9.briefingRoom) {
                                url = url + '&room_uuid=' + _this9.briefingRoom.uuid;
                            }
                            location.href = url;
                        });
                        this.ea.subscribe('confirm:briefing', function (data) {
                            _this9.briefingRequest.status = 'Confirmed';
                            _this9.originalData = data;
                            _this9.briefingRequest.setupData(data);
                            _this9.externalAttendees = _this9.briefingRequest.externalAttendees;
                            _this9.internalAttendees = _this9.briefingRequest.internalAttendees;
                        });
                        this.ea.subscribe('agenda:concierge:refresh', function (concierge_services) {
                            _this9.conciergeServices = concierge_services;
                        });

                        this.ea.subscribe('briefing:update', function (data) {
                            _this9.originalData = data;
                            _this9.briefingRequest.setupData(data);
                            _this9.externalAttendees = _this9.briefingRequest.externalAttendees;
                            _this9.internalAttendees = _this9.briefingRequest.internalAttendees;
                        });

                        this.ea.subscribe('draft-plan:plan-all-status', function (actionName) {
                            _this9.actionName = actionName;
                        });

                        this.ea.subscribe('draft-plan:submit-plan-status', function (showSubmitAction) {
                            if (showSubmitAction) {
                                _this9.ea.publish("show:notification", {
                                    title: _this9.i18n.tr('components.briefingAgenda.draftPlan.unsavePlan'),
                                    message: _this9.i18n.tr('components.briefingAgenda.draftPlan.editBriefing'),
                                    'class': 'yellow',
                                    isConfirmation: true,
                                    done: function done() {
                                        return _this9.navigateToBriefingEditPage();
                                    }
                                });
                            } else {
                                _this9.navigateToBriefingEditPage();
                            }
                        });
                    }
                }, {
                    key: 'isAdmin',
                    value: function isAdmin() {
                        return this.envDetails.isCSM() || this.envDetails.isJuniorMM() || this.envDetails.isMeetingManager() || this.envDetails.isQueueManager();
                    }
                }, {
                    key: 'acceptBriefing',
                    value: function acceptBriefing() {
                        var _this10 = this;

                        this.briefingRequestService.acceptBriefingRequest(this.originalData.actions.accept_url).then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.success == false) {
                                _this10.showNotification('red', _this10.i18n.tr('briefings.commons.cannotAcceptBriefing'), response.errors);
                            } else {
                                _this10.acceptedStatus = 'Accepted';
                                _this10.replaceAttendee(_this10.internalAttendees, response.data.user);
                                _this10.showNotification('green', _this10.i18n.tr('briefings.commons.briefingAcceptedTitle'), _this10.i18n.tr('briefings.commons.briefingAcceptedBody'));
                            }
                        });
                    }
                }, {
                    key: 'declineBriefing',
                    value: function declineBriefing() {
                        var _this11 = this;

                        var doneHandler = function doneHandler(params) {
                            return _this11.briefingRequestService.declineBriefingRequest(_this11.originalData.actions.decline_url, params).then(function (response) {
                                if (typeof response.response == "string") {
                                    response = JSON.parse(response.response);
                                }
                                if (response.success == false) {
                                    _this11.showNotification('red', _this11.i18n.tr('briefings.commons.cannotDeclineBriefing'), response.errors);
                                } else {
                                    _this11.declinedStatus = 'Declined';
                                    _this11.replaceAttendee(_this11.internalAttendees, response.data.user);
                                    _this11.showNotification('green', _this11.i18n.tr('briefings.commons.briefingDeclineTitle'), _this11.i18n.tr('briefings.commons.briefingDeclinedBody'));
                                }
                            });
                        };

                        var _inviteOptions = this.inviteOptions;
                        var options = _inviteOptions.predefined_decline_comments;
                        var enabled = _inviteOptions.decline_comments_enabled;

                        var captureModalOptions = { options: options, enabled: enabled };

                        this.ea.publish('show:reason-capture-modal', {
                            config: captureModalOptions,
                            doneHandler: doneHandler
                        });
                    }
                }, {
                    key: 'replaceAttendee',
                    value: function replaceAttendee(list, attendee) {
                        var index = _.findIndex(list, { email: attendee.email });
                        list.splice(index, 1, attendee);
                    }
                }, {
                    key: 'confirm',
                    value: function confirm() {
                        var _this12 = this;

                        this.ea.publish("show:notification", {
                            title: this.i18n.tr('briefings.commons.areYouSure'),
                            message: this.i18n.tr('briefings.commons.clickNoMessage'),
                            'class': 'green',
                            isConfirmation: true,
                            done: function done() {
                                if (_this12.items.length == 0) {
                                    _this12.errorBriefing();
                                } else {
                                    _this12.confirmBriefing();
                                }
                            }
                        });
                    }
                }, {
                    key: 'confirmBriefing',
                    value: function confirmBriefing() {
                        var _this13 = this;

                        this.briefingRequestService.confirmBriefingRequest().then(function (response) {
                            if (typeof response.response === "string") response = JSON.parse(response.response);
                            if (response.success == false || response.status != 200) {
                                setTimeout(function () {
                                    _this13.ea.publish("show:notification", {
                                        title: _this13.i18n.tr('briefings.commons.cannotConfirmBriefing'),
                                        message: response.errors,
                                        'class': 'red',
                                        autoHideDuration: 5000
                                    });
                                }, 500);
                            } else {
                                _this13.ea.publish("confirm:briefing", response.data);
                            }
                        })['catch'](function (response) {
                            _this13.errorBriefing();
                        });
                    }
                }, {
                    key: 'showNotification',
                    value: function showNotification(className, title, message) {
                        this.ea.publish("show:notification", {
                            title: title,
                            message: message,
                            'class': className,
                            autoHideDuration: 5000
                        });
                    }
                }, {
                    key: 'errorBriefing',
                    value: function errorBriefing() {
                        var _this14 = this;

                        setTimeout(function () {
                            _this14.ea.publish("show:notification", {
                                title: _this14.i18n.tr('briefings.commons.briefingNotReady'),
                                message: _this14.i18n.tr('briefings.commons.briefingMeetingErrorMessage'),
                                'class': 'red',
                                autoHideDuration: 5000
                            });
                        }, 500);
                    }
                }, {
                    key: 'showSurveyIconForSfdc',
                    value: function showSurveyIconForSfdc() {
                        return !(this.isSFDC && this.isAdmin());
                    }
                }, {
                    key: 'showMoreActions',
                    value: function showMoreActions(actions) {
                        return actions.download_briefing_report_all_url || actions.download_briefing_report_internal_url || actions.download_briefing_report_external_url || actions.briefing_export_report_url;
                    }
                }, {
                    key: 'downloadReport',
                    value: function downloadReport(event, url) {
                        event.preventDefault();
                        window.commons.redirectPage(url);
                    }
                }, {
                    key: 'planAll',
                    value: function planAll() {
                        this.ea.publish('draft-plan:plan-all', this.actionName);

                        if (this.actionName === this.i18n.tr('components.briefingAgenda.requestedMeeting.plan')) {
                            this.actionName = this.i18n.tr('components.commons.remove');
                        } else {
                            this.actionName = this.i18n.tr('components.briefingAgenda.requestedMeeting.plan');
                        }
                    }
                }], null, _instanceInitializers);

                var _ListAgenda = ListAgenda;
                ListAgenda = inject(BriefingRequestService, EventAggregator, Router, I18N)(ListAgenda) || ListAgenda;
                return ListAgenda;
            }(Listing);

            _export('ListAgenda', ListAgenda);
        }
    };
});
System.registerDynamic("view-models/briefings/listagenda-footer.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n<require from=\"../../components/notification/notification-modal\"></require>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-md-offset-4 col-md-8 briefingagenda-ftr-btn\">\n        <button click.delegate=\"confirm()\" class=\"btn btn-blue col-xs-5 col-sm-3\" id=\"submitButton\" i18n=\"briefings.commons.confirm\"></button>\n    </div>\n  </div>\n</div>\n</template>\n";
});
System.register('service/briefing_request_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
    'use strict';

    var HttpRequest, inject, API, BriefingRequestService;

    var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }return target;
    };

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_utilsRequest) {
            HttpRequest = _utilsRequest.HttpRequest;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            BriefingRequestService = function () {
                function BriefingRequestService(httpRequest, api) {
                    _classCallCheck(this, _BriefingRequestService);

                    this.briefing_list_url = '';
                    this.briefingDetailsUrl = '';
                    this.briefingAgendaUrl = '';
                    this.new_briefing_url = '';
                    this.update_briefing_url = '';
                    this.prepareAgendaUrl = '';
                    this.meetingRequestEdit = '';
                    this.deleteBriefingUrl = '';
                    this.confirmBriefingUrl = '';
                    this.customerListUrl = '';
                    this.managerListUrl = '';
                    this.acceptBriefingUrl = '';
                    this.declineBriefingUrl = '';

                    this.httpRequest = httpRequest;
                    this.api = api;
                    var baseUrl = this.api.getBaseUrl();
                    this.managerListUrl = baseUrl + this.api.managerUsers;
                    this.customerListUrl = baseUrl + this.api.briefingCompanies;
                    this.roomListUrl = baseUrl + this.api.briefingRoomList;
                    this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
                }

                _createClass(BriefingRequestService, [{
                    key: 'getEventInfo',
                    value: function getEventInfo() {
                        var eventInfoUrl = this.api.getBaseUrl() + this.api.eventInfo;
                        var params = { get_briefing_label: true };
                        return this.httpRequest.createGetRequest(eventInfoUrl, params);
                    }
                }, {
                    key: 'getBreifingRequests',
                    value: function getBreifingRequests(params) {
                        return this.httpRequest.createGetRequest(this.briefing_list_url, params);
                    }
                }, {
                    key: 'getBriefingDetails',
                    value: function getBriefingDetails(uuid) {
                        var briefingDetailUrl = this.briefingDetailsUrl;

                        if (briefingDetailUrl == '') {
                            briefingDetailUrl = this.api.getBaseUrl() + this.api.briefingDetail;
                            briefingDetailUrl = briefingDetailUrl.replace('{uuid}', uuid);
                        }
                        return this.httpRequest.createGetRequest(briefingDetailUrl);
                    }
                }, {
                    key: 'getBriefingCenterAvailability',
                    value: function getBriefingCenterAvailability(params) {
                        var briefingAvailabilityUrl = this.api.getBaseUrl() + this.api.briefingInitialAvailability;
                        return this.httpRequest.createGetRequest(briefingAvailabilityUrl, params);
                    }
                }, {
                    key: 'createBriefingRequest',
                    value: function createBriefingRequest(briefingCenterUuid, params) {
                        var newBriefingUrl = this.api.getBaseUrl() + this.api.newBriefing;
                        newBriefingUrl = newBriefingUrl.replace('{briefingCenterUuid}', briefingCenterUuid);

                        return this.httpRequest.createPostRequest(newBriefingUrl, params, 'create_briefing');
                    }
                }, {
                    key: 'updateBriefingRequest',
                    value: function updateBriefingRequest(briefingUuid, params) {
                        var updateBriefingUrl = this.api.getBaseUrl() + this.api.updateBrieifng;
                        updateBriefingUrl = updateBriefingUrl.replace('{briefingUuid}', briefingUuid);
                        return this.httpRequest.createPutRequest(updateBriefingUrl, params, 'update_briefing');
                    }
                }, {
                    key: 'deleteBriefingRequest',
                    value: function deleteBriefingRequest(briefingDeleteUrl) {
                        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

                        if (!briefingDeleteUrl) {
                            briefingDeleteUrl = this.isSFDC ? this.deleteBriefingUrl.split('?')[0] : this.deleteBriefingUrl;
                        }
                        return this.httpRequest.createPutRequest(briefingDeleteUrl, params);
                    }
                }, {
                    key: 'confirmBriefingRequest',
                    value: function confirmBriefingRequest() {
                        return this.httpRequest.createPutRequest(this.confirmBriefingUrl);
                    }
                }, {
                    key: 'acceptBriefingRequest',
                    value: function acceptBriefingRequest(acceptBriefingUrl) {
                        if (acceptBriefingUrl) {
                            this.acceptBriefingUrl = acceptBriefingUrl;
                        }
                        return this.httpRequest.createPutRequest(this.acceptBriefingUrl);
                    }
                }, {
                    key: 'declineBriefingRequest',
                    value: function declineBriefingRequest(declineBriefingUrl) {
                        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

                        if (declineBriefingUrl) {
                            if (this.isSFDC) {
                                this.declineBriefingUrl = declineBriefingUrl.split('?')[0];
                                params = _extends({}, params, { 'user_uuid': $.urlParam('api_params\\[user_uuid\\]', decodeURI(declineBriefingUrl)) });
                            } else {
                                this.declineBriefingUrl = declineBriefingUrl;
                            }
                        }
                        return this.httpRequest.createPutRequest(this.declineBriefingUrl, params);
                    }
                }, {
                    key: 'getPrepareAgendaUrl',
                    value: function getPrepareAgendaUrl(uuid) {
                        var prepareAgendaUrl = this.prepareAgendaUrl;
                        prepareAgendaUrl = this.api.getBaseUrl() + this.api.newMeetingFromBriefing;
                        prepareAgendaUrl = prepareAgendaUrl.replace('{uuid}', uuid);
                        return prepareAgendaUrl;
                    }
                }, {
                    key: 'getBriefingAgenda',
                    value: function getBriefingAgenda(uuid, params) {
                        var briefingAgendaUrl = this.briefingAgendaUrl;
                        if (briefingAgendaUrl) {
                            briefingAgendaUrl = this.api.getBaseUrl() + this.api.briefingAgenda;
                            briefingAgendaUrl = briefingAgendaUrl.replace('{uuid}', uuid);
                        }
                        return this.httpRequest.createGetRequest(briefingAgendaUrl, params);
                    }
                }, {
                    key: 'getRoomActivities',
                    value: function getRoomActivities(params) {
                        var url = this.api.getBaseUrl() + this.api.roomActivities;
                        return this.httpRequest.createGetRequest(url, params);
                    }
                }, {
                    key: 'getBriefingCustomForm',
                    value: function getBriefingCustomForm(params) {
                        var url = this.api.getBaseUrl() + this.api.customForms;
                        return this.httpRequest.createGetRequest(url, params);
                    }
                }, {
                    key: 'getSfdcMethod',
                    value: function getSfdcMethod(url, data, methodName) {
                        return this.httpRequest.createGetRequest(url, data, methodName);
                    }
                }, {
                    key: 'getBriefingFilterMeta',
                    value: function getBriefingFilterMeta(briefingCenterUuid, params) {
                        var url = this.api.getBaseUrl() + this.api.briefingFilterMetaUrl.replace("{briefingCenterUuid}", briefingCenterUuid);
                        return this.httpRequest.createGetRequest(url, params);
                    }
                }, {
                    key: 'fireBriefingAction',
                    value: function fireBriefingAction(url) {
                        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

                        return this.httpRequest.createPutRequest(url, params);
                    }
                }, {
                    key: 'createAgendaPlan',
                    value: function createAgendaPlan(briefingUUID, params) {
                        var url = this.api.getBaseUrl() + this.api.createDraftPlan.replace("{uuid}", briefingUUID);
                        return this.httpRequest.createPostRequest(url, params);
                    }
                }, {
                    key: 'updateAgendaPlan',
                    value: function updateAgendaPlan(briefingUUID, planUUID, params) {
                        var url = this.api.getBaseUrl() + this.api.updateDraftPlan.replace("{uuid}", briefingUUID).replace("{planUUID}", planUUID);
                        return this.httpRequest.createPutRequest(url, params);
                    }
                }, {
                    key: 'approveAgendaPlan',
                    value: function approveAgendaPlan(briefingUUID, planUUID, params) {
                        var url = this.api.getBaseUrl() + this.api.approveDraftPlan.replace("{uuid}", briefingUUID).replace("{planUUID}", planUUID);
                        return this.httpRequest.createPutRequest(url, params);
                    }
                }, {
                    key: 'fetchBriefingRoomList',
                    value: function fetchBriefingRoomList(params) {
                        return this.httpRequest.createGetRequest(this.roomListUrl, params);
                    }
                }, {
                    key: 'rejectAgendaPlan',
                    value: function rejectAgendaPlan(briefingUUID, planUUID, params) {
                        var url = this.api.getBaseUrl() + this.api.rejectDraftPlan.replace("{uuid}", briefingUUID).replace("{planUUID}", planUUID);
                        return this.httpRequest.createPutRequest(url, params);
                    }
                }]);

                var _BriefingRequestService = BriefingRequestService;
                BriefingRequestService = inject(HttpRequest, API)(BriefingRequestService) || BriefingRequestService;
                return BriefingRequestService;
            }();

            _export('BriefingRequestService', BriefingRequestService);
        }
    };
});
System.register('view-models/briefings/listagenda-footer.js', ['npm:aurelia-i18n@0.4.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/briefing_request_service.js'], function (_export) {
  'use strict';

  var I18N, inject, bindable, EventAggregator, BriefingRequestService, ListagendaFooter;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceBriefing_request_service) {
      BriefingRequestService = _serviceBriefing_request_service.BriefingRequestService;
    }],
    execute: function () {
      ListagendaFooter = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(ListagendaFooter, [{
          key: 'items',
          decorators: [bindable],
          initializer: function initializer() {
            return [];
          },
          enumerable: true
        }], null, _instanceInitializers);

        function ListagendaFooter(brs, ea, i18n) {
          _classCallCheck(this, _ListagendaFooter);

          _defineDecoratedPropertyDescriptor(this, 'items', _instanceInitializers);

          this.ea = ea;
          this.i18n = i18n;
          this.briefingRequestService = brs;
          this.i18n.setLocale('en').then(function () {});
        }

        _createDecoratedClass(ListagendaFooter, [{
          key: 'activate',
          value: function activate(params, routeConfig, options) {
            this.uuid = params.uuid;
          }
        }, {
          key: 'confirm',
          value: function confirm() {
            var _this = this;

            this.ea.publish("show:notification", {
              'class': 'green',
              isConfirmation: true,
              title: this.i18n.tr('briefings.commons.areYouSure'),
              message: this.i18n.tr('briefings.commons.clickNoMessage'),
              done: function done() {
                _this.items.length ? _this.confirmBriefing() : _this.errorBriefing();
              }
            });
          }
        }, {
          key: 'confirmBriefing',
          value: function confirmBriefing() {
            var _this2 = this;

            this.briefingRequestService.confirmBriefingRequest().then(function (response) {
              if (typeof response.response === "string") {
                response = JSON.parse(response.response);
              }
              if (response.success == false || response.status != 200) {
                setTimeout(function () {
                  _this2.ea.publish("show:notification", {
                    'class': 'red',
                    autoHideDuration: 5000,
                    message: response.errors,
                    title: _this2.i18n.tr('briefings.commons.cannotConfirmBriefing')
                  });
                }, 500);
              } else {
                _this2.ea.publish("confirm:briefing", response.data);
              }
            })['catch'](function (response) {
              _this2.errorBriefing();
            });
          }
        }, {
          key: 'errorBriefing',
          value: function errorBriefing() {
            var _this3 = this;

            setTimeout(function () {
              _this3.ea.publish("show:notification", {
                'class': 'red',
                autoHideDuration: 5000,
                title: _this3.i18n.tr('briefings.commons.briefingNotReady'),
                message: _this3.i18n.tr('briefings.commons.briefingMeetingErrorMessage')
              });
            }, 500);
          }
        }], null, _instanceInitializers);

        var _ListagendaFooter = ListagendaFooter;
        ListagendaFooter = inject(BriefingRequestService, EventAggregator, I18N)(ListagendaFooter) || ListagendaFooter;
        return ListagendaFooter;
      }();

      _export('ListagendaFooter', ListagendaFooter);
    }
  };
});
System.registerDynamic("view-models/briefings/meeting-add-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"card add\">\n    <div class=\"card-content\">\n      <div class=\"add-btn\">\n        <a href=\"${actionUrl}\">\n          <i class=\"jif-plus-circle-o jif-light-grey jif-70\"></i>\n        </a>\n      </div>\n      <div>\n        <a href=\"${actionUrl}\" id='book-meeting' class='btn btn-white btn-block'>${availabilityLabel}</a>\n      </div>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"card-footer-content text-center\">\n        ${footerText}\n      </div>\n    </div>\n  </div>\n</template>\n";
});
System.register('view-models/briefings/meeting-add-card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var bindable, MeetingAddCard;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
    }],
    execute: function () {
      MeetingAddCard = function () {
        var _instanceInitializers = {};

        function MeetingAddCard() {
          _classCallCheck(this, MeetingAddCard);

          _defineDecoratedPropertyDescriptor(this, 'availabilityLabel', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'footerText', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'actionUrl', _instanceInitializers);
        }

        _createDecoratedClass(MeetingAddCard, [{
          key: 'availabilityLabel',
          decorators: [bindable],
          initializer: function initializer() {
            return "Schedule Activity";
          },
          enumerable: true
        }, {
          key: 'footerText',
          decorators: [bindable],
          initializer: function initializer() {
            return '';
          },
          enumerable: true
        }, {
          key: 'actionUrl',
          decorators: [bindable],
          initializer: function initializer() {
            return '';
          },
          enumerable: true
        }], null, _instanceInitializers);

        return MeetingAddCard;
      }();

      _export('MeetingAddCard', MeetingAddCard);
    }
  };
});
System.registerDynamic("view-models/briefings/meeting-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from='utils/converters'></require>\n    <div class=\"card meeting-card au-animate meeting-item ${request.status}\">\n      <div class=\"card-header\">\n        <div class=\"card-header-content\">\n          <div class=\"card-select\">\n            <input type=\"checkbox\" id=\"${request.uuid}\" checked.bind=\"request.checked\" change.delegate=\"cardSelectionHandler(request)\">\n            <label for=\"${request.uuid}\">\n              <div>M</div>\n            </label>\n          </div>\n          <a class=\"card-click\" href.bind=\"request.meeting_detail_url\">\n            <div class=\"font-lg meeting-title\">${request.briefing_meeting_title? request.briefing_meeting_title: request.meeting_with}</div>\n            <div class=\"font-lg\">ID #${request.id}</div>\n          </a>\n        </div>\n      </div>\n      <div class=\"card-content\">\n        <div class=\"card-detail-content\">\n          <div >\n            <div class=\"card-detail icon-sep\">\n              <div class=\"text-content\">\n                <span class=\"font-semi-bold\">${request.start_time | time} - ${request.end_time | time}</span>\n                <br>\n                <span class=\"font-sm\">${request.start_time | date}</span>\n              </div>\n            </div>\n            <div class=\"card-detail icon-sep\">\n              <div class=\"text-content location-text two-line-ellipsis\">\n                ${request.room_name}\n              </div>\n              <div if.bind=\"showSurveyLink == true\" class=\"icon-content jif-blue point-cursor\" data-toggle=\"modal\" data-target=\"#survay-modal\" click.delegate=\"surveyClickAction()\">\n                <i class=\"jif-survey\"></i>\n                <div class=\"font-8\" i18n=\"briefings.commons.survey\"></div>\n              </div>\n            </div>\n          </div>\n          <!-- <div class=\"card-detail count\">\n            <div class=\"item-section attedee-counts\">\n              <div class=\"section-count accepted\">\n                <div class=\"count\">${request.attendee_summary.internal.accepted}</div>\n                <div class=\"status\" i18n=\"briefings.commons.accepted\"></div>\n              </div>\n              <div class=\"section-count declined\">\n                <div class=\"count\">${request.attendee_summary.internal.declined}</div>\n                <div class=\"status\" i18n=\"briefings.commons.declined\"></div>\n              </div>\n              <div class=\"section-count pending\">\n                <div class=\"count\">${request.attendee_summary.internal.pending}</div>\n                <div class=\"status\" i18n=\"briefings.commons.pending\"></div>\n              </div>\n            </div>\n          </div> -->\n        </div>\n      </div>\n      <div class=\"card-footer\">\n         <div class=\"card-footer-content\">\n\n            <div class=\"meeting-approved hide\">\n              <span class=\"font-blue\" i18n=\"briefings.commons.approved\"></span>\n            </div>\n\n            <div class=\"meeting-approve hide\">\n                <a href=\"javascript:void(0)\" class=\"icon-box jif-blue\">\n                  <i class=\"jif-check\"></i>\n                  <div class=\"font-8\" i18n=\"briefings.commons.approve\"></div>\n                </a>\n            </div>\n\n            <div class=\"meeting-cancelled\" if.bind=\"briefing.status == 'Cancelled'\">\n              <span class=\"font-red\" i18n=\"briefings.commons.cancelled\"></span>\n            </div>\n\n            <div class=\"meeting-cancel hide\">\n              <a href=\"javascript:void(0)\" class=\"icon-box jif-red\">\n                <i class=\"jif-trash\"></i>\n                <div class=\"font-8\" i18n=\"briefings.commons.cancel\"></div>\n              </a>\n            </div>\n\n            <div class=\"meeting-accepted\" if.bind=\"request.accepted\">\n              <span class=\"font-blue\" i18n=\"briefings.commons.accepted\"></span>\n            </div>\n\n            <div class=\"meeting-accept\" if.bind=\"request.canAccept\" click.delegate=\"acceptMeeting()\">\n              <a href=\"javascript:void(0)\" class=\"icon-box jif-blue\">\n                <i class=\"jif-check\"></i>\n                <div class=\"font-8\" i18n=\"briefings.commons.accept\"></div>\n              </a>\n            </div>\n\n            <div class=\"meeting-declined\" if.bind=\"request.declined\">\n              <span class=\"font-red\" i18n=\"briefings.commons.declined\"></span>\n            </div>\n\n\n            <div class=\"meeting-decline\" if.bind=\"request.canDecline\" click.delegate=\"declineMeeting()\">\n              <a href=\"javascript:void(0)\" class=\"icon-box jif-red\">\n                <i class=\"jif-close\"></i>\n                <div class=\"font-8\" i18n=\"briefings.commons.decline\"></div>\n              </a>`\n            </div>\n\n            <div class=\"meeting-summary hide\">\n              <a href=\"javascript:void(0)\" class=\"icon-box jif-blue\">\n                <i class=\"jif-summary\"></i>\n                <div class=\"font-8\" i18n=\"briefings.commons.summary\"></div>\n              </a>\n            </div>\n         </div>\n      </div>\n    </div>\n\n</template>\n";
});
System.register('view-models/briefings/meeting-card.js', ['npm:aurelia-i18n@0.4.1.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
    'use strict';

    var I18N, EventAggregator, inject, bindable, customAttribute, MeetingCard;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
            customAttribute = _aureliaFramework.customAttribute;
        }],
        execute: function () {
            MeetingCard = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(MeetingCard, [{
                    key: 'request',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'briefing',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function MeetingCard(ea, i18n) {
                    _classCallCheck(this, _MeetingCard);

                    _defineDecoratedPropertyDescriptor(this, 'request', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'briefing', _instanceInitializers);

                    this.showSurveyLink = false;

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(MeetingCard, [{
                    key: 'attached',
                    value: function attached() {
                        this.showSurveyLink = this.request.show_survey || false;
                    }
                }, {
                    key: 'surveyClickAction',
                    value: function surveyClickAction() {
                        this.ea.publish("survey:showModal", {
                            bulk: true,
                            isMeeting: true,
                            uuid: this.request.uuid,
                            surveys: this.request.survey_links,
                            show_send_mail: this.request.show_send_mail
                        });
                    }
                }, {
                    key: 'acceptMeeting',
                    value: function acceptMeeting() {}
                }, {
                    key: 'declineMeeting',
                    value: function declineMeeting() {}
                }, {
                    key: 'cardSelectionHandler',
                    value: function cardSelectionHandler(request) {
                        this.ea.publish("checkbox:clicked", request);
                    }
                }], null, _instanceInitializers);

                var _MeetingCard = MeetingCard;
                MeetingCard = inject(EventAggregator, I18N)(MeetingCard) || MeetingCard;
                return MeetingCard;
            }();

            _export('MeetingCard', MeetingCard);
        }
    };
});
System.registerDynamic("view-models/briefings/user-list.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <require from=\"components/briefing-agenda/attendee\"></require>\n  <require from=\"../../view-models/users/add-user\"></require>\n    <div class=\"col-xs-12 no-padding\">\n        <div class=\"briefing-agenda-block col-xs-12\">\n            <div class=\"briefing-agenda-block-title text-uppercase\" i18n=\"[append]briefings.commons.externalAttendees\">\n                <span>${selectedAttendees.length}</span>&nbsp;\n            </div>\n            <div class=\"col-xs-12\">\n                <div class=\"col-xs-12 no-padding search-container\">\n                    <form class=\"navbar-form navbar-right navbar-search pull-right\" role=\"search\" autocomplete=\"off\">\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" id=\"global_search\" autocomplete=\"off\">\n                        </div>\n                    </form>\n\n                    <a href=\"#\" data-target=\"#add-attendees-modal\" data-toggle=\"modal\" class=\"pull-left add-attendees-btn\">\n                        <i class=\"jif-plus jif-blue jif-14\"></i>\n                    </a>\n\n                </div>\n            </div>\n            <!--<div repeat.for=\"key of obj | keys\">-->\n                <!--test-->\n            <!--</div>-->\n            <attendee containerless repeat.for=\"attendee of selectedAttendees\" attendee.bind=\"attendee\" added.bind=\"true\"></attendee>\n            <attendee containerless repeat.for=\"attendee of internalAttendees\" attendee.bind=\"attendee\" added.bind=\"false\"></attendee>\n        </div>\n    </div>\n    <add-user></add-user>\n</template>\n";
});
System.register('view-models/briefings/user-list.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/user_request_service.js', 'components/listing.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var EventAggregator, inject, bindable, UserRequestService, Listing, I18N, UserList, KeysValueConverter;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    var _get = function get(_x, _x2, _x3) {
        var _again = true;_function: while (_again) {
            var object = _x,
                property = _x2,
                receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
                var parent = Object.getPrototypeOf(object);if (parent === null) {
                    return undefined;
                } else {
                    _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
                }
            } else if ('value' in desc) {
                return desc.value;
            } else {
                var getter = desc.get;if (getter === undefined) {
                    return undefined;
                }return getter.call(receiver);
            }
        }
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    return {
        setters: [function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_serviceUser_request_serviceJs) {
            UserRequestService = _serviceUser_request_serviceJs.UserRequestService;
        }, function (_componentsListing) {
            Listing = _componentsListing.Listing;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            UserList = function (_Listing) {
                _inherits(UserList, _Listing);

                function UserList(UserRequestService, ea, i18n) {
                    _classCallCheck(this, _UserList);

                    _get(Object.getPrototypeOf(_UserList.prototype), 'constructor', this).call(this, ea);
                    this.internalAttendees = [];
                    this.selectedAttendees = [];
                    this.obj = {
                        "a": "b",
                        "c": "d"
                    };
                    this.UserRequestService = UserRequestService;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                    this.subscribeToEvents();
                }

                _createClass(UserList, [{
                    key: 'attached',
                    value: function attached() {
                        _get(Object.getPrototypeOf(_UserList.prototype), 'attached', this).call(this);
                    }
                }, {
                    key: 'fetchFromServer',
                    value: function fetchFromServer(params) {
                        var _this = this;

                        this.UserRequestService.getExternalUsers(params).then(function (response) {
                            _this.fetching = false;
                            if (response.statusCode == 200) {
                                if (typeof response.response == "string") {
                                    response = JSON.parse(response.response);
                                }
                                _this.totalEntries = response.total_entries || 0;
                                _this.addAttendeesBatch(_this.internalAttendees, _this.selectedAttendees, response.items);
                            }
                        });
                    }
                }, {
                    key: 'onSearch',
                    value: function onSearch(params) {
                        var _this2 = this;

                        this.UserRequestService.getExternalUsers(params).then(function (response) {
                            _this2.fetching = false;
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            _this2.totalEntries = response.total_entries || 0;
                        });
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this3 = this;

                        this.ea.subscribe('attendee:remove', function (payload) {
                            _this3.removeAttendee(payload);
                        });

                        this.ea.subscribe('attendee:add', function (payload) {
                            _this3.addAttendee(payload);
                        });
                    }
                }, {
                    key: 'addAttendeesBatch',
                    value: function addAttendeesBatch(allAttendees, selectedAttendees, newAttendeesBatch) {
                        var keys = _.pluck(selectedAttendees, 'uuid').concat(_.pluck(allAttendees, 'uuid'));
                        _.remove(newAttendeesBatch, function (attendee) {
                            var indexOfUuid = _.indexOf(keys, attendee.uuid);
                            return indexOfUuid != -1;
                        });
                        allAttendees.push.apply(allAttendees, newAttendeesBatch);
                    }
                }, {
                    key: 'removeAttendee',
                    value: function removeAttendee(attendee) {
                        if (this.selectedAttendees.indexOf(attendee) > -1) {
                            this.selectedAttendees.pop(attendee);
                        }
                        if (this.internalAttendees.indexOf(attendee) == -1) {
                            this.internalAttendees.push(attendee);
                        }
                    }
                }, {
                    key: 'addAttendee',
                    value: function addAttendee(attendee) {
                        if (this.selectedAttendees.indexOf(attendee) == -1) {
                            this.selectedAttendees.push(attendee);
                        }
                        if (this.internalAttendees.indexOf(attendee) > -1) {
                            this.internalAttendees.pop(attendee);
                        }
                    }
                }]);

                var _UserList = UserList;
                UserList = inject(UserRequestService, EventAggregator, I18N)(UserList) || UserList;
                return UserList;
            }(Listing);

            _export('UserList', UserList);

            KeysValueConverter = function () {
                function KeysValueConverter() {
                    _classCallCheck(this, KeysValueConverter);
                }

                _createClass(KeysValueConverter, [{
                    key: 'toView',
                    value: function toView(value) {
                        return Object.keys(value);
                    }
                }]);

                return KeysValueConverter;
            }();

            _export('KeysValueConverter', KeysValueConverter);
        }
    };
});
System.registerDynamic("view-models/concierge/concierge-service.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"./request-detail\"></require>\n\t<div if.bind=\"services.length > 0\" class=\"request-briefing-fldset concierge-service-section col-xs-12 custom-fieldset custom-fieldset-border\">\n\t\t<span class=\"fiedset-legend text-uppercase\" i18n=\"concierge.conciergeService.conciergeServices\"></span>\n\t\t<div class=\"col-xs-12 no-padding\">\n\t\t\t<div class=\"section-content\">\n\t\t\t\t<div class=\"room-select-list bottom-margin-10\">\n\t\t\t\t\t<div class=\"room-list scroll-x concierge-listings\">\n\t\t\t\t\t\t<div repeat.for=\"service of services\" class=\"concierge-select\">\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"concierge_select\" value=\"${service.service_icon_url}\" id=\"concg-icon-${service.uuid}\" autocomplete=\"off\" change.delegate=\"showServiceDetails($event, $index)\">\n\t\t\t\t\t\t\t<label class=\"conc-select-item select-room-btn\" for=\"concg-icon-${service.uuid}\">\n\t\t\t\t\t\t\t\t<span class=\"concierge-count\">${service.count}</span>\n\t\t\t\t\t\t\t\t<div class=\"conc-detail text-center jif-dark2-grey\">\n\t\t\t\t\t\t\t\t\t<i class=\"${service.service_icon_url}\"></i>\n\t\t\t\t\t\t\t\t\t<div class=\"font-8\">${service.service_name}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<form class=\"col-xs-12 no-padding\" show.bind=\"displayCustomForm\" id=\"concierge-form\">\n\t\t\t<div id=\"concierge-service-form\" class=\"col-sm-10 no-padding\">\n\t\t\t</div>\n\t\t\t<div class=\"no-padding text-right col-sm-12\">\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"btn btn-blue\" click.delegate=\"createUpdateServiceRequest($event)\">${mode}</a>\n\t\t\t\t<a href=\"javascript:void(0)\" type=\"button\" class=\"btn btn-blue\" click.delegate=\"discardServiceRequest($event)\" i18n=\"concierge.conciergeService.discard\"></a>\n\t\t\t</div>\n\t\t</form>\n\t\t<div class=\"col-xs-12 concierge-service-detail\">\n\t\t\t<request-detail requests.bind=\"serviceRequests\" headers.bind=\"tableHeaders\"></request-detail>\n\t\t</div>\n\t</div>\n</template>\n";
});
System.register('models/concierge_service_request.js', ['github:lodash/lodash@3.10.1.js', 'models/concierge_request_participant.js'], function (_export) {
  'use strict';

  var _, ConciergeRequestAttendeeModel, ConciergeServiceRequestModel;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }, function (_concierge_request_participant) {
      ConciergeRequestAttendeeModel = _concierge_request_participant.ConciergeRequestAttendeeModel;
    }],
    execute: function () {
      ConciergeServiceRequestModel = function () {
        function ConciergeServiceRequestModel(data) {
          _classCallCheck(this, ConciergeServiceRequestModel);

          this.uuid = "";
          this.custom_fields = {};
          this._destroy = false;
          this.participants = [];

          this.uuid = data.uuid || "";
          this.ui_uuid = 'request_' + Math.random().toString(36).substr(2, 9);
          this.custom_fields = data.custom_fields;
          this._destroy = data._destroy;
          this.values = this.setTableValues(data.custom_fields, data.participants);
          this.setParticipants(data.participants);
        }

        _createClass(ConciergeServiceRequestModel, [{
          key: 'setParticipants',
          value: function setParticipants(participants) {
            var _this = this;

            participants.forEach(function (attendee) {
              _this.participants.push(new ConciergeRequestAttendeeModel(attendee));
            });
          }
        }, {
          key: 'setTableValues',
          value: function setTableValues(custom_fields, attendees) {
            var values = [];
            var participantNames = [];
            var customFormValues = _.cloneDeep(custom_fields);
            if (attendees.length) {
              attendees.forEach(function (attendee) {
                if (!attendee._destroy) {
                  participantNames.push(attendee.user.first_name + " " + attendee.user.last_name);
                }
              });
            }
            if (customFormValues.request_for) customFormValues.request_for = participantNames.join(", ");

            return Object.values(customFormValues);
          }
        }, {
          key: 'clearData',
          value: function clearData() {
            this.uuid = "";
            this.custom_fields = {};
            this._destroy = false;
            this.participants = [];
          }
        }]);

        return ConciergeServiceRequestModel;
      }();

      _export('ConciergeServiceRequestModel', ConciergeServiceRequestModel);
    }
  };
});
System.register('models/concierge_service.js', ['models/concierge_service_request.js', 'models/concierge_request_participant.js'], function (_export) {
  'use strict';

  var ConciergeServiceRequestModel, ConciergeRequestAttendeeModel, ConciergeServiceModel;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_concierge_service_request) {
      ConciergeServiceRequestModel = _concierge_service_request.ConciergeServiceRequestModel;
    }, function (_concierge_request_participant) {
      ConciergeRequestAttendeeModel = _concierge_request_participant.ConciergeRequestAttendeeModel;
    }],
    execute: function () {
      ConciergeServiceModel = function () {
        function ConciergeServiceModel(data) {
          _classCallCheck(this, ConciergeServiceModel);

          this.uuid = "";
          this.count = 0;
          this.enabled = true;
          this.service_name = "";
          this.service_icon_url = "";
          this.forms = { concierge_request_form: [] };
          this.concierge_requests = [];

          this.uuid = data.uuid;
          this.enabled = data.enabled;
          this.service_name = data.service_name;
          this.service_icon_url = data.service_icon_url;
          this.forms.concierge_request_form = data.forms.concierge_request_form;
          this.setInitialRequests(data.concierge_requests);
        }

        _createClass(ConciergeServiceModel, [{
          key: 'setInitialRequests',
          value: function setInitialRequests(requests) {
            var _this = this;

            requests.forEach(function (request) {
              _this.count += 1;
              _this.concierge_requests.push(new ConciergeServiceRequestModel(request));
            });
          }
        }, {
          key: 'addRequests',
          value: function addRequests(request) {
            this.count += 1;
            this.concierge_requests.push(new ConciergeServiceRequestModel(request));
          }
        }, {
          key: 'updateRequests',
          value: function updateRequests(newRequest) {
            var _this2 = this;

            this.concierge_requests.forEach(function (request, index) {
              if (request.ui_uuid == newRequest.ui_uuid) {
                request.uuid = newRequest.uuid;
                _this2.concierge_requests.splice(index, 1, new ConciergeServiceRequestModel(request));
                return;
              }
            });
          }
        }, {
          key: 'getServerModelObject',
          value: function getServerModelObject() {
            return {
              uuid: this.uuid,
              concierge_requests: this.concierge_requests
            };
          }
        }]);

        return ConciergeServiceModel;
      }();

      _export('ConciergeServiceModel', ConciergeServiceModel);
    }
  };
});
System.register("models/concierge_request_participant.js", [], function (_export) {
  "use strict";

  var ConciergeRequestAttendeeModel;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  return {
    setters: [],
    execute: function () {
      ConciergeRequestAttendeeModel = function () {
        function ConciergeRequestAttendeeModel(data) {
          _classCallCheck(this, ConciergeRequestAttendeeModel);

          this.uuid = "";
          this._destroy = false;
          this.user_uuid = "";
          this.vendor_fulfilled_status = false;
          this.user = { first_name: "", last_name: "" };

          this.uuid = data.uuid || "";
          this._destroy = data._destroy;
          this.user_uuid = data.user_uuid;
          this.vendor_fulfilled_status = data.vendor_fulfilled_status;
          this.user = {
            first_name: data.user.first_name || "",
            last_name: data.user.last_name || ""
          };
        }

        _createClass(ConciergeRequestAttendeeModel, [{
          key: "clearData",
          value: function clearData() {
            this.uuid = "";
            this._destroy = false;
            this.user_uuid = "";
            this.vendor_fulfilled_status = false;
            this.user = { first_name: "", last_name: "" };
          }
        }]);

        return ConciergeRequestAttendeeModel;
      }();

      _export("ConciergeRequestAttendeeModel", ConciergeRequestAttendeeModel);
    }
  };
});
System.register('view-models/concierge/concierge-service.js', ['github:lodash/lodash@3.10.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/concierge_request_service.js', 'models/concierge_service.js', 'models/concierge_request_participant.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var _, bindable, inject, EventAggregator, ConciergeRequestService, ConciergeServiceModel, ConciergeRequestAttendeeModel, I18N, ConciergeService;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }, function (_aureliaFramework) {
            bindable = _aureliaFramework.bindable;
            inject = _aureliaFramework.inject;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_serviceConcierge_request_service) {
            ConciergeRequestService = _serviceConcierge_request_service.ConciergeRequestService;
        }, function (_modelsConcierge_service) {
            ConciergeServiceModel = _modelsConcierge_service.ConciergeServiceModel;
        }, function (_modelsConcierge_request_participant) {
            ConciergeRequestAttendeeModel = _modelsConcierge_request_participant.ConciergeRequestAttendeeModel;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            ConciergeService = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(ConciergeService, [{
                    key: 'services',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return [];
                    },
                    enumerable: true
                }, {
                    key: 'isEditBriefing',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'externalAttendees',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'internalAttendees',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'showInternalAttendees',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function ConciergeService(ea, conciergeRequestService, i18n) {
                    _classCallCheck(this, _ConciergeService);

                    this.tableHeaders = [];
                    this.focusedService = {};
                    this.serviceRequests = [];
                    this.formRendererRef = {};
                    this.serviceRequestForUpdate = {};
                    this.displayCustomForm = false;
                    this.mode = 'ADD';
                    this.subscriptions = [];

                    _defineDecoratedPropertyDescriptor(this, 'services', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'isEditBriefing', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'externalAttendees', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'internalAttendees', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'showInternalAttendees', _instanceInitializers);

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                    this.conciergeRequestService = conciergeRequestService;
                    this.isNotIE11 = !navigator.userAgent.match(/Trident.*rv\:11\./);
                    this.subscribeToEvents();
                }

                _createDecoratedClass(ConciergeService, [{
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        var count = 0;

                        this.subscriptions[count++] = this.ea.subscribe('external-attendee:add', function (attendees) {
                            if (_this.formRendererRef.getValues) {
                                var existing = _this.formRendererRef.getValues().request_for;
                                _this.bindAttendees(_this.externalAttendees, _this.internalAttendees, existing);
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('external-attendee:removed', function (changed) {
                            var existing = _this.getExistingValue(changed);
                            _this.bindAttendees(changed.selectedItems, _this.internalAttendees, existing);
                            _this.removeAttendee(changed.removed.uuid);
                        });

                        this.subscriptions[count++] = this.ea.subscribe('internal-attendee:changed', function (attendees) {
                            if (_this.formRendererRef.getValues) {
                                var existing = _this.formRendererRef.getValues().request_for;
                                _this.bindAttendees(_this.externalAttendees, attendees, existing);
                            }
                        });

                        this.subscriptions[count++] = this.ea.subscribe('internal-attendee:removed', function (changed) {
                            var existing = _this.getExistingValue(changed);
                            _this.bindAttendees(_this.externalAttendees, changed.selectedItems, existing);
                            _this.removeAttendee(changed.removed.uuid);
                        });

                        this.subscriptions[count++] = this.ea.subscribe('concierge:copy', function (ui_uuid) {
                            _this.copyConcierge(ui_uuid);
                        });

                        this.subscriptions[count++] = this.ea.subscribe('concierge:edit', function (ui_uuid) {
                            _this.editConcierge(ui_uuid);
                        });

                        this.subscriptions[count++] = this.ea.subscribe('concierge:delete', function (ui_uuid) {
                            _this.deleteConcierge(ui_uuid);
                        });

                        this.subscriptions[count++] = this.ea.subscribe('attendees:copy', function (payload) {
                            if (_this.formRendererRef.getValues) {
                                var existing = _this.formRendererRef.getValues().request_for;
                                _this.bindAttendees(payload.external, payload.internal, existing);
                            }
                        });
                    }
                }, {
                    key: 'attached',
                    value: function attached() {
                        var _this2 = this;

                        if (!this.isEditBriefing) {
                            this.conciergeRequestService.getServices().then(function (apiResponse) {
                                if (typeof apiResponse.response === "string") {
                                    apiResponse = JSON.parse(apiResponse.response);
                                }

                                var services = apiResponse.data.concierge_services;
                                services.forEach(function (service) {
                                    _this2.services.push(new ConciergeServiceModel(service));
                                });

                                setTimeout(function () {
                                    _this2.bindAttendees(_this2.externalAttendees, _this2.internalAttendees);
                                }, 300);
                            });
                        }
                    }
                }, {
                    key: 'detached',
                    value: function detached() {
                        this.subscriptions.forEach(function (sub) {
                            sub.dispose();
                        });
                    }
                }, {
                    key: 'getExistingValue',
                    value: function getExistingValue(changed) {
                        var existing = null;
                        if (this.formRendererRef.getValues) {
                            existing = this.formRendererRef.getValues().request_for;
                            if (existing != null && existing.length > 0) {
                                var tempIndex = existing.indexOf(changed.removed.uuid);
                                if (tempIndex >= 0) {
                                    existing.splice(tempIndex, 1);
                                }
                            }
                        }
                        return existing;
                    }
                }, {
                    key: 'showServiceDetails',
                    value: function showServiceDetails(event, index) {
                        var _this3 = this;

                        this.displayCustomForm = true;
                        this.focusedService = this.services[index];
                        this.formRendererRef = $("#concierge-service-form").formRenderer({
                            fieldCollection: this.focusedService.forms.concierge_request_form.map(function (field) {
                                if (field.type === 'multiselect_dropdown' && !_this3.isNotIE11) {
                                    field.placeholder = "";
                                }
                                return field;
                            })
                        });
                        this.formRendererRef.init();
                        this.formRendererRef.afterLoad();
                        this.serviceRequests = this.focusedService.concierge_requests;
                        this.extractTableHeaders(this.focusedService.forms.concierge_request_form);
                        this.bindAttendees(this.externalAttendees, this.internalAttendees);
                        setTimeout(function () {
                            _this3.ea.publish('concierge:refresh');
                        }, 200);
                    }
                }, {
                    key: 'copyConcierge',
                    value: function copyConcierge(ui_uuid) {
                        this.mode = 'ADD';
                        var copiedRequest = _.find(this.serviceRequests, "ui_uuid", ui_uuid);
                        this.formRendererRef.setValues(copiedRequest);
                    }
                }, {
                    key: 'editConcierge',
                    value: function editConcierge(ui_uuid) {
                        this.mode = 'UPDATE';
                        this.serviceRequestForUpdate = _.find(this.serviceRequests, "ui_uuid", ui_uuid);
                        this.formRendererRef.setValues(this.serviceRequestForUpdate);
                    }
                }, {
                    key: 'deleteConcierge',
                    value: function deleteConcierge(ui_uuid) {
                        var requestForDelete = _.find(this.serviceRequests, "ui_uuid", ui_uuid);
                        requestForDelete['_destroy'] = true;
                        this.focusedService.count--;
                        this.ea.publish('concierge:refresh');
                        this.discardServiceRequest();
                    }
                }, {
                    key: 'bindAttendees',
                    value: function bindAttendees(selectedExternalAttendees, selectedInternalAttendees, existingValues) {
                        var _this4 = this;

                        var requestFor = $("#request_for");
                        requestFor.html('');
                        var requestForOptions = [];
                        var allOptionValue = [];
                        if (selectedExternalAttendees && selectedExternalAttendees.length) {
                            requestForOptions.push({
                                text: this.i18n.tr('concierge.conciergeService.external_attendees'),
                                children: selectedExternalAttendees.map(function (attendee) {
                                    allOptionValue.push(attendee.uuid);
                                    return {
                                        id: attendee.uuid,
                                        text: attendee.first_name + " " + attendee.last_name
                                    };
                                })
                            });
                        }
                        if (this.showInternalAttendees && selectedInternalAttendees && selectedInternalAttendees.length) {
                            requestForOptions.push({
                                text: this.i18n.tr('concierge.conciergeService.internal_attendees'),
                                children: selectedInternalAttendees.map(function (attendee) {
                                    allOptionValue.push(attendee.uuid);
                                    return {
                                        id: attendee.uuid,
                                        text: attendee.first_name + " " + attendee.last_name
                                    };
                                })
                            });
                        }
                        if (requestForOptions.length) {
                            requestForOptions.unshift({
                                id: this.i18n.tr('concierge.conciergeService.all').toLowerCase(),
                                text: this.i18n.tr('concierge.conciergeService.all')
                            });
                        }
                        requestFor.select2({ data: requestForOptions });
                        if (existingValues && existingValues.length > 0) {
                            requestFor.val(existingValues).trigger("change");
                        }
                        requestFor.on("select2:select", function (ev) {
                            var id = ev.params.data.id;
                            if (id === _this4.i18n.tr('concierge.conciergeService.all').toLowerCase()) {
                                requestFor.val(allOptionValue).trigger("change");
                            }
                        });
                    }
                }, {
                    key: 'validateRequest',
                    value: function validateRequest(request) {
                        var error = '';
                        if (this.externalAttendees.length < 1 && this.internalAttendees.length < 1) {
                            error = this.i18n.tr('concierge.conciergeService.selectExternalAttendee');
                        } else if (request.custom_fields.request_for == null) {
                            error = this.i18n.tr('concierge.conciergeService.addAttendeeToRequest');
                        } else if (this.isRequiredFieldsMissing(request.custom_fields)) {
                            error = this.i18n.tr('concierge.commons.fieldMissingMessage');
                        }
                        if (error != '') {
                            this.ea.publish("show:notification", {
                                title: this.i18n.tr('concierge.commons.requiredFieldMissing'),
                                message: error,
                                'class': 'red',
                                autoHideDuration: 4000 });
                            $('#cover').fadeOut();
                            return false;
                        }
                        return true;
                    }
                }, {
                    key: 'isRequiredFieldsMissing',
                    value: function isRequiredFieldsMissing(custom_fields) {
                        var form = $("#concierge-form");
                        var validator = form.validate();
                        if (!this.formRendererRef.isFormValid(form)) {
                            validator.resetForm();
                            form.find("div.has-error").removeClass("has-error");
                            return true;
                        } else {
                            return false;
                        }
                    }
                }, {
                    key: 'createUpdateServiceRequest',
                    value: function createUpdateServiceRequest(event) {
                        if (this.mode === 'ADD') {
                            this.createServiceRequest(event);
                        } else if (this.mode === 'UPDATE') {
                            this.updateServiceRequest();
                        }
                    }
                }, {
                    key: 'createServiceRequest',
                    value: function createServiceRequest(event) {
                        var _this5 = this;

                        var request = {
                            uuid: "",
                            _destroy: false,
                            participants: [],
                            custom_fields: this.formRendererRef.getValues()
                        };
                        if (this.validateRequest(request)) {
                            (function () {
                                var users = _this5.fetchAttendeesByUuid(request.custom_fields.request_for);

                                request.custom_fields.request_for.forEach(function (uuid, index) {
                                    var participant = {
                                        uuid: "",
                                        user_uuid: uuid,
                                        _destroy: false,
                                        user: users[index]
                                    };
                                    request.participants.push(participant);
                                });

                                _this5.focusedService.addRequests(request);
                                _this5.formRendererRef.clearValues();
                                _this5.mode = 'ADD';
                                _this5.ea.publish('concierge:refresh');
                            })();
                        }
                    }
                }, {
                    key: 'updateServiceRequest',
                    value: function updateServiceRequest(event) {
                        var _this6 = this;

                        var customFormValues = this.formRendererRef.getValues();
                        if (this.validateRequest({ custom_fields: customFormValues })) {
                            (function () {
                                var requestAttendees = _this6.serviceRequestForUpdate.participants;
                                var users = _this6.fetchAttendeesByUuid(customFormValues.request_for);
                                var previousUserInfo = _this6.getPreviousParticipants(requestAttendees, customFormValues.request_for);
                                var newUuids = _.difference(customFormValues.request_for, previousUserInfo.uuids);

                                _this6.serviceRequestForUpdate.participants = [];
                                _this6.serviceRequestForUpdate.custom_fields = customFormValues;

                                previousUserInfo.users.forEach(function (prevUser) {
                                    _this6.serviceRequestForUpdate.participants.push(prevUser);
                                });

                                newUuids.forEach(function (uuid, index) {
                                    var participant = {
                                        uuid: "",
                                        user_uuid: uuid,
                                        _destroy: false,
                                        user: _.find(users, 'uuid', uuid)
                                    };
                                    _this6.serviceRequestForUpdate.participants.push(new ConciergeRequestAttendeeModel(participant));
                                });

                                _this6.focusedService.updateRequests(_this6.serviceRequestForUpdate);
                                _this6.formRendererRef.clearValues();
                                _this6.mode = 'ADD';
                            })();
                        }
                    }
                }, {
                    key: 'getPreviousParticipants',
                    value: function getPreviousParticipants(existUsers, newUserUuids) {
                        var previousUserInfo = { users: [], uuids: [] };
                        existUsers.forEach(function (user) {
                            if ($.inArray(user.user_uuid, newUserUuids) == -1) {
                                user['_destroy'] = true;
                            } else {
                                user['_destroy'] = false;
                            }
                            previousUserInfo.users.push(user);
                            previousUserInfo.uuids.push(user.user_uuid);
                        });

                        return previousUserInfo;
                    }
                }, {
                    key: 'fetchAttendeesByUuid',
                    value: function fetchAttendeesByUuid(ids) {
                        var users = [];
                        var allAttendees = this.externalAttendees.concat(this.internalAttendees);
                        ids.forEach(function (id) {
                            var t = _.find(allAttendees, 'uuid', id);
                            users.push({ uuid: t.uuid, first_name: t.first_name, last_name: t.last_name });
                        });
                        return users;
                    }
                }, {
                    key: 'removeAttendee',
                    value: function removeAttendee(uuid) {
                        var _this7 = this;

                        this.services.forEach(function (service) {
                            if (service.count > 0) {
                                service.concierge_requests.forEach(function (req) {
                                    if (req._destroy == false && req.participants.length > 0) {
                                        req.participants.forEach(function (p) {
                                            if (p.user_uuid == uuid) {
                                                p._destroy = true;
                                                req.custom_fields.request_for.splice(req.custom_fields.request_for.indexOf(uuid), 1);
                                                if (req.custom_fields.request_for.length == 0) {
                                                    p._destroy = false;
                                                    req._destroy = true;
                                                    service.count--;
                                                    _this7.ea.publish('concierge:refresh');
                                                }
                                                service.updateRequests(req);
                                            }
                                        });
                                    }
                                });
                            }
                        });
                    }
                }, {
                    key: 'discardServiceRequest',
                    value: function discardServiceRequest(event) {
                        this.formRendererRef.clearValues();
                        this.mode = 'ADD';
                    }
                }, {
                    key: 'extractTableHeaders',
                    value: function extractTableHeaders(formFields) {
                        var _this8 = this;

                        this.tableHeaders = [];
                        formFields.forEach(function (field) {
                            if (field.type !== 'header' && field.type !== 'page_break') {
                                _this8.tableHeaders.push(field.label);
                            }
                        });
                    }
                }], null, _instanceInitializers);

                var _ConciergeService = ConciergeService;
                ConciergeService = inject(EventAggregator, ConciergeRequestService, I18N)(ConciergeService) || ConciergeService;
                return ConciergeService;
            }();

            _export('ConciergeService', ConciergeService);
        }
    };
});
System.registerDynamic("view-models/concierge/request-detail.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"../../utils/converters\"></require>\n<div class=\"col-xs-12 topmargin20\" if.bind=\"requests.length > 0 && displayRequests\">\n  <div class=\"col-xs-10 no-padding\">\n    <div class=\"scroll-x\">\n      <table class=\"table fixed-colum-table\">\n      \t<thead>\n        \t<tr>\n            <th i18n=\"concierge.requestDetail.requestNo\"></th>\n\t      \t\t<th repeat.for=\"header of headers\">${header}</th>\n\t        </tr>\n        \t</thead>\n      \t<tbody>\n      \t\t<tr repeat.for=\"request of requests | destroy & signal:'destroy-signal'\">\n        \t\t<td scope=\"row\">${$index + 1}</th>\n        \t\t<td repeat.for=\"value of request.values\">${value}</td>\n        \t</tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <div class=\"col-xs-2 no-padding\">\n    <table class=\"table edit-table\">\n      <thead>\n          <tr>\n          \t<th colspan=\"3\" class=\"text-center\" i18n=\"concierge.requestDetail.action\"></th>\n          </tr>\n      </thead>\n      <tbody>\n      \t<tr repeat.for=\"request of requests | destroy & signal:'destroy-signal'\">\n      \t\t<td class=\"text-center\" click.delegate=\"copyRequest($event, request)\">\n      \t\t\t<i class=\"table-action-icon font-blue jif-copy point-cursor\" title=\"Copy\"></i>\n      \t\t</td>\n      \t\t<td class=\"text-center\" click.delegate=\"editRequest($event, request)\">\n      \t\t\t<i class=\"table-action-icon font-blue jif-pencil point-cursor\" title=\"Edit\"></i>\n      \t\t</td>\n      \t\t<td class=\"text-center\" click.delegate=\"deleteRequest($event, request)\">\n      \t\t\t<i class=\"table-action-icon font-red jif-trash point-cursor\" title=\"Delete\"></i>\n      \t\t</td>\n      \t</tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n</template>\n";
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/compose.js", ["exports", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-task-queue@1.0.0-beta.1.0.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _aureliaDependencyInjection, _aureliaTaskQueue, _aureliaTemplating, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  var _createDecoratedClass = (function() {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];
        var decorators = descriptor.decorators;
        var key = descriptor.key;
        delete descriptor.key;
        delete descriptor.decorators;
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor || descriptor.initializer)
          descriptor.writable = true;
        if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];
            if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }
          if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;
            continue;
          }
        }
        Object.defineProperty(target, key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps, protoInitializers);
      if (staticProps)
        defineProperties(Constructor, staticProps, staticInitializers);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];
    if (!_descriptor)
      return;
    var descriptor = {};
    for (var _key in _descriptor)
      descriptor[_key] = _descriptor[_key];
    descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;
    Object.defineProperty(target, key, descriptor);
  }
  var Compose = (function() {
    var _instanceInitializers = {};
    _createDecoratedClass(Compose, [{
      key: 'model',
      decorators: [_aureliaTemplating.bindable],
      initializer: null,
      enumerable: true
    }, {
      key: 'view',
      decorators: [_aureliaTemplating.bindable],
      initializer: null,
      enumerable: true
    }, {
      key: 'viewModel',
      decorators: [_aureliaTemplating.bindable],
      initializer: null,
      enumerable: true
    }], null, _instanceInitializers);
    function Compose(element, container, compositionEngine, viewSlot, viewResources, taskQueue) {
      _classCallCheck(this, _Compose);
      _defineDecoratedPropertyDescriptor(this, 'model', _instanceInitializers);
      _defineDecoratedPropertyDescriptor(this, 'view', _instanceInitializers);
      _defineDecoratedPropertyDescriptor(this, 'viewModel', _instanceInitializers);
      this.element = element;
      this.container = container;
      this.compositionEngine = compositionEngine;
      this.viewSlot = viewSlot;
      this.viewResources = viewResources;
      this.taskQueue = taskQueue;
      this.currentController = null;
      this.currentViewModel = null;
    }
    Compose.prototype.bind = function bind(bindingContext, overrideContext) {
      this.bindingContext = bindingContext;
      this.overrideContext = overrideContext;
      processInstruction(this, createInstruction(this, {
        view: this.view,
        viewModel: this.viewModel,
        model: this.model
      }));
    };
    Compose.prototype.unbind = function unbind(bindingContext, overrideContext) {
      this.bindingContext = null;
      this.overrideContext = null;
      var returnToCache = true;
      var skipAnimation = true;
      this.viewSlot.removeAll(returnToCache, skipAnimation);
    };
    Compose.prototype.modelChanged = function modelChanged(newValue, oldValue) {
      var _this = this;
      if (this.currentInstruction) {
        this.currentInstruction.model = newValue;
        return;
      }
      this.taskQueue.queueMicroTask(function() {
        if (_this.currentInstruction) {
          _this.currentInstruction.model = newValue;
          return;
        }
        var vm = _this.currentViewModel;
        if (vm && typeof vm.activate === 'function') {
          vm.activate(newValue);
        }
      });
    };
    Compose.prototype.viewChanged = function viewChanged(newValue, oldValue) {
      var _this2 = this;
      var instruction = createInstruction(this, {
        view: newValue,
        viewModel: this.currentViewModel || this.viewModel,
        model: this.model
      });
      if (this.currentInstruction) {
        this.currentInstruction = instruction;
        return;
      }
      this.currentInstruction = instruction;
      this.taskQueue.queueMicroTask(function() {
        return processInstruction(_this2, _this2.currentInstruction);
      });
    };
    Compose.prototype.viewModelChanged = function viewModelChanged(newValue, oldValue) {
      var _this3 = this;
      var instruction = createInstruction(this, {
        viewModel: newValue,
        view: this.view,
        model: this.model
      });
      if (this.currentInstruction) {
        this.currentInstruction = instruction;
        return;
      }
      this.currentInstruction = instruction;
      this.taskQueue.queueMicroTask(function() {
        return processInstruction(_this3, _this3.currentInstruction);
      });
    };
    var _Compose = Compose;
    Compose = _aureliaDependencyInjection.inject(_aureliaPal.DOM.Element, _aureliaDependencyInjection.Container, _aureliaTemplating.CompositionEngine, _aureliaTemplating.ViewSlot, _aureliaTemplating.ViewResources, _aureliaTaskQueue.TaskQueue)(Compose) || Compose;
    Compose = _aureliaTemplating.noView(Compose) || Compose;
    Compose = _aureliaTemplating.customElement('compose')(Compose) || Compose;
    return Compose;
  })();
  exports.Compose = Compose;
  function createInstruction(composer, instruction) {
    return Object.assign(instruction, {
      bindingContext: composer.bindingContext,
      overrideContext: composer.overrideContext,
      container: composer.container,
      viewSlot: composer.viewSlot,
      viewResources: composer.viewResources,
      currentController: composer.currentController,
      host: composer.element
    });
  }
  function processInstruction(composer, instruction) {
    composer.currentInstruction = null;
    composer.compositionEngine.compose(instruction).then(function(controller) {
      composer.currentController = controller;
      composer.currentViewModel = controller ? controller.viewModel : null;
    });
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/if.js", ["exports", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-task-queue@1.0.0-beta.1.0.1.js"], function(exports, _aureliaTemplating, _aureliaDependencyInjection, _aureliaTaskQueue) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var If = (function() {
    function If(viewFactory, viewSlot, taskQueue) {
      _classCallCheck(this, _If);
      this.viewFactory = viewFactory;
      this.viewSlot = viewSlot;
      this.showing = false;
      this.taskQueue = taskQueue;
      this.view = null;
      this.bindingContext = null;
      this.overrideContext = null;
    }
    If.prototype.bind = function bind(bindingContext, overrideContext) {
      this.bindingContext = bindingContext;
      this.overrideContext = overrideContext;
      this.valueChanged(this.value);
    };
    If.prototype.valueChanged = function valueChanged(newValue) {
      var _this = this;
      if (!newValue) {
        if (this.view !== null && this.showing) {
          this.taskQueue.queueMicroTask(function() {
            var viewOrPromise = _this.viewSlot.remove(_this.view);
            if (viewOrPromise instanceof Promise) {
              viewOrPromise.then(function() {
                return _this.view.unbind();
              });
            } else {
              _this.view.unbind();
            }
          });
        }
        this.showing = false;
        return;
      }
      if (this.view === null) {
        this.view = this.viewFactory.create();
      }
      if (!this.view.isBound) {
        this.view.bind(this.bindingContext, this.overrideContext);
      }
      if (!this.showing) {
        this.showing = true;
        this.viewSlot.add(this.view);
      }
    };
    If.prototype.unbind = function unbind() {
      if (this.view === null) {
        return;
      }
      this.view.unbind();
      if (!this.viewFactory.isCaching) {
        return;
      }
      if (this.showing) {
        this.showing = false;
        this.viewSlot.remove(this.view, true, true);
      }
      this.view.returnToCache();
      this.view = null;
    };
    var _If = If;
    If = _aureliaDependencyInjection.inject(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot, _aureliaTaskQueue.TaskQueue)(If) || If;
    If = _aureliaTemplating.templateController(If) || If;
    If = _aureliaTemplating.customAttribute('if')(If) || If;
    return If;
  })();
  exports.If = If;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/with.js", ["exports", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-binding@1.0.0-beta.1.0.2.js"], function(exports, _aureliaDependencyInjection, _aureliaTemplating, _aureliaBinding) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var With = (function() {
    function With(viewFactory, viewSlot) {
      _classCallCheck(this, _With);
      this.viewFactory = viewFactory;
      this.viewSlot = viewSlot;
      this.parentOverrideContext = null;
      this.view = null;
    }
    With.prototype.bind = function bind(bindingContext, overrideContext) {
      this.parentOverrideContext = overrideContext;
      this.valueChanged(this.value);
    };
    With.prototype.valueChanged = function valueChanged(newValue) {
      var overrideContext = _aureliaBinding.createOverrideContext(newValue, this.parentOverrideContext);
      if (!this.view) {
        this.view = this.viewFactory.create();
        this.view.bind(newValue, overrideContext);
        this.viewSlot.add(this.view);
      } else {
        this.view.bind(newValue, overrideContext);
      }
    };
    With.prototype.unbind = function unbind() {
      this.parentOverrideContext = null;
      if (this.view) {
        this.view.unbind();
      }
    };
    var _With = With;
    With = _aureliaDependencyInjection.inject(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot)(With) || With;
    With = _aureliaTemplating.templateController(With) || With;
    With = _aureliaTemplating.customAttribute('with')(With) || With;
    return With;
  })();
  exports.With = With;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/null-repeat-strategy.js", ["exports"], function(exports) {
  "use strict";
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var NullRepeatStrategy = (function() {
    function NullRepeatStrategy() {
      _classCallCheck(this, NullRepeatStrategy);
    }
    NullRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {
      repeat.viewSlot.removeAll(true);
    };
    NullRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {};
    return NullRepeatStrategy;
  })();
  exports.NullRepeatStrategy = NullRepeatStrategy;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/array-repeat-strategy.js", ["exports", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat-utilities.js"], function(exports, _repeatUtilities) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ArrayRepeatStrategy = (function() {
    function ArrayRepeatStrategy() {
      _classCallCheck(this, ArrayRepeatStrategy);
    }
    ArrayRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {
      return observerLocator.getArrayObserver(items);
    };
    ArrayRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {
      var _this = this;
      if (repeat.viewsRequireLifecycle) {
        var removePromise = repeat.viewSlot.removeAll(true);
        if (removePromise instanceof Promise) {
          removePromise.then(function() {
            return _this._standardProcessInstanceChanged(repeat, items);
          });
          return;
        }
        this._standardProcessInstanceChanged(repeat, items);
        return;
      }
      this._inPlaceProcessItems(repeat, items);
    };
    ArrayRepeatStrategy.prototype._standardProcessInstanceChanged = function _standardProcessInstanceChanged(repeat, items) {
      for (var i = 0,
          ii = items.length; i < ii; i++) {
        var overrideContext = _repeatUtilities.createFullOverrideContext(repeat, items[i], i, ii);
        var view = repeat.viewFactory.create();
        view.bind(overrideContext.bindingContext, overrideContext);
        repeat.viewSlot.add(view);
      }
    };
    ArrayRepeatStrategy.prototype._inPlaceProcessItems = function _inPlaceProcessItems(repeat, items) {
      var itemsLength = items.length;
      var viewsLength = repeat.viewSlot.children.length;
      while (viewsLength > itemsLength) {
        viewsLength--;
        repeat.viewSlot.removeAt(viewsLength, true);
      }
      var local = repeat.local;
      for (var i = 0; i < viewsLength; i++) {
        var view = repeat.viewSlot.children[i];
        var last = i === itemsLength - 1;
        var middle = i !== 0 && !last;
        if (view.bindingContext[local] === items[i] && view.overrideContext.$middle === middle && view.overrideContext.$last === last) {
          continue;
        }
        view.bindingContext[local] = items[i];
        view.overrideContext.$middle = middle;
        view.overrideContext.$last = last;
        var j = view.bindings.length;
        while (j--) {
          _repeatUtilities.refreshBinding(view.bindings[j]);
        }
        j = view.controllers.length;
        while (j--) {
          var k = view.controllers[j].boundProperties.length;
          while (k--) {
            var binding = view.controllers[j].boundProperties[k].binding;
            _repeatUtilities.refreshBinding(binding);
          }
        }
      }
      for (var i = viewsLength; i < itemsLength; i++) {
        var overrideContext = _repeatUtilities.createFullOverrideContext(repeat, items[i], i, itemsLength);
        var view = repeat.viewFactory.create();
        view.bind(overrideContext.bindingContext, overrideContext);
        repeat.viewSlot.add(view);
      }
    };
    ArrayRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, array, splices) {
      if (repeat.viewsRequireLifecycle) {
        this._standardProcessInstanceMutated(repeat, array, splices);
        return;
      }
      this._inPlaceProcessItems(repeat, array);
    };
    ArrayRepeatStrategy.prototype._standardProcessInstanceMutated = function _standardProcessInstanceMutated(repeat, array, splices) {
      var _this2 = this;
      var removeDelta = 0;
      var viewSlot = repeat.viewSlot;
      var rmPromises = [];
      for (var i = 0,
          ii = splices.length; i < ii; ++i) {
        var splice = splices[i];
        var removed = splice.removed;
        for (var j = 0,
            jj = removed.length; j < jj; ++j) {
          var viewOrPromise = viewSlot.removeAt(splice.index + removeDelta + rmPromises.length, true);
          if (viewOrPromise instanceof Promise) {
            rmPromises.push(viewOrPromise);
          }
        }
        removeDelta -= splice.addedCount;
      }
      if (rmPromises.length > 0) {
        Promise.all(rmPromises).then(function() {
          var spliceIndexLow = _this2._handleAddedSplices(repeat, array, splices);
          _repeatUtilities.updateOverrideContexts(repeat.viewSlot.children, spliceIndexLow);
        });
      } else {
        var spliceIndexLow = this._handleAddedSplices(repeat, array, splices);
        _repeatUtilities.updateOverrideContexts(repeat.viewSlot.children, spliceIndexLow);
      }
    };
    ArrayRepeatStrategy.prototype._handleAddedSplices = function _handleAddedSplices(repeat, array, splices) {
      var spliceIndex = undefined;
      var spliceIndexLow = undefined;
      var arrayLength = array.length;
      for (var i = 0,
          ii = splices.length; i < ii; ++i) {
        var splice = splices[i];
        var addIndex = spliceIndex = splice.index;
        var end = splice.index + splice.addedCount;
        if (typeof spliceIndexLow === 'undefined' || spliceIndexLow === null || spliceIndexLow > splice.index) {
          spliceIndexLow = spliceIndex;
        }
        for (; addIndex < end; ++addIndex) {
          var overrideContext = _repeatUtilities.createFullOverrideContext(repeat, array[addIndex], addIndex, arrayLength);
          var view = repeat.viewFactory.create();
          view.bind(overrideContext.bindingContext, overrideContext);
          repeat.viewSlot.insert(addIndex, view);
        }
      }
      return spliceIndexLow;
    };
    return ArrayRepeatStrategy;
  })();
  exports.ArrayRepeatStrategy = ArrayRepeatStrategy;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/map-repeat-strategy.js", ["exports", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat-utilities.js"], function(exports, _repeatUtilities) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var MapRepeatStrategy = (function() {
    function MapRepeatStrategy() {
      _classCallCheck(this, MapRepeatStrategy);
    }
    MapRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {
      return observerLocator.getMapObserver(items);
    };
    MapRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {
      var _this = this;
      var removePromise = repeat.viewSlot.removeAll(true);
      if (removePromise instanceof Promise) {
        removePromise.then(function() {
          return _this._standardProcessItems(repeat, items);
        });
        return;
      }
      this._standardProcessItems(repeat, items);
    };
    MapRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, items) {
      var viewFactory = repeat.viewFactory;
      var viewSlot = repeat.viewSlot;
      var index = 0;
      var overrideContext = undefined;
      var view = undefined;
      items.forEach(function(value, key) {
        overrideContext = _repeatUtilities.createFullOverrideContext(repeat, value, index, items.size, key);
        view = viewFactory.create();
        view.bind(overrideContext.bindingContext, overrideContext);
        viewSlot.add(view);
        ++index;
      });
    };
    MapRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, map, records) {
      var viewSlot = repeat.viewSlot;
      var key = undefined;
      var i = undefined;
      var ii = undefined;
      var view = undefined;
      var overrideContext = undefined;
      var removeIndex = undefined;
      var record = undefined;
      var rmPromises = [];
      var viewOrPromise = undefined;
      for (i = 0, ii = records.length; i < ii; ++i) {
        record = records[i];
        key = record.key;
        switch (record.type) {
          case 'update':
            removeIndex = this._getViewIndexByKey(repeat, key);
            viewOrPromise = viewSlot.removeAt(removeIndex, true);
            if (viewOrPromise instanceof Promise) {
              rmPromises.push(viewOrPromise);
            }
            overrideContext = _repeatUtilities.createFullOverrideContext(repeat, map.get(key), removeIndex, map.size, key);
            view = repeat.viewFactory.create();
            view.bind(overrideContext.bindingContext, overrideContext);
            viewSlot.insert(removeIndex, view);
            break;
          case 'add':
            overrideContext = _repeatUtilities.createFullOverrideContext(repeat, map.get(key), map.size - 1, map.size, key);
            view = repeat.viewFactory.create();
            view.bind(overrideContext.bindingContext, overrideContext);
            viewSlot.insert(map.size - 1, view);
            break;
          case 'delete':
            if (record.oldValue === undefined) {
              return;
            }
            removeIndex = this._getViewIndexByKey(repeat, key);
            viewOrPromise = viewSlot.removeAt(removeIndex, true);
            if (viewOrPromise instanceof Promise) {
              rmPromises.push(viewOrPromise);
            }
            break;
          case 'clear':
            viewSlot.removeAll(true);
            break;
          default:
            continue;
        }
      }
      if (rmPromises.length > 0) {
        Promise.all(rmPromises).then(function() {
          _repeatUtilities.updateOverrideContexts(repeat.viewSlot.children, 0);
        });
      } else {
        _repeatUtilities.updateOverrideContexts(repeat.viewSlot.children, 0);
      }
    };
    MapRepeatStrategy.prototype._getViewIndexByKey = function _getViewIndexByKey(repeat, key) {
      var viewSlot = repeat.viewSlot;
      var i = undefined;
      var ii = undefined;
      var child = undefined;
      for (i = 0, ii = viewSlot.children.length; i < ii; ++i) {
        child = viewSlot.children[i];
        if (child.bindingContext[repeat.key] === key) {
          return i;
        }
      }
    };
    return MapRepeatStrategy;
  })();
  exports.MapRepeatStrategy = MapRepeatStrategy;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/number-repeat-strategy.js", ["exports", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat-utilities.js"], function(exports, _repeatUtilities) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var NumberRepeatStrategy = (function() {
    function NumberRepeatStrategy() {
      _classCallCheck(this, NumberRepeatStrategy);
    }
    NumberRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver() {
      return null;
    };
    NumberRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, value) {
      var _this = this;
      var removePromise = repeat.viewSlot.removeAll(true);
      if (removePromise instanceof Promise) {
        removePromise.then(function() {
          return _this._standardProcessItems(repeat, value);
        });
        return;
      }
      this._standardProcessItems(repeat, value);
    };
    NumberRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, value) {
      var viewFactory = repeat.viewFactory;
      var viewSlot = repeat.viewSlot;
      var childrenLength = viewSlot.children.length;
      var i = undefined;
      var ii = undefined;
      var overrideContext = undefined;
      var view = undefined;
      var viewsToRemove = undefined;
      value = Math.floor(value);
      viewsToRemove = childrenLength - value;
      if (viewsToRemove > 0) {
        if (viewsToRemove > childrenLength) {
          viewsToRemove = childrenLength;
        }
        for (i = 0, ii = viewsToRemove; i < ii; ++i) {
          viewSlot.removeAt(childrenLength - (i + 1), true);
        }
        return;
      }
      for (i = childrenLength, ii = value; i < ii; ++i) {
        overrideContext = _repeatUtilities.createFullOverrideContext(repeat, i, i, ii);
        view = viewFactory.create();
        view.bind(overrideContext.bindingContext, overrideContext);
        viewSlot.add(view);
      }
      _repeatUtilities.updateOverrideContexts(repeat.viewSlot.children, 0);
    };
    return NumberRepeatStrategy;
  })();
  exports.NumberRepeatStrategy = NumberRepeatStrategy;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat-strategy-locator.js", ["exports", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/null-repeat-strategy.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/array-repeat-strategy.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/map-repeat-strategy.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/number-repeat-strategy.js"], function(exports, _nullRepeatStrategy, _arrayRepeatStrategy, _mapRepeatStrategy, _numberRepeatStrategy) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var RepeatStrategyLocator = (function() {
    function RepeatStrategyLocator() {
      _classCallCheck(this, RepeatStrategyLocator);
      this.matchers = [];
      this.strategies = [];
      this.addStrategy(function(items) {
        return items === null || items === undefined;
      }, new _nullRepeatStrategy.NullRepeatStrategy());
      this.addStrategy(function(items) {
        return items instanceof Array;
      }, new _arrayRepeatStrategy.ArrayRepeatStrategy());
      this.addStrategy(function(items) {
        return items instanceof Map;
      }, new _mapRepeatStrategy.MapRepeatStrategy());
      this.addStrategy(function(items) {
        return typeof items === 'number';
      }, new _numberRepeatStrategy.NumberRepeatStrategy());
    }
    RepeatStrategyLocator.prototype.addStrategy = function addStrategy(matcher, strategy) {
      this.matchers.push(matcher);
      this.strategies.push(strategy);
    };
    RepeatStrategyLocator.prototype.getStrategy = function getStrategy(items) {
      var matchers = this.matchers;
      for (var i = 0,
          ii = matchers.length; i < ii; ++i) {
        if (matchers[i](items)) {
          return this.strategies[i];
        }
      }
      return null;
    };
    return RepeatStrategyLocator;
  })();
  exports.RepeatStrategyLocator = RepeatStrategyLocator;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat-utilities.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js"], function(exports, _aureliaBinding) {
  'use strict';
  exports.__esModule = true;
  exports.updateOverrideContexts = updateOverrideContexts;
  exports.createFullOverrideContext = createFullOverrideContext;
  exports.updateOverrideContext = updateOverrideContext;
  exports.getItemsSourceExpression = getItemsSourceExpression;
  exports.unwrapExpression = unwrapExpression;
  exports.isOneTime = isOneTime;
  exports.refreshBinding = refreshBinding;
  function updateOverrideContexts(views, startIndex) {
    var length = views.length;
    if (startIndex > 0) {
      startIndex = startIndex - 1;
    }
    for (; startIndex < length; ++startIndex) {
      updateOverrideContext(views[startIndex].overrideContext, startIndex, length);
    }
  }
  function createFullOverrideContext(repeat, data, index, length, key) {
    var bindingContext = {};
    var overrideContext = _aureliaBinding.createOverrideContext(bindingContext, repeat.scope.overrideContext);
    if (typeof key !== 'undefined') {
      bindingContext[repeat.key] = key;
      bindingContext[repeat.value] = data;
    } else {
      bindingContext[repeat.local] = data;
    }
    updateOverrideContext(overrideContext, index, length);
    return overrideContext;
  }
  function updateOverrideContext(overrideContext, index, length) {
    var first = index === 0;
    var last = index === length - 1;
    var even = index % 2 === 0;
    overrideContext.$index = index;
    overrideContext.$first = first;
    overrideContext.$last = last;
    overrideContext.$middle = !(first || last);
    overrideContext.$odd = !even;
    overrideContext.$even = even;
  }
  function getItemsSourceExpression(instruction, attrName) {
    return instruction.behaviorInstructions.filter(function(bi) {
      return bi.originalAttrName === attrName;
    })[0].attributes.items.sourceExpression;
  }
  function unwrapExpression(expression) {
    var unwrapped = false;
    while (expression instanceof _aureliaBinding.BindingBehavior) {
      expression = expression.expression;
    }
    while (expression instanceof _aureliaBinding.ValueConverter) {
      expression = expression.expression;
      unwrapped = true;
    }
    return unwrapped ? expression : null;
  }
  function isOneTime(expression) {
    while (expression instanceof _aureliaBinding.BindingBehavior) {
      if (expression.name === 'oneTime') {
        return true;
      }
      expression = expression.expression;
    }
    return false;
  }
  function refreshBinding(binding) {
    if (binding.call) {
      binding.call(_aureliaBinding.sourceContext);
    }
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/analyze-view-factory.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  exports.viewsRequireLifecycle = viewsRequireLifecycle;
  var lifecycleOptionalBehaviors = ['focus', 'if', 'repeat', 'show', 'with'];
  exports.lifecycleOptionalBehaviors = lifecycleOptionalBehaviors;
  function behaviorRequiresLifecycle(instruction) {
    var t = instruction.type;
    var name = t.elementName !== null ? t.elementName : t.attributeName;
    if (lifecycleOptionalBehaviors.indexOf(name) === -1) {
      return t.handlesAttached || t.handlesBind || t.handlesCreated || t.handlesDetached || t.handlesUnbind;
    }
    return instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);
  }
  function targetRequiresLifecycle(instruction) {
    var behaviors = instruction.behaviorInstructions;
    if (behaviors) {
      var i = behaviors.length;
      while (i--) {
        if (behaviorRequiresLifecycle(behaviors[i])) {
          return true;
        }
      }
    }
    return instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);
  }
  function viewsRequireLifecycle(viewFactory) {
    if ('_viewsRequireLifecycle' in viewFactory) {
      return viewFactory._viewsRequireLifecycle;
    }
    if (viewFactory.viewFactory) {
      viewFactory._viewsRequireLifecycle = viewsRequireLifecycle(viewFactory.viewFactory);
      return viewFactory._viewsRequireLifecycle;
    }
    if (viewFactory.template.querySelector('.au-animate')) {
      viewFactory._viewsRequireLifecycle = true;
      return true;
    }
    for (var id in viewFactory.instructions) {
      if (targetRequiresLifecycle(viewFactory.instructions[id])) {
        viewFactory._viewsRequireLifecycle = true;
        return true;
      }
    }
    viewFactory._viewsRequireLifecycle = false;
    return false;
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat.js", ["exports", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-binding@1.0.0-beta.1.0.2.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat-strategy-locator.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat-utilities.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/analyze-view-factory.js"], function(exports, _aureliaDependencyInjection, _aureliaBinding, _aureliaTemplating, _repeatStrategyLocator, _repeatUtilities, _analyzeViewFactory) {
  'use strict';
  exports.__esModule = true;
  var _createDecoratedClass = (function() {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];
        var decorators = descriptor.decorators;
        var key = descriptor.key;
        delete descriptor.key;
        delete descriptor.decorators;
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor || descriptor.initializer)
          descriptor.writable = true;
        if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];
            if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }
          if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;
            continue;
          }
        }
        Object.defineProperty(target, key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps, protoInitializers);
      if (staticProps)
        defineProperties(Constructor, staticProps, staticInitializers);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];
    if (!_descriptor)
      return;
    var descriptor = {};
    for (var _key in _descriptor)
      descriptor[_key] = _descriptor[_key];
    descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;
    Object.defineProperty(target, key, descriptor);
  }
  var Repeat = (function() {
    var _instanceInitializers = {};
    _createDecoratedClass(Repeat, [{
      key: 'items',
      decorators: [_aureliaTemplating.bindable],
      initializer: null,
      enumerable: true
    }, {
      key: 'local',
      decorators: [_aureliaTemplating.bindable],
      initializer: null,
      enumerable: true
    }, {
      key: 'key',
      decorators: [_aureliaTemplating.bindable],
      initializer: null,
      enumerable: true
    }, {
      key: 'value',
      decorators: [_aureliaTemplating.bindable],
      initializer: null,
      enumerable: true
    }], null, _instanceInitializers);
    function Repeat(viewFactory, instruction, viewSlot, viewResources, observerLocator, strategyLocator) {
      _classCallCheck(this, _Repeat);
      _defineDecoratedPropertyDescriptor(this, 'items', _instanceInitializers);
      _defineDecoratedPropertyDescriptor(this, 'local', _instanceInitializers);
      _defineDecoratedPropertyDescriptor(this, 'key', _instanceInitializers);
      _defineDecoratedPropertyDescriptor(this, 'value', _instanceInitializers);
      this.viewFactory = viewFactory;
      this.instruction = instruction;
      this.viewSlot = viewSlot;
      this.lookupFunctions = viewResources.lookupFunctions;
      this.observerLocator = observerLocator;
      this.local = 'item';
      this.key = 'key';
      this.value = 'value';
      this.strategyLocator = strategyLocator;
      this.ignoreMutation = false;
      this.sourceExpression = _repeatUtilities.getItemsSourceExpression(this.instruction, 'repeat.for');
      this.isOneTime = _repeatUtilities.isOneTime(this.sourceExpression);
      this.viewsRequireLifecycle = _analyzeViewFactory.viewsRequireLifecycle(viewFactory);
    }
    Repeat.prototype.call = function call(context, changes) {
      this[context](this.items, changes);
    };
    Repeat.prototype.bind = function bind(bindingContext, overrideContext) {
      this.scope = {
        bindingContext: bindingContext,
        overrideContext: overrideContext
      };
      this.itemsChanged();
    };
    Repeat.prototype.unbind = function unbind() {
      this.scope = null;
      this.items = null;
      this.viewSlot.removeAll(true);
      this._unsubscribeCollection();
    };
    Repeat.prototype._unsubscribeCollection = function _unsubscribeCollection() {
      if (this.collectionObserver) {
        this.collectionObserver.unsubscribe(this.callContext, this);
        this.collectionObserver = null;
        this.callContext = null;
      }
    };
    Repeat.prototype.itemsChanged = function itemsChanged() {
      this._unsubscribeCollection();
      if (!this.scope) {
        return;
      }
      var items = this.items;
      this.strategy = this.strategyLocator.getStrategy(items);
      if (!this.isOneTime && !this._observeInnerCollection()) {
        this._observeCollection();
      }
      this.strategy.instanceChanged(this, items);
    };
    Repeat.prototype._getInnerCollection = function _getInnerCollection() {
      var expression = _repeatUtilities.unwrapExpression(this.sourceExpression);
      if (!expression) {
        return null;
      }
      return expression.evaluate(this.scope, null);
    };
    Repeat.prototype.handleCollectionMutated = function handleCollectionMutated(collection, changes) {
      this.strategy.instanceMutated(this, collection, changes);
    };
    Repeat.prototype.handleInnerCollectionMutated = function handleInnerCollectionMutated(collection, changes) {
      var _this = this;
      if (this.ignoreMutation) {
        return;
      }
      this.ignoreMutation = true;
      var newItems = this.sourceExpression.evaluate(this.scope, this.lookupFunctions);
      this.observerLocator.taskQueue.queueMicroTask(function() {
        return _this.ignoreMutation = false;
      });
      if (newItems === this.items) {
        this.itemsChanged();
      } else {
        this.items = newItems;
      }
    };
    Repeat.prototype._observeInnerCollection = function _observeInnerCollection() {
      var items = this._getInnerCollection();
      var strategy = this.strategyLocator.getStrategy(items);
      if (!strategy) {
        return false;
      }
      this.collectionObserver = strategy.getCollectionObserver(this.observerLocator, items);
      if (!this.collectionObserver) {
        return false;
      }
      this.callContext = 'handleInnerCollectionMutated';
      this.collectionObserver.subscribe(this.callContext, this);
      return true;
    };
    Repeat.prototype._observeCollection = function _observeCollection() {
      var items = this.items;
      this.collectionObserver = this.strategy.getCollectionObserver(this.observerLocator, items);
      if (this.collectionObserver) {
        this.callContext = 'handleCollectionMutated';
        this.collectionObserver.subscribe(this.callContext, this);
      }
    };
    var _Repeat = Repeat;
    Repeat = _aureliaDependencyInjection.inject(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.TargetInstruction, _aureliaTemplating.ViewSlot, _aureliaTemplating.ViewResources, _aureliaBinding.ObserverLocator, _repeatStrategyLocator.RepeatStrategyLocator)(Repeat) || Repeat;
    Repeat = _aureliaTemplating.templateController(Repeat) || Repeat;
    Repeat = _aureliaTemplating.customAttribute('repeat')(Repeat) || Repeat;
    return Repeat;
  })();
  exports.Repeat = Repeat;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/show.js", ["exports", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _aureliaDependencyInjection, _aureliaTemplating, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Show = (function() {
    function Show(element, animator) {
      _classCallCheck(this, _Show);
      this.element = element;
      this.animator = animator;
    }
    Show.prototype.valueChanged = function valueChanged(newValue) {
      if (newValue) {
        this.animator.removeClass(this.element, 'aurelia-hide');
      } else {
        this.animator.addClass(this.element, 'aurelia-hide');
      }
    };
    Show.prototype.bind = function bind(bindingContext) {
      this.valueChanged(this.value);
    };
    var _Show = Show;
    Show = _aureliaDependencyInjection.inject(_aureliaPal.DOM.Element, _aureliaTemplating.Animator)(Show) || Show;
    Show = _aureliaTemplating.customAttribute('show')(Show) || Show;
    return Show;
  })();
  exports.Show = Show;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/sanitize-html.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/html-sanitizer.js"], function(exports, _aureliaBinding, _aureliaDependencyInjection, _htmlSanitizer) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var SanitizeHTMLValueConverter = (function() {
    function SanitizeHTMLValueConverter(sanitizer) {
      _classCallCheck(this, _SanitizeHTMLValueConverter);
      this.sanitizer = sanitizer;
    }
    SanitizeHTMLValueConverter.prototype.toView = function toView(untrustedMarkup) {
      if (untrustedMarkup === null || untrustedMarkup === undefined) {
        return null;
      }
      return this.sanitizer.sanitize(untrustedMarkup);
    };
    var _SanitizeHTMLValueConverter = SanitizeHTMLValueConverter;
    SanitizeHTMLValueConverter = _aureliaDependencyInjection.inject(_htmlSanitizer.HTMLSanitizer)(SanitizeHTMLValueConverter) || SanitizeHTMLValueConverter;
    SanitizeHTMLValueConverter = _aureliaBinding.valueConverter('sanitizeHTML')(SanitizeHTMLValueConverter) || SanitizeHTMLValueConverter;
    return SanitizeHTMLValueConverter;
  })();
  exports.SanitizeHTMLValueConverter = SanitizeHTMLValueConverter;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/replaceable.js", ["exports", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js"], function(exports, _aureliaDependencyInjection, _aureliaTemplating) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Replaceable = (function() {
    function Replaceable(viewFactory, viewSlot) {
      _classCallCheck(this, _Replaceable);
      this.viewFactory = viewFactory;
      this.viewSlot = viewSlot;
      this.view = null;
    }
    Replaceable.prototype.bind = function bind(bindingContext, overrideContext) {
      if (this.view === null) {
        this.view = this.viewFactory.create();
        this.viewSlot.add(this.view);
      }
      this.view.bind(bindingContext, overrideContext);
    };
    Replaceable.prototype.unbind = function unbind() {
      this.view.unbind();
    };
    var _Replaceable = Replaceable;
    Replaceable = _aureliaDependencyInjection.inject(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot)(Replaceable) || Replaceable;
    Replaceable = _aureliaTemplating.templateController(Replaceable) || Replaceable;
    Replaceable = _aureliaTemplating.customAttribute('replaceable')(Replaceable) || Replaceable;
    return Replaceable;
  })();
  exports.Replaceable = Replaceable;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/focus.js", ["exports", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-binding@1.0.0-beta.1.0.2.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-task-queue@1.0.0-beta.1.0.1.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _aureliaTemplating, _aureliaBinding, _aureliaDependencyInjection, _aureliaTaskQueue, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Focus = (function() {
    function Focus(element, taskQueue) {
      var _this = this;
      _classCallCheck(this, _Focus);
      this.element = element;
      this.taskQueue = taskQueue;
      this.focusListener = function(e) {
        _this.value = true;
      };
      this.blurListener = function(e) {
        if (_aureliaPal.DOM.activeElement !== _this.element) {
          _this.value = false;
        }
      };
    }
    Focus.prototype.valueChanged = function valueChanged(newValue) {
      if (newValue) {
        this._giveFocus();
      } else {
        this.element.blur();
      }
    };
    Focus.prototype._giveFocus = function _giveFocus() {
      var _this2 = this;
      this.taskQueue.queueMicroTask(function() {
        if (_this2.value) {
          _this2.element.focus();
        }
      });
    };
    Focus.prototype.attached = function attached() {
      this.element.addEventListener('focus', this.focusListener);
      this.element.addEventListener('blur', this.blurListener);
    };
    Focus.prototype.detached = function detached() {
      this.element.removeEventListener('focus', this.focusListener);
      this.element.removeEventListener('blur', this.blurListener);
    };
    var _Focus = Focus;
    Focus = _aureliaDependencyInjection.inject(_aureliaPal.DOM.Element, _aureliaTaskQueue.TaskQueue)(Focus) || Focus;
    Focus = _aureliaTemplating.customAttribute('focus', _aureliaBinding.bindingMode.twoWay)(Focus) || Focus;
    return Focus;
  })();
  exports.Focus = Focus;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/compile-spy.js", ["exports", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-logging@1.0.0-beta.1.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _aureliaTemplating, _aureliaDependencyInjection, _aureliaLogging, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var CompileSpy = (function() {
    function CompileSpy(element, instruction) {
      _classCallCheck(this, _CompileSpy);
      _aureliaLogging.getLogger('compile-spy').info(element, instruction);
    }
    var _CompileSpy = CompileSpy;
    CompileSpy = _aureliaDependencyInjection.inject(_aureliaPal.DOM.Element, _aureliaTemplating.TargetInstruction)(CompileSpy) || CompileSpy;
    CompileSpy = _aureliaTemplating.customAttribute('compile-spy')(CompileSpy) || CompileSpy;
    return CompileSpy;
  })();
  exports.CompileSpy = CompileSpy;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/view-spy.js", ["exports", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-logging@1.0.0-beta.1.js"], function(exports, _aureliaTemplating, _aureliaLogging) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ViewSpy = (function() {
    function ViewSpy() {
      _classCallCheck(this, _ViewSpy);
      this.logger = _aureliaLogging.getLogger('view-spy');
    }
    ViewSpy.prototype._log = function _log(lifecycleName, context) {
      if (!this.value && lifecycleName === 'created') {
        this.logger.info(lifecycleName, this.view);
      } else if (this.value && this.value.indexOf(lifecycleName) !== -1) {
        this.logger.info(lifecycleName, this.view, context);
      }
    };
    ViewSpy.prototype.created = function created(view) {
      this.view = view;
      this._log('created');
    };
    ViewSpy.prototype.bind = function bind(bindingContext) {
      this._log('bind', bindingContext);
    };
    ViewSpy.prototype.attached = function attached() {
      this._log('attached');
    };
    ViewSpy.prototype.detached = function detached() {
      this._log('detached');
    };
    ViewSpy.prototype.unbind = function unbind() {
      this._log('unbind');
    };
    var _ViewSpy = ViewSpy;
    ViewSpy = _aureliaTemplating.customAttribute('view-spy')(ViewSpy) || ViewSpy;
    return ViewSpy;
  })();
  exports.ViewSpy = ViewSpy;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/dynamic-element.js", ["exports", "npm:aurelia-templating@1.0.0-beta.1.0.1.js"], function(exports, _aureliaTemplating) {
  'use strict';
  exports.__esModule = true;
  exports._createDynamicElement = _createDynamicElement;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _createDynamicElement(name, viewUrl, bindableNames) {
    var DynamicElement = (function() {
      function DynamicElement() {
        _classCallCheck(this, _DynamicElement);
      }
      DynamicElement.prototype.bind = function bind(bindingContext) {
        this.$parent = bindingContext;
      };
      var _DynamicElement = DynamicElement;
      DynamicElement = _aureliaTemplating.useView(viewUrl)(DynamicElement) || DynamicElement;
      DynamicElement = _aureliaTemplating.customElement(name)(DynamicElement) || DynamicElement;
      return DynamicElement;
    })();
    for (var i = 0,
        ii = bindableNames.length; i < ii; ++i) {
      _aureliaTemplating.bindable(bindableNames[i])(DynamicElement);
    }
    return DynamicElement;
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/css-resource.js", ["exports", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-loader@1.0.0-beta.1.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-path@1.0.0-beta.1.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _aureliaTemplating, _aureliaLoader, _aureliaDependencyInjection, _aureliaPath, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  exports._createCSSResource = _createCSSResource;
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var cssUrlMatcher = /url\((?!['"]data)([^)]+)\)/gi;
  function fixupCSSUrls(address, css) {
    return css.replace(cssUrlMatcher, function(match, p1) {
      var quote = p1.charAt(0);
      if (quote === '\'' || quote === '"') {
        p1 = p1.substr(1, p1.length - 2);
      }
      return 'url(\'' + _aureliaPath.relativeToFile(p1, address) + '\')';
    });
  }
  var CSSResource = (function() {
    function CSSResource(address) {
      _classCallCheck(this, CSSResource);
      this.address = address;
      this._global = null;
      this._scoped = null;
    }
    CSSResource.prototype.initialize = function initialize(container, target) {
      this._global = new target('global');
      this._scoped = new target('scoped');
    };
    CSSResource.prototype.register = function register(registry, name) {
      registry.registerViewEngineHooks(name === 'scoped' ? this._scoped : this._global);
    };
    CSSResource.prototype.load = function load(container) {
      var _this = this;
      return container.get(_aureliaLoader.Loader).loadText(this.address).then(function(text) {
        text = fixupCSSUrls(_this.address, text);
        _this._global.css = text;
        _this._scoped.css = text;
      });
    };
    return CSSResource;
  })();
  var CSSViewEngineHooks = (function() {
    function CSSViewEngineHooks(mode) {
      _classCallCheck(this, CSSViewEngineHooks);
      this.mode = mode;
      this.css = null;
      this._alreadyGloballyInjected = false;
    }
    CSSViewEngineHooks.prototype.beforeCompile = function beforeCompile(content, resources, instruction) {
      if (this.mode === 'scoped') {
        if (instruction.targetShadowDOM) {
          _aureliaPal.DOM.injectStyles(this.css, content, true);
        } else if (_aureliaPal.FEATURE.scopedCSS) {
          var styleNode = _aureliaPal.DOM.injectStyles(this.css, content, true);
          styleNode.setAttribute('scoped', 'scoped');
        } else if (!this._alreadyGloballyInjected) {
          _aureliaPal.DOM.injectStyles(this.css);
          this._alreadyGloballyInjected = true;
        }
      } else if (!this._alreadyGloballyInjected) {
        _aureliaPal.DOM.injectStyles(this.css);
        this._alreadyGloballyInjected = true;
      }
    };
    return CSSViewEngineHooks;
  })();
  function _createCSSResource(address) {
    var ViewCSS = (function(_CSSViewEngineHooks) {
      _inherits(ViewCSS, _CSSViewEngineHooks);
      function ViewCSS() {
        _classCallCheck(this, _ViewCSS);
        _CSSViewEngineHooks.apply(this, arguments);
      }
      var _ViewCSS = ViewCSS;
      ViewCSS = _aureliaTemplating.resource(new CSSResource(address))(ViewCSS) || ViewCSS;
      return ViewCSS;
    })(CSSViewEngineHooks);
    return ViewCSS;
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/html-sanitizer.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var SCRIPT_REGEX = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
  var HTMLSanitizer = (function() {
    function HTMLSanitizer() {
      _classCallCheck(this, HTMLSanitizer);
    }
    HTMLSanitizer.prototype.sanitize = function sanitize(input) {
      return input.replace(SCRIPT_REGEX, '');
    };
    return HTMLSanitizer;
  })();
  exports.HTMLSanitizer = HTMLSanitizer;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/binding-mode-behaviors.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js"], function(exports, _aureliaBinding) {
  'use strict';
  exports.__esModule = true;
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ModeBindingBehavior = (function() {
    function ModeBindingBehavior(mode) {
      _classCallCheck(this, ModeBindingBehavior);
      this.mode = mode;
    }
    ModeBindingBehavior.prototype.bind = function bind(binding, source, lookupFunctions) {
      binding.originalMode = binding.mode;
      binding.mode = this.mode;
    };
    ModeBindingBehavior.prototype.unbind = function unbind(binding, source) {
      binding.mode = binding.originalMode;
      binding.originalMode = null;
    };
    return ModeBindingBehavior;
  })();
  var OneTimeBindingBehavior = (function(_ModeBindingBehavior) {
    _inherits(OneTimeBindingBehavior, _ModeBindingBehavior);
    function OneTimeBindingBehavior() {
      _classCallCheck(this, OneTimeBindingBehavior);
      _ModeBindingBehavior.call(this, _aureliaBinding.bindingMode.oneTime);
    }
    return OneTimeBindingBehavior;
  })(ModeBindingBehavior);
  exports.OneTimeBindingBehavior = OneTimeBindingBehavior;
  var OneWayBindingBehavior = (function(_ModeBindingBehavior2) {
    _inherits(OneWayBindingBehavior, _ModeBindingBehavior2);
    function OneWayBindingBehavior() {
      _classCallCheck(this, OneWayBindingBehavior);
      _ModeBindingBehavior2.call(this, _aureliaBinding.bindingMode.oneWay);
    }
    return OneWayBindingBehavior;
  })(ModeBindingBehavior);
  exports.OneWayBindingBehavior = OneWayBindingBehavior;
  var TwoWayBindingBehavior = (function(_ModeBindingBehavior3) {
    _inherits(TwoWayBindingBehavior, _ModeBindingBehavior3);
    function TwoWayBindingBehavior() {
      _classCallCheck(this, TwoWayBindingBehavior);
      _ModeBindingBehavior3.call(this, _aureliaBinding.bindingMode.twoWay);
    }
    return TwoWayBindingBehavior;
  })(ModeBindingBehavior);
  exports.TwoWayBindingBehavior = TwoWayBindingBehavior;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/throttle-binding-behavior.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js"], function(exports, _aureliaBinding) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function throttle(newValue) {
    var _this = this;
    var state = this.throttleState;
    var elapsed = +new Date() - state.last;
    if (elapsed >= state.delay) {
      clearTimeout(state.timeoutId);
      state.timeoutId = null;
      state.last = +new Date();
      this.throttledMethod(newValue);
      return;
    }
    state.newValue = newValue;
    if (state.timeoutId === null) {
      state.timeoutId = setTimeout(function() {
        state.timeoutId = null;
        state.last = +new Date();
        _this.throttledMethod(state.newValue);
      }, state.delay - elapsed);
    }
  }
  var ThrottleBindingBehavior = (function() {
    function ThrottleBindingBehavior() {
      _classCallCheck(this, ThrottleBindingBehavior);
    }
    ThrottleBindingBehavior.prototype.bind = function bind(binding, source) {
      var delay = arguments.length <= 2 || arguments[2] === undefined ? 200 : arguments[2];
      var methodToThrottle = 'updateTarget';
      if (binding.callSource) {
        methodToThrottle = 'callSource';
      } else if (binding.updateSource && binding.mode === _aureliaBinding.bindingMode.twoWay) {
        methodToThrottle = 'updateSource';
      }
      binding.throttledMethod = binding[methodToThrottle];
      binding.throttledMethod.originalName = methodToThrottle;
      binding[methodToThrottle] = throttle;
      binding.throttleState = {
        delay: delay,
        last: 0,
        timeoutId: null
      };
    };
    ThrottleBindingBehavior.prototype.unbind = function unbind(binding, source) {
      var methodToRestore = binding.throttledMethod.originalName;
      binding[methodToRestore] = binding.throttledMethod;
      binding.throttledMethod = null;
      clearTimeout(binding.throttleState.timeoutId);
      binding.throttleState = null;
    };
    return ThrottleBindingBehavior;
  })();
  exports.ThrottleBindingBehavior = ThrottleBindingBehavior;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/debounce-binding-behavior.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js"], function(exports, _aureliaBinding) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function debounce(newValue) {
    var _this = this;
    var state = this.debounceState;
    if (state.immediate) {
      state.immediate = false;
      this.debouncedMethod(newValue);
      return;
    }
    clearTimeout(state.timeoutId);
    state.timeoutId = setTimeout(function() {
      return _this.debouncedMethod(newValue);
    }, state.delay);
  }
  var DebounceBindingBehavior = (function() {
    function DebounceBindingBehavior() {
      _classCallCheck(this, DebounceBindingBehavior);
    }
    DebounceBindingBehavior.prototype.bind = function bind(binding, source) {
      var delay = arguments.length <= 2 || arguments[2] === undefined ? 200 : arguments[2];
      var methodToDebounce = 'updateTarget';
      if (binding.callSource) {
        methodToDebounce = 'callSource';
      } else if (binding.updateSource && binding.mode === _aureliaBinding.bindingMode.twoWay) {
        methodToDebounce = 'updateSource';
      }
      binding.debouncedMethod = binding[methodToDebounce];
      binding.debouncedMethod.originalName = methodToDebounce;
      binding[methodToDebounce] = debounce;
      binding.debounceState = {
        delay: delay,
        timeoutId: null,
        immediate: methodToDebounce === 'updateTarget'
      };
    };
    DebounceBindingBehavior.prototype.unbind = function unbind(binding, source) {
      var methodToRestore = binding.debouncedMethod.originalName;
      binding[methodToRestore] = binding.debouncedMethod;
      binding.debouncedMethod = null;
      clearTimeout(binding.debounceState.timeoutId);
      binding.debounceState = null;
    };
    return DebounceBindingBehavior;
  })();
  exports.DebounceBindingBehavior = DebounceBindingBehavior;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/signal-binding-behavior.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/binding-signaler.js"], function(exports, _aureliaBinding, _bindingSignaler) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var SignalBindingBehavior = (function() {
    SignalBindingBehavior.inject = function inject() {
      return [_bindingSignaler.BindingSignaler];
    };
    function SignalBindingBehavior(bindingSignaler) {
      _classCallCheck(this, SignalBindingBehavior);
      this.signals = bindingSignaler.signals;
    }
    SignalBindingBehavior.prototype.bind = function bind(binding, source, name) {
      if (!binding.updateTarget) {
        throw new Error('Only property bindings and string interpolation bindings can be signaled.  Trigger, delegate and call bindings cannot be signaled.');
      }
      if (binding.mode === _aureliaBinding.bindingMode.oneTime) {
        throw new Error('One-time bindings cannot be signaled.');
      }
      var bindings = this.signals[name] || (this.signals[name] = []);
      bindings.push(binding);
      binding.signalName = name;
    };
    SignalBindingBehavior.prototype.unbind = function unbind(binding, source) {
      var name = binding.signalName;
      binding.signalName = null;
      var bindings = this.signals[name];
      bindings.splice(bindings.indexOf(binding), 1);
    };
    return SignalBindingBehavior;
  })();
  exports.SignalBindingBehavior = SignalBindingBehavior;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/binding-signaler.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js"], function(exports, _aureliaBinding) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var BindingSignaler = (function() {
    function BindingSignaler() {
      _classCallCheck(this, BindingSignaler);
      this.signals = {};
    }
    BindingSignaler.prototype.signal = function signal(name) {
      var bindings = this.signals[name];
      if (!bindings) {
        return;
      }
      var i = bindings.length;
      while (i--) {
        bindings[i].call(_aureliaBinding.sourceContext);
      }
    };
    return BindingSignaler;
  })();
  exports.BindingSignaler = BindingSignaler;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/update-trigger-binding-behavior.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js"], function(exports, _aureliaBinding) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var eventNamesRequired = 'The updateTrigger binding behavior requires at least one event name argument: eg <input value.bind="firstName & updateTrigger:\'blur\'">';
  var notApplicableMessage = 'The updateTrigger binding behavior can only be applied to two-way bindings on input/select elements.';
  var UpdateTriggerBindingBehavior = (function() {
    _createClass(UpdateTriggerBindingBehavior, null, [{
      key: 'inject',
      value: [_aureliaBinding.EventManager],
      enumerable: true
    }]);
    function UpdateTriggerBindingBehavior(eventManager) {
      _classCallCheck(this, UpdateTriggerBindingBehavior);
      this.eventManager = eventManager;
    }
    UpdateTriggerBindingBehavior.prototype.bind = function bind(binding, source) {
      for (var _len = arguments.length,
          events = Array(_len > 2 ? _len - 2 : 0),
          _key = 2; _key < _len; _key++) {
        events[_key - 2] = arguments[_key];
      }
      if (events.length === 0) {
        throw new Error(eventNamesRequired);
      }
      if (binding.mode !== _aureliaBinding.bindingMode.twoWay || !binding.targetProperty.handler) {
        throw new Error(notApplicableMessage);
      }
      binding.targetProperty.originalHandler = binding.targetProperty.handler;
      var handler = this.eventManager.createElementHandler(events);
      binding.targetProperty.handler = handler;
    };
    UpdateTriggerBindingBehavior.prototype.unbind = function unbind(binding, source) {
      binding.targetProperty.handler = binding.targetProperty.originalHandler;
      binding.targetProperty.originalHandler = null;
    };
    return UpdateTriggerBindingBehavior;
  })();
  exports.UpdateTriggerBindingBehavior = UpdateTriggerBindingBehavior;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2/aurelia-templating-resources.js", ["exports", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/compose.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/if.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/with.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/repeat.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/show.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/sanitize-html.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/replaceable.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/focus.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/compile-spy.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/view-spy.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/dynamic-element.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/css-resource.js", "npm:aurelia-pal@1.0.0-beta.1.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/html-sanitizer.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/binding-mode-behaviors.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/throttle-binding-behavior.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/debounce-binding-behavior.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/signal-binding-behavior.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/binding-signaler.js", "npm:aurelia-templating-resources@1.0.0-beta.1.0.2/update-trigger-binding-behavior.js"], function(exports, _compose, _if, _with, _repeat, _show, _sanitizeHtml, _replaceable, _focus, _compileSpy, _viewSpy, _aureliaTemplating, _dynamicElement, _cssResource, _aureliaPal, _htmlSanitizer, _bindingModeBehaviors, _throttleBindingBehavior, _debounceBindingBehavior, _signalBindingBehavior, _bindingSignaler, _updateTriggerBindingBehavior) {
  'use strict';
  exports.__esModule = true;
  function configure(config) {
    if (_aureliaPal.FEATURE.shadowDOM) {
      _aureliaPal.DOM.injectStyles('body /deep/ .aurelia-hide { display:none !important; }');
    } else {
      _aureliaPal.DOM.injectStyles('.aurelia-hide { display:none !important; }');
    }
    config.globalResources('./compose', './if', './with', './repeat', './show', './replaceable', './sanitize-html', './focus', './compile-spy', './view-spy', './binding-mode-behaviors', './throttle-binding-behavior', './debounce-binding-behavior', './signal-binding-behavior', './update-trigger-binding-behavior');
    var viewEngine = config.container.get(_aureliaTemplating.ViewEngine);
    var loader = config.aurelia.loader;
    viewEngine.addResourcePlugin('.html', {'fetch': function fetch(address) {
        return loader.loadTemplate(address).then(function(registryEntry) {
          var _ref;
          var bindable = registryEntry.template.getAttribute('bindable');
          var elementName = address.replace('.html', '');
          var index = elementName.lastIndexOf('/');
          if (index !== 0) {
            elementName = elementName.substring(index + 1);
          }
          if (bindable) {
            bindable = bindable.split(',').map(function(x) {
              return x.trim();
            });
            registryEntry.template.removeAttribute('bindable');
          } else {
            bindable = [];
          }
          return (_ref = {}, _ref[elementName] = _dynamicElement._createDynamicElement(elementName, address, bindable), _ref);
        });
      }});
    viewEngine.addResourcePlugin('.css', {'fetch': function fetch(address) {
        var _ref2;
        return (_ref2 = {}, _ref2[address] = _cssResource._createCSSResource(address), _ref2);
      }});
  }
  exports.Compose = _compose.Compose;
  exports.If = _if.If;
  exports.With = _with.With;
  exports.Repeat = _repeat.Repeat;
  exports.Show = _show.Show;
  exports.HTMLSanitizer = _htmlSanitizer.HTMLSanitizer;
  exports.SanitizeHTMLValueConverter = _sanitizeHtml.SanitizeHTMLValueConverter;
  exports.Replaceable = _replaceable.Replaceable;
  exports.Focus = _focus.Focus;
  exports.CompileSpy = _compileSpy.CompileSpy;
  exports.ViewSpy = _viewSpy.ViewSpy;
  exports.configure = configure;
  exports.OneTimeBindingBehavior = _bindingModeBehaviors.OneTimeBindingBehavior;
  exports.OneWayBindingBehavior = _bindingModeBehaviors.OneWayBindingBehavior;
  exports.TwoWayBindingBehavior = _bindingModeBehaviors.TwoWayBindingBehavior;
  exports.ThrottleBindingBehavior = _throttleBindingBehavior.ThrottleBindingBehavior;
  exports.DebounceBindingBehavior = _debounceBindingBehavior.DebounceBindingBehavior;
  exports.SignalBindingBehavior = _signalBindingBehavior.SignalBindingBehavior;
  exports.BindingSignaler = _bindingSignaler.BindingSignaler;
  exports.UpdateTriggerBindingBehavior = _updateTriggerBindingBehavior.UpdateTriggerBindingBehavior;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating-resources@1.0.0-beta.1.0.2.js", ["npm:aurelia-templating-resources@1.0.0-beta.1.0.2/aurelia-templating-resources.js"], function(main) {
  return main;
});

})();
System.register('service/concierge_request_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
    'use strict';

    var HttpRequest, inject, API, ConciergeRequestService;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_utilsRequest) {
            HttpRequest = _utilsRequest.HttpRequest;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            ConciergeRequestService = function () {
                function ConciergeRequestService(httpRequest, Api) {
                    _classCallCheck(this, _ConciergeRequestService);

                    this.httpRequest = httpRequest;
                    this.api = Api;
                }

                _createClass(ConciergeRequestService, [{
                    key: 'getServices',
                    value: function getServices() {
                        var acitivitiesUrl = this.api.getBaseUrl() + this.api.conciergeServices;
                        return this.httpRequest.createGetRequest(acitivitiesUrl);
                    }
                }, {
                    key: 'triggerConciergeMail',
                    value: function triggerConciergeMail(uuid, params) {
                        var conciergeMailUrl = this.api.getBaseUrl() + this.api.conciergeMailRequest.replace("{uuid}", uuid);
                        return this.httpRequest.createPutRequest(conciergeMailUrl, params);
                    }
                }, {
                    key: 'updateConciergeRequest',
                    value: function updateConciergeRequest(uuid, params) {
                        var conciergeUpdateUrl = this.api.getBaseUrl() + this.api.conciergeUpdateRequest.replace("{uuid}", uuid);
                        return this.httpRequest.createPutRequest(conciergeUpdateUrl, params);
                    }
                }]);

                var _ConciergeRequestService = ConciergeRequestService;
                ConciergeRequestService = inject(HttpRequest, API)(ConciergeRequestService) || ConciergeRequestService;
                return ConciergeRequestService;
            }();

            _export('ConciergeRequestService', ConciergeRequestService);
        }
    };
});
System.register('view-models/concierge/request-detail.js', ['github:lodash/lodash@3.10.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-templating-resources@1.0.0-beta.1.0.2.js', 'service/concierge_request_service.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var _, bindable, inject, EventAggregator, BindingSignaler, ConciergeRequestService, I18N, RequestDetail;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }, function (_aureliaFramework) {
            bindable = _aureliaFramework.bindable;
            inject = _aureliaFramework.inject;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaTemplatingResources) {
            BindingSignaler = _aureliaTemplatingResources.BindingSignaler;
        }, function (_serviceConcierge_request_service) {
            ConciergeRequestService = _serviceConcierge_request_service.ConciergeRequestService;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            RequestDetail = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(RequestDetail, [{
                    key: 'requests',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'headers',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function RequestDetail(ea, conciergeRequestService, bindingSignaler, i18n) {
                    _classCallCheck(this, _RequestDetail);

                    _defineDecoratedPropertyDescriptor(this, 'requests', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'headers', _instanceInitializers);

                    this.displayRequests = true;

                    this.ea = ea;
                    this.conciergeRequestService = conciergeRequestService;
                    this.bindingSignaler = bindingSignaler;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});

                    this.subscribeToEvents();
                }

                _createDecoratedClass(RequestDetail, [{
                    key: 'attached',
                    value: function attached() {}
                }, {
                    key: 'checkDisplayForTableHead',
                    value: function checkDisplayForTableHead() {
                        var count = 0;
                        this.requests.forEach(function (req) {
                            if (req._destroy) {
                                count++;
                            }
                        });
                        this.displayRequests = count != this.requests.length;
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this = this;

                        this.ea.subscribe('concierge:refresh', function () {
                            _this.bindingSignaler.signal('destroy-signal');
                            _this.checkDisplayForTableHead();
                        });
                    }
                }, {
                    key: 'copyRequest',
                    value: function copyRequest(event, request) {
                        this.ea.publish('concierge:copy', request.ui_uuid);
                    }
                }, {
                    key: 'editRequest',
                    value: function editRequest(event, request) {
                        this.ea.publish('concierge:edit', request.ui_uuid);
                    }
                }, {
                    key: 'deleteRequest',
                    value: function deleteRequest(event, request) {
                        var _this2 = this;

                        this.ea.publish("show:notification", {
                            title: this.i18n.tr('concierge.commons.areYouSure'),
                            message: this.i18n.tr('concierge.requestDetail.clickYesMessage'),
                            'class': 'green',
                            isConfirmation: true,
                            done: function done() {
                                _this2.ea.publish('concierge:delete', request.ui_uuid);
                            }
                        });
                    }
                }], null, _instanceInitializers);

                var _RequestDetail = RequestDetail;
                RequestDetail = inject(EventAggregator, ConciergeRequestService, BindingSignaler, I18N)(RequestDetail) || RequestDetail;
                return RequestDetail;
            }();

            _export('RequestDetail', RequestDetail);
        }
    };
});
System.registerDynamic("view-models/concierge/service-form.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n<div class=\"col-xs-12 no-padding\">\n\t<div class=\"form-group\">\n\t    <label class=\"required\">Mode of Travel</label>\n\t    <input type=\"textfield\" class=\"form-control\" required=\"\" value=\"\" placeholder=\"Mode of Travel\">\n\t</div>\n\t<div class=\"form-group\">\n\t    <label class=\"required\">From</label>\n\t    <input type=\"textfield\" class=\"form-control\" required=\"\" value=\"\" placeholder=\"Mode of Travel\">\n\t</div>\n\t<div class=\"form-group\">\n\t    <label class=\"required\">To</label>\n\t    <input type=\"textfield\" class=\"form-control\" required=\"\" value=\"\" placeholder=\"Mode of Travel\">\n\t</div>\n\t<div class=\"form-group\">\n\t    <label class=\"required\">Budget</label>\n\t    <input type=\"textfield\" class=\"form-control\" required=\"\" value=\"\" placeholder=\"Mode of Travel\">\n\t</div>\n\t<div class=\"no-padding text-right\">\n\t\t<a href=\"javascript:void(0)\" class=\"btn btn-blue save-form right-margin-10\">ADD</a>\n\t\t<a href=\"javascript:void(0)\" class=\"cancel\">CANCEL</a>\n\t</div>\n</div>\n</template>";
});
System.register("view-models/concierge/service-form.js", [], function (_export) {
  "use strict";

  return {
    setters: [],
    execute: function () {
      service - form.js;
    }
  };
});
System.register('view-models/event-config/converter.js', [], function (_export) {
    'use strict';

    var LowerValueConverter;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [],
        execute: function () {
            LowerValueConverter = function () {
                function LowerValueConverter() {
                    _classCallCheck(this, LowerValueConverter);
                }

                _createClass(LowerValueConverter, [{
                    key: 'toView',
                    value: function toView(value) {
                        if (value) return value.toLowerCase();
                        return '';
                    }
                }]);

                return LowerValueConverter;
            }();

            _export('LowerValueConverter', LowerValueConverter);
        }
    };
});
System.registerDynamic("view-models/event-config/enabler-item.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n<require from='./converter'></require>\n<div class=\"enabler-item\">\n  <input type=\"checkbox\" id.bind=\"displayName\" data-uuid=\"${uuid}\" class=\"inp-meeting-type\" checked.bind=\"enabled\">\n  <div class=\"enabler-click\">\n    <div class=\"enabler-abb\">${displayName | lower}</div>\n    <span class=\"enabler-title\">${displayName}</span>\n  </div>\n  <label for=\"${displayName}\">\n    <div class=\"enabler-btn\">\n      <span class=\"btn-disable\" i18n=\"eventConfig.enablerItem.disable\"></span>\n      <span class=\"btn-enable\" i18n=\"eventConfig.enablerItem.enable\"></span>\n    </div>\n  </label>\n</div>\n</template>";
});
System.register('view-models/event-config/enabler-item.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var bindable, I18N, EnablerItem;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaFramework) {
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            EnablerItem = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(EnablerItem, [{
                    key: 'enabled',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return false;
                    },
                    enumerable: true
                }, {
                    key: 'displayName',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return "";
                    },
                    enumerable: true
                }, {
                    key: 'uuid',
                    decorators: [bindable],
                    initializer: function initializer() {
                        return "";
                    },
                    enumerable: true
                }], null, _instanceInitializers);

                function EnablerItem(i18n) {
                    _classCallCheck(this, _EnablerItem);

                    _defineDecoratedPropertyDescriptor(this, 'enabled', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'displayName', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'uuid', _instanceInitializers);

                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(EnablerItem, [{
                    key: 'enabledChanged',
                    value: function enabledChanged(newVal, oldVal) {
                        console.log("New", newVal);
                    }
                }], null, _instanceInitializers);

                var _EnablerItem = EnablerItem;
                EnablerItem = inject(I18N)(EnablerItem) || EnablerItem;
                return EnablerItem;
            }();

            _export('EnablerItem', EnablerItem);
        }
    };
});
System.registerDynamic("view-models/topics/listing/filters/topic-filters.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"components/aurelia-select\"></require>\n    <div class=\"filter-item col-md-6\" repeat.for='filter of filters'>\n      <label>${filter.display_name}</label>\n      <div class=\"filter-values token-input-fld\">\n        <aurelia-select if.bind=\"filter.options\" select-id.bind=\"filter.name\" data-source.bind=\"filter.options\" style=\"width:100%\" place-holder.bind=\"filter.placeholder\" min-input.bind=\"'0'\">\n        </aurelia-select>\n\t      <aurelia-select if.bind=\"filter.urlToGet\" select-id.bind=\"filter.name\" page.bind=\"1\" per-page.bind=\"500\" is-multiple.bind=\"true\" swidth.bind=\"'100%'\" place-holder.bind=\"filter.placeholder\" place-holder.bind=\"filter.placeholder\" select-url.bind=\"filter.urlToGet\" process.bind=\"filter.processEntities\" style=\"width:100%\"></aurelia-select>\n      </div>\n    </div>\n</template>\n";
});
System.register('view-models/topics/listing/filters/topic-filters.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js', 'service/topic_request_service.js', 'view-models/topics/listing/fetch-entity-methods.js'], function (_export) {
    'use strict';

    var $, EventAggregator, inject, bindable, I18N, TopicRequestService, EntityFetchMethods, TopicAddCard;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    var _get = function get(_x, _x2, _x3) {
        var _again = true;_function: while (_again) {
            var object = _x,
                property = _x2,
                receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
                var parent = Object.getPrototypeOf(object);if (parent === null) {
                    return undefined;
                } else {
                    _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
                }
            } else if ('value' in desc) {
                return desc.value;
            } else {
                var getter = desc.get;if (getter === undefined) {
                    return undefined;
                }return getter.call(receiver);
            }
        }
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    return {
        setters: [function (_jquery) {
            $ = _jquery['default'];
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_serviceTopic_request_service) {
            TopicRequestService = _serviceTopic_request_service.TopicRequestService;
        }, function (_fetchEntityMethods) {
            EntityFetchMethods = _fetchEntityMethods.EntityFetchMethods;
        }],
        execute: function () {
            TopicAddCard = function (_EntityFetchMethods) {
                _inherits(TopicAddCard, _EntityFetchMethods);

                function TopicAddCard(ea, i18n, topicRequestService) {
                    _classCallCheck(this, _TopicAddCard);

                    _get(Object.getPrototypeOf(_TopicAddCard.prototype), 'constructor', this).call(this);
                    this.filters = [];
                    this.ea = ea;
                    this.topicRequestService = topicRequestService;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                    this.setFilterUrls();
                }

                _createClass(TopicAddCard, [{
                    key: 'setFilterUrls',
                    value: function setFilterUrls() {
                        var eventSystemName = envDetails.currentEvent && envDetails.currentEvent.event_system_name || '';
                        this.userListUrl = this.topicRequestService.userListUrl + '?' + $.param({ originate: eventSystemName, statuses: ['active'] });
                        this.roomListUrl = this.topicRequestService.roomListUrl + '?' + $.param({ statuses: ['active'] });
                        this.eventListUrl = this.topicRequestService.eventListUrl;
                        this.activityListUrl = this.topicRequestService.activityListUrl + '?' + $.param({ exclude_consecutive_meeting_types: true });
                    }
                }, {
                    key: 'attached',
                    value: function attached() {
                        var filters = this.filters;
                        var i18nOptions = { label: envDetails.meetingTypeCustomLabel };
                        filters.push({
                            name: this.i18n.tr('topics.commons.active_filter_name'),
                            display_name: this.i18n.tr('topics.commons.topic_status'),
                            options: [{ text: _.startCase(this.i18n.tr('topics.commons.active_filter_name')), id: true }, { text: _.startCase(this.i18n.tr('topics.commons.inactive_filter_name')), id: false }],
                            placeholder: this.i18n.tr('topics.commons.topic_status_placeholder')
                        });
                        if (envDetails.topicUserMappingEnabled) {
                            filters.push({
                                name: 'user_uuids',
                                display_name: this.i18n.tr("topics.commons.users"),
                                urlToGet: this.userListUrl,
                                processEntities: this.processUsers,
                                placeholder: this.i18n.tr("topics.commons.users_search")
                            });
                        }
                        switch (envDetails.topicTitle) {
                            case 'Summit':
                                {
                                    if (envDetails.topicRoomMappingEnabled) {
                                        filters.push({
                                            name: 'room_uuids',
                                            display_name: this.i18n.tr("topics.commons.rooms"),
                                            urlToGet: this.roomListUrl,
                                            placeholder: this.i18n.tr("topics.commons.rooms_search"),
                                            processEntities: this.processRooms
                                        });
                                    }
                                    if (envDetails.topicActivitiesMappingEnabled) {
                                        filters.push({
                                            name: 'activity_uuids',
                                            display_name: this.i18n.tr("topics.commons.activities", i18nOptions),
                                            urlToGet: this.activityListUrl,
                                            placeholder: this.i18n.tr("topics.commons.activites_search", i18nOptions),
                                            processEntities: this.processActivities
                                        });
                                    }
                                    break;
                                }
                            case 'Portal':
                                {
                                    if (envDetails.topicEventsMappingEnabled) {
                                        filters.push({
                                            name: 'event_uuids',
                                            display_name: this.i18n.tr("topics.commons.events"),
                                            urlToGet: this.eventListUrl,
                                            placeholder: this.i18n.tr("topics.commons.events_search"),
                                            processEntities: this.processEvents
                                        });
                                    }
                                    break;
                                }
                            default:
                                break;
                        }
                    }
                }]);

                var _TopicAddCard = TopicAddCard;
                TopicAddCard = inject(EventAggregator, I18N, TopicRequestService)(TopicAddCard) || TopicAddCard;
                return TopicAddCard;
            }(EntityFetchMethods);

            _export('TopicAddCard', TopicAddCard);
        }
    };
});
System.registerDynamic("view-models/topics/listing/topic-add-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"./topic-add-modal\"></require>\n    <require from=\"./topic-import-export-modal\"></require>\n    <div class=\"card add\">\n        <div class=\"card-content\">\n            <div class=\"add-btn\">\n                <a href=\"#\">\n                    <i class=\"jif-plus-circle-o jif-light-grey jif-70\" click.trigger=\"openTopicModal()\"></i>\n                </a>\n            </div>\n            <div>\n                <a href=\"#\" id='add-topic' class='btn btn-white btn-block' click.trigger=\"openTopicModal()\" i18n=\"topics.listing.topicAddCard.addTopic\">\n                </a>\n            </div>\n            <div class=\"text-center font-sm\">OR</div>\n            <div>\n                <form class=\"upload-csv\" style=\"position: relative;\">\n                    <button id=\"import-export-modal\" class=\"btn btn-white btn-block\" click.trigger=\"openImportExportModal()\" i18n=\"topics.listing.topicAddCard.uploadTopic\"></button>\n                </form>\n            </div>\n        </div>\n        <div class=\"card-footer\">\n            <div class=\"card-footer-content\">\n                <div class=\"text-center font-blue\">\n                    <a href=\"\" class=\"font-xs download-link\" click.trigger=\"openDownloadTemplateModal()\" i18n=\"topics.listing.topicAddCard.downloadFormat\"></a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <topic-add-modal ref=\"topicmodal\"></topic-add-modal>\n    <topic-import-export-modal ref=\"importexportmodal\"></topic-import-export-modal>\n</template>\n";
});
System.register('view-models/topics/listing/topic-add-card.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js', 'commons/api.js'], function (_export) {
    'use strict';

    var $, EventAggregator, inject, bindable, I18N, API, TopicAddCard;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_jquery) {
            $ = _jquery['default'];
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            TopicAddCard = function () {
                function TopicAddCard(ea, i18n, api) {
                    _classCallCheck(this, _TopicAddCard);

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                    this.api = api;
                }

                _createClass(TopicAddCard, [{
                    key: 'openTopicModal',
                    value: function openTopicModal() {
                        window.scrollTo(0, 0);
                        this.ea.publish('topicmodal:show');
                    }
                }, {
                    key: 'openImportExportModal',
                    value: function openImportExportModal() {
                        this.ea.publish('topicImportExportModal:show');
                    }
                }, {
                    key: 'openDownloadTemplateModal',
                    value: function openDownloadTemplateModal() {
                        this.ea.publish('topicDownloadTemplateModal:show');
                    }
                }]);

                var _TopicAddCard = TopicAddCard;
                TopicAddCard = inject(EventAggregator, I18N, API)(TopicAddCard) || TopicAddCard;
                return TopicAddCard;
            }();

            _export('TopicAddCard', TopicAddCard);
        }
    };
});
System.registerDynamic("view-models/topics/listing/topic-add-modal.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"components/aurelia-select\"></require>\n\n    <div class=\"modal fade add-topic-popup form-input-popup\" data-backdrop=\"static\" id=\"add-topic-modal\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" ref=\"topicmodal\">\n        <div class=\"modal-dialog\">\n            <div class=\"content\">\n                <div class=\"jiffle-panel\">\n                    <div class=\"jiffle-panel-head\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                        <h1 i18n=\"topics.listing.topicAddModal.formHeading\"></h1>\n                        <span class=\"hint\" i18n=\"topics.listing.topicAddModal.hintText\"></span>\n                    </div>\n                    <div class=\"jiffle-panel-body\">\n                        <form id=\"add-attendee-form\" class=\"jiffle-form\" role=\"form\" validate.bind=\"topicValidation\">\n                            <div class=\"form-group\">\n                                <label i18n=\"topics.listing.topicAddModal.topicName\" class=\"required\"></label>\n                                <input type=\"text\" id=\"topic\" name=\"topic\" class=\"form-control input-lg\" value.two-way=\"topic.name | sanitizeHTML\" validate=\"name\" placeholder.bind=\"i18n.tr('topics.listing.topicAddModal.topicName')\" required>\n                            </div>\n                            <div class=\"form-group\">\n                                <label i18n=\"topics.listing.topicAddModal.topicDescription\" class=\"required\"></label>\n                                <textarea class=\"form-control topic-decription\" value.two-way=\"topic.description | sanitizeHTML\" validate=\"description\" placeholder.bind=\"i18n.tr('topics.listing.topicAddModal.topicDescription')\" ></textarea>\n                            </div>\n                            <div class=\"form-group\" if.bind=\"envDetails.topicUserMappingEnabled\">\n                                <label i18n=\"topics.listing.topicAddModal.user\"></label>\n                                <aurelia-select select-id.bind=\"'userbox'\" ref=\"userbox\" page.bind=\"1\" per-page.bind=\"500\" is-multiple.bind=\"true\" swidth.bind=\"'100%'\" select-url.bind=\"topicRequestService.userListUrl + userListSuffix\" process.bind=\"processUsers\" place-holder.bind=\"i18n.tr('topics.commons.users_search')\" style=\"width:100%\" clear-event=\"clear:topicUsers\"></aurelia-select>\n                            </div>\n                            <div class=\"form-group\" if.bind=\"envDetails.topicEventsMappingEnabled\">\n                                <label i18n=\"topics.listing.topicAddModal.event\"></label>\n                                <aurelia-select select-disabled.bind=\"envDetails.topicTitle == 'Summit'\" select-id.bind=\"'mappedeventsbox'\" ref=\"mappedeventsbox\" is-multiple.bind=\"true\" swidth.bind=\"'100%'\" place-holder.bind=\"i18n.tr('topics.commons.events_search')\" select-url.bind=\"topicRequestService.eventListUrl\" process.bind=\"processEvents\" style=\"width:100%\" clear-event=\"clear:topicEvents\"></aurelia-select>\n                            </div>\n\n                            <div class=\"form-group\" if.bind=\"envDetails.eventType == 'Ebc' && envDetails.topicTitle == 'Summit'\">\n                                <label i18n=\"topics.listing.topicAddModal.briefing_centre\"></label>\n                                <input class=\"form-control input-lg\" placeholder=\"Briefing centre\" value=\"${envDetails.current_location && envDetails.current_location.name}\" disabled />\n                            </div>\n\n                            <div class=\"form-group\" if.bind=\"envDetails.topicTitle == 'Portal' && envDetails.ebc_locations.length\">\n                                <label i18n=\"topics.listing.topicAddModal.briefing_centre\"></label>\n                                <aurelia-select select-disabled.bind=\"envDetails.topicTitle == 'Summit'\" data-source.bind=\"getBriefingCentres()\"  min-input=0 select-id.bind=\"'mappedlocationsbox'\" ref=\"mappedlocationsbox\" is-multiple.bind=\"true\" swidth.bind=\"'100%'\" place-holder.bind=\"i18n.tr('topics.commons.briefing_centre_search')\" style=\"width:100%\" clear-event=\"clear:briefingLocations\"></aurelia-select>\n                            </div>\n\n                            <div class=\"form-group\" if.bind=\"envDetails.topicRoomMappingEnabled\">\n                                <label i18n=\"topics.listing.topicAddModal.room\"></label>\n                                <aurelia-select select-id.bind=\"'roombox'\" ref=\"roombox\" page.bind=\"1\" per-page.bind=\"500\" is-multiple.bind=\"true\" swidth.bind=\"'100%'\" place-holder.bind=\"i18n.tr('topics.commons.rooms_search')\" select-url.bind=\"topicRequestService.roomListUrl + roomListSuffix\" process.bind=\"processRooms\" style=\"width:100%\" clear-event=\"clear:topicRooms\"></aurelia-select>\n                            </div>\n                            <div class=\"form-group\" if.bind=\"envDetails.topicActivitiesMappingEnabled\">\n                                <label>${ i18n.tr('topics.listing.topicAddModal.activity', { label: envDetails.meetingTypeCustomLabel }) }</label>\n                                <aurelia-select per-page.bind=\"500\" select-id.bind=\"'activitybox'\" ref=\"activitybox\" swidth.bind=\"'100%'\" place-holder.bind=\"i18n.tr('topics.commons.activites_search', { label: envDetails.meetingTypeCustomLabel })\" select-url.bind=\"topicRequestService.activityListUrl\" additional-params.bind=\"additionalParams\" process.bind=\"processActivities\" style=\"width:100%\" clear-event=\"clear:topicActivities\"></aurelia-select>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <button type=\"button\" disabled.bind=\"topicCreating\" class=\"btn btn-lg btn-block btn-blue\" click.trigger=\"addTopic()\" ref=\"addTopicButton\" i18n=\"topics.listing.topicAddModal.btnText\"></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n";
});
System.register('view-models/topics/listing/fetch-entity-methods.js', ['github:lodash/lodash@3.10.1.js'], function (_export) {
    'use strict';

    var _, EntityFetchMethods;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }],
        execute: function () {
            EntityFetchMethods = function () {
                function EntityFetchMethods() {
                    _classCallCheck(this, EntityFetchMethods);
                }

                _createClass(EntityFetchMethods, [{
                    key: 'processUsers',
                    value: function processUsers(data) {
                        return data.users.items.map(function (user) {
                            return { id: user.uuid, text: user.first_name + ' ' + user.last_name };
                        });
                    }
                }, {
                    key: 'processRooms',
                    value: function processRooms(data) {
                        return data.data.rooms.items.map(function (room) {
                            return { id: room.uuid, text: room.name };
                        });
                    }
                }, {
                    key: 'processEvents',
                    value: function processEvents(data) {
                        return data.data.events.map(function (eventObj) {
                            return { id: eventObj.uuid, location: eventObj.location_uuid, text: eventObj.event_name };
                        });
                    }
                }, {
                    key: 'processActivities',
                    value: function processActivities(activities) {
                        _.remove(activities, function (activity) {
                            return activity.uuid === 'ALL';
                        });
                        return activities.map(function (activity) {
                            return { id: activity.uuid, text: activity.display_name };
                        });
                    }
                }]);

                return EntityFetchMethods;
            }();

            _export('EntityFetchMethods', EntityFetchMethods);
        }
    };
});
System.register('view-models/topics/listing/topic-add-modal.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-validation@0.6.0.js', 'service/topic_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'view-models/topics/listing/fetch-entity-methods.js'], function (_export) {
    'use strict';

    var $, EventAggregator, inject, bindable, Validation, TopicRequestService, I18N, EntityFetchMethods, TopicAddModal;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    var _get = function get(_x, _x2, _x3) {
        var _again = true;_function: while (_again) {
            var object = _x,
                property = _x2,
                receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
                var parent = Object.getPrototypeOf(object);if (parent === null) {
                    return undefined;
                } else {
                    _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
                }
            } else if ('value' in desc) {
                return desc.value;
            } else {
                var getter = desc.get;if (getter === undefined) {
                    return undefined;
                }return getter.call(receiver);
            }
        }
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_jquery) {
            $ = _jquery['default'];
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaValidation) {
            Validation = _aureliaValidation.Validation;
        }, function (_serviceTopic_request_service) {
            TopicRequestService = _serviceTopic_request_service.TopicRequestService;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_fetchEntityMethods) {
            EntityFetchMethods = _fetchEntityMethods.EntityFetchMethods;
        }],
        execute: function () {
            TopicAddModal = function (_EntityFetchMethods) {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _inherits(TopicAddModal, _EntityFetchMethods);

                _createDecoratedClass(TopicAddModal, [{
                    key: 'dataCallbackHandler',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function TopicAddModal(ea, validation, topicRequestService, i18n) {
                    var _this = this;

                    _classCallCheck(this, _TopicAddModal);

                    _get(Object.getPrototypeOf(_TopicAddModal.prototype), 'constructor', this).call(this);
                    this.topic = {
                        name: '',
                        description: ''
                    };
                    this.users = [];
                    this.rooms = [];
                    this.activities = [];
                    this.events = [];
                    this.ebcLocations = [];
                    this.userListSuffix = '';
                    this.roomListSuffix = '';
                    this.topicCreating = false;

                    _defineDecoratedPropertyDescriptor(this, 'dataCallbackHandler', _instanceInitializers);

                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});

                    this.topicRequestService = topicRequestService;
                    this.setUrlSuffixes();
                    this.envDetails = envDetails;
                    this.subscribeToEvents();
                    this.initFormValidations(validation);
                    this.additionalParams = {
                        exclude_consecutive_meeting_types: true
                    };
                    this.dataCallbackHandler = function (params) {
                        return _this.dataCallback(params);
                    };
                }

                _createDecoratedClass(TopicAddModal, [{
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this2 = this;

                        this.ea.subscribe('topicmodal:show', function () {
                            _this2.addModal();
                        });
                        this.ea.subscribe('topicmodal:hide', function () {
                            _this2.hideModal();
                        });
                    }
                }, {
                    key: 'setUrlSuffixes',
                    value: function setUrlSuffixes() {
                        var eventSystemName = envDetails.currentEvent && envDetails.currentEvent.event_system_name || '';
                        this.userListSuffix = '?' + $.param({ originate: eventSystemName, statuses: ['active'] });

                        this.roomListSuffix = '?' + $.param({ statuses: ['active'] });
                    }
                }, {
                    key: 'initFormValidations',
                    value: function initFormValidations(validation) {
                        var _this3 = this;

                        this.validation = validation;
                        this.topicValidation = validation.on(this.topic).ensure('name').isNotEmpty().withMessage(this.i18n.tr('topics.listing.topicAddModal.name_required')).passes(function (newValue) {
                            return new Promise(function (accept, reject) {
                                newValue = newValue.trim();
                                if (newValue) {
                                    _this3.topicRequestService.checkTopic(newValue).then(function (response) {
                                        if (typeof response.response == "string") {
                                            response = JSON.parse(response.response);
                                        }
                                        if (response.data == true) {
                                            accept();
                                        } else {
                                            reject(_this3.i18n.tr('topics.listing.topicAddModal.name_already_exists'));
                                        }
                                    });
                                } else {
                                    reject(_this3.i18n.tr('topics.listing.topicAddModal.name_required'));
                                }
                            });
                        }).ensure('description').isNotEmpty().withMessage(this.i18n.tr('topics.listing.topicAddModal.description_required'));
                    }
                }, {
                    key: 'addModal',
                    value: function addModal() {
                        this.topic.name = '';
                        this.topic.description = '';
                        this.ea.publish('clear:topicRooms');
                        this.ea.publish('clear:topicUsers');
                        this.ea.publish('clear:topicEvents');
                        this.ea.publish('clear:topicActivities');
                        this.ea.publish('clear:briefingLocations');
                        $(this.topicmodal).modal('show');
                        this.topicValidation.clear();
                    }
                }, {
                    key: 'hideModal',
                    value: function hideModal() {
                        $(this.topicmodal).modal('hide');
                    }
                }, {
                    key: 'addTopic',
                    value: function addTopic() {
                        var _this4 = this;

                        if (envDetails.topicUserMappingEnabled) {
                            this.users = this.userbox.au.controller.viewModel.getOutput();
                        }
                        if (envDetails.topicRoomMappingEnabled) {
                            this.rooms = this.roombox.au.controller.viewModel.getOutput();
                        }

                        if (envDetails.topicActivitiesMappingEnabled) {
                            this.activities = this.activitybox.au.controller.viewModel.getOutput();
                        }
                        if (envDetails.event && envDetails.event.uuid) {
                            this.events = [envDetails.event.uuid];
                        } else {
                            if (envDetails.topicEventsMappingEnabled) {
                                this.events = this.mappedeventsbox.au.controller.viewModel.getOutput();
                            }
                        }

                        if (envDetails.current_location && envDetails.current_location.uuid) {
                            this.ebcLocations = [envDetails.current_location.uuid];
                        } else if (envDetails.ebc_locations && envDetails.ebc_locations.length) {
                            var ebcLocations = this.mappedlocationsbox.au.controller.viewModel.getOutput() || [];
                            var defaultEventLocations = this.mappedeventsbox.au.controller.viewModel.getDataValues('location');
                            this.ebcLocations = ebcLocations.concat(defaultEventLocations);
                        }

                        this.topicValidation.validate().then(function () {
                            _this4.topicCreating = true;
                            var params = {
                                mapped_rooms: _this4.rooms || [],
                                mapped_users: _this4.users || [],
                                mapped_events: _this4.events || [],
                                name: (_this4.topic.name || '').trim(),
                                mapped_activities: _this4.activities || [],
                                mapped_locations: _this4.ebcLocations || [],
                                description: (_this4.topic.description || '').trim()
                            };
                            _this4.topicRequestService.createTopic(params).then(function (response) {
                                _this4.topicValidation.clear();
                                _this4.topic.name = '';
                                _this4.topic.description = '';
                                _this4.topicCreating = false;
                                if (typeof response.response == "string") {
                                    response = JSON.parse(response.response);
                                }
                                _this4.ea.publish("show:notification", {
                                    'class': 'green',
                                    autoHideDuration: 2000,
                                    title: _this4.i18n.tr('topics.listing.topicAddModal.save_success', { name: envDetails.currentUser.first_name }),
                                    message: _this4.i18n.tr('topics.listing.topicAddModal.save_success_msg', { topic: response.data.topic.name }),
                                    onHide: function onHide() {
                                        window.location.reload();
                                    }
                                });
                                $(_this4.topicmodal).modal('hide');
                            })['catch'](function (err) {
                                _this4.showErrorResponse(err);
                                _this4.topicCreating = false;
                            });
                        })['catch'](function (error) {
                            return error;
                        });
                    }
                }, {
                    key: 'showErrorResponse',
                    value: function showErrorResponse(errorResponse) {
                        var errors = JSON.parse(errorResponse.response).errors;
                        var errorMsgs = [];
                        for (var errorType in errors) {
                            errorMsgs = errorMsgs.concat(errors[errorType]);
                        }
                        this.ea.publish("show:notification", {
                            title: this.i18n.tr('topics.mappings.save_failure'),
                            message: errorMsgs.join(', '),
                            'class': 'red',
                            autoHideDuration: 2000 });
                    }
                }, {
                    key: 'getBriefingCentres',
                    value: function getBriefingCentres() {
                        return envDetails.ebc_locations.map(function (centreInfo) {
                            return { id: centreInfo.uuid, text: centreInfo.name };
                        });
                    }
                }], null, _instanceInitializers);

                var _TopicAddModal = TopicAddModal;
                TopicAddModal = inject(EventAggregator, Validation, TopicRequestService, I18N)(TopicAddModal) || TopicAddModal;
                return TopicAddModal;
            }(EntityFetchMethods);

            _export('TopicAddModal', TopicAddModal);
        }
    };
});
System.registerDynamic("view-models/topics/listing/topic-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <div class=\"card js_topic_card\">\n        <div class=\"card-header ${topic.isActive ? 'active-topic' : 'inactive-topic'}\">\n            <div class=\"card-header-content ${selected ? 'topic-card-selected' : ''}\">\n\n                <div class=\"card-select\">\n                    <input type=\"checkbox\" id=\"topic-${topicIndex}\" value=\"\" click.trigger=\"select()\">\n                    <label for=\"topic-${topicIndex}\">\n                        <div>\n                        <i class=\"jif-topic jif-blue jif-18\"></i>\n                        </div>\n                    </label>\n                </div>\n                <div class=\"card-click\" click.delegate=\"editTopic()\">\n                    <div class=\"font-lg\" title=\"${topic.name}\">${topic.name}</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-content\">\n            <div class=\"card-detail-content\">\n                <div >\n                    <div class=\"card-detail icon-sep\">\n                        <div class=\"text-content card-description\">\n                            <span>${topic.description}</span>\n                            <br>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n";
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-route-recognizer@1.0.0-beta.1/aurelia-route-recognizer.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-path@1.0.0-beta.1.js"], function(exports, _coreJs, _aureliaPath) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var State = (function() {
    function State(charSpec) {
      _classCallCheck(this, State);
      this.charSpec = charSpec;
      this.nextStates = [];
    }
    State.prototype.get = function get(charSpec) {
      for (var _iterator = this.nextStates,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var child = _ref;
        var isEqual = child.charSpec.validChars === charSpec.validChars && child.charSpec.invalidChars === charSpec.invalidChars;
        if (isEqual) {
          return child;
        }
      }
    };
    State.prototype.put = function put(charSpec) {
      var state = this.get(charSpec);
      if (state) {
        return state;
      }
      state = new State(charSpec);
      this.nextStates.push(state);
      if (charSpec.repeat) {
        state.nextStates.push(state);
      }
      return state;
    };
    State.prototype.match = function match(ch) {
      var nextStates = this.nextStates;
      var results = [];
      for (var i = 0,
          l = nextStates.length; i < l; i++) {
        var child = nextStates[i];
        var charSpec = child.charSpec;
        if (charSpec.validChars !== undefined) {
          if (charSpec.validChars.indexOf(ch) !== -1) {
            results.push(child);
          }
        } else if (charSpec.invalidChars !== undefined) {
          if (charSpec.invalidChars.indexOf(ch) === -1) {
            results.push(child);
          }
        }
      }
      return results;
    };
    return State;
  })();
  exports.State = State;
  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\'];
  var escapeRegex = new RegExp('(\\' + specials.join('|\\') + ')', 'g');
  var StaticSegment = (function() {
    function StaticSegment(string) {
      _classCallCheck(this, StaticSegment);
      this.string = string;
    }
    StaticSegment.prototype.eachChar = function eachChar(callback) {
      for (var _iterator2 = this.string,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator](); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var ch = _ref2;
        callback({validChars: ch});
      }
    };
    StaticSegment.prototype.regex = function regex() {
      return this.string.replace(escapeRegex, '\\$1');
    };
    StaticSegment.prototype.generate = function generate() {
      return this.string;
    };
    return StaticSegment;
  })();
  exports.StaticSegment = StaticSegment;
  var DynamicSegment = (function() {
    function DynamicSegment(name) {
      _classCallCheck(this, DynamicSegment);
      this.name = name;
    }
    DynamicSegment.prototype.eachChar = function eachChar(callback) {
      callback({
        invalidChars: '/',
        repeat: true
      });
    };
    DynamicSegment.prototype.regex = function regex() {
      return '([^/]+)';
    };
    DynamicSegment.prototype.generate = function generate(params, consumed) {
      consumed[this.name] = true;
      return params[this.name];
    };
    return DynamicSegment;
  })();
  exports.DynamicSegment = DynamicSegment;
  var StarSegment = (function() {
    function StarSegment(name) {
      _classCallCheck(this, StarSegment);
      this.name = name;
    }
    StarSegment.prototype.eachChar = function eachChar(callback) {
      callback({
        invalidChars: '',
        repeat: true
      });
    };
    StarSegment.prototype.regex = function regex() {
      return '(.+)';
    };
    StarSegment.prototype.generate = function generate(params, consumed) {
      consumed[this.name] = true;
      return params[this.name];
    };
    return StarSegment;
  })();
  exports.StarSegment = StarSegment;
  var EpsilonSegment = (function() {
    function EpsilonSegment() {
      _classCallCheck(this, EpsilonSegment);
    }
    EpsilonSegment.prototype.eachChar = function eachChar() {};
    EpsilonSegment.prototype.regex = function regex() {
      return '';
    };
    EpsilonSegment.prototype.generate = function generate() {
      return '';
    };
    return EpsilonSegment;
  })();
  exports.EpsilonSegment = EpsilonSegment;
  var RouteRecognizer = (function() {
    function RouteRecognizer() {
      _classCallCheck(this, RouteRecognizer);
      this.rootState = new State();
      this.names = {};
    }
    RouteRecognizer.prototype.add = function add(route) {
      var _this = this;
      if (Array.isArray(route)) {
        route.forEach(function(r) {
          return _this.add(r);
        });
        return undefined;
      }
      var currentState = this.rootState;
      var regex = '^';
      var types = {
        statics: 0,
        dynamics: 0,
        stars: 0
      };
      var names = [];
      var routeName = route.handler.name;
      var isEmpty = true;
      var segments = parse(route.path, names, types);
      for (var i = 0,
          ii = segments.length; i < ii; i++) {
        var segment = segments[i];
        if (segment instanceof EpsilonSegment) {
          continue;
        }
        isEmpty = false;
        currentState = currentState.put({validChars: '/'});
        regex += '/';
        currentState = addSegment(currentState, segment);
        regex += segment.regex();
      }
      if (isEmpty) {
        currentState = currentState.put({validChars: '/'});
        regex += '/';
      }
      var handlers = [{
        handler: route.handler,
        names: names
      }];
      if (routeName) {
        this.names[routeName] = {
          segments: segments,
          handlers: handlers
        };
      }
      currentState.handlers = handlers;
      currentState.regex = new RegExp(regex + '$');
      currentState.types = types;
      return currentState;
    };
    RouteRecognizer.prototype.handlersFor = function handlersFor(name) {
      var route = this.names[name];
      if (!route) {
        throw new Error('There is no route named ' + name);
      }
      return [].concat(route.handlers);
    };
    RouteRecognizer.prototype.hasRoute = function hasRoute(name) {
      return !!this.names[name];
    };
    RouteRecognizer.prototype.generate = function generate(name, params) {
      var routeParams = Object.assign({}, params);
      var route = this.names[name];
      if (!route) {
        throw new Error('There is no route named ' + name);
      }
      var segments = route.segments;
      var consumed = {};
      var output = '';
      for (var i = 0,
          l = segments.length; i < l; i++) {
        var segment = segments[i];
        if (segment instanceof EpsilonSegment) {
          continue;
        }
        output += '/';
        var segmentValue = segment.generate(routeParams, consumed);
        if (segmentValue === null || segmentValue === undefined) {
          throw new Error('A value is required for route parameter \'' + segment.name + '\' in route \'' + name + '\'.');
        }
        output += segmentValue;
      }
      if (output.charAt(0) !== '/') {
        output = '/' + output;
      }
      for (var param in consumed) {
        delete routeParams[param];
      }
      var queryString = _aureliaPath.buildQueryString(routeParams);
      output += queryString ? '?' + queryString : '';
      return output;
    };
    RouteRecognizer.prototype.recognize = function recognize(path) {
      var states = [this.rootState];
      var queryParams = {};
      var isSlashDropped = false;
      var normalizedPath = path;
      var queryStart = normalizedPath.indexOf('?');
      if (queryStart !== -1) {
        var queryString = normalizedPath.substr(queryStart + 1, normalizedPath.length);
        normalizedPath = normalizedPath.substr(0, queryStart);
        queryParams = _aureliaPath.parseQueryString(queryString);
      }
      normalizedPath = decodeURI(normalizedPath);
      if (normalizedPath.charAt(0) !== '/') {
        normalizedPath = '/' + normalizedPath;
      }
      var pathLen = normalizedPath.length;
      if (pathLen > 1 && normalizedPath.charAt(pathLen - 1) === '/') {
        normalizedPath = normalizedPath.substr(0, pathLen - 1);
        isSlashDropped = true;
      }
      for (var i = 0,
          l = normalizedPath.length; i < l; i++) {
        states = recognizeChar(states, normalizedPath.charAt(i));
        if (!states.length) {
          break;
        }
      }
      var solutions = [];
      for (var i = 0,
          l = states.length; i < l; i++) {
        if (states[i].handlers) {
          solutions.push(states[i]);
        }
      }
      states = sortSolutions(solutions);
      var state = solutions[0];
      if (state && state.handlers) {
        if (isSlashDropped && state.regex.source.slice(-5) === '(.+)$') {
          normalizedPath = normalizedPath + '/';
        }
        return findHandler(state, normalizedPath, queryParams);
      }
    };
    return RouteRecognizer;
  })();
  exports.RouteRecognizer = RouteRecognizer;
  var RecognizeResults = function RecognizeResults(queryParams) {
    _classCallCheck(this, RecognizeResults);
    this.splice = Array.prototype.splice;
    this.slice = Array.prototype.slice;
    this.push = Array.prototype.push;
    this.length = 0;
    this.queryParams = queryParams || {};
  };
  function parse(route, names, types) {
    var normalizedRoute = route;
    if (route.charAt(0) === '/') {
      normalizedRoute = route.substr(1);
    }
    var results = [];
    for (var _iterator3 = normalizedRoute.split('/'),
        _isArray3 = Array.isArray(_iterator3),
        _i3 = 0,
        _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator](); ; ) {
      var _ref3;
      if (_isArray3) {
        if (_i3 >= _iterator3.length)
          break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done)
          break;
        _ref3 = _i3.value;
      }
      var segment = _ref3;
      var match = segment.match(/^:([^\/]+)$/);
      if (match) {
        results.push(new DynamicSegment(match[1]));
        names.push(match[1]);
        types.dynamics++;
        continue;
      }
      match = segment.match(/^\*([^\/]+)$/);
      if (match) {
        results.push(new StarSegment(match[1]));
        names.push(match[1]);
        types.stars++;
      } else if (segment === '') {
        results.push(new EpsilonSegment());
      } else {
        results.push(new StaticSegment(segment));
        types.statics++;
      }
    }
    return results;
  }
  function sortSolutions(states) {
    return states.sort(function(a, b) {
      if (a.types.stars !== b.types.stars) {
        return a.types.stars - b.types.stars;
      }
      if (a.types.stars) {
        if (a.types.statics !== b.types.statics) {
          return b.types.statics - a.types.statics;
        }
        if (a.types.dynamics !== b.types.dynamics) {
          return b.types.dynamics - a.types.dynamics;
        }
      }
      if (a.types.dynamics !== b.types.dynamics) {
        return a.types.dynamics - b.types.dynamics;
      }
      if (a.types.statics !== b.types.statics) {
        return b.types.statics - a.types.statics;
      }
      return 0;
    });
  }
  function recognizeChar(states, ch) {
    var nextStates = [];
    for (var i = 0,
        l = states.length; i < l; i++) {
      var state = states[i];
      nextStates.push.apply(nextStates, state.match(ch));
    }
    return nextStates;
  }
  function findHandler(state, path, queryParams) {
    var handlers = state.handlers;
    var regex = state.regex;
    var captures = path.match(regex);
    var currentCapture = 1;
    var result = new RecognizeResults(queryParams);
    for (var i = 0,
        l = handlers.length; i < l; i++) {
      var _handler = handlers[i];
      var _names = _handler.names;
      var _params = {};
      for (var j = 0,
          m = _names.length; j < m; j++) {
        _params[_names[j]] = captures[currentCapture++];
      }
      result.push({
        handler: _handler.handler,
        params: _params,
        isDynamic: !!_names.length
      });
    }
    return result;
  }
  function addSegment(currentState, segment) {
    var state = currentState;
    segment.eachChar(function(ch) {
      state = state.put(ch);
    });
    return state;
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-route-recognizer@1.0.0-beta.1.js", ["npm:aurelia-route-recognizer@1.0.0-beta.1/aurelia-route-recognizer.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-history@1.0.0-beta.1/aurelia-history.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var History = (function() {
    function History() {
      _classCallCheck(this, History);
    }
    History.prototype.activate = function activate(options) {
      throw new Error('History must implement activate().');
    };
    History.prototype.deactivate = function deactivate() {
      throw new Error('History must implement deactivate().');
    };
    History.prototype.navigate = function navigate(fragment, options) {
      throw new Error('History must implement navigate().');
    };
    History.prototype.navigateBack = function navigateBack() {
      throw new Error('History must implement navigateBack().');
    };
    History.prototype.setTitle = function setTitle(title) {
      throw new Error('History must implement setTitle().');
    };
    return History;
  })();
  exports.History = History;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-history@1.0.0-beta.1.js", ["npm:aurelia-history@1.0.0-beta.1/aurelia-history.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-router@1.0.0-beta.1/aurelia-router.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-logging@1.0.0-beta.1.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-route-recognizer@1.0.0-beta.1.js", "npm:aurelia-history@1.0.0-beta.1.js", "npm:aurelia-event-aggregator@1.0.0-beta.1.js"], function(exports, _coreJs, _aureliaLogging, _aureliaDependencyInjection, _aureliaRouteRecognizer, _aureliaHistory, _aureliaEventAggregator) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports._normalizeAbsolutePath = _normalizeAbsolutePath;
  exports._createRootedPath = _createRootedPath;
  exports._resolveUrl = _resolveUrl;
  exports.createRouteFilterStep = createRouteFilterStep;
  exports.isNavigationCommand = isNavigationCommand;
  exports._buildNavigationPlan = _buildNavigationPlan;
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _normalizeAbsolutePath(path, hasPushState) {
    if (!hasPushState && path[0] !== '#') {
      path = '#' + path;
    }
    return path;
  }
  function _createRootedPath(fragment, baseUrl, hasPushState) {
    if (isAbsoluteUrl.test(fragment)) {
      return fragment;
    }
    var path = '';
    if (baseUrl.length && baseUrl[0] !== '/') {
      path += '/';
    }
    path += baseUrl;
    if ((!path.length || path[path.length - 1] !== '/') && fragment[0] !== '/') {
      path += '/';
    }
    if (path.length && path[path.length - 1] === '/' && fragment[0] === '/') {
      path = path.substring(0, path.length - 1);
    }
    return _normalizeAbsolutePath(path + fragment, hasPushState);
  }
  function _resolveUrl(fragment, baseUrl, hasPushState) {
    if (isRootedPath.test(fragment)) {
      return _normalizeAbsolutePath(fragment, hasPushState);
    }
    return _createRootedPath(fragment, baseUrl, hasPushState);
  }
  var isRootedPath = /^#?\//;
  var isAbsoluteUrl = /^([a-z][a-z0-9+\-.]*:)?\/\//i;
  var RouteFilterContainer = (function() {
    RouteFilterContainer.inject = function inject() {
      return [_aureliaDependencyInjection.Container];
    };
    function RouteFilterContainer(container) {
      _classCallCheck(this, RouteFilterContainer);
      this.container = container;
      this.filters = {};
      this.filterCache = {};
    }
    RouteFilterContainer.prototype.addStep = function addStep(name, step) {
      var index = arguments.length <= 2 || arguments[2] === undefined ? -1 : arguments[2];
      var filter = this.filters[name];
      if (!filter) {
        filter = this.filters[name] = [];
      }
      if (index === -1) {
        index = filter.length;
      }
      filter.splice(index, 0, step);
      this.filterCache = {};
    };
    RouteFilterContainer.prototype.getFilterSteps = function getFilterSteps(name) {
      if (this.filterCache[name]) {
        return this.filterCache[name];
      }
      var steps = [];
      var filter = this.filters[name];
      if (!filter) {
        return steps;
      }
      for (var i = 0,
          l = filter.length; i < l; i++) {
        if (typeof filter[i] === 'string') {
          steps.push.apply(steps, this.getFilterSteps(filter[i]));
        } else {
          steps.push(this.container.get(filter[i]));
        }
      }
      this.filterCache[name] = steps;
      return steps;
    };
    return RouteFilterContainer;
  })();
  exports.RouteFilterContainer = RouteFilterContainer;
  function createRouteFilterStep(name) {
    function create(routeFilterContainer) {
      return new RouteFilterStep(name, routeFilterContainer);
    }
    create.inject = function() {
      return [RouteFilterContainer];
    };
    return create;
  }
  var RouteFilterStep = (function() {
    function RouteFilterStep(name, routeFilterContainer) {
      _classCallCheck(this, RouteFilterStep);
      this.isMultiStep = true;
      this.name = name;
      this.routeFilterContainer = routeFilterContainer;
    }
    RouteFilterStep.prototype.getSteps = function getSteps() {
      return this.routeFilterContainer.getFilterSteps(this.name);
    };
    return RouteFilterStep;
  })();
  var pipelineStatus = {
    completed: 'completed',
    canceled: 'canceled',
    rejected: 'rejected',
    running: 'running'
  };
  exports.pipelineStatus = pipelineStatus;
  var Pipeline = (function() {
    function Pipeline() {
      _classCallCheck(this, Pipeline);
      this.steps = [];
    }
    Pipeline.prototype.addStep = function addStep(step) {
      var run = undefined;
      if (typeof step === 'function') {
        run = step;
      } else if (step.isMultiStep) {
        var steps = step.getSteps();
        for (var i = 0,
            l = steps.length; i < l; i++) {
          this.addStep(steps[i]);
        }
        return this;
      } else {
        run = step.run.bind(step);
      }
      this.steps.push(run);
      return this;
    };
    Pipeline.prototype.run = function run(instruction) {
      var index = -1;
      var steps = this.steps;
      function next() {
        index++;
        if (index < steps.length) {
          var currentStep = steps[index];
          try {
            return currentStep(instruction, next);
          } catch (e) {
            return next.reject(e);
          }
        } else {
          return next.complete();
        }
      }
      next.complete = createCompletionHandler(next, pipelineStatus.completed);
      next.cancel = createCompletionHandler(next, pipelineStatus.canceled);
      next.reject = createCompletionHandler(next, pipelineStatus.rejected);
      return next();
    };
    return Pipeline;
  })();
  exports.Pipeline = Pipeline;
  function createCompletionHandler(next, status) {
    return function(output) {
      return Promise.resolve({
        status: status,
        output: output,
        completed: status === pipelineStatus.completed
      });
    };
  }
  var CommitChangesStep = (function() {
    function CommitChangesStep() {
      _classCallCheck(this, CommitChangesStep);
    }
    CommitChangesStep.prototype.run = function run(navigationInstruction, next) {
      return navigationInstruction._commitChanges(true).then(function() {
        navigationInstruction._updateTitle();
        return next();
      });
    };
    return CommitChangesStep;
  })();
  exports.CommitChangesStep = CommitChangesStep;
  var NavigationInstruction = (function() {
    function NavigationInstruction(init) {
      _classCallCheck(this, NavigationInstruction);
      this.plan = null;
      Object.assign(this, init);
      this.params = this.params || {};
      this.viewPortInstructions = {};
      var ancestorParams = [];
      var current = this;
      do {
        var currentParams = Object.assign({}, current.params);
        if (current.config && current.config.hasChildRouter) {
          delete currentParams[current.getWildCardName()];
        }
        ancestorParams.unshift(currentParams);
        current = current.parentInstruction;
      } while (current);
      var allParams = Object.assign.apply(Object, [{}, this.queryParams].concat(ancestorParams));
      this.lifecycleArgs = [allParams, this.config, this];
    }
    NavigationInstruction.prototype.getAllInstructions = function getAllInstructions() {
      var instructions = [this];
      for (var key in this.viewPortInstructions) {
        var childInstruction = this.viewPortInstructions[key].childNavigationInstruction;
        if (childInstruction) {
          instructions.push.apply(instructions, childInstruction.getAllInstructions());
        }
      }
      return instructions;
    };
    NavigationInstruction.prototype.getAllPreviousInstructions = function getAllPreviousInstructions() {
      return this.getAllInstructions().map(function(c) {
        return c.previousInstruction;
      }).filter(function(c) {
        return c;
      });
    };
    NavigationInstruction.prototype.addViewPortInstruction = function addViewPortInstruction(viewPortName, strategy, moduleId, component) {
      var viewportInstruction = this.viewPortInstructions[viewPortName] = {
        name: viewPortName,
        strategy: strategy,
        moduleId: moduleId,
        component: component,
        childRouter: component.childRouter,
        lifecycleArgs: this.lifecycleArgs.slice()
      };
      return viewportInstruction;
    };
    NavigationInstruction.prototype.getWildCardName = function getWildCardName() {
      var wildcardIndex = this.config.route.lastIndexOf('*');
      return this.config.route.substr(wildcardIndex + 1);
    };
    NavigationInstruction.prototype.getWildcardPath = function getWildcardPath() {
      var wildcardName = this.getWildCardName();
      var path = this.params[wildcardName] || '';
      if (this.queryString) {
        path += '?' + this.queryString;
      }
      return path;
    };
    NavigationInstruction.prototype.getBaseUrl = function getBaseUrl() {
      if (!this.params) {
        return this.fragment;
      }
      var wildcardName = this.getWildCardName();
      var path = this.params[wildcardName] || '';
      if (!path) {
        return this.fragment;
      }
      return this.fragment.substr(0, this.fragment.lastIndexOf(path));
    };
    NavigationInstruction.prototype._commitChanges = function _commitChanges(waitToSwap) {
      var _this = this;
      var router = this.router;
      router.currentInstruction = this;
      if (this.previousInstruction) {
        this.previousInstruction.config.navModel.isActive = false;
      }
      this.config.navModel.isActive = true;
      router._refreshBaseUrl();
      router.refreshNavigation();
      var loads = [];
      var delaySwaps = [];
      var _loop = function(viewPortName) {
        var viewPortInstruction = _this.viewPortInstructions[viewPortName];
        var viewPort = router.viewPorts[viewPortName];
        if (!viewPort) {
          throw new Error('There was no router-view found in the view for ' + viewPortInstruction.moduleId + '.');
        }
        if (viewPortInstruction.strategy === activationStrategy.replace) {
          if (waitToSwap) {
            delaySwaps.push({
              viewPort: viewPort,
              viewPortInstruction: viewPortInstruction
            });
          }
          loads.push(viewPort.process(viewPortInstruction, waitToSwap).then(function(x) {
            if (viewPortInstruction.childNavigationInstruction) {
              return viewPortInstruction.childNavigationInstruction._commitChanges();
            }
          }));
        } else {
          if (viewPortInstruction.childNavigationInstruction) {
            loads.push(viewPortInstruction.childNavigationInstruction._commitChanges(waitToSwap));
          }
        }
      };
      for (var viewPortName in this.viewPortInstructions) {
        _loop(viewPortName);
      }
      return Promise.all(loads).then(function() {
        delaySwaps.forEach(function(x) {
          return x.viewPort.swap(x.viewPortInstruction);
        });
      }).then(function() {
        return prune(_this);
      });
    };
    NavigationInstruction.prototype._updateTitle = function _updateTitle() {
      var title = this._buildTitle();
      if (title) {
        this.router.history.setTitle(title);
      }
    };
    NavigationInstruction.prototype._buildTitle = function _buildTitle() {
      var separator = arguments.length <= 0 || arguments[0] === undefined ? ' | ' : arguments[0];
      var title = this.config.navModel.title || '';
      var childTitles = [];
      for (var viewPortName in this.viewPortInstructions) {
        var viewPortInstruction = this.viewPortInstructions[viewPortName];
        if (viewPortInstruction.childNavigationInstruction) {
          var childTitle = viewPortInstruction.childNavigationInstruction._buildTitle(separator);
          if (childTitle) {
            childTitles.push(childTitle);
          }
        }
      }
      if (childTitles.length) {
        title = childTitles.join(separator) + (title ? separator : '') + title;
      }
      if (this.router.title) {
        title += (title ? separator : '') + this.router.title;
      }
      return title;
    };
    return NavigationInstruction;
  })();
  exports.NavigationInstruction = NavigationInstruction;
  function prune(instruction) {
    instruction.previousInstruction = null;
    instruction.plan = null;
  }
  var NavModel = (function() {
    function NavModel(router, relativeHref) {
      _classCallCheck(this, NavModel);
      this.isActive = false;
      this.title = null;
      this.href = null;
      this.relativeHref = null;
      this.settings = {};
      this.config = null;
      this.router = router;
      this.relativeHref = relativeHref;
    }
    NavModel.prototype.setTitle = function setTitle(title) {
      this.title = title;
      if (this.isActive) {
        this.router.updateTitle();
      }
    };
    return NavModel;
  })();
  exports.NavModel = NavModel;
  function isNavigationCommand(obj) {
    return obj && typeof obj.navigate === 'function';
  }
  var Redirect = (function() {
    function Redirect(url) {
      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
      _classCallCheck(this, Redirect);
      this.url = url;
      this.options = Object.assign({
        trigger: true,
        replace: true
      }, options);
      this.shouldContinueProcessing = false;
    }
    Redirect.prototype.setRouter = function setRouter(router) {
      this.router = router;
    };
    Redirect.prototype.navigate = function navigate(appRouter) {
      var navigatingRouter = this.options.useAppRouter ? appRouter : this.router || appRouter;
      navigatingRouter.navigate(this.url, this.options);
    };
    return Redirect;
  })();
  exports.Redirect = Redirect;
  var RouterConfiguration = (function() {
    function RouterConfiguration() {
      _classCallCheck(this, RouterConfiguration);
      this.instructions = [];
      this.options = {};
      this.pipelineSteps = [];
    }
    RouterConfiguration.prototype.addPipelineStep = function addPipelineStep(name, step) {
      this.pipelineSteps.push({
        name: name,
        step: step
      });
      return this;
    };
    RouterConfiguration.prototype.map = function map(route) {
      if (Array.isArray(route)) {
        route.forEach(this.map.bind(this));
        return this;
      }
      return this.mapRoute(route);
    };
    RouterConfiguration.prototype.mapRoute = function mapRoute(config) {
      this.instructions.push(function(router) {
        var routeConfigs = [];
        if (Array.isArray(config.route)) {
          for (var i = 0,
              ii = config.route.length; i < ii; ++i) {
            var current = Object.assign({}, config);
            current.route = config.route[i];
            routeConfigs.push(current);
          }
        } else {
          routeConfigs.push(Object.assign({}, config));
        }
        var navModel = undefined;
        for (var i = 0,
            ii = routeConfigs.length; i < ii; ++i) {
          var routeConfig = routeConfigs[i];
          routeConfig.settings = routeConfig.settings || {};
          if (!navModel) {
            navModel = router.createNavModel(routeConfig);
          }
          router.addRoute(routeConfig, navModel);
        }
      });
      return this;
    };
    RouterConfiguration.prototype.mapUnknownRoutes = function mapUnknownRoutes(config) {
      this.unknownRouteConfig = config;
      return this;
    };
    RouterConfiguration.prototype.exportToRouter = function exportToRouter(router) {
      var instructions = this.instructions;
      for (var i = 0,
          ii = instructions.length; i < ii; ++i) {
        instructions[i](router);
      }
      if (this.title) {
        router.title = this.title;
      }
      if (this.unknownRouteConfig) {
        router.handleUnknownRoutes(this.unknownRouteConfig);
      }
      router.options = this.options;
      var pipelineSteps = this.pipelineSteps;
      if (pipelineSteps.length) {
        if (!router.isRoot) {
          throw new Error('Pipeline steps can only be added to the root router');
        }
        var filterContainer = router.container.get(RouteFilterContainer);
        for (var i = 0,
            ii = pipelineSteps.length; i < ii; ++i) {
          var _pipelineSteps$i = pipelineSteps[i];
          var _name = _pipelineSteps$i.name;
          var step = _pipelineSteps$i.step;
          filterContainer.addStep(_name, step);
        }
      }
    };
    return RouterConfiguration;
  })();
  exports.RouterConfiguration = RouterConfiguration;
  var activationStrategy = {
    noChange: 'no-change',
    invokeLifecycle: 'invoke-lifecycle',
    replace: 'replace'
  };
  exports.activationStrategy = activationStrategy;
  var BuildNavigationPlanStep = (function() {
    function BuildNavigationPlanStep() {
      _classCallCheck(this, BuildNavigationPlanStep);
    }
    BuildNavigationPlanStep.prototype.run = function run(navigationInstruction, next) {
      return _buildNavigationPlan(navigationInstruction).then(function(plan) {
        navigationInstruction.plan = plan;
        return next();
      })['catch'](next.cancel);
    };
    return BuildNavigationPlanStep;
  })();
  exports.BuildNavigationPlanStep = BuildNavigationPlanStep;
  function _buildNavigationPlan(instruction, forceLifecycleMinimum) {
    var prev = instruction.previousInstruction;
    var config = instruction.config;
    var plan = {};
    if ('redirect' in config) {
      var redirectLocation = _resolveUrl(config.redirect, getInstructionBaseUrl(instruction));
      if (instruction.queryString) {
        redirectLocation += '?' + instruction.queryString;
      }
      return Promise.reject(new Redirect(redirectLocation));
    }
    if (prev) {
      var newParams = hasDifferentParameterValues(prev, instruction);
      var pending = [];
      var _loop2 = function(viewPortName) {
        var prevViewPortInstruction = prev.viewPortInstructions[viewPortName];
        var nextViewPortConfig = config.viewPorts[viewPortName];
        var viewPortPlan = plan[viewPortName] = {
          name: viewPortName,
          config: nextViewPortConfig,
          prevComponent: prevViewPortInstruction.component,
          prevModuleId: prevViewPortInstruction.moduleId
        };
        if (prevViewPortInstruction.moduleId !== nextViewPortConfig.moduleId) {
          viewPortPlan.strategy = activationStrategy.replace;
        } else if ('determineActivationStrategy' in prevViewPortInstruction.component.viewModel) {
          var _prevViewPortInstruction$component$viewModel;
          viewPortPlan.strategy = (_prevViewPortInstruction$component$viewModel = prevViewPortInstruction.component.viewModel).determineActivationStrategy.apply(_prevViewPortInstruction$component$viewModel, instruction.lifecycleArgs);
        } else if (config.activationStrategy) {
          viewPortPlan.strategy = config.activationStrategy;
        } else if (newParams || forceLifecycleMinimum) {
          viewPortPlan.strategy = activationStrategy.invokeLifecycle;
        } else {
          viewPortPlan.strategy = activationStrategy.noChange;
        }
        if (viewPortPlan.strategy !== activationStrategy.replace && prevViewPortInstruction.childRouter) {
          var path = instruction.getWildcardPath();
          var task = prevViewPortInstruction.childRouter._createNavigationInstruction(path, instruction).then(function(childInstruction) {
            viewPortPlan.childNavigationInstruction = childInstruction;
            return _buildNavigationPlan(childInstruction, viewPortPlan.strategy === activationStrategy.invokeLifecycle).then(function(childPlan) {
              childInstruction.plan = childPlan;
            });
          });
          pending.push(task);
        }
      };
      for (var viewPortName in prev.viewPortInstructions) {
        _loop2(viewPortName);
      }
      return Promise.all(pending).then(function() {
        return plan;
      });
    }
    for (var viewPortName in config.viewPorts) {
      plan[viewPortName] = {
        name: viewPortName,
        strategy: activationStrategy.replace,
        config: instruction.config.viewPorts[viewPortName]
      };
    }
    return Promise.resolve(plan);
  }
  function hasDifferentParameterValues(prev, next) {
    var prevParams = prev.params;
    var nextParams = next.params;
    var nextWildCardName = next.config.hasChildRouter ? next.getWildCardName() : null;
    for (var key in nextParams) {
      if (key === nextWildCardName) {
        continue;
      }
      if (prevParams[key] !== nextParams[key]) {
        return true;
      }
    }
    for (var key in prevParams) {
      if (key === nextWildCardName) {
        continue;
      }
      if (prevParams[key] !== nextParams[key]) {
        return true;
      }
    }
    return false;
  }
  function getInstructionBaseUrl(instruction) {
    var instructionBaseUrlParts = [];
    instruction = instruction.parentInstruction;
    while (instruction) {
      instructionBaseUrlParts.unshift(instruction.getBaseUrl());
      instruction = instruction.parentInstruction;
    }
    instructionBaseUrlParts.unshift('/');
    return instructionBaseUrlParts.join('');
  }
  var Router = (function() {
    function Router(container, history) {
      var _this2 = this;
      _classCallCheck(this, Router);
      this.viewPorts = {};
      this.routes = [];
      this.baseUrl = '';
      this.isConfigured = false;
      this.isNavigating = false;
      this.navigation = [];
      this._fallbackOrder = 100;
      this._recognizer = new _aureliaRouteRecognizer.RouteRecognizer();
      this._childRecognizer = new _aureliaRouteRecognizer.RouteRecognizer();
      this.container = container;
      this.history = history;
      this._configuredPromise = new Promise(function(resolve) {
        _this2._resolveConfiguredPromise = resolve;
      });
    }
    Router.prototype.registerViewPort = function registerViewPort(viewPort, name) {
      name = name || 'default';
      this.viewPorts[name] = viewPort;
    };
    Router.prototype.ensureConfigured = function ensureConfigured() {
      return this._configuredPromise;
    };
    Router.prototype.configure = function configure(callbackOrConfig) {
      var _this3 = this;
      this.isConfigured = true;
      var result = callbackOrConfig;
      var config = undefined;
      if (typeof callbackOrConfig === 'function') {
        config = new RouterConfiguration();
        result = callbackOrConfig(config);
      }
      return Promise.resolve(result).then(function(c) {
        if (c && c.exportToRouter) {
          config = c;
        }
        config.exportToRouter(_this3);
        _this3.isConfigured = true;
        _this3._resolveConfiguredPromise();
      });
    };
    Router.prototype.navigate = function navigate(fragment, options) {
      if (!this.isConfigured && this.parent) {
        return this.parent.navigate(fragment, options);
      }
      return this.history.navigate(_resolveUrl(fragment, this.baseUrl, this.history._hasPushState), options);
    };
    Router.prototype.navigateToRoute = function navigateToRoute(route, params, options) {
      var path = this.generate(route, params);
      return this.navigate(path, options);
    };
    Router.prototype.navigateBack = function navigateBack() {
      this.history.navigateBack();
    };
    Router.prototype.createChild = function createChild(container) {
      var childRouter = new Router(container || this.container.createChild(), this.history);
      childRouter.parent = this;
      return childRouter;
    };
    Router.prototype.generate = function generate(name, params) {
      var hasRoute = this._recognizer.hasRoute(name);
      if ((!this.isConfigured || !hasRoute) && this.parent) {
        return this.parent.generate(name, params);
      }
      if (!hasRoute) {
        throw new Error('A route with name \'' + name + '\' could not be found. Check that `name: \'' + name + '\'` was specified in the route\'s config.');
      }
      var path = this._recognizer.generate(name, params);
      return _createRootedPath(path, this.baseUrl, this.history._hasPushState);
    };
    Router.prototype.createNavModel = function createNavModel(config) {
      var navModel = new NavModel(this, 'href' in config ? config.href : config.route);
      navModel.title = config.title;
      navModel.order = config.nav;
      navModel.href = config.href;
      navModel.settings = config.settings;
      navModel.config = config;
      return navModel;
    };
    Router.prototype.addRoute = function addRoute(config, navModel) {
      validateRouteConfig(config);
      if (!('viewPorts' in config) && !config.navigationStrategy) {
        config.viewPorts = {'default': {
            moduleId: config.moduleId,
            view: config.view
          }};
      }
      if (!navModel) {
        navModel = this.createNavModel(config);
      }
      this.routes.push(config);
      var path = config.route;
      if (path.charAt(0) === '/') {
        path = path.substr(1);
      }
      var state = this._recognizer.add({
        path: path,
        handler: config
      });
      if (path) {
        var _settings = config.settings;
        delete config.settings;
        var withChild = JSON.parse(JSON.stringify(config));
        config.settings = _settings;
        withChild.route = path + '/*childRoute';
        withChild.hasChildRouter = true;
        this._childRecognizer.add({
          path: withChild.route,
          handler: withChild
        });
        withChild.navModel = navModel;
        withChild.settings = config.settings;
      }
      config.navModel = navModel;
      if ((navModel.order || navModel.order === 0) && this.navigation.indexOf(navModel) === -1) {
        if (!navModel.href && navModel.href !== '' && (state.types.dynamics || state.types.stars)) {
          throw new Error('Invalid route config: dynamic routes must specify an href to be included in the navigation model.');
        }
        if (typeof navModel.order !== 'number') {
          navModel.order = ++this._fallbackOrder;
        }
        this.navigation.push(navModel);
        this.navigation = this.navigation.sort(function(a, b) {
          return a.order - b.order;
        });
      }
    };
    Router.prototype.hasRoute = function hasRoute(name) {
      return !!(this._recognizer.hasRoute(name) || this.parent && this.parent.hasRoute(name));
    };
    Router.prototype.hasOwnRoute = function hasOwnRoute(name) {
      return this._recognizer.hasRoute(name);
    };
    Router.prototype.handleUnknownRoutes = function handleUnknownRoutes(config) {
      var _this4 = this;
      if (!config) {
        throw new Error('Invalid unknown route handler');
      }
      this.catchAllHandler = function(instruction) {
        return _this4._createRouteConfig(config, instruction).then(function(c) {
          instruction.config = c;
          return instruction;
        });
      };
    };
    Router.prototype.updateTitle = function updateTitle() {
      if (this.parent) {
        return this.parent.updateTitle();
      }
      this.currentInstruction._updateTitle();
    };
    Router.prototype.refreshNavigation = function refreshNavigation() {
      var nav = this.navigation;
      for (var i = 0,
          _length = nav.length; i < _length; i++) {
        var current = nav[i];
        if (!current.href) {
          current.href = _createRootedPath(current.relativeHref, this.baseUrl, this.history._hasPushState);
        }
      }
    };
    Router.prototype._refreshBaseUrl = function _refreshBaseUrl() {
      if (this.parent) {
        var baseUrl = this.parent.currentInstruction.getBaseUrl();
        this.baseUrl = this.parent.baseUrl + baseUrl;
      }
    };
    Router.prototype._createNavigationInstruction = function _createNavigationInstruction() {
      var url = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
      var parentInstruction = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
      var fragment = url;
      var queryString = '';
      var queryIndex = url.indexOf('?');
      if (queryIndex !== -1) {
        fragment = url.substr(0, queryIndex);
        queryString = url.substr(queryIndex + 1);
      }
      var results = this._recognizer.recognize(url);
      if (!results || !results.length) {
        results = this._childRecognizer.recognize(url);
      }
      var instructionInit = {
        fragment: fragment,
        queryString: queryString,
        config: null,
        parentInstruction: parentInstruction,
        previousInstruction: this.currentInstruction,
        router: this
      };
      if (results && results.length) {
        var first = results[0];
        var _instruction = new NavigationInstruction(Object.assign({}, instructionInit, {
          params: first.params,
          queryParams: first.queryParams || results.queryParams,
          config: first.config || first.handler
        }));
        if (typeof first.handler === 'function') {
          return evaluateNavigationStrategy(_instruction, first.handler, first);
        } else if (first.handler && 'navigationStrategy' in first.handler) {
          return evaluateNavigationStrategy(_instruction, first.handler.navigationStrategy, first.handler);
        }
        return Promise.resolve(_instruction);
      } else if (this.catchAllHandler) {
        var _instruction2 = new NavigationInstruction(Object.assign({}, instructionInit, {
          params: {path: fragment},
          queryParams: results && results.queryParams,
          config: null
        }));
        return evaluateNavigationStrategy(_instruction2, this.catchAllHandler);
      }
      return Promise.reject(new Error('Route not found: ' + url));
    };
    Router.prototype._createRouteConfig = function _createRouteConfig(config, instruction) {
      var _this5 = this;
      return Promise.resolve(config).then(function(c) {
        if (typeof c === 'string') {
          return {moduleId: c};
        } else if (typeof c === 'function') {
          return c(instruction);
        }
        return c;
      }).then(function(c) {
        return typeof c === 'string' ? {moduleId: c} : c;
      }).then(function(c) {
        c.route = instruction.params.path;
        validateRouteConfig(c);
        if (!c.navModel) {
          c.navModel = _this5.createNavModel(c);
        }
        return c;
      });
    };
    _createClass(Router, [{
      key: 'isRoot',
      get: function get() {
        return !this.parent;
      }
    }]);
    return Router;
  })();
  exports.Router = Router;
  function validateRouteConfig(config) {
    if (typeof config !== 'object') {
      throw new Error('Invalid Route Config');
    }
    if (typeof config.route !== 'string') {
      throw new Error('Invalid Route Config: You must specify a route pattern.');
    }
    if (!('redirect' in config || config.moduleId || config.navigationStrategy || config.viewPorts)) {
      throw new Error('Invalid Route Config: You must specify a moduleId, redirect, navigationStrategy, or viewPorts.');
    }
  }
  function evaluateNavigationStrategy(instruction, evaluator, context) {
    return Promise.resolve(evaluator.call(context, instruction)).then(function() {
      if (!('viewPorts' in instruction.config)) {
        instruction.config.viewPorts = {'default': {moduleId: instruction.config.moduleId}};
      }
      return instruction;
    });
  }
  var CanDeactivatePreviousStep = (function() {
    function CanDeactivatePreviousStep() {
      _classCallCheck(this, CanDeactivatePreviousStep);
    }
    CanDeactivatePreviousStep.prototype.run = function run(navigationInstruction, next) {
      return processDeactivatable(navigationInstruction.plan, 'canDeactivate', next);
    };
    return CanDeactivatePreviousStep;
  })();
  exports.CanDeactivatePreviousStep = CanDeactivatePreviousStep;
  var CanActivateNextStep = (function() {
    function CanActivateNextStep() {
      _classCallCheck(this, CanActivateNextStep);
    }
    CanActivateNextStep.prototype.run = function run(navigationInstruction, next) {
      return processActivatable(navigationInstruction, 'canActivate', next);
    };
    return CanActivateNextStep;
  })();
  exports.CanActivateNextStep = CanActivateNextStep;
  var DeactivatePreviousStep = (function() {
    function DeactivatePreviousStep() {
      _classCallCheck(this, DeactivatePreviousStep);
    }
    DeactivatePreviousStep.prototype.run = function run(navigationInstruction, next) {
      return processDeactivatable(navigationInstruction.plan, 'deactivate', next, true);
    };
    return DeactivatePreviousStep;
  })();
  exports.DeactivatePreviousStep = DeactivatePreviousStep;
  var ActivateNextStep = (function() {
    function ActivateNextStep() {
      _classCallCheck(this, ActivateNextStep);
    }
    ActivateNextStep.prototype.run = function run(navigationInstruction, next) {
      return processActivatable(navigationInstruction, 'activate', next, true);
    };
    return ActivateNextStep;
  })();
  exports.ActivateNextStep = ActivateNextStep;
  function processDeactivatable(plan, callbackName, next, ignoreResult) {
    var infos = findDeactivatable(plan, callbackName);
    var i = infos.length;
    function inspect(val) {
      if (ignoreResult || shouldContinue(val)) {
        return iterate();
      }
      return next.cancel(val);
    }
    function iterate() {
      if (i--) {
        try {
          var viewModel = infos[i];
          var result = viewModel[callbackName]();
          return processPotential(result, inspect, next.cancel);
        } catch (error) {
          return next.cancel(error);
        }
      }
      return next();
    }
    return iterate();
  }
  function findDeactivatable(plan, callbackName) {
    var list = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];
    for (var viewPortName in plan) {
      var viewPortPlan = plan[viewPortName];
      var prevComponent = viewPortPlan.prevComponent;
      if ((viewPortPlan.strategy === activationStrategy.invokeLifecycle || viewPortPlan.strategy === activationStrategy.replace) && prevComponent) {
        var viewModel = prevComponent.viewModel;
        if (callbackName in viewModel) {
          list.push(viewModel);
        }
      }
      if (viewPortPlan.childNavigationInstruction) {
        findDeactivatable(viewPortPlan.childNavigationInstruction.plan, callbackName, list);
      } else if (prevComponent) {
        addPreviousDeactivatable(prevComponent, callbackName, list);
      }
    }
    return list;
  }
  function addPreviousDeactivatable(component, callbackName, list) {
    var childRouter = component.childRouter;
    if (childRouter && childRouter.currentInstruction) {
      var viewPortInstructions = childRouter.currentInstruction.viewPortInstructions;
      for (var viewPortName in viewPortInstructions) {
        var viewPortInstruction = viewPortInstructions[viewPortName];
        var prevComponent = viewPortInstruction.component;
        var prevViewModel = prevComponent.viewModel;
        if (callbackName in prevViewModel) {
          list.push(prevViewModel);
        }
        addPreviousDeactivatable(prevComponent, callbackName, list);
      }
    }
  }
  function processActivatable(navigationInstruction, callbackName, next, ignoreResult) {
    var infos = findActivatable(navigationInstruction, callbackName);
    var length = infos.length;
    var i = -1;
    function inspect(val, router) {
      if (ignoreResult || shouldContinue(val, router)) {
        return iterate();
      }
      return next.cancel(val);
    }
    function iterate() {
      i++;
      if (i < length) {
        try {
          var _ret3 = (function() {
            var _current$viewModel;
            var current = infos[i];
            var result = (_current$viewModel = current.viewModel)[callbackName].apply(_current$viewModel, current.lifecycleArgs);
            return {v: processPotential(result, function(val) {
                return inspect(val, current.router);
              }, next.cancel)};
          })();
          if (typeof _ret3 === 'object')
            return _ret3.v;
        } catch (error) {
          return next.cancel(error);
        }
      }
      return next();
    }
    return iterate();
  }
  function findActivatable(navigationInstruction, callbackName, list, router) {
    if (list === undefined)
      list = [];
    var plan = navigationInstruction.plan;
    Object.keys(plan).filter(function(viewPortName) {
      var viewPortPlan = plan[viewPortName];
      var viewPortInstruction = navigationInstruction.viewPortInstructions[viewPortName];
      var viewModel = viewPortInstruction.component.viewModel;
      if ((viewPortPlan.strategy === activationStrategy.invokeLifecycle || viewPortPlan.strategy === activationStrategy.replace) && callbackName in viewModel) {
        list.push({
          viewModel: viewModel,
          lifecycleArgs: viewPortInstruction.lifecycleArgs,
          router: router
        });
      }
      if (viewPortPlan.childNavigationInstruction) {
        findActivatable(viewPortPlan.childNavigationInstruction, callbackName, list, viewPortInstruction.component.childRouter || router);
      }
    });
    return list;
  }
  function shouldContinue(output, router) {
    if (output instanceof Error) {
      return false;
    }
    if (isNavigationCommand(output)) {
      if (typeof output.setRouter === 'function') {
        output.setRouter(router);
      }
      return !!output.shouldContinueProcessing;
    }
    if (output === undefined) {
      return true;
    }
    return output;
  }
  function processPotential(obj, resolve, reject) {
    if (obj && typeof obj.then === 'function') {
      return Promise.resolve(obj).then(resolve)['catch'](reject);
    }
    try {
      return resolve(obj);
    } catch (error) {
      return reject(error);
    }
  }
  var RouteLoader = (function() {
    function RouteLoader() {
      _classCallCheck(this, RouteLoader);
    }
    RouteLoader.prototype.loadRoute = function loadRoute(router, config, navigationInstruction) {
      throw Error('Route loaders must implement "loadRoute(router, config, navigationInstruction)".');
    };
    return RouteLoader;
  })();
  exports.RouteLoader = RouteLoader;
  var LoadRouteStep = (function() {
    LoadRouteStep.inject = function inject() {
      return [RouteLoader];
    };
    function LoadRouteStep(routeLoader) {
      _classCallCheck(this, LoadRouteStep);
      this.routeLoader = routeLoader;
    }
    LoadRouteStep.prototype.run = function run(navigationInstruction, next) {
      return loadNewRoute(this.routeLoader, navigationInstruction).then(next)['catch'](next.cancel);
    };
    return LoadRouteStep;
  })();
  exports.LoadRouteStep = LoadRouteStep;
  function loadNewRoute(routeLoader, navigationInstruction) {
    var toLoad = determineWhatToLoad(navigationInstruction);
    var loadPromises = toLoad.map(function(current) {
      return loadRoute(routeLoader, current.navigationInstruction, current.viewPortPlan);
    });
    return Promise.all(loadPromises);
  }
  function determineWhatToLoad(navigationInstruction) {
    var toLoad = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
    var plan = navigationInstruction.plan;
    for (var viewPortName in plan) {
      var viewPortPlan = plan[viewPortName];
      if (viewPortPlan.strategy === activationStrategy.replace) {
        toLoad.push({
          viewPortPlan: viewPortPlan,
          navigationInstruction: navigationInstruction
        });
        if (viewPortPlan.childNavigationInstruction) {
          determineWhatToLoad(viewPortPlan.childNavigationInstruction, toLoad);
        }
      } else {
        var viewPortInstruction = navigationInstruction.addViewPortInstruction(viewPortName, viewPortPlan.strategy, viewPortPlan.prevModuleId, viewPortPlan.prevComponent);
        if (viewPortPlan.childNavigationInstruction) {
          viewPortInstruction.childNavigationInstruction = viewPortPlan.childNavigationInstruction;
          determineWhatToLoad(viewPortPlan.childNavigationInstruction, toLoad);
        }
      }
    }
    return toLoad;
  }
  function loadRoute(routeLoader, navigationInstruction, viewPortPlan) {
    var moduleId = viewPortPlan.config.moduleId;
    return loadComponent(routeLoader, navigationInstruction, viewPortPlan.config).then(function(component) {
      var viewPortInstruction = navigationInstruction.addViewPortInstruction(viewPortPlan.name, viewPortPlan.strategy, moduleId, component);
      var childRouter = component.childRouter;
      if (childRouter) {
        var path = navigationInstruction.getWildcardPath();
        return childRouter._createNavigationInstruction(path, navigationInstruction).then(function(childInstruction) {
          viewPortPlan.childNavigationInstruction = childInstruction;
          return _buildNavigationPlan(childInstruction).then(function(childPlan) {
            childInstruction.plan = childPlan;
            viewPortInstruction.childNavigationInstruction = childInstruction;
            return loadNewRoute(routeLoader, childInstruction);
          });
        });
      }
    });
  }
  function loadComponent(routeLoader, navigationInstruction, config) {
    var router = navigationInstruction.router;
    var lifecycleArgs = navigationInstruction.lifecycleArgs;
    return routeLoader.loadRoute(router, config, navigationInstruction).then(function(component) {
      var viewModel = component.viewModel;
      var childContainer = component.childContainer;
      component.router = router;
      component.config = config;
      if ('configureRouter' in viewModel) {
        var _ret4 = (function() {
          var childRouter = childContainer.getChildRouter();
          component.childRouter = childRouter;
          return {v: childRouter.configure(function(c) {
              return viewModel.configureRouter.apply(viewModel, [c, childRouter].concat(lifecycleArgs));
            }).then(function() {
              return component;
            })};
        })();
        if (typeof _ret4 === 'object')
          return _ret4.v;
      }
      return component;
    });
  }
  var PipelineProvider = (function() {
    PipelineProvider.inject = function inject() {
      return [_aureliaDependencyInjection.Container];
    };
    function PipelineProvider(container) {
      _classCallCheck(this, PipelineProvider);
      this.container = container;
      this.steps = [BuildNavigationPlanStep, CanDeactivatePreviousStep, LoadRouteStep, createRouteFilterStep('authorize'), createRouteFilterStep('modelbind'), CanActivateNextStep, DeactivatePreviousStep, ActivateNextStep, createRouteFilterStep('precommit'), CommitChangesStep, createRouteFilterStep('postcomplete')];
    }
    PipelineProvider.prototype.createPipeline = function createPipeline() {
      var _this6 = this;
      var pipeline = new Pipeline();
      this.steps.forEach(function(step) {
        return pipeline.addStep(_this6.container.get(step));
      });
      return pipeline;
    };
    return PipelineProvider;
  })();
  exports.PipelineProvider = PipelineProvider;
  var logger = _aureliaLogging.getLogger('app-router');
  var AppRouter = (function(_Router) {
    _inherits(AppRouter, _Router);
    AppRouter.inject = function inject() {
      return [_aureliaDependencyInjection.Container, _aureliaHistory.History, PipelineProvider, _aureliaEventAggregator.EventAggregator];
    };
    function AppRouter(container, history, pipelineProvider, events) {
      _classCallCheck(this, AppRouter);
      _Router.call(this, container, history);
      this._queue = [];
      this.pipelineProvider = pipelineProvider;
      this.events = events;
      this.maxInstructionCount = 10;
    }
    AppRouter.prototype.loadUrl = function loadUrl(url) {
      var _this7 = this;
      return this._createNavigationInstruction(url).then(function(instruction) {
        return _this7._queueInstruction(instruction);
      })['catch'](function(error) {
        logger.error(error);
        restorePreviousLocation(_this7);
      });
    };
    AppRouter.prototype.registerViewPort = function registerViewPort(viewPort, name) {
      var _this8 = this;
      _Router.prototype.registerViewPort.call(this, viewPort, name);
      if (!this.isActive) {
        var _ret5 = (function() {
          var viewModel = _this8._findViewModel(viewPort);
          if ('configureRouter' in viewModel) {
            if (!_this8.isConfigured) {
              var _ret6 = (function() {
                var resolveConfiguredPromise = _this8._resolveConfiguredPromise;
                _this8._resolveConfiguredPromise = function() {};
                return {v: {v: _this8.configure(function(config) {
                      return viewModel.configureRouter(config, _this8);
                    }).then(function() {
                      _this8.activate();
                      resolveConfiguredPromise();
                    })}};
              })();
              if (typeof _ret6 === 'object')
                return _ret6.v;
            }
          } else {
            _this8.activate();
          }
        })();
        if (typeof _ret5 === 'object')
          return _ret5.v;
      } else {
        this._dequeueInstruction();
      }
      return Promise.resolve();
    };
    AppRouter.prototype.activate = function activate(options) {
      if (this.isActive) {
        return;
      }
      this.isActive = true;
      this.options = Object.assign({routeHandler: this.loadUrl.bind(this)}, this.options, options);
      this.history.activate(this.options);
      this._dequeueInstruction();
    };
    AppRouter.prototype.deactivate = function deactivate() {
      this.isActive = false;
      this.history.deactivate();
    };
    AppRouter.prototype._queueInstruction = function _queueInstruction(instruction) {
      var _this9 = this;
      return new Promise(function(resolve) {
        instruction.resolve = resolve;
        _this9._queue.unshift(instruction);
        _this9._dequeueInstruction();
      });
    };
    AppRouter.prototype._dequeueInstruction = function _dequeueInstruction() {
      var _this10 = this;
      var instructionCount = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
      return Promise.resolve().then(function() {
        if (_this10.isNavigating && !instructionCount) {
          return undefined;
        }
        var instruction = _this10._queue.shift();
        _this10._queue = [];
        if (!instruction) {
          return undefined;
        }
        _this10.isNavigating = true;
        instruction.previousInstruction = _this10.currentInstruction;
        if (!instructionCount) {
          _this10.events.publish('router:navigation:processing', {instruction: instruction});
        } else if (instructionCount === _this10.maxInstructionCount - 1) {
          logger.error(instructionCount + 1 + ' navigation instructions have been attempted without success. Restoring last known good location.');
          restorePreviousLocation(_this10);
          return _this10._dequeueInstruction(instructionCount + 1);
        } else if (instructionCount > _this10.maxInstructionCount) {
          throw new Error('Maximum navigation attempts exceeded. Giving up.');
        }
        var pipeline = _this10.pipelineProvider.createPipeline();
        return pipeline.run(instruction).then(function(result) {
          return processResult(instruction, result, instructionCount, _this10);
        })['catch'](function(error) {
          return {output: error instanceof Error ? error : new Error(error)};
        }).then(function(result) {
          return resolveInstruction(instruction, result, !!instructionCount, _this10);
        });
      });
    };
    AppRouter.prototype._findViewModel = function _findViewModel(viewPort) {
      if (this.container.viewModel) {
        return this.container.viewModel;
      }
      if (viewPort.container) {
        var container = viewPort.container;
        while (container) {
          if (container.viewModel) {
            this.container.viewModel = container.viewModel;
            return container.viewModel;
          }
          container = container.parent;
        }
      }
    };
    return AppRouter;
  })(Router);
  exports.AppRouter = AppRouter;
  function processResult(instruction, result, instructionCount, router) {
    if (!(result && 'completed' in result && 'output' in result)) {
      result = result || {};
      result.output = new Error('Expected router pipeline to return a navigation result, but got [' + JSON.stringify(result) + '] instead.');
    }
    var finalResult = null;
    if (isNavigationCommand(result.output)) {
      result.output.navigate(router);
    } else {
      finalResult = result;
      if (!result.completed) {
        if (result.output instanceof Error) {
          logger.error(result.output);
        }
        restorePreviousLocation(router);
      }
    }
    return router._dequeueInstruction(instructionCount + 1).then(function(innerResult) {
      return finalResult || innerResult || result;
    });
  }
  function resolveInstruction(instruction, result, isInnerInstruction, router) {
    instruction.resolve(result);
    if (!isInnerInstruction) {
      router.isNavigating = false;
      var eventArgs = {
        instruction: instruction,
        result: result
      };
      var eventName = undefined;
      if (result.output instanceof Error) {
        eventName = 'error';
      } else if (!result.completed) {
        eventName = 'canceled';
      } else {
        var _queryString = instruction.queryString ? '?' + instruction.queryString : '';
        router.history.previousLocation = instruction.fragment + _queryString;
        eventName = 'success';
      }
      router.events.publish('router:navigation:' + eventName, eventArgs);
      router.events.publish('router:navigation:complete', eventArgs);
    }
    return result;
  }
  function restorePreviousLocation(router) {
    var previousLocation = router.history.previousLocation;
    if (previousLocation) {
      router.navigate(router.history.previousLocation, {
        trigger: false,
        replace: true
      });
    } else {
      logger.error('Router navigation failed, and no previous location could be restored.');
    }
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-router@1.0.0-beta.1.js", ["npm:aurelia-router@1.0.0-beta.1/aurelia-router.js"], function(main) {
  return main;
});

})();
System.register('view-models/topics/listing/topic-card.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-router@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js'], function (_export) {
    'use strict';

    var EventAggregator, Router, inject, bindable, I18N, TopicCard;

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaRouter) {
            Router = _aureliaRouter.Router;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }],
        execute: function () {
            TopicCard = function () {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _createDecoratedClass(TopicCard, [{
                    key: 'topic',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }, {
                    key: 'topicIndex',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function TopicCard(ea, router, i18n) {
                    _classCallCheck(this, _TopicCard);

                    _defineDecoratedPropertyDescriptor(this, 'topic', _instanceInitializers);

                    _defineDecoratedPropertyDescriptor(this, 'topicIndex', _instanceInitializers);

                    this.selected = false;

                    this.ea = ea;
                    this.router = router;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createDecoratedClass(TopicCard, [{
                    key: 'select',
                    value: function select() {
                        if (this.selected == true) {
                            this.selected = false;
                            this.ea.publish('topic:deselect');
                        } else {
                            this.selected = true;
                            this.ea.publish('topic:selected', 1);
                        }
                    }
                }, {
                    key: 'editTopic',
                    value: function editTopic() {
                        this.router.navigateToRoute('topicProfile', { uuid: this.topic.uuid });
                    }
                }], null, _instanceInitializers);

                var _TopicCard = TopicCard;
                TopicCard = inject(EventAggregator, Router, I18N)(TopicCard) || TopicCard;
                return TopicCard;
            }();

            _export('TopicCard', TopicCard);
        }
    };
});
System.registerDynamic("view-models/topics/listing/topic-import-export-modal.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <require from=\"./topic-mapping-options\"></require>\n\n  <div class=\"modal modal-jiffle modal-copy-settings blue fade in\" style=\"padding-left: 0px;\" ref=\"importexportmodal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close hidden-lg hidden-md hidden-sm\" data-dismiss=\"modal\"><span aria-hidden=\"true\">×</span></button>\n          <h4 class=\"modal-title\">${header}</h4>\n        </div>\n        <div class=\"copy-settings-modal-body\"><div class=\"modal-body copy-settings-modal-body meetingtype-list-wrapper\">\n          <topic-mapping-options action-type.bind=\"type\" containerless></topic-mapping-options>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" if.bind=\"isExport || isDownload\" click.trigger=\"isDownload ? downloadTemplate() : export()\" class=\"btn btn-blue\">${buttonText}</button>\n          <input id=\"upload_topics\" if.bind=\"isImport\" class=\"upload-user-input hide\" type=\"file\" accept=\".csv\">\n          <label id=\"submit\" if.bind=\"isImport\" class=\"btn btn-blue\" for=\"upload_topics\">${buttonText}</label>\n          <a class=\"cancel point-cursor\" data-dismiss=\"modal\" click.trigger=\"hideModal()\" i18n=\"topics.listing.topicImportExportModal.cancel\"></a>\n        </div>\n      </div>\n     </div>\n    </div>\n  </div>\n</template>\n";
});
System.register('view-models/topics/listing/topic-import-export-modal.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js', 'commons/api.js'], function (_export) {
  'use strict';

  var $, EventAggregator, inject, bindable, I18N, API, TopicImportExportModal;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_jquery) {
      $ = _jquery['default'];
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_commonsApi) {
      API = _commonsApi.API;
    }],
    execute: function () {
      TopicImportExportModal = function () {
        function TopicImportExportModal(ea, i18n, api) {
          _classCallCheck(this, _TopicImportExportModal);

          this.ea = ea;
          this.i18n = i18n;
          this.header = '';
          this.i18n.setLocale('en').then(function () {});
          this.api = api;
          this.type = '';
          this.subscribeToEvents();
          this.setDownloadTemplateUrl();
          this.resetActions();
        }

        _createClass(TopicImportExportModal, [{
          key: 'subscribeToEvents',
          value: function subscribeToEvents() {
            var _this = this;

            this.ea.subscribe('topicImportExportModal:show', function () {
              _this.setCommonActions();
              _this.header = _this.i18n.tr('topics.listing.topicImportExportModal.upload_topics');
              _this.buttonText = _this.i18n.tr('topics.listing.topicImportExportModal.upload');
              _this.type = _this.i18n.tr('topics.listing.topicImportExportModal.upload');
              _this.isImport = true;
            });
            this.ea.subscribe('topicDownloadTemplateModal:show', function () {
              _this.setCommonActions();
              _this.header = _this.i18n.tr('topics.listing.topicImportExportModal.download_template');
              _this.buttonText = _this.i18n.tr('topics.listing.topicImportExportModal.download');
              _this.type = _this.i18n.tr('topics.listing.topicImportExportModal.download');
              _this.isDownload = true;
            });
            this.ea.subscribe('export:export', function () {
              _this.setCommonActions();
              _this.header = _this.i18n.tr('topics.listing.topicImportExportModal.export');
              _this.buttonText = _this.i18n.tr('topics.listing.topicImportExportModal.export');
              _this.type = _this.i18n.tr('topics.listing.topicImportExportModal.export');
              _this.isExport = true;
            });
          }
        }, {
          key: 'setCommonActions',
          value: function setCommonActions() {
            this.showModal();
            this.resetActions();
            $('input[value="topic"]').prop('checked', true);
          }
        }, {
          key: 'resetActions',
          value: function resetActions() {
            this.isImport = false;
            this.isDownload = false;
            this.isExport = false;
          }
        }, {
          key: 'setDownloadTemplateUrl',
          value: function setDownloadTemplateUrl() {
            var params = '?originate=' + envDetails.event.event_system_name + '&current_location_uuid=' + envDetails.current_location_uuid;
            if (envDetails.isInEvent) {
              this.downloadTemplateUrl = this.api.getBaseUrl() + this.api.topicTemplateDownload + params;
            }
          }
        }, {
          key: 'downloadTemplate',
          value: function downloadTemplate() {
            this.hideModal();
            window.location.href = this.downloadTemplateUrl + '&type=' + $('input[name=topics]:checked').val();
          }
        }, {
          key: 'showModal',
          value: function showModal() {
            $(this.importexportmodal).modal('show');
          }
        }, {
          key: 'hideModal',
          value: function hideModal() {
            $(this.importexportmodal).modal('hide');
          }
        }, {
          key: 'export',
          value: function _export() {
            this.ea.publish('export:topic');
            this.hideModal();
          }
        }]);

        var _TopicImportExportModal = TopicImportExportModal;
        TopicImportExportModal = inject(EventAggregator, I18N, API)(TopicImportExportModal) || TopicImportExportModal;
        return TopicImportExportModal;
      }();

      _export('TopicImportExportModal', TopicImportExportModal);
    }
  };
});
System.registerDynamic("view-models/topics/listing/topic-list.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n    <require from=\"./topic-add-card\"></require>\n    <require from=\"./topic-card\"></require>\n    <require from=\"components/page-nav\"></require>\n    <require from=\"components/notification/notification-modal\"></require>\n\n    <page-nav items.bind=\"totalEntries\" enable-export.bind=\"false\" event-prefix=\"${eventPrefix}\" enable-search.bind=\"true\" nav-bar-urls.bind=\"navBarUrls\" filter-view=\"view-models/topics/listing/filters/topic-filters\" enable-filter=\"true\" show-filter-option=\"true\" show-topic-nav.bind=\"showTopicNav\" containerless>\n    </page-nav>\n\n    <div class=\"page-pad-top\">\n        <div class=\"container-fluid listing-page\">\n            <div class=\"card-container meeting-list ${viewStyle} topic-list\" >\n                <topic-add-card class=\"${itemStyle} au-stagger\" containerless></topic-add-card>\n                <topic-card class=\"${$parent.itemStyle} au-stagger\" topic-index.bind=\"$index\" repeat.for=\"topic of items\" topic.bind=\"topic\" containerless></topic-card>\n                <div if.bind='items.length === 0' class=\"col-md-9\">\n                    <div class=\"no-result-state\">\n                        <div class=\"message\" i18n=\"topics.commons.no_topic_results\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <notification-modal></notification-modal>\n</template>\n";
});
System.register('models/topic.js', [], function (_export) {
    'use strict';

    var Topic;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [],
        execute: function () {
            Topic = function () {
                function Topic(topic) {
                    _classCallCheck(this, Topic);

                    this.name = '';
                    this.description = '';
                    this.uuid = '';
                    this.isActive = false;

                    this.name = topic.name;
                    this.description = topic.description;
                    this.uuid = topic.uuid;
                    this.isActive = topic.active;
                }

                _createClass(Topic, [{
                    key: 'clearData',
                    value: function clearData() {
                        this.name = '';
                        this.description = '';
                        this.uuid = '';
                        this.isActive = false;
                    }
                }]);

                return Topic;
            }();

            _export('Topic', Topic);
        }
    };
});
System.register('view-models/topics/listing/topic-list.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'components/listing.js', 'models/topic.js', 'service/topic_request_service.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
    'use strict';

    var $, EventAggregator, inject, bindable, Listing, Topic, TopicRequestService, _, TopicList;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    var _get = function get(_x, _x2, _x3) {
        var _again = true;_function: while (_again) {
            var object = _x,
                property = _x2,
                receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
                var parent = Object.getPrototypeOf(object);if (parent === null) {
                    return undefined;
                } else {
                    _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
                }
            } else if ('value' in desc) {
                return desc.value;
            } else {
                var getter = desc.get;if (getter === undefined) {
                    return undefined;
                }return getter.call(receiver);
            }
        }
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    return {
        setters: [function (_jquery) {
            $ = _jquery['default'];
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
            bindable = _aureliaFramework.bindable;
        }, function (_componentsListing) {
            Listing = _componentsListing.Listing;
        }, function (_modelsTopic) {
            Topic = _modelsTopic.Topic;
        }, function (_serviceTopic_request_service) {
            TopicRequestService = _serviceTopic_request_service.TopicRequestService;
        }, function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }],
        execute: function () {
            TopicList = function (_Listing) {
                _inherits(TopicList, _Listing);

                function TopicList(ea, topicRequestService) {
                    _classCallCheck(this, _TopicList);

                    _get(Object.getPrototypeOf(_TopicList.prototype), 'constructor', this).call(this, ea, "topic");
                    this.isMultiple = false;
                    this.selected = 0;
                    this.filterRef = "topicsFilterPanel";
                    this.showTopicNav = true;
                    this.enableExport = true;
                    this.navBarUrls = {
                        topics: { text: "Topics", url: "topics/topic_listing" },
                        tracks: { text: "Tracks", show: false, url: "tracks/list" }
                    };
                    this.ea = ea;
                    this.topicRequestService = topicRequestService;
                    this.viewStyle = this.gridViewStyleName;
                    this.subscribeToTopicEvents();
                    this.setNavUrls();
                    this.items = [];
                    this.textInit = false;
                }

                _createClass(TopicList, [{
                    key: 'attached',
                    value: function attached() {
                        _get(Object.getPrototypeOf(_TopicList.prototype), 'attached', this).call(this);
                    }
                }, {
                    key: 'setNavUrls',
                    value: function setNavUrls() {
                        if (window.envDetails.current_location_uuid) {
                            var queryParam = "?current_location_uuid=" + window.envDetails.current_location_uuid;
                            this.navBarUrls.topics.url = this.navBarUrls.topics.url + queryParam;
                            this.navBarUrls.tracks.url = this.navBarUrls.tracks.url + queryParam;
                        }
                        this.navBarUrls.tracks.show = window.is_tracks_enabled || false;
                    }
                }, {
                    key: 'subscribeToTopicEvents',
                    value: function subscribeToTopicEvents() {
                        var _this = this;

                        this.ea.subscribe('topic:deselect', function () {
                            _this.selected--;
                            if (_this.selected == 0) {
                                _this.isMultiple = false;
                            }
                        });

                        this.ea.subscribe('topic:selected', function (count) {
                            _this.selected++;
                            _this.isMultiple = true;
                        });

                        this.ea.subscribe('topic:search:entered', function (searchStr) {
                            _this.pushToSearchQueue(searchStr);
                            _this.ea.publish('topic-search:text');
                        });
                    }
                }, {
                    key: 'fetchFromServer',
                    value: function fetchFromServer(params) {
                        var _this2 = this;

                        if (envDetails.event && envDetails.event.uuid) {
                            params.event_uuids = [envDetails.event.uuid];
                        }
                        params.all = true;
                        this.topicRequestService.getTopicsList(params).then(function (response) {
                            _this2.fetching = false;
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.status == 200) {
                                _this2.updateTopicItems(response.data.topics);

                                !_this2.textInit && (_this2.navBarUrls.tracks.text += response.data.track_label ? " ('" + response.data.track_label + "')" : "");
                                _this2.textInit = true;
                                _this2.totalEntries = response.data.total_entries;
                            }
                            _this2.fetchForSearch();
                        })['catch'](function (response) {
                            _this2.fetching = false;
                            _this2.fetchForSearch();
                        });
                    }
                }, {
                    key: 'exportFromServer',
                    value: function exportFromServer(filters) {
                        var filterParams = $.param(filters);
                        window.location.href = this.topicRequestService.getExportUrl() + '?' + 'current_location_uuid=' + envDetails.current_location_uuid + '&' + filterParams;
                    }
                }, {
                    key: 'updateTopicItems',
                    value: function updateTopicItems(topics) {
                        topics = topics.map(function (topic) {
                            return new Topic(topic);
                        });
                        this.items = _.sortByOrder(this.items.concat(topics), 'name', true);
                    }
                }, {
                    key: 'getAppliedFilterSet',
                    value: function getAppliedFilterSet(filterRef) {
                        var _this3 = this;

                        var filters = {};
                        this.filtersApplied = [];
                        $(filterRef).find('select').each(function (i, select) {
                            var filterKey = $(select).attr('id');
                            var filterValue = $(select).val() || [];
                            filters[filterKey] = filterValue;
                            $(select).find('option:selected').each(function (idx, opt) {
                                _this3.filtersApplied.push({ id: $(opt).val(), name: $(opt).text(), type: filterKey });
                            });
                        });
                        return filters;
                    }
                }, {
                    key: 'removeFilter',
                    value: function removeFilter(filter) {
                        var selField = $('#' + filter.type);
                        selField.find('option[value="' + filter.id + '"]').prop('selected', false);
                        selField.trigger('change');
                        this.filters[filter.type].splice(this.filters[filter.type].indexOf(filter.id), 1);
                        _.remove(this.filtersApplied, function (filterToken) {
                            return filterToken.id === filter.id && filterToken.type === filter.type;
                        });
                    }
                }, {
                    key: 'removeSelectedFilters',
                    value: function removeSelectedFilters(filterRef) {
                        $(filterRef).find('select').each(function (i, select) {
                            $(select).find('option:selected').each(function (idx, opt) {
                                $(opt).prop('selected', false);
                            }).trigger('change');
                        });
                    }
                }]);

                var _TopicList = TopicList;
                TopicList = inject(EventAggregator, TopicRequestService)(TopicList) || TopicList;
                return TopicList;
            }(Listing);

            _export('TopicList', TopicList);
        }
    };
});
System.registerDynamic("view-models/topics/listing/topic-mapping-options.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <ul class=\"select-meetingtype-list\">\n    <li repeat.for=\"option of topicOptions\">\n      <div if.bind=\"option.config\">\n        <input type=\"radio\" value=\"${option.value}\" id=\"${option.id}\" name=\"topics\"/>\n        <label for=\"${option.id}\">\n          <i class=\"jif-meeting jif-dark-grey jif-34\"></i>\n          <span class=\"text-ellipsis meetingtype-name\">${option.text}</span>\n          <span class=\"jif-check jif-green pull-right\"></span>\n        </label>\n      </div>\n    </li>\n  </ul>\n</template>\n";
});
System.register('view-models/topics/listing/topic-mapping-options.js', ['npm:jquery@2.2.4.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-i18n@0.4.1.js', 'commons/api.js'], function (_export) {
  'use strict';

  var $, EventAggregator, inject, bindable, I18N, API, TopicMappingOptions;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_jquery) {
      $ = _jquery['default'];
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_commonsApi) {
      API = _commonsApi.API;
    }],
    execute: function () {
      TopicMappingOptions = function () {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _createDecoratedClass(TopicMappingOptions, [{
          key: 'actionType',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function TopicMappingOptions(ea, i18n, api) {
          _classCallCheck(this, _TopicMappingOptions);

          _defineDecoratedPropertyDescriptor(this, 'actionType', _instanceInitializers);

          this.ea = ea;
          this.i18n = i18n;
          this.i18n.setLocale('en').then(function () {});
          this.api = api;
          this.actionType = '';
          this.setTopicOptions();
        }

        _createDecoratedClass(TopicMappingOptions, [{
          key: 'setTopicOptions',
          value: function setTopicOptions() {
            this.topicOptions = [{
              value: 'topic',
              id: 'topics',
              text: this.i18n.tr('topics.listing.topicImportExportModal.topic'),
              config: true
            }, {
              value: 'topic_to_user',
              id: 'topic_to_user',
              text: this.i18n.tr('topics.listing.topicImportExportModal.topic_to_user'),
              config: envDetails.topicUserMappingEnabled
            }, {
              value: 'topic_to_room',
              id: 'topic_to_room',
              text: this.i18n.tr('topics.listing.topicImportExportModal.topic_to_room'),
              config: envDetails.topicRoomMappingEnabled
            }, {
              value: 'topic_to_meeting_type',
              id: 'topic_to_meeting_type',
              text: this.i18n.tr('topics.listing.topicImportExportModal.topic_to_meeting_type', { label: envDetails.meetingTypeCustomLabel }),
              config: envDetails.topicActivitiesMappingEnabled
            }];
          }
        }], null, _instanceInitializers);

        var _TopicMappingOptions = TopicMappingOptions;
        TopicMappingOptions = inject(EventAggregator, I18N, API)(TopicMappingOptions) || TopicMappingOptions;
        return TopicMappingOptions;
      }();

      _export('TopicMappingOptions', TopicMappingOptions);
    }
  };
});
System.registerDynamic("view-models/topics/profile/edit-topic.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <require from=\"components/notification/notification-modal\"></require>\n  <div class=\"page-pad-top page-pad-bottom\">\n    <div if.bind=\"showTopicAction\" class=\"container-fluid\" click.delegate=\"hideEditTopicName($event)\">\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"set-content topic-update\">\n            <h2 id=\"userProfileBasicInfoTitle\" i18n=\"topics.profile.editTopic.title\"></h2>\n            <form class=\"form jiffle-form\" id = \"user_profile_form\">\n              <div class=\"row\">\n                <div class=\"col-md-12 form-group\">\n                  <div class=\"row\">\n                    <div class=\"col-sm-5\">\n                      <div class=\"form-group-display\">\n                        <input type=\"text\" class=\"form-control inline-lg user-field edit-field\" value.bind=\"topic.name | sanitizeHTML\" if.bind=\"enable_name_edit\" click.delegate=\"\"/>\n                        <label if.bind=\"!enable_name_edit\" class=\"text-lg user-label\">\n                          ${topic.name}\n                        </label>\n                        <a href=\"javascript:void(0)\" if.bind=\"!enable_name_edit\" click.trigger=\"showEditTopicName($event)\" class=\"edit-user\">\n                          <i class=\"jif-pencil jif-blue jif-18\"></i>\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-5\">\n                  <div class=\"form-group\">\n                    <label class=\"control-label\" i18n=\"topics.profile.editTopic.topicInfo\"></label>\n                    <textarea class=\"textarea-lg form-control\" placeholder=\"Topic Info\" rows=\"5\" value.bind=\"topic.description | sanitizeHTML\">\n                    </textarea>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-8\">\n                      <label i18n=\"topics.profile.editTopic.makeUnselectable\"></label>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group toggle-switch pull-right\">\n                          <input type=\"checkbox\" id=\"disableInMeeting\" checked.bind=\"disableInMeeting\" disabled.bind=\"isEbcEvent\"/>\n                          <label for=\"disableInMeeting\" click.trigger=\"toggleUnselectable($event)\"></label>\n                        </div>\n                    </div>\n                  </div>\n                  <div class=\"form-group last-filed\">\n                    <button class= \"btn btn-block btn-blue\" click.trigger=\"updateTopic($event)\" i18n=\"topics.profile.editTopic.save\"></button>\n                  </div>\n                  \n                  <div class=\"form-group last-filed\">\n                    <a href=\"javascript:void(0)\" class= \"pull-left font-blue\" click.trigger=\"askDeleteConfirmaton($event)\" i18n=\"${topic.active ? 'topics.profile.editTopic.disable_topic_link' : 'topics.profile.editTopic.enable_topic_link'}\"></a>\n                    <a href=\"javascript:void(0)\" class=\"pull-right font-blue\" click.trigger=\"cancelUpdate($event)\" i18n=\"topics.profile.editTopic.cancel\"></a>\n                  </div>\n                </div>\n              </div>\n            \n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <notification-modal></notification-modal>\n  </div>\n</template>\n";
});
System.register('view-models/topics/topics-app.js', ['github:twbs/bootstrap@3.3.6.js'], function (_export) {
  'use strict';

  var TopicsApp;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_bootstrap) {}],
    execute: function () {
      TopicsApp = function () {
        function TopicsApp() {
          _classCallCheck(this, TopicsApp);
        }

        _createClass(TopicsApp, [{
          key: 'configureRouter',
          value: function configureRouter(config, router) {
            config.map([{ route: ['', 'topics'], name: 'Topics', moduleId: './listing/topic-list', nav: false, title: '' }, { route: 'profile/:uuid', name: 'topicProfile', moduleId: './profile/topic-profile', nav: false, title: '' }]);
            this.router = router;
          }
        }]);

        return TopicsApp;
      }();

      _export('TopicsApp', TopicsApp);
    }
  };
});
System.register('view-models/topics/profile/edit-topic.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/topic_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'view-models/topics/topics-app.js'], function (_export) {
	'use strict';

	var EventAggregator, inject, bindable, TopicRequestService, I18N, TopicsApp, EditTopic;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	return {
		setters: [function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
			bindable = _aureliaFramework.bindable;
		}, function (_serviceTopic_request_service) {
			TopicRequestService = _serviceTopic_request_service.TopicRequestService;
		}, function (_aureliaI18n) {
			I18N = _aureliaI18n.I18N;
		}, function (_topicsApp) {
			TopicsApp = _topicsApp.TopicsApp;
		}],
		execute: function () {
			EditTopic = function () {
				function EditTopic(topicRequestService, ea, topicsRouter, i18n) {
					_classCallCheck(this, _EditTopic);

					this.topicRequestService = topicRequestService;
					this.ea = ea;
					this.i18n = i18n;
					this.i18n.setLocale('en');
					this.topicsRouter = topicsRouter;
					this.isEbcEvent = window.isEBCEvent;
					this.enable_name_edit = false;
					this.showTopicAction = false;
					this.disableInMeeting = false;
				}

				_createClass(EditTopic, [{
					key: 'activate',
					value: function activate(params, routeConfig, options) {
						var _this = this;

						if (params.uuid) {
							this.topicRequestService.getTopicDetails(params.uuid).then(function (response) {
								if (typeof response.response == 'string') {
									response = JSON.parse(response.response);
								}
								if (response.status === 200) {
									_this.topic = response.data.topic;
									_this.showTopicAction = true;
									_this.disableInMeeting = _this.topic.disable_in_meeting;
								}
							})['catch'](function (err) {
								_this.showErrorResponse(err);
							});
						}
					}
				}, {
					key: 'showEditTopicName',
					value: function showEditTopicName(event) {
						event.stopPropagation();
						event.preventDefault();
						this.enable_name_edit = true;
					}
				}, {
					key: 'checkTopicIsActive',
					value: function checkTopicIsActive() {
						return this.topic.active;
					}
				}, {
					key: 'hideEditTopicName',
					value: function hideEditTopicName(e) {
						this.enable_name_edit = false;
					}
				}, {
					key: 'updateTopic',
					value: function updateTopic(event) {
						var _this2 = this;

						event.stopPropagation();
						var data = {
							uuid: this.topic.uuid,
							name: this.topic.name,
							description: this.topic.description,
							disable_in_meeting: this.disableInMeeting
						};

						this.topicRequestService.updateTopic(data).then(function (response) {
							if (typeof response.response == 'string') {
								response = JSON.parse(response.response);
							}
							if (response.status === 200) {
								(function () {
									var router = _this2.topicsRouter;
									_this2.ea.publish('show:notification', {
										title: _this2.i18n.tr('topics.profile.editTopic.update_success', { name: envDetails.currentUser.first_name }),
										message: _this2.i18n.tr('topics.profile.editTopic.update_success_msg', { topic: _this2.topic.name }),
										'class': 'green',
										autoHideDuration: 2000,
										onHide: function onHide() {
											window.setTimeout(function () {
												router.router.navigateToRoute('Topics');
											}, 1000);
										}
									});
								})();
							}
						})['catch'](function (error) {
							_this2.showErrorResponse(error);
						});
					}
				}, {
					key: 'askDeleteConfirmaton',
					value: function askDeleteConfirmaton(event) {
						var _this3 = this;

						event.stopPropagation();
						this.ea.publish('show:notification', {
							title: this.i18n.tr('topics.profile.editTopic.delete_confirm_title'),
							message: this.i18n.tr('topics.profile.editTopic.delete_confirm_msg', { topic: this.topic.name, action: this.i18n.tr('topics.profile.editTopic.' + (this.checkTopicIsActive() ? 'disable_topic' : 'enable_topic')) }),
							'class': this.checkTopicIsActive() ? 'red' : 'green',
							isConfirmation: true,
							done: function done() {
								_this3.enableDisableTopic();
							}
						});
					}
				}, {
					key: 'enableDisableTopic',
					value: function enableDisableTopic() {
						var _this4 = this;

						var params = {
							uuid: this.topic.uuid,
							active: !this.checkTopicIsActive()
						};
						this.topicRequestService.deleteTopic(params).then(function (response) {
							if (typeof response.response == 'string') {
								response = JSON.parse(response.response);
							}
							if (response.status === 200) {
								(function () {
									var router = _this4.topicsRouter;
									_this4.ea.publish('show:notification', {
										title: _this4.i18n.tr('topics.profile.editTopic.update_success', { name: envDetails.currentUser.first_name }),
										message: _this4.i18n.tr('topics.profile.editTopic.delete_success', { topic: _this4.topic.name, action: _this4.i18n.tr('topics.profile.editTopic.' + (_this4.checkTopicIsActive() ? 'disabled' : 'enabled')) }),
										'class': 'green',
										autoHideDuration: 5000,
										onHide: function onHide() {
											router.router.navigateToRoute('Topics');
										}
									});
								})();
							}
						})['catch'](function (err) {
							_this4.showErrorResponse(err);
						});
					}
				}, {
					key: 'showErrorResponse',
					value: function showErrorResponse(errorResponse) {
						var errors = JSON.parse(errorResponse.response).errors;
						if (errors && errors.details) {
							errors = errors.details;
						}
						var errorMsgs = [];
						for (var errorType in errors) {
							errorMsgs = errorMsgs.concat(errors[errorType]);
						}
						this.ea.publish('show:notification', {
							title: this.i18n.tr('topics.mappings.save_failure'),
							message: errorMsgs.join(', '),
							'class': 'red',
							autoHideDuration: 2000 });
					}
				}, {
					key: 'cancelUpdate',
					value: function cancelUpdate() {
						this.topicsRouter.router.navigateToRoute('Topics');
					}
				}, {
					key: 'toggleUnselectable',
					value: function toggleUnselectable(event) {
						event.stopPropagation();
						if (!this.isEbcEvent) this.disableInMeeting = !this.disableInMeeting;
					}
				}]);

				var _EditTopic = EditTopic;
				EditTopic = inject(TopicRequestService, EventAggregator, TopicsApp, I18N)(EditTopic) || EditTopic;
				return EditTopic;
			}();

			_export('EditTopic', EditTopic);
		}
	};
});
System.registerDynamic("view-models/topics/profile/topic-mappings/activities/map-activities.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"./topic-activity-card\"></require>\n\t<require from=\"components/page-nav\"></require>\n\t<require from=\"components/notification/notification-modal\"></require>\n\n\t<page-nav items.bind=\"totalEntries\" enable-search.bind=\"true\" event-prefix=\"${eventPrefix}\" show-filter-option.bind=\"false\" containerless>\n\t</page-nav>\n\n\t<div class=\"page-pad-top page-pad-bottom\">\n\t\t<div class=\"container-fluid\">\n\t\t\t<form class=\"form jiffle-form bottom-margin\">\n\t\t\t\t<div class=\"form-group-display\">\n\t\t\t\t\t<div class=\"text-lg\">${topic.name}</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t\t<div class=\"container-fluid listing-page\">\n\t\t\t<div class=\"card-container topic-activity-list ${viewStyle}\">\n\t\t\t\t<topic-activity-card class=\"${$parent.itemStyle} item\" repeat.for=\"activity of items\" entity.bind=\"activity\" topicuuid=\"${$parent.topicuuid}\" containerless></topic-activity-card>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- <div class=\"bulk-action button-bar navbar-fixed-bottom hide\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t    <button class=\"btn btn-blue col-xs-6 col-sm-3\" >Remove Selected</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div> -->\n\t<notification-modal></notification-modal>\n</template>\n";
});
System.register('view-models/topics/profile/topic-mappings/activities/map-activities.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/topic_request_service.js', 'components/listing.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
  'use strict';

  var EventAggregator, inject, bindable, TopicRequestService, Listing, _, MapActivities;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _get = function get(_x2, _x3, _x4) {
    var _again = true;_function: while (_again) {
      var object = _x2,
          property = _x3,
          receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_componentsListing) {
      Listing = _componentsListing.Listing;
    }, function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }],
    execute: function () {
      MapActivities = function (_Listing) {
        _inherits(MapActivities, _Listing);

        function MapActivities(topicRequestService, ea) {
          _classCallCheck(this, _MapActivities);

          _get(Object.getPrototypeOf(_MapActivities.prototype), 'constructor', this).call(this, ea, 'activities');
          this.subscribed = [];
          this.topicRequestService = topicRequestService;
          this.viewStyle = this.gridViewStyleName;
          this.subscribeToTopicActivityEvents();
        }

        _createClass(MapActivities, [{
          key: 'activate',
          value: function activate(params, routeConfig, options) {
            var _this = this;

            if (params.uuid) {
              this.topicuuid = params.uuid;

              this.topicRequestService.getTopicDetails(this.topicuuid).then(function (response) {
                if (typeof response.response == 'string') {
                  response = JSON.parse(response.response);
                }
                if (response.status === 200) {
                  _this.topic = response.data.topic;
                }
              })['catch'](function (errorResponse) {
                _this.showDetailsErrorResponse(errorResponse);
              });
            }
          }
        }, {
          key: 'detached',
          value: function detached() {
            _get(Object.getPrototypeOf(_MapActivities.prototype), 'detached', this).call(this);
            if (this.subscribed) {
              this.subscribed.forEach(function (sub) {
                return sub.dispose && sub.dispose();
              });
            }
          }
        }, {
          key: 'attached',
          value: function attached() {
            _get(Object.getPrototypeOf(_MapActivities.prototype), 'attached', this).call(this);
            this.items = [];
          }
        }, {
          key: 'subscribeToTopicActivityEvents',
          value: function subscribeToTopicActivityEvents() {
            var _this2 = this;

            var count = 0;
            this.subscribed[count++] = this.ea.subscribe(this.eventPrefix + ':search:entered', function (searchStr) {
              _this2.pushToSearchQueue(searchStr);
              _this2.ea.publish(_this2.eventPrefix + '-search:text');
            });
          }
        }, {
          key: 'fetchFromServer',
          value: function fetchFromServer(params) {
            var _this3 = this;

            this.topicRequestService.getTopicActivities(this.topicuuid, params).then(function (response) {
              _this3.fetching = false;
              if (typeof response.response == 'string') {
                response = JSON.parse(response.response);
              }
              if (response.status === 200) {
                _this3.updateTopicActivities(response.data.activities);
                _this3.totalEntries = response.data.total_entries || 0;
              }
              _this3.fetchForSearch();
            })['catch'](function (errorResponse) {
              _this3.fetching = false;
              _this3.fetchForSearch();
              _this3.showDetailsErrorResponse(errorResponse);
            });
          }
        }, {
          key: 'updateTopicActivities',
          value: function updateTopicActivities() {
            var activities = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

            this.items.push.apply(this.items, activities);
          }
        }]);

        var _MapActivities = MapActivities;
        MapActivities = inject(TopicRequestService, EventAggregator)(MapActivities) || MapActivities;
        return MapActivities;
      }(Listing);

      _export('MapActivities', MapActivities);
    }
  };
});
System.registerDynamic("view-models/topics/profile/topic-mappings/activities/topic-activity-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <div class=\"card-header-content\">\n        <div class=\"card-select\">\n          <input type=\"checkbox\" id=\"activity-${entity.uuid}\" >\n          <label for=\"activity-${entity.uuid}\">\n            <div>M</div>\n          </label>\n        </div>\n        <div class=\"card-click\">\n          <a href=\"javascript:void(0)\">\n            <div class=\"font-lg\">${entity.display_name}</div>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-content\">\n    </div>\n    <!-- Map Overlay -->\n    <div class=\"card-overlay\">\n      <div class=\"card-overlay-content\">\n        <div class=\"card-overlay-action dark-bg\">\n          <a href=\"javascript:void(0)\" class=\"btn btn-blue btn-block reinvite-user\" click.trigger=\"toggleMapping()\">\n          ${entity.mapped ? 'Unmap': 'Map'}\n           <!-- i18n=\"topics.mappings[entity.mapped ? 'unmap': 'map']\" -->\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>";
});
System.register('view-models/topics/profile/topic-mappings/activities/topic-activity-card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/topic_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'components/topic-entities-mapping/topic-entities-map-unmap.js'], function (_export) {
  'use strict';

  var inject, bindable, EventAggregator, TopicRequestService, I18N, TopicEntitiesMapUnmap, TopicActivityCard;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_componentsTopicEntitiesMappingTopicEntitiesMapUnmap) {
      TopicEntitiesMapUnmap = _componentsTopicEntitiesMappingTopicEntitiesMapUnmap.TopicEntitiesMapUnmap;
    }],
    execute: function () {
      TopicActivityCard = function (_TopicEntitiesMapUnmap) {
        var _instanceInitializers = {};

        _inherits(TopicActivityCard, _TopicEntitiesMapUnmap);

        _createDecoratedClass(TopicActivityCard, [{
          key: 'entity',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'topicuuid',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function TopicActivityCard(topicRequestService, ea, i18n) {
          _classCallCheck(this, _TopicActivityCard);

          _get(Object.getPrototypeOf(_TopicActivityCard.prototype), 'constructor', this).call(this, topicRequestService, ea, i18n);

          _defineDecoratedPropertyDescriptor(this, 'entity', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'topicuuid', _instanceInitializers);

          this.entities = ['mapped_activities', 'unmapped_activities'];
        }

        var _TopicActivityCard = TopicActivityCard;
        TopicActivityCard = inject(TopicRequestService, EventAggregator, I18N)(TopicActivityCard) || TopicActivityCard;
        return TopicActivityCard;
      }(TopicEntitiesMapUnmap);

      _export('TopicActivityCard', TopicActivityCard);
    }
  };
});
System.registerDynamic("view-models/topics/profile/topic-mappings/events/map-events.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"./topic-event-card\"></require>\n\t<require from=\"components/page-nav\"></require>\n\t<require from=\"components/notification/notification-modal\"></require>\n\n\t<page-nav items.bind=\"totalEntries\" enable-search.bind=\"false\" event-prefix=\"${eventPrefix}\" show-filter-option.bind=\"false\" containerless>\n\t</page-nav>\n\n\t<div class=\"page-pad-top page-pad-bottom\">\n\t\t<div class=\"container-fluid\">\n\t\t  \t<form class=\"form jiffle-form bottom-margin\">\n\t\t  \t\t<div class=\"form-group-display\">\n\t\t  \t\t\t<div class=\"text-lg\">${topic.name}</div>\n\t\t  \t\t</div>\n\t\t  \t</form>\n\t\t</div>\n\t  \t<div class=\"container-fluid listing-page\">\n\t\t  \t<div class=\"card-container topic-room-list ${viewStyle}\">\n\t\t\t\t<topic-event-card class=\"${$parent.itemStyle} item\" repeat.for=\"eventobj of items\" entity.bind=\"eventobj\" topicuuid=\"${$parent.topicuuid}\" containerless></topic-event-card>\n\t\t  \t</div>\n\t  \t</div>\n\t</div>\n\t<!-- <div class=\"bulk-action button-bar navbar-fixed-bottom hide\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t    <button class=\"btn btn-blue col-xs-6 col-sm-3\" >Remove Selected</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div> -->\n\t<notification-modal></notification-modal>\n</template>";
});
System.register('view-models/topics/profile/topic-mappings/events/map-events.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/topic_request_service.js', 'components/listing.js', 'models/mapped-event.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
  'use strict';

  var EventAggregator, inject, bindable, TopicRequestService, Listing, MappedEvent, _, MapActivities;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  return {
    setters: [function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_componentsListing) {
      Listing = _componentsListing.Listing;
    }, function (_modelsMappedEvent) {
      MappedEvent = _modelsMappedEvent.MappedEvent;
    }, function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }],
    execute: function () {
      MapActivities = function (_Listing) {
        _inherits(MapActivities, _Listing);

        function MapActivities(topicRequestService, ea) {
          _classCallCheck(this, _MapActivities);

          _get(Object.getPrototypeOf(_MapActivities.prototype), 'constructor', this).call(this, ea, 'mapped-events');
          this.subscribed = [];
          this.topicRequestService = topicRequestService;
          this.viewStyle = this.gridViewStyleName;
          this.subscribeToTopicMapEvents();
        }

        _createClass(MapActivities, [{
          key: 'activate',
          value: function activate(params, routeConfig, options) {
            var _this = this;

            if (params.uuid) {
              this.topicuuid = params.uuid;

              this.topicRequestService.getTopicDetails(this.topicuuid).then(function (response) {
                if (typeof response.response == 'string') {
                  response = JSON.parse(response.response);
                }
                if (response.status === 200) {
                  _this.topic = response.data.topic;
                }
              })['catch'](function (errorResponse) {
                _this.showDetailsErrorResponse(errorResponse);
              });
            }
          }
        }, {
          key: 'detached',
          value: function detached() {
            _get(Object.getPrototypeOf(_MapActivities.prototype), 'detached', this).call(this);
            if (this.subscribed) {
              this.subscribed.forEach(function (sub) {
                return sub.dispose && sub.dispose();
              });
            }
          }
        }, {
          key: 'attached',
          value: function attached() {
            _get(Object.getPrototypeOf(_MapActivities.prototype), 'attached', this).call(this);
          }
        }, {
          key: 'subscribeToTopicMapEvents',
          value: function subscribeToTopicMapEvents() {
            var _this2 = this;

            var count = 0;
            this.subscribed[count++] = this.ea.subscribe(this.eventPrefix + ':search:entered', function (searchStr) {
              _this2.pushToSearchQueue(searchStr);
              _this2.ea.publish(_this2.eventPrefix + '-search:text');
            });
          }
        }, {
          key: 'fetchFromServer',
          value: function fetchFromServer(params) {
            var _this3 = this;

            this.topicRequestService.getTopicEvents(this.topicuuid, params).then(function (response) {
              _this3.fetching = false;
              if (typeof response.response == 'string') {
                response = JSON.parse(response.response);
              }
              if (response.status === 200) {
                _this3.updateTopicEvents(response.data.events);
                _this3.totalEntries = response.data.total_entries || 0;
              }
              _this3.fetchForSearch();
            })['catch'](function (errorResponse) {
              _this3.fetching = false;
              _this3.fetchForSearch();
              _this3.showDetailsErrorResponse(errorResponse);
            });
          }
        }, {
          key: 'updateTopicEvents',
          value: function updateTopicEvents(events) {
            events = events.map(function (Event) {
              return new MappedEvent(Event);
            });
            this.items = _.sortByOrder(this.items.concat(events), ['mapped', 'status', 'start_date', 'end_date'], [false, false, true, true]);
          }
        }]);

        var _MapActivities = MapActivities;
        MapActivities = inject(TopicRequestService, EventAggregator)(MapActivities) || MapActivities;
        return MapActivities;
      }(Listing);

      _export('MapActivities', MapActivities);
    }
  };
});
System.registerDynamic("view-models/topics/profile/topic-mappings/events/topic-event-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"card\">\n    <div class=\"card-header\" title=\"${entity.name}\">\n      <div class=\"card-header-content\">\n        <div class=\"card-select\">\n          <input type=\"checkbox\" id=\"event-${entity.uuid}\" >\n          <label for=\"event-${entity.uuid}\">\n            <div>E</div>\n          </label>\n        </div>\n        <div class=\"card-click\">\n          <a href=\"javascript:void(0)\">\n            <div class=\"font-lg\">${entity.name}</div>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-content\">\n      <div class=\"card-detail-content\">\n        <div class=\"card-detail\">\n          <span class=\"font-lg\">${entity.event_date_range}</span>\n        </div>\n        <div class=\"card-detail icon-sep\">\n          <div class=\"text-content\">\n            <span class=\"font-lg\">${entity.location}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Map Overlay -->\n    <div class=\"card-overlay\">\n      <div class=\"card-overlay-content\">\n        <div class=\"card-overlay-action dark-bg\">\n          <a href=\"javascript:void(0)\" class=\"btn btn-blue btn-block reinvite-user\" click.trigger=\"toggleMapping()\">\n          ${entity.mapped ? 'Unmap': 'Map'}\n           <!-- i18n=\"topics.mappings[entity.mapped ? 'unmap': 'map']\" -->\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>";
});
System.register('view-models/topics/profile/topic-mappings/events/topic-event-card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/topic_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'components/topic-entities-mapping/topic-entities-map-unmap.js'], function (_export) {
  'use strict';

  var inject, bindable, EventAggregator, TopicRequestService, I18N, TopicEntitiesMapUnmap, TopicEventCard;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_componentsTopicEntitiesMappingTopicEntitiesMapUnmap) {
      TopicEntitiesMapUnmap = _componentsTopicEntitiesMappingTopicEntitiesMapUnmap.TopicEntitiesMapUnmap;
    }],
    execute: function () {
      TopicEventCard = function (_TopicEntitiesMapUnmap) {
        var _instanceInitializers = {};

        _inherits(TopicEventCard, _TopicEntitiesMapUnmap);

        _createDecoratedClass(TopicEventCard, [{
          key: 'entity',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'topicuuid',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function TopicEventCard(topicRequestService, ea, i18n) {
          _classCallCheck(this, _TopicEventCard);

          _get(Object.getPrototypeOf(_TopicEventCard.prototype), 'constructor', this).call(this, topicRequestService, ea, i18n);

          _defineDecoratedPropertyDescriptor(this, 'entity', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'topicuuid', _instanceInitializers);

          this.entities = ['mapped_locations', 'unmapped_locations'];
        }

        var _TopicEventCard = TopicEventCard;
        TopicEventCard = inject(TopicRequestService, EventAggregator, I18N)(TopicEventCard) || TopicEventCard;
        return TopicEventCard;
      }(TopicEntitiesMapUnmap);

      _export('TopicEventCard', TopicEventCard);
    }
  };
});
System.registerDynamic("view-models/topics/profile/topic-mappings/locations/map-locations.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"./topic-location-card\"></require>\n\t<require from=\"components/page-nav\"></require>\n\t<require from=\"components/notification/notification-modal\"></require>\n\n\t<page-nav items.bind=\"totalEntries\" enable-search.bind=\"false\" event-prefix=\"${eventPrefix}\" show-filter-option.bind=\"false\" containerless>\n\t</page-nav>\n\n\t<div class=\"page-pad-top page-pad-bottom\">\n\t\t<div class=\"container-fluid\">\n\t\t  \t<form class=\"form jiffle-form bottom-margin\">\n\t\t  \t\t<div class=\"form-group-display\">\n\t\t  \t\t\t<div class=\"text-lg\">${topic.name}</div>\n\t\t  \t\t</div>\n\t\t  \t</form>\n\t\t</div>\n\t  \t<div class=\"container-fluid listing-page\">\n\t\t  \t<div class=\"card-container topic-room-list ${viewStyle}\">\n\t\t\t\t<topic-location-card class=\"${$parent.itemStyle} item\" repeat.for=\"locationobj of items\" entity.bind=\"locationobj\" topicuuid=\"${$parent.topicuuid}\" containerless></topic-location-card>\n\t\t  \t</div>\n\t\t</div>\n\t</div>\n\t<!-- <div class=\"bulk-action button-bar navbar-fixed-bottom hide\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t    <button class=\"btn btn-blue col-xs-6 col-sm-3\" >Remove Selected</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div> -->\n\t<notification-modal></notification-modal>\n</template>";
});
System.register('models/mapped-event.js', [], function (_export) {
    'use strict';

    var MappedEvent;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [],
        execute: function () {
            MappedEvent = function () {
                function MappedEvent(Event) {
                    _classCallCheck(this, MappedEvent);

                    this.name = '';
                    this.uuid = '';
                    this.location = '';
                    this.event_date_range = '';
                    this.status = '';
                    this.start_date = '';
                    this.end_date = '';
                    this.mapped = false;
                    this.current_location_uuid = '';

                    this.uuid = Event.uuid;
                    this.status = Event.status;
                    this.mapped = Event.mapped;
                    this.current_location_uuid = Event.current_location_uuid;
                    if (Event.status === "LIVE") {
                        this.start_date = Event.start_date;
                        this.end_date = Event.end_date;
                        this.event_date_range = moment(Event.start_date).utc()._d.toLongRange(moment(Event.end_date).utc()._d);
                        this.location = Event.location;
                        this.name = Event.event_name ? Event.event_name : Event.name;
                    } else {
                        this.event_date_range = "";
                        this.location = "";
                        this.name = Event.event_system_name ? Event.event_system_name : Event.name;
                    }
                }

                _createClass(MappedEvent, [{
                    key: 'clearData',
                    value: function clearData() {
                        this.name = '';
                        this.uuid = '';
                        this.location = '';
                        this.event_date_range = '';
                        this.status = '';
                        this.start_date = '';
                        this.end_date = '';
                        this.current_location_uuid = '';
                    }
                }]);

                return MappedEvent;
            }();

            _export('MappedEvent', MappedEvent);
        }
    };
});
System.register('view-models/topics/profile/topic-mappings/locations/map-locations.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/topic_request_service.js', 'components/listing.js', 'models/mapped-event.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
	'use strict';

	var EventAggregator, inject, bindable, TopicRequestService, Listing, MappedEvent, _, MapLocations;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x, _x2, _x3) {
		var _again = true;_function: while (_again) {
			var object = _x,
			    property = _x2,
			    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
			bindable = _aureliaFramework.bindable;
		}, function (_serviceTopic_request_service) {
			TopicRequestService = _serviceTopic_request_service.TopicRequestService;
		}, function (_componentsListing) {
			Listing = _componentsListing.Listing;
		}, function (_modelsMappedEvent) {
			MappedEvent = _modelsMappedEvent.MappedEvent;
		}, function (_lodashLodash) {
			_ = _lodashLodash['default'];
		}],
		execute: function () {
			MapLocations = function (_Listing) {
				_inherits(MapLocations, _Listing);

				function MapLocations(topicRequestService, ea) {
					_classCallCheck(this, _MapLocations);

					_get(Object.getPrototypeOf(_MapLocations.prototype), 'constructor', this).call(this, ea, 'mapped-events');
					this.subscribed = [];
					this.topicRequestService = topicRequestService;
					this.viewStyle = this.gridViewStyleName;
					this.subscribeToTopicLocationEvents();
				}

				_createClass(MapLocations, [{
					key: 'activate',
					value: function activate(params, routeConfig, options) {
						var _this = this;

						if (params.uuid) {
							this.topicuuid = params.uuid;

							this.topicRequestService.getTopicDetails(this.topicuuid).then(function (response) {
								if (typeof response.response == 'string') {
									response = JSON.parse(response.response);
								}
								if (response.status === 200) {
									_this.topic = response.data.topic;
								}
							})['catch'](function (errorResponse) {
								_this.showDetailsErrorResponse(errorResponse);
							});
						}
					}
				}, {
					key: 'detached',
					value: function detached() {
						_get(Object.getPrototypeOf(_MapLocations.prototype), 'detached', this).call(this);
						if (this.subscribed) {
							this.subscribed.forEach(function (sub) {
								return sub.dispose && sub.dispose();
							});
						}
					}
				}, {
					key: 'attached',
					value: function attached() {
						_get(Object.getPrototypeOf(_MapLocations.prototype), 'attached', this).call(this);
					}
				}, {
					key: 'subscribeToTopicLocationEvents',
					value: function subscribeToTopicLocationEvents() {
						var _this2 = this;

						var count = 0;
						this.subscribed[count++] = this.ea.subscribe(this.eventPrefix + ':search:entered', function (searchStr) {
							_this2.pushToSearchQueue(searchStr);
							_this2.ea.publish(_this2.eventPrefix + '-search:text');
						});
					}
				}, {
					key: 'fetchFromServer',
					value: function fetchFromServer(params) {
						var _this3 = this;

						this.topicRequestService.getTopicLocations(this.topicuuid, params).then(function (response) {
							_this3.fetching = false;
							if (typeof response.response == 'string') {
								response = JSON.parse(response.response);
							}
							if (response.status === 200) {
								_this3.updateTopicLocations(response.data.locations);
								_this3.totalEntries = response.data.total_entries || 0;
							}
							_this3.fetchForSearch();
						})['catch'](function (errorResponse) {
							_this3.fetching = false;
							_this3.fetchForSearch();
							_this3.showDetailsErrorResponse(errorResponse);
						});
					}
				}, {
					key: 'updateTopicLocations',
					value: function updateTopicLocations(locations) {
						locations = locations.map(function (location) {
							return new MappedEvent(location);
						});
						this.items = _.sortByOrder(this.items.concat(locations), ['mapped', 'status', 'start_date', 'end_date'], [false, false, true, true]);
					}
				}]);

				var _MapLocations = MapLocations;
				MapLocations = inject(TopicRequestService, EventAggregator)(MapLocations) || MapLocations;
				return MapLocations;
			}(Listing);

			_export('MapLocations', MapLocations);
		}
	};
});
System.registerDynamic("view-models/topics/profile/topic-mappings/locations/topic-location-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"card\">\n    <div class=\"card-header\" title=\"${entity.name}\">\n      <div class=\"card-header-content\">\n        <div class=\"card-select\">\n          <input type=\"checkbox\" id=\"event-${entity.uuid}\" >\n          <label for=\"event-${entity.uuid}\">\n            <div>L</div>\n          </label>\n        </div>\n        <div class=\"card-click\">\n          <a href=\"javascript:void(0)\">\n            <div class=\"font-lg\">${entity.name}</div>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-content\">\n      <div class=\"card-detail-content\">\n        <div class=\"card-detail\">\n          <span class=\"font-lg\">${entity.event_date_range}</span>\n        </div>\n        <div class=\"card-detail icon-sep\">\n          <div class=\"text-content\">\n            <span class=\"font-lg\">${entity.location}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Map Overlay -->\n    <div class=\"card-overlay\">\n      <div class=\"card-overlay-content\">\n        <div class=\"card-overlay-action dark-bg\">\n          <a href=\"javascript:void(0)\" class=\"btn btn-blue btn-block reinvite-user\" click.trigger=\"toggleMapping()\">\n          ${entity.mapped ? 'Unmap': 'Map'}\n           <!-- i18n=\"topics.mappings[entity.mapped ? 'unmap': 'map']\" -->\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>";
});
System.register('view-models/topics/profile/topic-mappings/locations/topic-location-card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/topic_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'components/topic-entities-mapping/topic-entities-map-unmap.js'], function (_export) {
  'use strict';

  var inject, bindable, EventAggregator, TopicRequestService, I18N, TopicEntitiesMapUnmap, TopicLocationCard;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_componentsTopicEntitiesMappingTopicEntitiesMapUnmap) {
      TopicEntitiesMapUnmap = _componentsTopicEntitiesMappingTopicEntitiesMapUnmap.TopicEntitiesMapUnmap;
    }],
    execute: function () {
      TopicLocationCard = function (_TopicEntitiesMapUnmap) {
        var _instanceInitializers = {};

        _inherits(TopicLocationCard, _TopicEntitiesMapUnmap);

        _createDecoratedClass(TopicLocationCard, [{
          key: 'entity',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'topicuuid',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function TopicLocationCard(topicRequestService, ea, i18n) {
          _classCallCheck(this, _TopicLocationCard);

          _get(Object.getPrototypeOf(_TopicLocationCard.prototype), 'constructor', this).call(this, topicRequestService, ea, i18n);

          _defineDecoratedPropertyDescriptor(this, 'entity', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'topicuuid', _instanceInitializers);

          this.entities = ['mapped_locations', 'unmapped_locations'];
        }

        var _TopicLocationCard = TopicLocationCard;
        TopicLocationCard = inject(TopicRequestService, EventAggregator, I18N)(TopicLocationCard) || TopicLocationCard;
        return TopicLocationCard;
      }(TopicEntitiesMapUnmap);

      _export('TopicLocationCard', TopicLocationCard);
    }
  };
});
System.registerDynamic("view-models/topics/profile/topic-mappings/rooms/map-rooms.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"./topic-room-card\"></require>\n\t<require from=\"components/page-nav\"></require>\n\t<require from=\"components/notification/notification-modal\"></require>\n\n\t<page-nav items.bind=\"totalEntries\" enable-search.bind=\"true\" show-filter-option.bind=\"false\" event-prefix=\"${eventPrefix}\" containerless>\n\t</page-nav>\n\n\t<div class=\"page-pad-top page-pad-bottom\">\n\t\t<div class=\"container-fluid\">\n\t\t  \t<form class=\"form jiffle-form bottom-margin\">\n\t\t  \t\t<div class=\"form-group-display\">\n\t\t  \t\t\t<div class=\"text-lg\">${topic.name}</div>\n\t\t  \t\t</div>\n\t\t  \t</form>\n\t\t</div>\n\t  \t<div class=\"container-fluid listing-page\">\n\t\t  \t<div class=\"card-container topic-room-list ${viewStyle}\">\n\t\t\t\t<topic-room-card class=\"${$parent.itemStyle} item\" repeat.for=\"room of items\" entity.bind=\"room\" topicuuid=\"${$parent.topicuuid}\" containerless></topic-room-card>\n\t\t  \t</div>\n\t  \t</div>\n\t</div>\n\t<!-- <div class=\"bulk-action button-bar navbar-fixed-bottom hide\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t    <button class=\"btn btn-blue col-xs-6 col-sm-3\" >Remove Selected</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div> -->\n\t<notification-modal></notification-modal>\n</template>\n";
});
System.register('view-models/topics/profile/topic-mappings/rooms/map-rooms.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/topic_request_service.js', 'components/listing.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
	'use strict';

	var EventAggregator, inject, bindable, TopicRequestService, Listing, _, MapRooms;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x2, _x3, _x4) {
		var _again = true;_function: while (_again) {
			var object = _x2,
			    property = _x3,
			    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
			bindable = _aureliaFramework.bindable;
		}, function (_serviceTopic_request_service) {
			TopicRequestService = _serviceTopic_request_service.TopicRequestService;
		}, function (_componentsListing) {
			Listing = _componentsListing.Listing;
		}, function (_lodashLodash) {
			_ = _lodashLodash['default'];
		}],
		execute: function () {
			MapRooms = function (_Listing) {
				_inherits(MapRooms, _Listing);

				function MapRooms(topicRequestService, ea) {
					_classCallCheck(this, _MapRooms);

					_get(Object.getPrototypeOf(_MapRooms.prototype), 'constructor', this).call(this, ea, 'mapped-rooms');
					this.subscribed = [];
					this.topicRequestService = topicRequestService;
					this.viewStyle = this.gridViewStyleName;
					this.subscribeToTopicRoomEvents();
				}

				_createClass(MapRooms, [{
					key: 'activate',
					value: function activate(params, routeConfig, options) {
						var _this = this;

						if (params.uuid) {
							this.topicuuid = params.uuid;

							this.topicRequestService.getTopicDetails(this.topicuuid).then(function (response) {
								if (typeof response.response == 'string') {
									response = JSON.parse(response.response);
								}

								if (response.status === 200) {
									_this.topic = response.data.topic;
								}
							})['catch'](function (errorResponse) {
								_this.showDetailsErrorResponse(errorResponse);
							});
						}
					}
				}, {
					key: 'detached',
					value: function detached() {
						_get(Object.getPrototypeOf(_MapRooms.prototype), 'detached', this).call(this);
						if (this.subscribed) {
							this.subscribed.forEach(function (sub) {
								return sub.dispose && sub.dispose();
							});
						}
					}
				}, {
					key: 'attached',
					value: function attached() {
						_get(Object.getPrototypeOf(_MapRooms.prototype), 'attached', this).call(this);
						this.items = [];
					}
				}, {
					key: 'subscribeToTopicRoomEvents',
					value: function subscribeToTopicRoomEvents() {
						var _this2 = this;

						var count = 0;
						this.subscribed[count++] = this.ea.subscribe(this.eventPrefix + ':search:entered', function (searchStr) {
							_this2.pushToSearchQueue(searchStr);
							_this2.ea.publish(_this2.eventPrefix + '-search:text');
						});
					}
				}, {
					key: 'fetchFromServer',
					value: function fetchFromServer(params) {
						var _this3 = this;

						this.topicRequestService.getTopicRooms(this.topicuuid, params).then(function (response) {
							_this3.fetching = false;
							if (typeof response.response == 'string') {
								response = JSON.parse(response.response);
							}

							if (response.status == 200) {
								_this3.updateTopicRooms(response.data.rooms);
								_this3.totalEntries = response.data.total_entries || 0;
							}

							_this3.fetchForSearch();
						})['catch'](function (errorResponse) {
							_this3.fetching = false;
							_this3.fetchForSearch();
							_this3.showDetailsErrorResponse(errorResponse);
						});
					}
				}, {
					key: 'updateTopicRooms',
					value: function updateTopicRooms() {
						var rooms = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

						this.items.push.apply(this.items, rooms);
					}
				}]);

				var _MapRooms = MapRooms;
				MapRooms = inject(TopicRequestService, EventAggregator)(MapRooms) || MapRooms;
				return MapRooms;
			}(Listing);

			_export('MapRooms', MapRooms);
		}
	};
});
System.registerDynamic("view-models/topics/profile/topic-mappings/rooms/topic-room-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n       <div class=\"card-header-content\">\n          <div class=\"card-select\">\n             <input type=\"checkbox\" id=\"${entity.uuid}\">\n             <label for=\"${entity.uuid}\">\n                <div>M</div>\n             </label>\n          </div>\n          <div class=\"card-click\">\n             <div class=\"font-lg font-light clamp default-cursor\" title=\"${entity.name}\">${entity.name}</div>\n          </div>\n       </div>\n    </div>\n    <div class=\"card-content\">\n       <div class=\"card-detail-content\">\n          <div class=\"card-detail\">\n             <label class=\"font-xs\" i18n=\"topics.profile.topicRoomCard.capacity\"></label>\n             <span class=\"font-lg\">${entity.capacity}</span>\n          </div>\n          <!-- <div class=\"card-detail count\">\n            <label class=\"font-xs\" i18n=\"topics.profile.topicRoomCard.facility\"></label>\n            <div class=\"item-section\">\n                <div class=\"section-count icon-box jif-dark-grey\">\n                    <i class=\"jif-coffee\"></i>\n                    <div class=\"font-8\" i18n=\"topics.profile.topicRoomCard.coffee\"></div>\n                </div>\n                <div class=\"section-count icon-box jif-dark-grey\">\n                    <i class=\"jif-mic\"></i>\n                    <div class=\"font-8\" i18n=\"topics.profile.topicRoomCard.mic\"></div>\n                </div>\n                <div class=\"section-count icon-box jif-dark-grey\">\n                    <i class=\"jif-projector\"></i>\n                    <div class=\"font-8\" i18n=\"topics.profile.topicRoomCard.projector\"></div>\n                </div>\n            </div>\n          </div> -->\n       </div>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"card-footer-content text-center\">\n        <div class=\"font-xs\">Last updated on ${entity.updated_at}</div>\n      </div>\n    </div>\n    <!-- Map Overlay -->\n    <div class=\"card-overlay\">\n      <div class=\"card-overlay-content\">\n        <div class=\"card-overlay-action dark-bg\">\n          <a href=\"javascript:void(0)\" class=\"btn btn-blue btn-block reinvite-user\" click.trigger=\"toggleMapping()\">\n          ${entity.mapped ? 'Unmap': 'Map'}\n           <!-- i18n=\"topics.mappings[entity.mapped ? 'unmap': 'map']\" -->\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n";
});
System.register('view-models/topics/profile/topic-mappings/rooms/topic-room-card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/topic_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'components/topic-entities-mapping/topic-entities-map-unmap.js'], function (_export) {
  'use strict';

  var inject, bindable, EventAggregator, TopicRequestService, I18N, TopicEntitiesMapUnmap, TopicRoomCard;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_componentsTopicEntitiesMappingTopicEntitiesMapUnmap) {
      TopicEntitiesMapUnmap = _componentsTopicEntitiesMappingTopicEntitiesMapUnmap.TopicEntitiesMapUnmap;
    }],
    execute: function () {
      TopicRoomCard = function (_TopicEntitiesMapUnmap) {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _inherits(TopicRoomCard, _TopicEntitiesMapUnmap);

        _createDecoratedClass(TopicRoomCard, [{
          key: 'entity',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'topicuuid',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function TopicRoomCard(topicRequestService, ea, i18n) {
          _classCallCheck(this, _TopicRoomCard);

          _get(Object.getPrototypeOf(_TopicRoomCard.prototype), 'constructor', this).call(this, topicRequestService, ea, i18n);

          _defineDecoratedPropertyDescriptor(this, 'entity', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'topicuuid', _instanceInitializers);

          this.entities = ['mapped_rooms', 'unmapped_rooms'];
        }

        _createDecoratedClass(TopicRoomCard, [{
          key: 'attached',
          value: function attached() {
            $clamp($('#' + this.entity.uuid).closest('.card-header-content').find('.clamp')[0], { clamp: 3, useNativeClamp: true });
          }
        }], null, _instanceInitializers);

        var _TopicRoomCard = TopicRoomCard;
        TopicRoomCard = inject(TopicRequestService, EventAggregator, I18N)(TopicRoomCard) || TopicRoomCard;
        return TopicRoomCard;
      }(TopicEntitiesMapUnmap);

      _export('TopicRoomCard', TopicRoomCard);
    }
  };
});
System.registerDynamic("view-models/topics/profile/topic-mappings/users/map-users.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n\t<require from=\"./topic-user-card\"></require>\n\t<require from=\"components/page-nav\"></require>\n\t<require from=\"components/notification/notification-modal\"></require>\n\n\t<page-nav items.bind=\"totalEntries\" enable-search.bind=\"true\" event-prefix=\"${eventPrefix}\" show-filter-option.bind=\"false\" containerless>\n\t</page-nav>\n\t<div class=\"page-pad-top page-pad-bottom\">\n\t\t<div class=\"container-fluid\">\n\t\t  \t<form class=\"form jiffle-form bottom-margin\">\n\t\t  \t\t<div class=\"form-group-display\">\n\t\t  \t\t\t<div class=\"text-lg\">${topic.name}</div>\n\t\t  \t\t</div>\n\t\t  \t</form>\n\t\t</div>\n\t  \t<div class=\"container-fluid listing-page\">\n\t\t\t<div class=\"card-container user users-list ${viewStyle}\">\n\t\t\t\t<topic-user-card class=\"${$parent.itemStyle} item au-stagger\" repeat.for=\"user of items\" entity.bind=\"user\" topicuuid=\"${$parent.topicuuid}\" containerless></topic-user-card>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- <div class=\"bulk-action button-bar navbar-fixed-bottom hide\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-xs-12\">\n\t\t\t\t    <button class=\"btn btn-blue col-xs-6 col-sm-3\" >Remove Selected</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div> -->\n\t<notification-modal></notification-modal>\n</template>\n";
});
System.register('components/infiniteScroll.js', ['npm:jquery@2.2.4.js'], function (_export) {
  'use strict';

  var $, InfiniteScroll;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_jquery) {
      $ = _jquery['default'];
    }],
    execute: function () {
      InfiniteScroll = function () {
        function InfiniteScroll() {
          _classCallCheck(this, InfiniteScroll);

          this.overscroll = _.debounce(function (e) {
            var _config = this.config;
            var _config$domElement = _config.domElement;
            var domElement = _config$domElement === undefined ? window : _config$domElement;
            var direction = _config.direction;
            var offset = _config.offset;

            if (this.hasOverScrolled(domElement, offset, direction)) {
              this.fetchMoreItems();
            }
          }.bind(this), 400);
        }

        _createClass(InfiniteScroll, [{
          key: 'attachScrollToElement',
          value: function attachScrollToElement(config) {
            this.config = config;
            var domElement = config.domElement || window;
            $(domElement).on('scroll', this.overscroll);
          }
        }, {
          key: 'dettachScrollToElement',
          value: function dettachScrollToElement(config) {
            var domElement = config.domElement || window;
            $(domElement).off('scroll', this.overscroll);
          }
        }, {
          key: 'hasOverScrolled',
          value: function hasOverScrolled(ele, offset, direction) {
            var _beforeScrollThreshold = undefined;
            var _scrollLimit = undefined;
            var $this = $(ele);

            if (direction === 'vertical') {
              _beforeScrollThreshold = $this.scrollTop() + offset;
              if (ele === window) {
                _scrollLimit = $(document).height() - $this.height();
              } else {
                _scrollLimit = ele.scrollHeight - $this.height();
              }
            } else {
              _beforeScrollThreshold = $this.scrollLeft() + offset;
              if (ele === window) {
                _scrollLimit = $(document).width() - $this.width();
              } else {
                _scrollLimit = ele.scrollWidth - $this.width();
              }
            }

            return _beforeScrollThreshold >= _scrollLimit;
          }
        }]);

        return InfiniteScroll;
      }();

      _export('InfiniteScroll', InfiniteScroll);
    }
  };
});
System.register('components/listing.js', ['components/infiniteScroll.js'], function (_export) {
  'use strict';

  var InfiniteScroll, Listing;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  return {
    setters: [function (_infiniteScroll) {
      InfiniteScroll = _infiniteScroll.InfiniteScroll;
    }],
    execute: function () {
      Listing = function (_InfiniteScroll) {
        _inherits(Listing, _InfiniteScroll);

        function Listing(ea, eventPrefix) {
          _classCallCheck(this, Listing);

          _get(Object.getPrototypeOf(Listing.prototype), 'constructor', this).call(this);

          this.ea = ea;
          this.eventPrefix = eventPrefix;
          this.items = [];
          this.perPage = 10;
          this.searchString = '';
          this.filters = {};
          this.gridViewStyleName = 'tile-view';
          this.listViewStyleName = 'list-view';
          this.viewStyle = this.gridViewStyleName;
          this.reset = true;
          this.dirtyCount = 0;
          this.newItems = [];
          this.filtersApplied = [];
          this.allSubscribes = [];
          this.searchQueue = [];

          this.subscribeToEvents();
        }

        _createClass(Listing, [{
          key: 'attached',
          value: function attached(opts) {
            this.fetchFiltersMetaData();
            if (!opts || opts.from !== 'briefing_list') {
              var defaultOpts = {
                domElement: window,
                direction: 'vertical',
                offset: 200
              };
              this.attachScrollToElement(Object.assign(defaultOpts, opts));
            }
          }
        }, {
          key: 'fetchFiltersMetaData',
          value: function fetchFiltersMetaData() {
            this.getListing();
          }
        }, {
          key: 'removeFilter',
          value: function removeFilter(filter) {}
        }, {
          key: 'detached',
          value: function detached(opts) {
            var defaultOpts = {
              domElement: window,
              direction: 'vertical',
              offset: 200
            };
            this.dettachScrollToElement(Object.assign(defaultOpts, opts));
          }
        }, {
          key: 'getListing',
          value: function getListing() {
            this.fetching = true;
            var page = this.getNextPageToFetch();
            var params = Object.assign({ page: page, per_page: this.perPage, search: this.searchString }, this.filters);

            params.storable_filters = params.storable_filters ? JSON.parse(params.storable_filters) : {};
            params.briefing_invitees = [];
            params.storable_filters.briefing_invitees = [];
            if (this.filters.briefing_external_invitees && this.filters.briefing_external_invitees.length) {
              params.briefing_invitees = params.briefing_invitees.concat(this.filters.briefing_external_invitees);
              params.storable_filters.briefing_invitees = params.storable_filters.briefing_invitees.concat(params.storable_filters.briefing_external_invitees);
            }
            if (this.filters.briefing_internal_invitees && this.filters.briefing_internal_invitees.length) {
              params.briefing_invitees = params.briefing_invitees.concat(this.filters.briefing_internal_invitees);
              params.storable_filters.briefing_invitees = params.storable_filters.briefing_invitees.concat(params.storable_filters.briefing_internal_invitees);
            }
            params.storable_filters.search = this.searchString;
            params.storable_filters = JSON.stringify(params.storable_filters);
            this.fetchFromServer(params);
          }
        }, {
          key: 'fetchMoreItems',
          value: function fetchMoreItems() {
            if (!this.isListRenderComplete()) {
              this.getListing();
            }
          }
        }, {
          key: 'isListRenderComplete',
          value: function isListRenderComplete() {
            return this.fetching || this.totalEntries && this.items.length - this.dirtyCount >= this.totalEntries + this.newItems.length;
          }
        }, {
          key: 'getNextPageToFetch',
          value: function getNextPageToFetch() {
            return Math.ceil((this.items.length - this.dirtyCount) / this.perPage) + 1;
          }
        }, {
          key: 'fetchFromServer',
          value: function fetchFromServer(params) {}
        }, {
          key: 'pushToSearchQueue',
          value: function pushToSearchQueue(value) {
            this.searchQueue.push(value);
          }
        }, {
          key: 'popFromSearchQueue',
          value: function popFromSearchQueue() {
            return this.searchQueue.shift();
          }
        }, {
          key: 'isSearchQueueEmpty',
          value: function isSearchQueueEmpty() {
            return this.searchQueue.length === 0;
          }
        }, {
          key: 'clearSearchQueue',
          value: function clearSearchQueue() {
            this.searchQueue.length = 0;
          }
        }, {
          key: 'fetchForSearch',
          value: function fetchForSearch() {
            if (!this.isSearchQueueEmpty() && !this.fetching) {
              this.searchString = this.popFromSearchQueue();
              if (this.filters.hasOwnProperty('search')) {
                this.filters.search = this.searchString;
              }
              this.resetAndList();
            }
          }
        }, {
          key: 'subscribeToEvents',
          value: function subscribeToEvents() {
            var _this = this;

            var count = 0;
            this.ea.subscribe('toggle:grid', function (payload) {
              _this.switchToGridView();
            });

            this.ea.subscribe('toggle:list', function (payload) {
              _this.switchToListView();
            });

            this.ea.subscribe('export:export', function () {
              _this.exportListing();
            });

            var searchEvent = this.eventPrefix + '-search:text';
            this.ea.subscribe(searchEvent, function (payload) {
              _this.fetchForSearch();
            });

            var filterRendered = this.eventPrefix + '-filters:rendered';
            this.allSubscribes[count++] = this.ea.subscribe(filterRendered, function (filterRef) {
              _this.filters = _this.getAppliedFilterSet(filterRef);
              _this.getListing();
              _this.setFilterGrid();
            });

            var filterApply = this.eventPrefix + '-filter:apply';
            this.allSubscribes[count++] = this.ea.subscribe(filterApply, function (filterRef) {
              _this.filters = _this.getAppliedFilterSet(filterRef);
              _this.setFilterGrid();
              _this.resetAndList();
            });

            var filtersReset = this.eventPrefix + '-filter:reset';
            this.allSubscribes[count++] = this.ea.subscribe(filtersReset, function (filterPanel) {
              _this.filters = {};
              _this.filtersApplied = [];
              _this.searchString = '';
              _this.removeSelectedFilters(filterPanel);
              _this.setFilterGrid();
              _this.resetAndList();
            });

            var filterRemoved = this.eventPrefix + '-filter:removed';
            this.allSubscribes[count++] = this.ea.subscribe(filterRemoved, function (filter) {
              _this.removeFilter(filter);
              _this.setFilterGrid();
              _this.resetAndList();
            });

            this.allSubscribes[count++] = this.ea.subscribe('export:topic', function (filter) {
              _this.exportFromServer(_.assign({ type: $('input[name=topics]:checked').val() }, _this.filters, { search: _this.searchString }));
            });
          }
        }, {
          key: 'getAppliedFilterSet',
          value: function getAppliedFilterSet(filterRef) {
            return this.filters;
          }
        }, {
          key: 'removeSelectedFilters',
          value: function removeSelectedFilters() {}
        }, {
          key: 'getAppliedFilters',
          value: function getAppliedFilters() {
            return this.filtersApplied;
          }
        }, {
          key: 'setFilterGrid',
          value: function setFilterGrid() {
            var filtersApplied = this.eventPrefix + '-filters:applied';
            this.ea.publish(filtersApplied, this.getAppliedFilters());
          }
        }, {
          key: 'switchToGridView',
          value: function switchToGridView() {
            this.viewStyle = this.gridViewStyleName;
            this.itemStyle = 'col-md-3 col-sm-4';
          }
        }, {
          key: 'switchToListView',
          value: function switchToListView() {
            this.viewStyle = this.listViewStyleName;
            this.itemStyle = 'col-md-12';
          }
        }, {
          key: 'exportListing',
          value: function exportListing() {}
        }, {
          key: 'resetAndList',
          value: function resetAndList() {
            this.items = [];
            this.totalEntries = undefined;
            this.dirtyCount = 0;
            this.newItems = [];
            this.getListing();
          }
        }, {
          key: 'applyFilters',
          value: function applyFilters() {
            this.items = [];
            this.filters = filters;
            this.getListing();
          }
        }, {
          key: 'showDetailsErrorResponse',
          value: function showDetailsErrorResponse(errorResponse) {
            if (typeof errorResponse.response === 'string') {
              errorResponse = JSON.parse(errorResponse.response);
            }
            var errorMsgs = undefined;
            if (errorResponse.errors.details) {
              errorMsgs = _.flatten(_.values(errorResponse.errors.details)).join('</br>');
            } else {
              errorMsgs = errorResponse.errors.message;
            }

            this.ea.publish('show:notification', {
              title: 'Failure!',
              message: errorMsgs,
              'class': 'red'
            });
          }
        }]);

        return Listing;
      }(InfiniteScroll);

      _export('Listing', Listing);
    }
  };
});
System.register('view-models/topics/profile/topic-mappings/users/map-users.js', ['npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/topic_request_service.js', 'components/listing.js', 'models/user.js', 'github:lodash/lodash@3.10.1.js'], function (_export) {
	'use strict';

	var EventAggregator, inject, bindable, TopicRequestService, Listing, User, _, MapUsers;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x2, _x3, _x4) {
		var _again = true;_function: while (_again) {
			var object = _x2,
			    property = _x3,
			    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}, function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
			bindable = _aureliaFramework.bindable;
		}, function (_serviceTopic_request_service) {
			TopicRequestService = _serviceTopic_request_service.TopicRequestService;
		}, function (_componentsListing) {
			Listing = _componentsListing.Listing;
		}, function (_modelsUser) {
			User = _modelsUser.User;
		}, function (_lodashLodash) {
			_ = _lodashLodash['default'];
		}],
		execute: function () {
			MapUsers = function (_Listing) {
				_inherits(MapUsers, _Listing);

				function MapUsers(topicRequestService, ea) {
					_classCallCheck(this, _MapUsers);

					_get(Object.getPrototypeOf(_MapUsers.prototype), 'constructor', this).call(this, ea, "mapped-users");
					this.subscribed = [];
					this.topicRequestService = topicRequestService;
					this.viewStyle = this.gridViewStyleName;
					this.subscribeToTopicUserEvents();
				}

				_createClass(MapUsers, [{
					key: 'activate',
					value: function activate(params, routeConfig, options) {
						var _this = this;

						if (params.uuid) {
							this.topicuuid = params.uuid;

							this.topicRequestService.getTopicDetails(this.topicuuid).then(function (response) {
								if (typeof response.response == 'string') {
									response = JSON.parse(response.response);
								}
								if (response.status === 200) {
									_this.topic = response.data.topic;
								}
							})['catch'](function (errorResponse) {
								_this.showDetailsErrorResponse(errorResponse);
							});
						}
					}
				}, {
					key: 'detached',
					value: function detached() {
						_get(Object.getPrototypeOf(_MapUsers.prototype), 'detached', this).call(this);
						if (this.subscribed) {
							this.subscribed.forEach(function (sub) {
								return sub.dispose && sub.dispose();
							});
						}
					}
				}, {
					key: 'attached',
					value: function attached() {
						_get(Object.getPrototypeOf(_MapUsers.prototype), 'attached', this).call(this);
						this.items = [];
					}
				}, {
					key: 'subscribeToTopicUserEvents',
					value: function subscribeToTopicUserEvents() {
						var _this2 = this;

						var count = 0;
						this.subscribed[count++] = this.ea.subscribe(this.eventPrefix + ':search:entered', function (searchStr) {
							_this2.pushToSearchQueue(searchStr);
							_this2.ea.publish(_this2.eventPrefix + '-search:text');
						});
					}
				}, {
					key: 'fetchFromServer',
					value: function fetchFromServer(params) {
						var _this3 = this;

						this.topicRequestService.getTopicUsers(this.topicuuid, params).then(function (response) {
							_this3.fetching = false;
							if (typeof response.response == 'string') {
								response = JSON.parse(response.response);
							}
							if (response.status == 200) {
								_this3.updateTopicUsers(response.data.users);
								_this3.totalEntries = response.data.total_entries || 0;
							}
							_this3.fetchForSearch();
						})['catch'](function (errorResponse) {
							_this3.fetching = false;
							_this3.fetchForSearch();
							_this3.showDetailsErrorResponse(errorResponse);
						});
					}
				}, {
					key: 'updateTopicUsers',
					value: function updateTopicUsers() {
						var usersData = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

						var users = usersData.map(function (user) {
							return new User(user);
						});
						this.items.push.apply(this.items, users);
					}
				}]);

				var _MapUsers = MapUsers;
				MapUsers = inject(TopicRequestService, EventAggregator)(MapUsers) || MapUsers;
				return MapUsers;
			}(Listing);

			_export('MapUsers', MapUsers);
		}
	};
});
System.registerDynamic("view-models/topics/profile/topic-mappings/users/topic-user-card.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"card user-list-item\">\n    <div class=\"card-header\">\n      <div class=\"card-header-content\">\n        <div class=\"card-select\">\n          <input type=\"checkbox\" id=\"${entity.uuid}\" value=\"\" name=\"selectableCard\">\n          <label for=\"${entity.uuid}\">\n            <div>\n              <i class=\"jif-user jif-light-grey jif-18\"></i>\n            </div>\n          </label>\n        </div>\n        <div class=\"card-click\">\n            <div class=\"font-lg font-light clamp default-cursor\" title=\"${entity.name}\">${entity.name | sanitizeHTML}</div>\n            <div class=\"font-lg\">${entity.role.display_name}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-content\">\n      <div class=\"card-detail-content\">\n        <div class=\"card-detail card-title\">\n          <label class=\"font-sm\" i18n=\"topics.profile.topicUserCard.title\"></label>\n          <span class=\"font-lg\">${entity.title | sanitizeHTML}</span>\n        </div>\n        <div>\n          <div class=\"card-detail\">\n            <label class=\"font-sm\" i18n=\"topics.profile.topicUserCard.email\"></label>\n            <span class=\"font-sm font-blue text-underline\" data-placement=\"bottom\">${entity.email}</span>\n          </div>\n          <div class=\"card-detail\">\n            <label class=\"font-sm\" i18n=\"topics.profile.topicUserCard.phone\"></label>\n            <span class=\"font-sm font-blue font-semi-bold\">${entity.contact_no}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Map Overlay -->\n    <div class=\"card-overlay\">\n      <div class=\"card-overlay-content\">\n        <div class=\"card-overlay-action dark-bg\">\n          <a href=\"javascript:void(0)\" class=\"btn btn-blue btn-block reinvite-user\" click.trigger=\"toggleMapping()\">\n          ${entity.mapped ? 'Unmap': 'Map'}\n           <!-- i18n=\"topics.mappings[entity.mapped ? 'unmap': 'map']\" -->\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n";
});
System.register('service/topic_request_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
    'use strict';

    var HttpRequest, inject, API, TopicRequestService;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_utilsRequest) {
            HttpRequest = _utilsRequest.HttpRequest;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            TopicRequestService = function () {
                function TopicRequestService(httpRequest, Api) {
                    _classCallCheck(this, _TopicRequestService);

                    this.userListUrl = '';
                    this.requestorListUrl = '';
                    this.roomListUrl = '';
                    this.topicsUrl = '';
                    this.eventListUrl = '';
                    this.activityListUrl = '';

                    this.httpRequest = httpRequest;
                    this.api = Api;

                    this.requestorListUrl = this.api.getRelativeBasePath() + this.api.topicRequestors;
                    this.activityListUrl = this.api.getRelativeBasePath() + this.api.activities;
                    this.roomListUrl = this.api.getRelativeBasePath() + this.api.topicRoomList;

                    this.topicsUrl = this.api.getBaseUrl() + this.api.getTopics;
                    this.eventListUrl = this.api.getPortalAbsolutePath() + this.api.topicEnabledEvents;

                    this.userListUrl = this.api.getBaseUrl() + this.api.userList;
                }

                _createClass(TopicRequestService, [{
                    key: 'getTopicsList',
                    value: function getTopicsList(params) {
                        var topicListUrl = this.api.getBaseUrl() + this.api.getTopics;
                        return this.httpRequest.createGetRequest(topicListUrl, params);
                    }
                }, {
                    key: 'checkTopic',
                    value: function checkTopic(topicName) {
                        var param = { name: topicName };
                        var checkTopicUrl = this.api.getRelativeBasePath() + this.api.topicAvailable;
                        return this.httpRequest.createGetRequest(checkTopicUrl, param);
                    }
                }, {
                    key: 'createTopic',
                    value: function createTopic(data) {
                        var newTopicUrl = this.api.getRelativeBasePath() + this.api.createTopic;
                        return this.httpRequest.createPostRequest(newTopicUrl, data);
                    }
                }, {
                    key: 'updateTopicRequest',
                    value: function updateTopicRequest(data) {
                        var updateTopicUrl = this.api.getRelativeBasePath() + this.api.updateTopic;
                        updateTopicUrl = updateTopicUrl.replace('{uuid}', data.uuid);
                        return this.httpRequest.createPutRequest(updateTopicUrl, data);
                    }
                }, {
                    key: 'getTopicDetails',
                    value: function getTopicDetails(uuid) {
                        var topicDetailUrl = this.api.getRelativeBasePath() + this.api.topicDetails;
                        topicDetailUrl = topicDetailUrl.replace('{uuid}', uuid);
                        return this.httpRequest.createGetRequest(topicDetailUrl);
                    }
                }, {
                    key: 'getExportUrl',
                    value: function getExportUrl(params) {
                        return this.api.getRelativeBasePath() + this.api.exportTopic;
                    }
                }, {
                    key: 'updateTopic',
                    value: function updateTopic(data) {
                        return this.updateTopicRequest(data);
                    }
                }, {
                    key: 'deleteTopic',
                    value: function deleteTopic(data) {
                        return this.updateTopicRequest(data);
                    }
                }, {
                    key: 'getTopicUsers',
                    value: function getTopicUsers(topicUuid, params) {
                        var topicUsersUrl = this.api.getRelativeBasePath() + this.api.topicUsers;
                        topicUsersUrl = topicUsersUrl.replace('{uuid}', topicUuid);
                        return this.httpRequest.createGetRequest(topicUsersUrl, params);
                    }
                }, {
                    key: 'getTopicRooms',
                    value: function getTopicRooms(topicUuid, params) {
                        var topicRoomUrl = this.api.getRelativeBasePath() + this.api.topicRooms;
                        topicRoomUrl = topicRoomUrl.replace('{uuid}', topicUuid);
                        return this.httpRequest.createGetRequest(topicRoomUrl, params);
                    }
                }, {
                    key: 'getTopicActivities',
                    value: function getTopicActivities(topicUuid, params) {
                        var topicRoomUrl = this.api.getRelativeBasePath() + this.api.topicActivities;
                        topicRoomUrl = topicRoomUrl.replace('{uuid}', topicUuid);
                        return this.httpRequest.createGetRequest(topicRoomUrl, params);
                    }
                }, {
                    key: 'getTopicEvents',
                    value: function getTopicEvents(topicUuid, params) {
                        var topicRoomUrl = this.api.getPortalAbsolutePath() + this.api.topicEvents;
                        topicRoomUrl = topicRoomUrl.replace('{uuid}', topicUuid);
                        return this.httpRequest.createGetRequest(topicRoomUrl, params);
                    }
                }, {
                    key: 'mapUnmapEntities',
                    value: function mapUnmapEntities(params) {
                        var mapUnmapEntitiesUrl = this.api.getRelativeBasePath() + this.api.updateTopic;
                        mapUnmapEntitiesUrl = mapUnmapEntitiesUrl.replace('{uuid}', params.uuid);
                        return this.httpRequest.createPutRequest(mapUnmapEntitiesUrl, params);
                    }
                }, {
                    key: 'getTopicLocations',
                    value: function getTopicLocations(topicUuid, params) {
                        var topicRoomUrl = this.api.getPortalAbsolutePath() + this.api.topicLocations;
                        topicRoomUrl = topicRoomUrl.replace('{uuid}', topicUuid);
                        return this.httpRequest.createGetRequest(topicRoomUrl, params);
                    }
                }]);

                var _TopicRequestService = TopicRequestService;
                TopicRequestService = inject(HttpRequest, API)(TopicRequestService) || TopicRequestService;
                return TopicRequestService;
            }();

            _export('TopicRequestService', TopicRequestService);
        }
    };
});
System.register('components/topic-entities-mapping/topic-entities-map-unmap.js', [], function (_export) {
    'use strict';

    var TopicEntitiesMapUnmap;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [],
        execute: function () {
            TopicEntitiesMapUnmap = function () {
                function TopicEntitiesMapUnmap(topicRequestService, ea, i18n) {
                    _classCallCheck(this, TopicEntitiesMapUnmap);

                    this.topicRequestService = topicRequestService;
                    this.ea = ea;
                    this.i18n = i18n;
                    this.i18n.setLocale('en').then(function () {});
                }

                _createClass(TopicEntitiesMapUnmap, [{
                    key: 'getMapOrUnmap',
                    value: function getMapOrUnmap() {
                        return this.entities[this.entity.mapped ^ 0];
                    }
                }, {
                    key: 'toggleMapping',
                    value: function toggleMapping() {
                        var _this = this;

                        var successMsg = '';
                        var params = { uuid: this.topicuuid };
                        params[this.getMapOrUnmap()] = this.entity.current_location_uuid ? [this.entity.current_location_uuid] : [this.entity.uuid];
                        if (envDetails.event && envDetails.event.uuid) {
                            params.mapped_locations = [envDetails.current_location_uuid];
                        }

                        this.entity.mapped = this.entity.mapped ^ true;
                        var operation = undefined,
                            prep = undefined;
                        if (this.entity.mapped) {
                            operation = this.i18n.tr('topics.mappings.mapped');
                            prep = this.i18n.tr('commons.to');
                        } else {
                            prep = this.i18n.tr('commons.from');
                            operation = this.i18n.tr('topics.mappings.unmapped');
                        }
                        this.topicRequestService.mapUnmapEntities(params).then(function (response) {
                            if (typeof response.response == "string") {
                                response = JSON.parse(response.response);
                            }
                            if (response.status === 200) {
                                var topic = response.data.topic.name;
                                _this.ea.publish("show:notification", {
                                    title: _this.i18n.tr('topics.mappings.save_success', { name: envDetails.currentUser.first_name }),
                                    message: _this.i18n.tr('topics.mappings.save_success_msg', { operation: operation, topic: topic, prep: prep, entity: _this.entity.name }),
                                    'class': 'green',
                                    autoHideDuration: 2000 });
                            }
                        })['catch'](function (errorResponse) {
                            var errors = JSON.parse(errorResponse.response).errors;
                            if (errors && errors.details) {
                                errors = errors.details;
                            }
                            var errorMsgs = [];
                            for (var errorType in errors) {
                                errorMsgs = errorMsgs.concat(errors[errorType]);
                            }
                            _this.entity.mapped = _this.entity.mapped ^ true;
                            _this.ea.publish("show:notification", {
                                title: _this.i18n.tr('topics.mappings.save_failure'),
                                message: errorMsgs.join(', '),
                                'class': 'red',
                                autoHideDuration: 2000,
                                onHide: function onHide() {}
                            });
                        });
                    }
                }]);

                return TopicEntitiesMapUnmap;
            }();

            _export('TopicEntitiesMapUnmap', TopicEntitiesMapUnmap);
        }
    };
});
System.register('view-models/topics/profile/topic-mappings/users/topic-user-card.js', ['npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'service/topic_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'components/topic-entities-mapping/topic-entities-map-unmap.js'], function (_export) {
  'use strict';

  var inject, bindable, EventAggregator, TopicRequestService, I18N, TopicEntitiesMapUnmap, TopicUserCard;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_serviceTopic_request_service) {
      TopicRequestService = _serviceTopic_request_service.TopicRequestService;
    }, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_componentsTopicEntitiesMappingTopicEntitiesMapUnmap) {
      TopicEntitiesMapUnmap = _componentsTopicEntitiesMappingTopicEntitiesMapUnmap.TopicEntitiesMapUnmap;
    }],
    execute: function () {
      TopicUserCard = function (_TopicEntitiesMapUnmap) {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _inherits(TopicUserCard, _TopicEntitiesMapUnmap);

        _createDecoratedClass(TopicUserCard, [{
          key: 'entity',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }, {
          key: 'topicuuid',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function TopicUserCard(topicRequestService, ea, i18n) {
          _classCallCheck(this, _TopicUserCard);

          _get(Object.getPrototypeOf(_TopicUserCard.prototype), 'constructor', this).call(this, topicRequestService, ea, i18n);

          _defineDecoratedPropertyDescriptor(this, 'entity', _instanceInitializers);

          _defineDecoratedPropertyDescriptor(this, 'topicuuid', _instanceInitializers);

          this.entities = ['mapped_users', 'unmapped_users'];
        }

        _createDecoratedClass(TopicUserCard, [{
          key: 'attached',
          value: function attached() {
            $clamp($('#' + this.entity.uuid).closest('.card-header-content').find('.clamp')[0], { clamp: 3, useNativeClamp: true });
          }
        }], null, _instanceInitializers);

        var _TopicUserCard = TopicUserCard;
        TopicUserCard = inject(TopicRequestService, EventAggregator, I18N)(TopicUserCard) || TopicUserCard;
        return TopicUserCard;
      }(TopicEntitiesMapUnmap);

      _export('TopicUserCard', TopicUserCard);
    }
  };
});
System.registerDynamic("view-models/topics/profile/topic-profile.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <nav class=\"navbar navbar-light nav-topic\" role=\"navigation\">\n    <div class=\"container-fluid\">\n      <ul class=\"nav navbar-nav nav-topic-list\">\n          <li >\n            <a href=\"javascript:void(0)\" click.delegate=\"goToTopicList()\" i18n=\"topics.commons.topics\"></a>\n          </li>\n          <li repeat.for=\"row of router.navigation\" class=\"${row.isActive ? 'active' : ''}\">\n            <a href=\"javascript:void(0)\" click.delegate=\"$parent.navigateToRoute(row.title)\">${row.title}</a>\n          </li>\n        </ul>\n    </div>\n  </nav>\n  <div class=\"page-host\">\n    <router-view></router-view>\n  </div>\n</template>\n";
});
System.register('view-models/topics/profile/topic-profile.js', ['github:twbs/bootstrap@3.3.6.js', 'npm:aurelia-i18n@0.4.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js'], function (_export) {
  'use strict';

  var I18N, inject, bindable, TopicProfile;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_bootstrap) {}, function (_aureliaI18n) {
      I18N = _aureliaI18n.I18N;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
      bindable = _aureliaFramework.bindable;
    }],
    execute: function () {
      TopicProfile = function () {
        function TopicProfile(i18n) {
          _classCallCheck(this, _TopicProfile);

          this.i18n = i18n;
          this.profileTitle = this.i18n.tr("topics.commons.profile");
          this.eventsTitle = this.i18n.tr("topics.commons.events");
          this.usersTitle = this.i18n.tr("topics.commons.users");
          this.roomsTitle = this.i18n.tr("topics.commons.rooms");
          this.activitiesTitle = this.i18n.tr("topics.commons.activities", { label: envDetails.meetingTypeCustomLabel });
          this.locationsTitle = this.i18n.tr("topics.commons.locations");
        }

        _createClass(TopicProfile, [{
          key: 'configureRouter',
          value: function configureRouter(config, router) {
            var routeArray = [{ route: ['', 'edit'], name: 'editTopic', moduleId: './edit-topic', nav: true, title: '' }];
            this.setInitialRoutes(routeArray);
            config.map(routeArray);
            this.router = router;
          }
        }, {
          key: 'setInitialRoutes',
          value: function setInitialRoutes(routeArray) {
            if (envDetails.topicUserMappingEnabled) {
              routeArray.push({ route: 'mapUsers', name: 'mapUsers', moduleId: './topic-mappings/users/map-users', nav: true, title: this.usersTitle });
            }
            switch (envDetails.topicTitle) {
              case 'Summit':
                {
                  if (envDetails.topicRoomMappingEnabled) {
                    routeArray.push({ route: 'mapRooms', name: 'mapRooms', moduleId: './topic-mappings/rooms/map-rooms', nav: true, title: this.roomsTitle });
                  }
                  if (envDetails.topicActivitiesMappingEnabled) {
                    routeArray.push({ route: 'mapActivities', name: 'mapActivities', moduleId: './topic-mappings/activities/map-activities', nav: true, title: this.activitiesTitle });
                  }
                  break;
                }
              case 'Portal':
                {
                  if (envDetails.topicEventsMappingEnabled) {
                    routeArray.push({ route: 'mapEvents', name: 'mapEvents', moduleId: './topic-mappings/events/map-events', nav: true, title: this.eventsTitle });
                  }
                  if (envDetails.ebc_locations.length) {
                    routeArray.push({ route: 'mapLocations', name: 'mapLocations', moduleId: './topic-mappings/locations/map-locations', nav: true, title: this.locationsTitle });
                  }
                  break;
                }
              default:
                break;
            }
          }
        }, {
          key: 'navigateToRoute',
          value: function navigateToRoute(routeTitle) {
            switch (routeTitle) {
              case this.profileTitle:
                this.router.navigateToRoute('editTopic');
                break;
              case this.usersTitle:
                this.router.navigateToRoute('mapUsers');
                break;
              case this.roomsTitle:
                this.router.navigateToRoute('mapRooms');
                break;
              case this.eventsTitle:
                this.router.navigateToRoute('mapEvents');
                break;
              case this.activitiesTitle:
                this.router.navigateToRoute('mapActivities');
                break;
              case this.locationsTitle:
                this.router.navigateToRoute('mapLocations');
                break;
              default:
                break;
            }
          }
        }, {
          key: 'goToTopicList',
          value: function goToTopicList() {
            var url = envDetails.jiffleRootUrl + envDetails.urlPrefix;
            url += url.charAt(url.length - 1) == '/' ? '' : '/';
            url += 'topics/topic_listing';

            if (envDetails.topicTitle == 'Summit') {
              url += '?current_location_uuid=' + envDetails.current_location.uuid;
            }

            window.location.href = url;
          }
        }]);

        var _TopicProfile = TopicProfile;
        TopicProfile = inject(I18N)(TopicProfile) || TopicProfile;
        return TopicProfile;
      }();

      _export('TopicProfile', TopicProfile);
    }
  };
});
System.registerDynamic("view-models/topics/topics-app.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n  <div class=\"page-host\">\n    <router-view></router-view>\n  </div>\n</template>\n";
});
System.registerDynamic("view-models/users/add-user.html!github:systemjs/plugin-text@0.0.2.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = "<template>\n<require from='utils/converters'></require>\n<div class=\"modal fade form-input-popup js-add-attendee-modal\" data-backdrop=\"static\" id=\"add-attendees-modal\" ref=\"usermodal\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"content\">\n      <div class=\"jiffle-panel\">\n        <div class=\"jiffle-panel-head\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n          <h1 i18n=\"users.addUser.formTitle\" class=\"block-display\"></h1>\n          <span class=\"hint\" i18n=\"users.addUser.hintText\"></span>\n        </div>\n        <div class=\"jiffle-panel-body\">\n          <form id=\"add-attendee-form\" class=\"jiffle-form\" role=\"form\" validate.bind=\"userValidation\">\n            <div class=\"form-group\" show.bind=\"currentUserTypePreferences.email.show\">\n              <label class=\"${currentUserTypePreferences.email.mandatory ? 'required': ''}\">\n                ${currentUserTypePreferences.email.display_name}\n              </label>\n              <input type=\"email\" id=\"email\" name=\"email\" class=\"form-control input-lg\" value.two-way=\"external.email | textTrim\" placeholder=\"${currentUserTypePreferences.email.placeholder}\" validate=\"email\" required.bind=\"currentUserTypePreferences.email.mandatory\">\n              <span class=\"help-block form-builder-help-block\">${currentUserTypePreferences.email.help_text}</span>\n            </div>\n            <div class=\"form-group\" show.bind=\"currentUserTypePreferences.first_name.show\">\n              <label class=\"${currentUserTypePreferences.first_name.mandatory ? 'required': ''}\">\n                ${currentUserTypePreferences.first_name.display_name}\n              </label>\n              <input type=\"text\" id=\"first_name\" name=\"first_name\" class=\"form-control input-lg\" value.two-way=\"external.first_name\" placeholder=\"${currentUserTypePreferences.first_name.placeholder}\" readonly.bind=\"existing && (external.first_name || !currentUserTypePreferences.first_name.mandatory)\" validate=\"first_name\" required.bind=\"currentUserTypePreferences.first_name.mandatory\">\n              <span class=\"help-block form-builder-help-block\">${currentUserTypePreferences.first_name.help_text}</span>\n            </div>\n            <div class=\"form-group\" show.bind=\"currentUserTypePreferences.last_name.show\">\n              <label class=\"${currentUserTypePreferences.last_name.mandatory ? 'required': ''}\">${currentUserTypePreferences.last_name.display_name}</label>\n              <input type=\"text\" id=\"last_name\" name=\"last_name\" class=\"form-control input-lg\" value.two-way=\"external.last_name\" placeholder=\"${currentUserTypePreferences.last_name.placeholder}\" readonly.bind=\"existing && (external.last_name || !currentUserTypePreferences.last_name.mandatory)\" validate=\"last_name\" required.bind=\"currentUserTypePreferences.last_name.mandatory\">\n              <span class=\"help-block form-builder-help-block\">${currentUserTypePreferences.last_name.help_text}</span>\n            </div>\n            <div class=\"form-group\" show.bind=\"currentUserTypePreferences.contact_no.show\">\n              <label class=\"${currentUserTypePreferences.contact_no.mandatory ? 'required': ''}\" i18n=\"users.addUser.phone\">${currentUserTypePreferences.contact_no.display_name}</label>\n              <input type=\"text\" id=\"contact_no\" name=\"contact_no\" class=\"form-control input-lg\" value.two-way=\"external.contact_no\" validate=\"contact_no\" readonly.bind=\"existing && (external.contact_no || !currentUserTypePreferences.contact_no.mandatory)\" placeholder=\"${currentUserTypePreferences.contact_no.placeholder}\" required.bind=\"currentUserTypePreferences.contact_no.mandatory\">\n              <span class=\"help-block form-builder-help-block\">${currentUserTypePreferences.contact_no.help_text}</span>\n            </div>\n            <div class=\"form-group\" show.bind=\"currentUserTypePreferences.company_name.show\">\n              <label class=\"${currentUserTypePreferences.company_name.mandatory ? 'required': ''}\">\n                ${currentUserTypePreferences.company_name.display_name}\n              </label>\n              <input type=\"text\" required.bind=\"currentUserTypePreferences.company_name.mandatory\" id=\"company_name\" name=\"company_name\" class=\"form-control input-lg\" value.two-way=\"external.company_name\" validate=\"company_name\" readonly.bind=\"existing && (external.company_name || !currentUserTypePreferences.company_name.mandatory)\" placeholder=\"${currentUserTypePreferences.company_name.placeholder}\">\n              <span class=\"help-block form-builder-help-block\">${currentUserTypePreferences.company_name.help_text}</span>\n            </div>\n            <div class=\"form-group\" show.bind=\"currentUserTypePreferences.title.show\">\n              <label class=\"${currentUserTypePreferences.title.mandatory ? 'required': ''}\" i18n=\"users.addUser.title\"></label>\n              <input type=\"text\" id=\"title\" required.bind=\"currentUserTypePreferences.title.mandatory\" name=\"title\" class=\"form-control input-lg\" value.two-way=\"external.title\" validate=\"title\" placeholder=\"${currentUserTypePreferences.title.placeholder}\" readonly.bind=\"existing && (external.title || !currentUserTypePreferences.title.mandatory)\">\n              <span class=\"help-block form-builder-help-block\">${currentUserTypePreferences.title.help_text}</span>\n            </div>\n          </form>\n          <form ref=\"internalCustomFieldsForm\" style=\"padding: 0 18px;\">\n            <div ref='internalCustomForm' show.bind=\"userType === 'internal'\"></div>\n          </form>\n          <form ref=\"externalCustomFieldsForm\" style=\"padding: 0 18px;\">\n            <div ref='externalCustomForm' show.bind=\"userType === 'external'\"></div>\n          </form>\n          <div class=\"form-group toggle-switch-m\" style=\"padding: 0 18px;\" if.bind=\"enableContactToSync\">\n            <div class=\"row\">\n              <div class=\"col-xs-8\">\n                <label i18n=\"users.addUser.syncContact\"></label>\n              </div>\n              <div class=\"col-xs-4\">\n                <div class=\"toggle-switch\">\n                  <input type=\"checkbox\" name=\"sync_contact\" checked.two-way=\"external.sync_contact\" id=\"sync_sfdc_contact\">\n                  <label for=\"sync_sfdc_contact\"></label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div if.bind=\"captureConsent\" class=\"termsandcondition ${consentMandatory ? 'required' : ''}\">\n            <div class=\"checkbox\">\n              <input type=\"checkbox\" name=\"consent\" id=\"consent\" checked.bind=\"consentChecked\">\n              <label for=\"consent\" innerHTML.bind=\"addUserConsentMessage\"></label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <button type=\"button\" disabled.bind=\"isInsert\" class=\"btn btn-lg btn-block btn-blue\" id=\"add_attendee\" click.trigger=\"insert()\" i18n=\"users.addUser.btnText\"></button>\n          </div>\n        </div>\n        <div class=\"jiffle-panel-footer privacy-fw\">\n          <div class=\"foot-privacypolicy\" i18n=\"[html]optInMessages.addUserPrivacyMessage\"> \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n";
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation.js", ["exports", "npm:aurelia-binding@1.0.0-beta.1.0.2.js", "npm:aurelia-validation@0.6.0/validation-group.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-validation@0.6.0/validation-config.js"], function(exports, _aureliaBinding, _validationGroup, _aureliaDependencyInjection, _validationConfig) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Validation = (function() {
    function Validation(observerLocator, validationConfig) {
      _classCallCheck(this, _Validation);
      this.observerLocator = observerLocator;
      this.config = validationConfig ? validationConfig : Validation.defaults;
    }
    Validation.prototype.on = function on(subject, configCallback) {
      var conf = new _validationConfig.ValidationConfig(this.config);
      if (configCallback !== null && configCallback !== undefined && typeof configCallback === 'function') {
        configCallback(conf);
      }
      return new _validationGroup.ValidationGroup(subject, this.observerLocator, conf);
    };
    Validation.prototype.onBreezeEntity = function onBreezeEntity(breezeEntity, configCallback) {
      var validation = this.on(breezeEntity, configCallback);
      validation.onBreezeEntity();
      return validation;
    };
    var _Validation = Validation;
    Validation = _aureliaDependencyInjection.inject(_aureliaBinding.ObserverLocator)(Validation) || Validation;
    return Validation;
  })();
  exports.Validation = Validation;
  Validation.defaults = new _validationConfig.ValidationConfig();
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-rules-collection.js", ["exports", "npm:aurelia-validation@0.6.0/utilities.js", "npm:aurelia-validation@0.6.0/validation-locale.js"], function(exports, _utilities, _validationLocale) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationRulesCollection = (function() {
    function ValidationRulesCollection(config) {
      _classCallCheck(this, ValidationRulesCollection);
      this.isRequired = config ? config.getValue('allPropertiesAreMandatory') : false;
      this.validationRules = [];
      this.validationCollections = [];
      this.isRequiredMessage = null;
    }
    ValidationRulesCollection.prototype.validate = function validate(newValue, locale) {
      var executeRules = true;
      var thisMessage = undefined;
      var checks = undefined;
      if (locale === undefined) {
        locale = _validationLocale.ValidationLocale.Repository['default'];
      }
      newValue = _utilities.Utilities.getValue(newValue);
      if (this.isRequiredMessage) {
        thisMessage = typeof this.isRequiredMessage === 'function' ? this.isRequiredMessage(newValue) : this.isRequiredMessage;
      } else {
        thisMessage = locale.translate('isRequired');
      }
      if (_utilities.Utilities.isEmptyValue(newValue)) {
        if (this.isRequired) {
          return Promise.resolve({
            isValid: false,
            message: thisMessage,
            failingRule: 'isRequired',
            latestValue: newValue
          });
        }
        executeRules = false;
      }
      checks = Promise.resolve({
        isValid: true,
        message: '',
        failingRule: null,
        latestValue: newValue
      });
      if (executeRules) {
        this.validationRules.forEach(function(rule) {
          checks = checks.then(function(previousRuleResult) {
            if (previousRuleResult.isValid === false) {
              return previousRuleResult;
            }
            return rule.validate(newValue, locale).then(function(thisRuleResult) {
              if (thisRuleResult === false) {
                return {
                  isValid: false,
                  message: rule.explain(),
                  failingRule: rule.ruleName,
                  latestValue: newValue
                };
              }
              if (!previousRuleResult.isValid) {
                throw Error("ValidationRulesCollection.validate caught an unexpected result while validating it's chain of rules.");
              }
              return previousRuleResult;
            });
          });
        });
      }
      this.validationCollections.forEach(function(validationCollection) {
        checks = checks.then(function(previousValidationResult) {
          if (previousValidationResult.isValid) {
            return validationCollection.validate(newValue, locale);
          }
          return previousValidationResult;
        });
      });
      return checks;
    };
    ValidationRulesCollection.prototype.addValidationRule = function addValidationRule(validationRule) {
      if (validationRule.validate === undefined) {
        throw new Error("That's not a valid validationRule");
      }
      this.validationRules.push(validationRule);
    };
    ValidationRulesCollection.prototype.addValidationRuleCollection = function addValidationRuleCollection(validationRulesCollection) {
      this.validationCollections.push(validationRulesCollection);
    };
    ValidationRulesCollection.prototype.isNotEmpty = function isNotEmpty() {
      this.isRequired = true;
    };
    ValidationRulesCollection.prototype.canBeEmpty = function canBeEmpty() {
      this.isRequired = false;
    };
    ValidationRulesCollection.prototype.withMessage = function withMessage(message) {
      if (this.validationRules.length === 0) {
        this.isRequiredMessage = message;
      } else {
        this.validationRules[this.validationRules.length - 1].withMessage(message);
      }
    };
    return ValidationRulesCollection;
  })();
  exports.ValidationRulesCollection = ValidationRulesCollection;
  var SwitchCaseValidationRulesCollection = (function() {
    function SwitchCaseValidationRulesCollection(conditionExpression, config) {
      _classCallCheck(this, SwitchCaseValidationRulesCollection);
      this.conditionExpression = conditionExpression;
      this.config = config;
      this.innerCollections = [];
      this.defaultCollection = new ValidationRulesCollection(this.config);
      this.caseLabel = '';
      this.defaultCaseLabel = {description: 'this is the case label for \'default\''};
    }
    SwitchCaseValidationRulesCollection.prototype['case'] = function _case(caseLabel) {
      this.caseLabel = caseLabel;
      this.getCurrentCollection(caseLabel, true);
    };
    SwitchCaseValidationRulesCollection.prototype['default'] = function _default() {
      this.caseLabel = this.defaultCaseLabel;
    };
    SwitchCaseValidationRulesCollection.prototype.getCurrentCollection = function getCurrentCollection(caseLabel) {
      var createIfNotExists = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
      if (caseLabel === this.defaultCaseLabel) {
        return this.defaultCollection;
      }
      var currentCollection = null;
      for (var i = 0; i < this.innerCollections.length; i++) {
        currentCollection = this.innerCollections[i];
        if (currentCollection.caseLabel === caseLabel) {
          return currentCollection.collection;
        }
      }
      if (createIfNotExists) {
        currentCollection = {
          caseLabel: caseLabel,
          collection: new ValidationRulesCollection(this.config)
        };
        this.innerCollections.push(currentCollection);
        return currentCollection.collection;
      }
      return null;
    };
    SwitchCaseValidationRulesCollection.prototype.validate = function validate(newValue, locale) {
      var collection = this.getCurrentCollection(this.conditionExpression(newValue));
      if (collection !== null) {
        return collection.validate(newValue, locale);
      }
      return this.defaultCollection.validate(newValue, locale);
    };
    SwitchCaseValidationRulesCollection.prototype.addValidationRule = function addValidationRule(validationRule) {
      var currentCollection = this.getCurrentCollection(this.caseLabel, true);
      currentCollection.addValidationRule(validationRule);
    };
    SwitchCaseValidationRulesCollection.prototype.addValidationRuleCollection = function addValidationRuleCollection(validationRulesCollection) {
      var currentCollection = this.getCurrentCollection(this.caseLabel, true);
      currentCollection.addValidationRuleCollection(validationRulesCollection);
    };
    SwitchCaseValidationRulesCollection.prototype.isNotEmpty = function isNotEmpty() {
      var collection = this.getCurrentCollection(this.caseLabel);
      if (collection !== null) {
        collection.isNotEmpty();
      } else {
        this.defaultCollection.isNotEmpty();
      }
    };
    SwitchCaseValidationRulesCollection.prototype.canBeEmpty = function canBeEmpty() {
      var collection = this.getCurrentCollection(this.caseLabel);
      if (collection !== null) {
        collection.canBeEmpty();
      } else {
        this.defaultCollection.canBeEmpty();
      }
    };
    SwitchCaseValidationRulesCollection.prototype.withMessage = function withMessage(message) {
      var collection = this.getCurrentCollection(this.caseLabel);
      if (collection !== null) {
        collection.withMessage(message);
      } else {
        this.defaultCollection.withMessage(message);
      }
    };
    return SwitchCaseValidationRulesCollection;
  })();
  exports.SwitchCaseValidationRulesCollection = SwitchCaseValidationRulesCollection;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/path-observer.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var PathObserver = (function() {
    function PathObserver(observerLocator, subject, path) {
      _classCallCheck(this, PathObserver);
      this.observerLocator = observerLocator;
      this.path = path.split('.');
      this.subject = subject;
      this.observers = [];
      this.callbacks = [];
      if (this.path.length > 1) {
        this.observeParts();
      }
    }
    PathObserver.prototype.observeParts = function observeParts(propertyName) {
      var _this = this;
      var currentSubject = this.subject;
      var observersAreComplete = undefined;
      if (propertyName !== undefined && propertyName !== null) {
        for (var i = this.observers.length - 1; i >= 0; i--) {
          var currentObserver = this.observers[i];
          var observer = undefined;
          if (currentObserver.propertyName === propertyName) {
            break;
          }
          observer = this.observers.pop();
          if (observer && observer.subscription) {
            observer.subscription();
          }
        }
      }
      observersAreComplete = this.observers.length === this.path.length;
      var _loop = function(i) {
        var observer = _this.observers[i];
        var currentPath = _this.path[i];
        var subscription = undefined;
        var currentValue = undefined;
        if (!observer) {
          observer = _this.observerLocator.getObserver(currentSubject, currentPath);
          _this.observers.push(observer);
          subscription = observer.subscribe(function(newValue, oldValue) {
            _this.observeParts(observer.propertyName);
          });
          observer.subscription = subscription;
        }
        currentValue = observer.getValue();
        if (currentValue === undefined || currentValue === null) {
          return 'break';
        } else {
          currentSubject = currentValue;
        }
      };
      for (var i = 0; i < this.path.length; i++) {
        var _ret = _loop(i);
        if (_ret === 'break')
          break;
      }
      if (!observersAreComplete && this.observers.length === this.path.length) {
        var actualObserver = this.observers[this.observers.length - 1];
        for (var i = 0; i < this.callbacks.length; i++) {
          actualObserver.subscribe(this.callbacks[i]);
        }
      }
    };
    PathObserver.prototype.observePart = function observePart(part) {
      if (part !== this.path[this.path.length - 1]) {
        this.observeParts();
      }
    };
    PathObserver.prototype.getObserver = function getObserver() {
      if (this.path.length === 1) {
        this.subject[this.path[0]];
        return this.observerLocator.getObserver(this.subject, this.path[0]);
      }
      return this;
    };
    PathObserver.prototype.getValue = function getValue() {
      var expectedSubject = this.subject;
      for (var i = 0; this.path.length; i++) {
        var currentObserver = this.observers[i];
        if (currentObserver === null || currentObserver === undefined) {
          this.observeParts(this.path[i]);
          currentObserver = this.observers[i];
          if (currentObserver === null || currentObserver === undefined) {
            break;
          }
        }
        if (currentObserver.obj !== expectedSubject) {
          this.observeParts(this.path[i - 1]);
          break;
        }
        expectedSubject = currentObserver.getValue();
      }
      if (this.observers.length !== this.path.length) {
        return undefined;
      }
      var value = this.observers[this.observers.length - 1].getValue();
      return value;
    };
    PathObserver.prototype.subscribe = function subscribe(callback) {
      var _this2 = this;
      this.callbacks.unshift(callback);
      if (this.observers.length === this.path.length) {
        this.subscription = this.observers[this.observers.length - 1].subscribe(callback);
        return function() {
          return _this2.unsubscribe();
        };
      }
    };
    PathObserver.prototype.unsubscribe = function unsubscribe() {
      this.callbacks = [];
      if (this.subscription) {
        this.subscription();
      }
      for (var i = this.observers.length - 1; i >= 0; i--) {
        var observer = this.observers.pop();
        if (observer && observer.subscription) {
          observer.subscription();
        }
      }
    };
    return PathObserver;
  })();
  exports.PathObserver = PathObserver;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/debouncer.js", ["exports"], function(exports) {
  "use strict";
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var Debouncer = (function() {
    function Debouncer(debounceTimeout) {
      _classCallCheck(this, Debouncer);
      this.currentFunction = null;
      this.debounceTimeout = debounceTimeout;
    }
    Debouncer.prototype.debounce = function debounce(func) {
      var _this = this;
      this.currentFunction = func;
      setTimeout(function() {
        if (func !== null && func !== undefined) {
          if (func === _this.currentFunction) {
            _this.currentFunction = null;
            func();
          }
        }
      }, this.debounceTimeout);
    };
    return Debouncer;
  })();
  exports.Debouncer = Debouncer;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-property.js", ["exports", "npm:aurelia-validation@0.6.0/validation-rules-collection.js", "npm:aurelia-validation@0.6.0/path-observer.js", "npm:aurelia-validation@0.6.0/debouncer.js"], function(exports, _validationRulesCollection, _pathObserver, _debouncer) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationProperty = (function() {
    function ValidationProperty(observerLocator, propertyName, validationGroup, propertyResult, config) {
      var _this = this;
      _classCallCheck(this, ValidationProperty);
      this.propertyResult = propertyResult;
      this.propertyName = propertyName;
      this.validationGroup = validationGroup;
      this.collectionOfValidationRules = new _validationRulesCollection.ValidationRulesCollection(config);
      this.config = config;
      this.latestValue = undefined;
      this.observer = new _pathObserver.PathObserver(observerLocator, validationGroup.subject, propertyName).getObserver();
      this.debouncer = new _debouncer.Debouncer(config.getDebounceTimeout());
      this.subscription = this.observer.subscribe(function() {
        _this.debouncer.debounce(function() {
          var newValue = _this.observer.getValue();
          if (newValue !== _this.latestValue) {
            _this.validate(newValue, true);
          }
        });
      });
      this.dependencyObservers = [];
      var dependencies = this.config.getDependencies();
      for (var i = 0; i < dependencies.length; i++) {
        var dependencyObserver = new _pathObserver.PathObserver(observerLocator, validationGroup.subject, dependencies[i]).getObserver();
        dependencyObserver.subscribe(function() {
          _this.debouncer.debounce(function() {
            _this.validateCurrentValue(true);
          });
        });
        this.dependencyObservers.push(dependencyObserver);
      }
    }
    ValidationProperty.prototype.addValidationRule = function addValidationRule(validationRule) {
      if (validationRule.validate === undefined) {
        throw new Error("That's not a valid validationRule");
      }
      this.collectionOfValidationRules.addValidationRule(validationRule);
      this.validateCurrentValue(false);
    };
    ValidationProperty.prototype.validateCurrentValue = function validateCurrentValue(forceDirty, forceExecution) {
      return this.validate(this.observer.getValue(), forceDirty, forceExecution);
    };
    ValidationProperty.prototype.clear = function clear() {
      this.latestValue = this.observer.getValue();
      this.propertyResult.clear();
    };
    ValidationProperty.prototype.destroy = function destroy() {
      if (this.subscription) {
        this.subscription();
      }
    };
    ValidationProperty.prototype.validate = function validate(newValue, shouldBeDirty, forceExecution) {
      var _this2 = this;
      if (!this.propertyResult.isDirty && shouldBeDirty || this.latestValue !== newValue || forceExecution) {
        this.latestValue = newValue;
        return this.config.locale().then(function(locale) {
          return _this2.collectionOfValidationRules.validate(newValue, locale).then(function(validationResponse) {
            if (_this2.latestValue === validationResponse.latestValue) {
              _this2.propertyResult.setValidity(validationResponse, shouldBeDirty);
            }
            return validationResponse.isValid;
          })['catch'](function(err) {
            throw Error('Unexpected behavior: a validation-rules-collection should always fulfil');
          });
        }, function() {
          throw Error('An exception occurred while trying to load the locale');
        });
      }
    };
    return ValidationProperty;
  })();
  exports.ValidationProperty = ValidationProperty;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-config.js", ["exports", "npm:aurelia-validation@0.6.0/validation-locale.js", "npm:aurelia-validation@0.6.0/strategies/twbootstrap-view-strategy.js"], function(exports, _validationLocale, _strategiesTwbootstrapViewStrategy) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationConfigDefaults = function ValidationConfigDefaults() {
    _classCallCheck(this, ValidationConfigDefaults);
  };
  exports.ValidationConfigDefaults = ValidationConfigDefaults;
  ValidationConfigDefaults._defaults = {
    debounceTimeout: 0,
    dependencies: [],
    locale: 'en-US',
    localeResources: 'aurelia-validation/resources/',
    viewStrategy: _strategiesTwbootstrapViewStrategy.TWBootstrapViewStrategy.AppendToMessage,
    allPropertiesAreMandatory: false
  };
  ValidationConfigDefaults.defaults = function() {
    var defaults = {};
    Object.assign(defaults, ValidationConfigDefaults._defaults);
    return defaults;
  };
  var ValidationConfig = (function() {
    function ValidationConfig(innerConfig) {
      _classCallCheck(this, ValidationConfig);
      this.innerConfig = innerConfig;
      this.values = this.innerConfig ? {} : ValidationConfigDefaults.defaults();
      this.changedHandlers = new Map();
    }
    ValidationConfig.prototype.getValue = function getValue(identifier) {
      if (this.values.hasOwnProperty(identifier) !== null && this.values[identifier] !== undefined) {
        return this.values[identifier];
      }
      if (this.innerConfig !== null) {
        return this.innerConfig.getValue(identifier);
      }
      throw Error('Config not found: ' + identifier);
    };
    ValidationConfig.prototype.setValue = function setValue(identifier, value) {
      this.values[identifier] = value;
      return this;
    };
    ValidationConfig.prototype.onLocaleChanged = function onLocaleChanged(callback) {
      var _this = this;
      if (this.innerConfig !== undefined) {
        return this.innerConfig.onLocaleChanged(callback);
      }
      var id = ++ValidationConfig.uniqueListenerId;
      this.changedHandlers.set(id, callback);
      return function() {
        _this.changedHandlers['delete'](id);
      };
    };
    ValidationConfig.prototype.getDebounceTimeout = function getDebounceTimeout() {
      return this.getValue('debounceTimeout');
    };
    ValidationConfig.prototype.useDebounceTimeout = function useDebounceTimeout(value) {
      return this.setValue('debounceTimeout', value);
    };
    ValidationConfig.prototype.getDependencies = function getDependencies() {
      return this.getValue('dependencies');
    };
    ValidationConfig.prototype.computedFrom = function computedFrom(dependencies) {
      var deps = dependencies;
      if (typeof dependencies === 'string') {
        deps = [];
        deps.push(dependencies);
      }
      return this.setValue('dependencies', deps);
    };
    ValidationConfig.prototype.useLocale = function useLocale(localeIdentifier) {
      this.setValue('locale', localeIdentifier);
      var callbacks = Array.from(this.changedHandlers.values());
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i]();
      }
      return this;
    };
    ValidationConfig.prototype.locale = function locale() {
      return _validationLocale.ValidationLocale.Repository.load(this.getValue('locale'), this.getValue('localeResources'));
    };
    ValidationConfig.prototype.useViewStrategy = function useViewStrategy(viewStrategy) {
      return this.setValue('viewStrategy', viewStrategy);
    };
    ValidationConfig.prototype.getViewStrategy = function getViewStrategy() {
      return this.getValue('viewStrategy');
    };
    ValidationConfig.prototype.treatAllPropertiesAsMandatory = function treatAllPropertiesAsMandatory() {
      this.setValue('allPropertiesAreMandatory', true);
      return this;
    };
    ValidationConfig.prototype.treatAllPropertiesAsOptional = function treatAllPropertiesAsOptional() {
      this.setValue('allPropertiesAreMandatory', false);
      return this;
    };
    return ValidationConfig;
  })();
  exports.ValidationConfig = ValidationConfig;
  ValidationConfig.uniqueListenerId = 0;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/utilities.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Utilities = (function() {
    function Utilities() {
      _classCallCheck(this, Utilities);
    }
    Utilities.getValue = function getValue(val) {
      if (val !== undefined && typeof val === 'function') {
        return val();
      }
      return val;
    };
    Utilities.isEmptyValue = function isEmptyValue(val) {
      if (val === undefined) {
        return true;
      }
      if (val === null) {
        return true;
      }
      if (val === '') {
        return true;
      }
      if (typeof val === 'string') {
        if (String.prototype.trim) {
          val = val.trim();
        } else {
          val = val.replace(/^\s+|\s+$/g, '');
        }
      }
      if (val.length !== undefined) {
        return val.length === 0;
      }
      return false;
    };
    return Utilities;
  })();
  exports.Utilities = Utilities;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-locale.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationLocale = (function() {
    function ValidationLocale(defaults, data) {
      _classCallCheck(this, ValidationLocale);
      this.defaults = defaults;
      this.currentLocale = data;
    }
    ValidationLocale.prototype.getValueFor = function getValueFor(identifier, category) {
      var currentLocaleSetting = undefined;
      var defaultSetting = undefined;
      if (this.currentLocale && this.currentLocale[category]) {
        currentLocaleSetting = this.currentLocale[category][identifier];
        if (currentLocaleSetting !== undefined && currentLocaleSetting !== null) {
          return currentLocaleSetting;
        }
      }
      if (this.defaults[category]) {
        defaultSetting = this.defaults[category][identifier];
        if (defaultSetting !== undefined && defaultSetting !== null) {
          return defaultSetting;
        }
      }
      throw new Error('validation: I18N: Could not find: ' + identifier + ' in category: ' + category);
    };
    ValidationLocale.prototype.setting = function setting(settingIdentifier) {
      return this.getValueFor(settingIdentifier, 'settings');
    };
    ValidationLocale.prototype.translate = function translate(translationIdentifier, newValue, threshold) {
      var translation = this.getValueFor(translationIdentifier, 'messages');
      if (typeof translation === 'function') {
        return translation(newValue, threshold);
      }
      if (typeof translation === 'string') {
        return translation;
      }
      throw new Error('Validation message for ' + translationIdentifier + 'was in an unsupported format');
    };
    return ValidationLocale;
  })();
  exports.ValidationLocale = ValidationLocale;
  var ValidationLocaleRepository = (function() {
    function ValidationLocaleRepository() {
      _classCallCheck(this, ValidationLocaleRepository);
      this['default'] = null;
      this.instances = new Map();
      this.defaults = {
        settings: {'numericRegex': /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/},
        messages: {}
      };
    }
    ValidationLocaleRepository.prototype.load = function load(localeIdentifier, basePath) {
      var _this = this;
      if (!basePath) {
        basePath = 'aurelia-validation/resources/';
      }
      return new Promise(function(resolve, reject) {
        if (_this.instances.has(localeIdentifier)) {
          var locale = _this.instances.get(localeIdentifier);
          resolve(locale);
        } else {
          System['import'](basePath + localeIdentifier).then(function(resource) {
            var locale = _this.addLocale(localeIdentifier, resource.data);
            resolve(locale);
          });
        }
      });
    };
    ValidationLocaleRepository.prototype.addLocale = function addLocale(localeIdentifier, data) {
      var instance = new ValidationLocale(this.defaults, data);
      this.instances.set(localeIdentifier, instance);
      if (this['default'] === null) {
        this['default'] = instance;
      }
      return instance;
    };
    return ValidationLocaleRepository;
  })();
  ValidationLocale.Repository = new ValidationLocaleRepository();
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-rules.js", ["exports", "npm:aurelia-validation@0.6.0/utilities.js", "npm:aurelia-validation@0.6.0/validation-locale.js"], function(exports, _utilities, _validationLocale) {
  'use strict';
  exports.__esModule = true;
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationRule = (function() {
    function ValidationRule(threshold, onValidate, message, ruleName) {
      _classCallCheck(this, ValidationRule);
      this.onValidate = onValidate;
      this.threshold = threshold;
      this.message = message;
      this.errorMessage = null;
      this.ruleName = ruleName;
    }
    ValidationRule.prototype.withMessage = function withMessage(message) {
      this.message = message;
    };
    ValidationRule.prototype.explain = function explain() {
      return this.errorMessage;
    };
    ValidationRule.prototype.setResult = function setResult(result, currentValue, locale) {
      if (result === true || result === undefined || result === null || result === '') {
        this.errorMessage = null;
        return true;
      }
      if (typeof result === 'string') {
        this.errorMessage = result;
      } else {
        if (this.message) {
          if (typeof this.message === 'function') {
            this.errorMessage = this.message(currentValue, this.threshold);
          } else if (typeof this.message === 'string') {
            this.errorMessage = this.message;
          } else {
            throw Error('Unable to handle the error message:' + this.message);
          }
        } else {
          this.errorMessage = locale.translate(this.ruleName, currentValue, this.threshold);
        }
      }
      return false;
    };
    ValidationRule.prototype.validate = function validate(currentValue, locale) {
      var _this = this;
      if (locale === undefined) {
        locale = _validationLocale.ValidationLocale.Repository['default'];
      }
      currentValue = _utilities.Utilities.getValue(currentValue);
      var result = this.onValidate(currentValue, this.threshold, locale);
      var promise = Promise.resolve(result);
      var nextPromise = promise.then(function(promiseResult) {
        return _this.setResult(promiseResult, currentValue, locale);
      }, function(promiseFailure) {
        if (typeof promiseFailure === 'string' && promiseFailure !== '') {
          return _this.setResult(promiseFailure, currentValue, locale);
        }
        return _this.setResult(false, currentValue, locale);
      });
      return nextPromise;
    };
    return ValidationRule;
  })();
  exports.ValidationRule = ValidationRule;
  var URLValidationRule = (function(_ValidationRule) {
    _inherits(URLValidationRule, _ValidationRule);
    URLValidationRule.isIP = function isIP(str, version) {
      var ipv4Maybe = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/;
      var ipv6Block = /^[0-9A-F]{1,4}$/i;
      if (!version) {
        return this.isIP(str, 4) || this.isIP(str, 6);
      } else if (version === 4) {
        if (!ipv4Maybe.test(str)) {
          return false;
        }
        var parts = str.split('.').sort(function(a, b) {
          return a - b;
        });
        return parts[3] <= 255;
      } else if (version === 6) {
        var blocks = str.split(':');
        var foundOmissionBlock = false;
        if (blocks.length > 8) {
          return false;
        }
        if (str === '::') {
          return true;
        } else if (str.substr(0, 2) === '::') {
          blocks.shift();
          blocks.shift();
          foundOmissionBlock = true;
        } else if (str.substr(str.length - 2) === '::') {
          blocks.pop();
          blocks.pop();
          foundOmissionBlock = true;
        }
        for (var i = 0; i < blocks.length; ++i) {
          if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
            if (foundOmissionBlock) {
              return false;
            }
            foundOmissionBlock = true;
          } else if (!ipv6Block.test(blocks[i])) {
            return false;
          }
        }
        if (foundOmissionBlock) {
          return blocks.length >= 1;
        }
        return blocks.length === 8;
      }
      return false;
    };
    URLValidationRule.isFQDN = function isFQDN(str, options) {
      if (options.allow_trailing_dot && str[str.length - 1] === '.') {
        str = str.substring(0, str.length - 1);
      }
      var parts = str.split('.');
      if (options.require_tld) {
        var tld = parts.pop();
        if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
          return false;
        }
      }
      for (var part = undefined,
          i = 0; i < parts.length; i++) {
        part = parts[i];
        if (options.allow_underscores) {
          if (part.indexOf('__') >= 0) {
            return false;
          }
          part = part.replace(/_/g, '');
        }
        if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
          return false;
        }
        if (part[0] === '-' || part[part.length - 1] === '-' || part.indexOf('---') >= 0) {
          return false;
        }
      }
      return true;
    };
    function URLValidationRule(startingThreshold) {
      _classCallCheck(this, URLValidationRule);
      var defaultUrlOptions = {
        protocols: ['http', 'https', 'ftp'],
        require_tld: true,
        require_protocol: false,
        allow_underscores: true,
        allow_trailing_dot: false,
        allow_protocol_relative_urls: true
      };
      if (startingThreshold === undefined) {
        startingThreshold = defaultUrlOptions;
      }
      _ValidationRule.call(this, startingThreshold, function(newValue, threshold) {
        var url = newValue;
        var protocol = undefined;
        var auth = undefined;
        var host = undefined;
        var hostname = undefined;
        var port = undefined;
        var portStr = undefined;
        var split = undefined;
        if (!url || url.length >= 2083 || /\s/.test(url)) {
          return false;
        }
        if (url.indexOf('mailto:') === 0) {
          return false;
        }
        split = url.split('://');
        if (split.length > 1) {
          protocol = split.shift();
          if (threshold.protocols.indexOf(protocol) === -1) {
            return false;
          }
        } else if (threshold.require_protocol) {
          return false;
        } else if (threshold.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
          split[0] = url.substr(2);
        }
        url = split.join('://');
        split = url.split('#');
        url = split.shift();
        split = url.split('?');
        url = split.shift();
        split = url.split('/');
        url = split.shift();
        split = url.split('@');
        if (split.length > 1) {
          auth = split.shift();
          if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
            return false;
          }
        }
        hostname = split.join('@');
        split = hostname.split(':');
        host = split.shift();
        if (split.length) {
          portStr = split.join(':');
          port = parseInt(portStr, 10);
          if (!/^[0-9]+$/.test(portStr) || port <= 0 || port > 65535) {
            return false;
          }
        }
        if (!URLValidationRule.isIP(host) && !URLValidationRule.isFQDN(host, threshold) && host !== 'localhost') {
          return false;
        }
        if (threshold.host_whitelist && threshold.host_whitelist.indexOf(host) === -1) {
          return false;
        }
        if (threshold.host_blacklist && threshold.host_blacklist.indexOf(host) !== -1) {
          return false;
        }
        return true;
      }, null, 'URLValidationRule');
    }
    return URLValidationRule;
  })(ValidationRule);
  exports.URLValidationRule = URLValidationRule;
  var EmailValidationRule = (function(_ValidationRule2) {
    _inherits(EmailValidationRule, _ValidationRule2);
    EmailValidationRule.testEmailUserUtf8Regex = function testEmailUserUtf8Regex(user) {
      var emailUserUtf8Regex = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$/i;
      return emailUserUtf8Regex.test(user);
    };
    EmailValidationRule.isFQDN = function isFQDN(str) {
      var parts = str.split('.');
      for (var part = undefined,
          i = 0; i < parts.length; i++) {
        part = parts[i];
        if (part.indexOf('__') >= 0) {
          return false;
        }
        part = part.replace(/_/g, '');
        if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
          return false;
        }
        if (part[0] === '-' || part[part.length - 1] === '-' || part.indexOf('---') >= 0) {
          return false;
        }
      }
      return true;
    };
    function EmailValidationRule() {
      _classCallCheck(this, EmailValidationRule);
      _ValidationRule2.call(this, null, function(newValue, threshold) {
        if (/\s/.test(newValue)) {
          return false;
        }
        var parts = newValue.split('@');
        var domain = parts.pop();
        var user = parts.join('@');
        if (!EmailValidationRule.isFQDN(domain)) {
          return false;
        }
        return EmailValidationRule.testEmailUserUtf8Regex(user);
      }, null, 'EmailValidationRule');
    }
    return EmailValidationRule;
  })(ValidationRule);
  exports.EmailValidationRule = EmailValidationRule;
  var MinimumLengthValidationRule = (function(_ValidationRule3) {
    _inherits(MinimumLengthValidationRule, _ValidationRule3);
    function MinimumLengthValidationRule(minimumLength) {
      _classCallCheck(this, MinimumLengthValidationRule);
      _ValidationRule3.call(this, minimumLength, function(newValue, minLength) {
        newValue = typeof newValue === 'number' ? newValue.toString() : newValue;
        return newValue.length !== undefined && newValue.length >= minLength;
      }, null, 'MinimumLengthValidationRule');
    }
    return MinimumLengthValidationRule;
  })(ValidationRule);
  exports.MinimumLengthValidationRule = MinimumLengthValidationRule;
  var MaximumLengthValidationRule = (function(_ValidationRule4) {
    _inherits(MaximumLengthValidationRule, _ValidationRule4);
    function MaximumLengthValidationRule(maximumLength) {
      _classCallCheck(this, MaximumLengthValidationRule);
      _ValidationRule4.call(this, maximumLength, function(newValue, maxLength) {
        newValue = typeof newValue === 'number' ? newValue.toString() : newValue;
        return newValue.length !== undefined && newValue.length <= maxLength;
      }, null, 'MaximumLengthValidationRule');
    }
    return MaximumLengthValidationRule;
  })(ValidationRule);
  exports.MaximumLengthValidationRule = MaximumLengthValidationRule;
  var BetweenLengthValidationRule = (function(_ValidationRule5) {
    _inherits(BetweenLengthValidationRule, _ValidationRule5);
    function BetweenLengthValidationRule(minimumLength, maximumLength) {
      _classCallCheck(this, BetweenLengthValidationRule);
      _ValidationRule5.call(this, {
        minimumLength: minimumLength,
        maximumLength: maximumLength
      }, function(newValue, threshold) {
        newValue = typeof newValue === 'number' ? newValue.toString() : newValue;
        return newValue.length !== undefined && newValue.length >= threshold.minimumLength && newValue.length <= threshold.maximumLength;
      }, null, 'BetweenLengthValidationRule');
    }
    return BetweenLengthValidationRule;
  })(ValidationRule);
  exports.BetweenLengthValidationRule = BetweenLengthValidationRule;
  var CustomFunctionValidationRule = (function(_ValidationRule6) {
    _inherits(CustomFunctionValidationRule, _ValidationRule6);
    function CustomFunctionValidationRule(customFunction, threshold) {
      _classCallCheck(this, CustomFunctionValidationRule);
      _ValidationRule6.call(this, threshold, customFunction, null, 'CustomFunctionValidationRule');
    }
    return CustomFunctionValidationRule;
  })(ValidationRule);
  exports.CustomFunctionValidationRule = CustomFunctionValidationRule;
  var NumericValidationRule = (function(_ValidationRule7) {
    _inherits(NumericValidationRule, _ValidationRule7);
    function NumericValidationRule() {
      _classCallCheck(this, NumericValidationRule);
      _ValidationRule7.call(this, null, function(newValue, threshold, locale) {
        var numericRegex = locale.setting('numericRegex');
        var floatValue = parseFloat(newValue);
        return !Number.isNaN(parseFloat(newValue)) && Number.isFinite(floatValue) && numericRegex.test(newValue);
      }, null, 'NumericValidationRule');
    }
    return NumericValidationRule;
  })(ValidationRule);
  exports.NumericValidationRule = NumericValidationRule;
  var RegexValidationRule = (function(_ValidationRule8) {
    _inherits(RegexValidationRule, _ValidationRule8);
    function RegexValidationRule(startingRegex, ruleName) {
      _classCallCheck(this, RegexValidationRule);
      _ValidationRule8.call(this, startingRegex, function(newValue, regex) {
        return regex.test(newValue);
      }, null, ruleName || 'RegexValidationRule');
    }
    return RegexValidationRule;
  })(ValidationRule);
  exports.RegexValidationRule = RegexValidationRule;
  var ContainsOnlyValidationRule = (function(_RegexValidationRule) {
    _inherits(ContainsOnlyValidationRule, _RegexValidationRule);
    function ContainsOnlyValidationRule(regex) {
      _classCallCheck(this, ContainsOnlyValidationRule);
      _RegexValidationRule.call(this, regex, 'ContainsOnlyValidationRule');
    }
    return ContainsOnlyValidationRule;
  })(RegexValidationRule);
  exports.ContainsOnlyValidationRule = ContainsOnlyValidationRule;
  var MinimumValueValidationRule = (function(_ValidationRule9) {
    _inherits(MinimumValueValidationRule, _ValidationRule9);
    function MinimumValueValidationRule(minimumValue) {
      _classCallCheck(this, MinimumValueValidationRule);
      _ValidationRule9.call(this, minimumValue, function(newValue, minValue) {
        return _utilities.Utilities.getValue(minValue) < newValue;
      }, null, 'MinimumValueValidationRule');
    }
    return MinimumValueValidationRule;
  })(ValidationRule);
  exports.MinimumValueValidationRule = MinimumValueValidationRule;
  var MinimumInclusiveValueValidationRule = (function(_ValidationRule10) {
    _inherits(MinimumInclusiveValueValidationRule, _ValidationRule10);
    function MinimumInclusiveValueValidationRule(minimumValue) {
      _classCallCheck(this, MinimumInclusiveValueValidationRule);
      _ValidationRule10.call(this, minimumValue, function(newValue, minValue) {
        return _utilities.Utilities.getValue(minValue) <= newValue;
      }, null, 'MinimumInclusiveValueValidationRule');
    }
    return MinimumInclusiveValueValidationRule;
  })(ValidationRule);
  exports.MinimumInclusiveValueValidationRule = MinimumInclusiveValueValidationRule;
  var MaximumValueValidationRule = (function(_ValidationRule11) {
    _inherits(MaximumValueValidationRule, _ValidationRule11);
    function MaximumValueValidationRule(maximumValue) {
      _classCallCheck(this, MaximumValueValidationRule);
      _ValidationRule11.call(this, maximumValue, function(newValue, maxValue) {
        return newValue < _utilities.Utilities.getValue(maxValue);
      }, null, 'MaximumValueValidationRule');
    }
    return MaximumValueValidationRule;
  })(ValidationRule);
  exports.MaximumValueValidationRule = MaximumValueValidationRule;
  var MaximumInclusiveValueValidationRule = (function(_ValidationRule12) {
    _inherits(MaximumInclusiveValueValidationRule, _ValidationRule12);
    function MaximumInclusiveValueValidationRule(maximumValue) {
      _classCallCheck(this, MaximumInclusiveValueValidationRule);
      _ValidationRule12.call(this, maximumValue, function(newValue, maxValue) {
        return newValue <= _utilities.Utilities.getValue(maxValue);
      }, null, 'MaximumInclusiveValueValidationRule');
    }
    return MaximumInclusiveValueValidationRule;
  })(ValidationRule);
  exports.MaximumInclusiveValueValidationRule = MaximumInclusiveValueValidationRule;
  var BetweenValueValidationRule = (function(_ValidationRule13) {
    _inherits(BetweenValueValidationRule, _ValidationRule13);
    function BetweenValueValidationRule(minimumValue, maximumValue) {
      _classCallCheck(this, BetweenValueValidationRule);
      _ValidationRule13.call(this, {
        minimumValue: minimumValue,
        maximumValue: maximumValue
      }, function(newValue, threshold) {
        return _utilities.Utilities.getValue(threshold.minimumValue) <= newValue && newValue <= _utilities.Utilities.getValue(threshold.maximumValue);
      }, null, 'BetweenValueValidationRule');
    }
    return BetweenValueValidationRule;
  })(ValidationRule);
  exports.BetweenValueValidationRule = BetweenValueValidationRule;
  var DigitValidationRule = (function(_ValidationRule14) {
    _inherits(DigitValidationRule, _ValidationRule14);
    function DigitValidationRule() {
      _classCallCheck(this, DigitValidationRule);
      _ValidationRule14.call(this, null, function(newValue, threshold) {
        return (/^\d+$/.test(newValue));
      }, null, 'DigitValidationRule');
    }
    return DigitValidationRule;
  })(ValidationRule);
  exports.DigitValidationRule = DigitValidationRule;
  var NoSpacesValidationRule = (function(_ValidationRule15) {
    _inherits(NoSpacesValidationRule, _ValidationRule15);
    function NoSpacesValidationRule() {
      _classCallCheck(this, NoSpacesValidationRule);
      _ValidationRule15.call(this, null, function(newValue, threshold) {
        return (/^\S*$/.test(newValue));
      }, null, 'NoSpacesValidationRule');
    }
    return NoSpacesValidationRule;
  })(ValidationRule);
  exports.NoSpacesValidationRule = NoSpacesValidationRule;
  var AlphaNumericValidationRule = (function(_ValidationRule16) {
    _inherits(AlphaNumericValidationRule, _ValidationRule16);
    function AlphaNumericValidationRule() {
      _classCallCheck(this, AlphaNumericValidationRule);
      _ValidationRule16.call(this, null, function(newValue, threshold) {
        return (/^[a-z0-9]+$/i.test(newValue));
      }, null, 'AlphaNumericValidationRule');
    }
    return AlphaNumericValidationRule;
  })(ValidationRule);
  exports.AlphaNumericValidationRule = AlphaNumericValidationRule;
  var AlphaValidationRule = (function(_ValidationRule17) {
    _inherits(AlphaValidationRule, _ValidationRule17);
    function AlphaValidationRule() {
      _classCallCheck(this, AlphaValidationRule);
      _ValidationRule17.call(this, null, function(newValue, threshold) {
        return (/^[a-z]+$/i.test(newValue));
      }, null, 'AlphaValidationRule');
    }
    return AlphaValidationRule;
  })(ValidationRule);
  exports.AlphaValidationRule = AlphaValidationRule;
  var AlphaOrWhitespaceValidationRule = (function(_ValidationRule18) {
    _inherits(AlphaOrWhitespaceValidationRule, _ValidationRule18);
    function AlphaOrWhitespaceValidationRule() {
      _classCallCheck(this, AlphaOrWhitespaceValidationRule);
      _ValidationRule18.call(this, null, function(newValue, threshold) {
        return (/^[a-z\s]+$/i.test(newValue));
      }, null, 'AlphaOrWhitespaceValidationRule');
    }
    return AlphaOrWhitespaceValidationRule;
  })(ValidationRule);
  exports.AlphaOrWhitespaceValidationRule = AlphaOrWhitespaceValidationRule;
  var AlphaNumericOrWhitespaceValidationRule = (function(_ValidationRule19) {
    _inherits(AlphaNumericOrWhitespaceValidationRule, _ValidationRule19);
    function AlphaNumericOrWhitespaceValidationRule() {
      _classCallCheck(this, AlphaNumericOrWhitespaceValidationRule);
      _ValidationRule19.call(this, null, function(newValue, threshold) {
        return (/^[a-z0-9\s]+$/i.test(newValue));
      }, null, 'AlphaNumericOrWhitespaceValidationRule');
    }
    return AlphaNumericOrWhitespaceValidationRule;
  })(ValidationRule);
  exports.AlphaNumericOrWhitespaceValidationRule = AlphaNumericOrWhitespaceValidationRule;
  var MediumPasswordValidationRule = (function(_ValidationRule20) {
    _inherits(MediumPasswordValidationRule, _ValidationRule20);
    function MediumPasswordValidationRule(minimumComplexityLevel, ruleName) {
      _classCallCheck(this, MediumPasswordValidationRule);
      _ValidationRule20.call(this, minimumComplexityLevel ? minimumComplexityLevel : 3, function(newValue, threshold) {
        if (typeof newValue !== 'string') {
          return false;
        }
        var strength = 0;
        strength += /[A-Z]+/.test(newValue) ? 1 : 0;
        strength += /[a-z]+/.test(newValue) ? 1 : 0;
        strength += /[0-9]+/.test(newValue) ? 1 : 0;
        strength += /[\W]+/.test(newValue) ? 1 : 0;
        return strength >= threshold;
      }, null, ruleName || 'MediumPasswordValidationRule');
    }
    return MediumPasswordValidationRule;
  })(ValidationRule);
  exports.MediumPasswordValidationRule = MediumPasswordValidationRule;
  var StrongPasswordValidationRule = (function(_MediumPasswordValidationRule) {
    _inherits(StrongPasswordValidationRule, _MediumPasswordValidationRule);
    function StrongPasswordValidationRule() {
      _classCallCheck(this, StrongPasswordValidationRule);
      _MediumPasswordValidationRule.call(this, 4, 'StrongPasswordValidationRule');
    }
    return StrongPasswordValidationRule;
  })(MediumPasswordValidationRule);
  exports.StrongPasswordValidationRule = StrongPasswordValidationRule;
  var EqualityValidationRuleBase = (function(_ValidationRule21) {
    _inherits(EqualityValidationRuleBase, _ValidationRule21);
    function EqualityValidationRuleBase(startingOtherValue, equality, otherValueLabel, ruleName) {
      _classCallCheck(this, EqualityValidationRuleBase);
      _ValidationRule21.call(this, {
        otherValue: startingOtherValue,
        equality: equality,
        otherValueLabel: otherValueLabel
      }, function(newValue, threshold) {
        var otherValue = _utilities.Utilities.getValue(threshold.otherValue);
        if (newValue instanceof Date && otherValue instanceof Date) {
          return threshold.equality === (newValue.getTime() === otherValue.getTime());
        }
        return threshold.equality === (newValue === otherValue);
      }, null, ruleName || 'EqualityValidationRuleBase');
    }
    return EqualityValidationRuleBase;
  })(ValidationRule);
  exports.EqualityValidationRuleBase = EqualityValidationRuleBase;
  var EqualityValidationRule = (function(_EqualityValidationRuleBase) {
    _inherits(EqualityValidationRule, _EqualityValidationRuleBase);
    function EqualityValidationRule(otherValue) {
      _classCallCheck(this, EqualityValidationRule);
      _EqualityValidationRuleBase.call(this, otherValue, true, null, 'EqualityValidationRule');
    }
    return EqualityValidationRule;
  })(EqualityValidationRuleBase);
  exports.EqualityValidationRule = EqualityValidationRule;
  var EqualityWithOtherLabelValidationRule = (function(_EqualityValidationRuleBase2) {
    _inherits(EqualityWithOtherLabelValidationRule, _EqualityValidationRuleBase2);
    function EqualityWithOtherLabelValidationRule(otherValue, otherLabel) {
      _classCallCheck(this, EqualityWithOtherLabelValidationRule);
      _EqualityValidationRuleBase2.call(this, otherValue, true, otherLabel, 'EqualityWithOtherLabelValidationRule');
    }
    return EqualityWithOtherLabelValidationRule;
  })(EqualityValidationRuleBase);
  exports.EqualityWithOtherLabelValidationRule = EqualityWithOtherLabelValidationRule;
  var InEqualityValidationRule = (function(_EqualityValidationRuleBase3) {
    _inherits(InEqualityValidationRule, _EqualityValidationRuleBase3);
    function InEqualityValidationRule(otherValue) {
      _classCallCheck(this, InEqualityValidationRule);
      _EqualityValidationRuleBase3.call(this, otherValue, false, null, 'InEqualityValidationRule');
    }
    return InEqualityValidationRule;
  })(EqualityValidationRuleBase);
  exports.InEqualityValidationRule = InEqualityValidationRule;
  var InEqualityWithOtherLabelValidationRule = (function(_EqualityValidationRuleBase4) {
    _inherits(InEqualityWithOtherLabelValidationRule, _EqualityValidationRuleBase4);
    function InEqualityWithOtherLabelValidationRule(otherValue, otherLabel) {
      _classCallCheck(this, InEqualityWithOtherLabelValidationRule);
      _EqualityValidationRuleBase4.call(this, otherValue, false, otherLabel, 'InEqualityWithOtherLabelValidationRule');
    }
    return InEqualityWithOtherLabelValidationRule;
  })(EqualityValidationRuleBase);
  exports.InEqualityWithOtherLabelValidationRule = InEqualityWithOtherLabelValidationRule;
  var InCollectionValidationRule = (function(_ValidationRule22) {
    _inherits(InCollectionValidationRule, _ValidationRule22);
    function InCollectionValidationRule(startingCollection) {
      _classCallCheck(this, InCollectionValidationRule);
      _ValidationRule22.call(this, startingCollection, function(newValue, threshold) {
        var collection = _utilities.Utilities.getValue(threshold);
        for (var i = 0; i < collection.length; i++) {
          if (newValue === collection[i]) {
            return true;
          }
        }
        return false;
      }, null, 'InCollectionValidationRule');
    }
    return InCollectionValidationRule;
  })(ValidationRule);
  exports.InCollectionValidationRule = InCollectionValidationRule;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-group-builder.js", ["exports", "npm:aurelia-validation@0.6.0/validation-rules-collection.js", "npm:aurelia-validation@0.6.0/validation-property.js", "npm:aurelia-validation@0.6.0/validation-config.js", "npm:aurelia-validation@0.6.0/validation-rules.js"], function(exports, _validationRulesCollection, _validationProperty, _validationConfig, _validationRules) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationGroupBuilder = (function() {
    function ValidationGroupBuilder(observerLocator, validationGroup) {
      _classCallCheck(this, ValidationGroupBuilder);
      this.observerLocator = observerLocator;
      this.validationRuleCollections = [];
      this.validationGroup = validationGroup;
    }
    ValidationGroupBuilder.prototype.ensure = function ensure(propertyName, configurationCallback) {
      var newValidationProperty = null;
      this.validationRuleCollections = [];
      for (var i = 0; i < this.validationGroup.validationProperties.length; i++) {
        if (this.validationGroup.validationProperties[i].propertyName === propertyName) {
          newValidationProperty = this.validationGroup.validationProperties[i];
          if (configurationCallback !== undefined && typeof configurationCallback === 'function') {
            throw Error('When creating validation rules on binding path ' + propertyName + ' a configuration callback function was provided, but validation rules have previously already been instantiated for this binding path');
          }
          break;
        }
      }
      if (newValidationProperty === null) {
        var propertyResult = this.validationGroup.result.addProperty(propertyName);
        var config = new _validationConfig.ValidationConfig(this.validationGroup.config);
        if (configurationCallback !== undefined && typeof configurationCallback === 'function') {
          configurationCallback(config);
        }
        newValidationProperty = new _validationProperty.ValidationProperty(this.observerLocator, propertyName, this.validationGroup, propertyResult, config);
        this.validationGroup.validationProperties.push(newValidationProperty);
      }
      this.validationRuleCollections.unshift(newValidationProperty.collectionOfValidationRules);
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype.isNotEmpty = function isNotEmpty() {
      this.validationRuleCollections[0].isNotEmpty();
      this.checkLast();
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype.canBeEmpty = function canBeEmpty() {
      this.validationRuleCollections[0].canBeEmpty();
      this.checkLast();
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype.isGreaterThan = function isGreaterThan(minimumValue) {
      return this.passesRule(new _validationRules.MinimumValueValidationRule(minimumValue));
    };
    ValidationGroupBuilder.prototype.isGreaterThanOrEqualTo = function isGreaterThanOrEqualTo(minimumValue) {
      return this.passesRule(new _validationRules.MinimumInclusiveValueValidationRule(minimumValue));
    };
    ValidationGroupBuilder.prototype.isBetween = function isBetween(minimumValue, maximumValue) {
      return this.passesRule(new _validationRules.BetweenValueValidationRule(minimumValue, maximumValue));
    };
    ValidationGroupBuilder.prototype.isIn = function isIn(collection) {
      return this.passesRule(new _validationRules.InCollectionValidationRule(collection));
    };
    ValidationGroupBuilder.prototype.isLessThan = function isLessThan(maximumValue) {
      return this.passesRule(new _validationRules.MaximumValueValidationRule(maximumValue));
    };
    ValidationGroupBuilder.prototype.isLessThanOrEqualTo = function isLessThanOrEqualTo(maximumValue) {
      return this.passesRule(new _validationRules.MaximumInclusiveValueValidationRule(maximumValue));
    };
    ValidationGroupBuilder.prototype.isEqualTo = function isEqualTo(otherValue, otherValueLabel) {
      if (!otherValueLabel) {
        return this.passesRule(new _validationRules.EqualityValidationRule(otherValue));
      }
      return this.passesRule(new _validationRules.EqualityWithOtherLabelValidationRule(otherValue, otherValueLabel));
    };
    ValidationGroupBuilder.prototype.isNotEqualTo = function isNotEqualTo(otherValue, otherValueLabel) {
      if (!otherValueLabel) {
        return this.passesRule(new _validationRules.InEqualityValidationRule(otherValue));
      }
      return this.passesRule(new _validationRules.InEqualityWithOtherLabelValidationRule(otherValue, otherValueLabel));
    };
    ValidationGroupBuilder.prototype.isEmail = function isEmail() {
      return this.passesRule(new _validationRules.EmailValidationRule());
    };
    ValidationGroupBuilder.prototype.isURL = function isURL() {
      return this.passesRule(new _validationRules.URLValidationRule());
    };
    ValidationGroupBuilder.prototype.hasMinLength = function hasMinLength(minimumValue) {
      return this.passesRule(new _validationRules.MinimumLengthValidationRule(minimumValue));
    };
    ValidationGroupBuilder.prototype.hasMaxLength = function hasMaxLength(maximumValue) {
      return this.passesRule(new _validationRules.MaximumLengthValidationRule(maximumValue));
    };
    ValidationGroupBuilder.prototype.hasLengthBetween = function hasLengthBetween(minimumValue, maximumValue) {
      return this.passesRule(new _validationRules.BetweenLengthValidationRule(minimumValue, maximumValue));
    };
    ValidationGroupBuilder.prototype.isNumber = function isNumber() {
      return this.passesRule(new _validationRules.NumericValidationRule());
    };
    ValidationGroupBuilder.prototype.containsNoSpaces = function containsNoSpaces() {
      return this.passesRule(new _validationRules.NoSpacesValidationRule());
    };
    ValidationGroupBuilder.prototype.containsOnlyDigits = function containsOnlyDigits() {
      return this.passesRule(new _validationRules.DigitValidationRule());
    };
    ValidationGroupBuilder.prototype.containsOnlyAlpha = function containsOnlyAlpha() {
      return this.passesRule(new _validationRules.AlphaValidationRule());
    };
    ValidationGroupBuilder.prototype.containsOnlyAlphaOrWhitespace = function containsOnlyAlphaOrWhitespace() {
      return this.passesRule(new _validationRules.AlphaOrWhitespaceValidationRule());
    };
    ValidationGroupBuilder.prototype.containsOnlyAlphanumerics = function containsOnlyAlphanumerics() {
      return this.passesRule(new _validationRules.AlphaNumericValidationRule());
    };
    ValidationGroupBuilder.prototype.containsOnlyAlphanumericsOrWhitespace = function containsOnlyAlphanumericsOrWhitespace() {
      return this.passesRule(new _validationRules.AlphaNumericOrWhitespaceValidationRule());
    };
    ValidationGroupBuilder.prototype.isStrongPassword = function isStrongPassword(minimumComplexityLevel) {
      if (minimumComplexityLevel === 4) {
        return this.passesRule(new _validationRules.StrongPasswordValidationRule());
      }
      return this.passesRule(new _validationRules.MediumPasswordValidationRule(minimumComplexityLevel));
    };
    ValidationGroupBuilder.prototype.containsOnly = function containsOnly(regex) {
      return this.passesRule(new _validationRules.ContainsOnlyValidationRule(regex));
    };
    ValidationGroupBuilder.prototype.matches = function matches(regex) {
      return this.passesRule(new _validationRules.RegexValidationRule(regex));
    };
    ValidationGroupBuilder.prototype.passes = function passes(customFunction, threshold) {
      return this.passesRule(new _validationRules.CustomFunctionValidationRule(customFunction, threshold));
    };
    ValidationGroupBuilder.prototype.passesRule = function passesRule(validationRule) {
      this.validationRuleCollections[0].addValidationRule(validationRule);
      this.checkLast();
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype.checkLast = function checkLast() {
      var validationProperty = this.validationGroup.validationProperties[this.validationGroup.validationProperties.length - 1];
      validationProperty.validateCurrentValue(false);
    };
    ValidationGroupBuilder.prototype.withMessage = function withMessage(message) {
      this.validationRuleCollections[0].withMessage(message);
      this.checkLast();
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype['if'] = function _if(conditionExpression) {
      var conditionalCollection = new _validationRulesCollection.SwitchCaseValidationRulesCollection(conditionExpression);
      conditionalCollection['case'](true);
      this.validationRuleCollections[0].addValidationRuleCollection(conditionalCollection);
      this.validationRuleCollections.unshift(conditionalCollection);
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype['else'] = function _else() {
      if (!this.validationRuleCollections[0]['default']) {
        throw Error('Invalid statement: \'else\'');
      }
      this.validationRuleCollections[0]['default']();
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype.endIf = function endIf() {
      if (!this.validationRuleCollections[0]['default']) {
        throw Error('Invalid statement: \'endIf\'');
      }
      this.validationRuleCollections.shift();
      this.checkLast();
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype['switch'] = function _switch(conditionExpression) {
      var _this = this;
      var condition = conditionExpression;
      if (condition === undefined) {
        (function() {
          var observer = _this.validationGroup.validationProperties[_this.validationGroup.validationProperties.length - 1].observer;
          condition = function() {
            return observer.getValue();
          };
        })();
      }
      var conditionalCollection = new _validationRulesCollection.SwitchCaseValidationRulesCollection(condition);
      this.validationRuleCollections[0].addValidationRuleCollection(conditionalCollection);
      this.validationRuleCollections.unshift(conditionalCollection);
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype['case'] = function _case(caseLabel) {
      if (!this.validationRuleCollections[0]['default']) {
        throw Error('Invalid statement: \'case\'');
      }
      this.validationRuleCollections[0]['case'](caseLabel);
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype['default'] = function _default() {
      if (!this.validationRuleCollections[0]['default']) {
        throw Error('Invalid statement: \'case\'');
      }
      this.validationRuleCollections[0]['default']();
      return this.validationGroup;
    };
    ValidationGroupBuilder.prototype.endSwitch = function endSwitch() {
      if (!this.validationRuleCollections[0]['default']) {
        throw Error('Invalid statement: \'endIf\'');
      }
      this.validationRuleCollections.shift();
      this.checkLast();
      return this.validationGroup;
    };
    return ValidationGroupBuilder;
  })();
  exports.ValidationGroupBuilder = ValidationGroupBuilder;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-result.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationResult = (function() {
    function ValidationResult() {
      _classCallCheck(this, ValidationResult);
      this.isValid = true;
      this.properties = {};
    }
    ValidationResult.prototype.addProperty = function addProperty(name) {
      if (!this.properties[name]) {
        this.properties[name] = new ValidationResultProperty(this);
      }
      return this.properties[name];
    };
    ValidationResult.prototype.checkValidity = function checkValidity() {
      for (var propertyName in this.properties) {
        if (!this.properties[propertyName].isValid) {
          this.isValid = false;
          return;
        }
      }
      this.isValid = true;
    };
    ValidationResult.prototype.clear = function clear() {
      this.isValid = true;
    };
    return ValidationResult;
  })();
  exports.ValidationResult = ValidationResult;
  var ValidationResultProperty = (function() {
    function ValidationResultProperty(group) {
      _classCallCheck(this, ValidationResultProperty);
      this.group = group;
      this.onValidateCallbacks = [];
      this.clear();
    }
    ValidationResultProperty.prototype.clear = function clear() {
      this.isValid = true;
      this.isDirty = false;
      this.message = '';
      this.failingRule = null;
      this.latestValue = null;
      this.notifyObserversOfChange();
    };
    ValidationResultProperty.prototype.onValidate = function onValidate(onValidateCallback) {
      this.onValidateCallbacks.push(onValidateCallback);
    };
    ValidationResultProperty.prototype.notifyObserversOfChange = function notifyObserversOfChange() {
      for (var i = 0; i < this.onValidateCallbacks.length; i++) {
        var callback = this.onValidateCallbacks[i];
        callback(this);
      }
    };
    ValidationResultProperty.prototype.setValidity = function setValidity(validationResponse, shouldBeDirty) {
      var notifyObservers = !this.isDirty && shouldBeDirty || this.isValid !== validationResponse.isValid || this.message !== validationResponse.message;
      if (shouldBeDirty) {
        this.isDirty = true;
      }
      this.message = validationResponse.message;
      this.failingRule = validationResponse.failingRule;
      this.isValid = validationResponse.isValid;
      this.latestValue = validationResponse.latestValue;
      if (this.isValid !== this.group.isValid) {
        this.group.checkValidity();
      }
      if (notifyObservers) {
        this.notifyObserversOfChange();
      }
    };
    return ValidationResultProperty;
  })();
  exports.ValidationResultProperty = ValidationResultProperty;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-group.js", ["exports", "npm:aurelia-metadata@1.0.0-beta.1.js", "npm:aurelia-validation@0.6.0/validation-group-builder.js", "npm:aurelia-validation@0.6.0/validation-result.js", "npm:aurelia-validation@0.6.0/decorators.js"], function(exports, _aureliaMetadata, _validationGroupBuilder, _validationResult, _decorators) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationGroup = (function() {
    function ValidationGroup(subject, observerLocator, config) {
      var _this = this;
      _classCallCheck(this, ValidationGroup);
      var validationMetadata = undefined;
      this.result = new _validationResult.ValidationResult();
      this.subject = subject;
      this.validationProperties = [];
      this.config = config;
      this.builder = new _validationGroupBuilder.ValidationGroupBuilder(observerLocator, this);
      this.onValidateCallbacks = [];
      this.onPropertyValidationCallbacks = [];
      this.isValidating = false;
      this.onDestroy = config.onLocaleChanged(function() {
        _this.validate(false, true);
      });
      validationMetadata = _aureliaMetadata.metadata.getOwn(_decorators.ValidationMetadata.metadataKey, this.subject);
      if (validationMetadata) {
        validationMetadata.setup(this);
      }
    }
    ValidationGroup.prototype.destroy = function destroy() {
      this.validationProperties.forEach(function(prop) {
        prop.destroy();
      });
      this.onDestroy();
    };
    ValidationGroup.prototype.clear = function clear() {
      this.validationProperties.forEach(function(prop) {
        prop.clear();
      });
      this.result.clear();
    };
    ValidationGroup.prototype.onBreezeEntity = function onBreezeEntity() {
      var _this2 = this;
      var breezeEntity = this.subject;
      var me = this;
      var errors = undefined;
      this.onPropertyValidate(function(propertyBindingPath) {
        _this2.passes(function() {
          breezeEntity.entityAspect.validateProperty(propertyBindingPath);
          errors = breezeEntity.entityAspect.getValidationErrors(propertyBindingPath);
          if (errors.length === 0) {
            return true;
          }
          return errors[0].errorMessage;
        });
      });
      this.onValidate(function() {
        breezeEntity.entityAspect.validateEntity();
        return {};
      });
      breezeEntity.entityAspect.validationErrorsChanged.subscribe(function() {
        breezeEntity.entityAspect.getValidationErrors().forEach(function(validationError) {
          var propertyName = validationError.propertyName;
          var currentResultProp = undefined;
          if (!me.result.properties[propertyName]) {
            me.ensure(propertyName);
          }
          currentResultProp = me.result.addProperty(propertyName);
          if (currentResultProp.isValid) {
            currentResultProp.setValidity({
              isValid: false,
              message: validationError.errorMessage,
              failingRule: 'breeze',
              latestValue: currentResultProp.latestValue
            }, true);
          }
        });
      });
    };
    ValidationGroup.prototype.validate = function validate() {
      var _this3 = this;
      var forceDirty = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
      var forceExecution = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
      this.isValidating = true;
      var promise = Promise.resolve(true);
      var _loop = function(i) {
        var validatorProperty = _this3.validationProperties[i];
        promise = promise.then(function() {
          return validatorProperty.validateCurrentValue(forceDirty, forceExecution);
        });
      };
      for (var i = this.validationProperties.length - 1; i >= 0; i--) {
        _loop(i);
      }
      promise = promise['catch'](function() {
        throw Error('Should never get here: a validation property should always resolve to true/false!');
      });
      this.onValidateCallbacks.forEach(function(onValidateCallback) {
        promise = promise.then(function() {
          return _this3.config.locale();
        }).then(function(locale) {
          return Promise.resolve(onValidateCallback.validationFunction()).then(function(callbackResult) {
            for (var prop in callbackResult) {
              var resultProp = undefined;
              var result = undefined;
              var newPropResult = undefined;
              if (!_this3.result.properties[prop]) {
                _this3.ensure(prop);
              }
              resultProp = _this3.result.addProperty(prop);
              result = callbackResult[prop];
              newPropResult = {latestValue: resultProp.latestValue};
              if (result === true || result === null || result === '') {
                if (!resultProp.isValid && resultProp.failingRule === 'onValidateCallback') {
                  newPropResult.failingRule = null;
                  newPropResult.message = '';
                  newPropResult.isValid = true;
                  resultProp.setValidity(newPropResult, true);
                }
              } else {
                if (resultProp.isValid) {
                  newPropResult.failingRule = 'onValidateCallback';
                  newPropResult.isValid = false;
                  if (typeof result === 'string') {
                    newPropResult.message = result;
                  } else {
                    newPropResult.message = locale.translate(newPropResult.failingRule);
                  }
                  resultProp.setValidity(newPropResult, true);
                }
              }
            }
            _this3.result.checkValidity();
          }, function(a, b, c, d, e) {
            _this3.result.isValid = false;
            if (onValidateCallback.validationFunctionFailedCallback) {
              onValidateCallback.validationFunctionFailedCallback(a, b, c, d, e);
            }
          });
        });
      });
      promise = promise.then(function() {
        _this3.isValidating = false;
        if (_this3.result.isValid) {
          return Promise.resolve(_this3.result);
        }
        return Promise.reject(_this3.result);
      });
      return promise;
    };
    ValidationGroup.prototype.onValidate = function onValidate(validationFunction, validationFunctionFailedCallback) {
      this.onValidateCallbacks.push({
        validationFunction: validationFunction,
        validationFunctionFailedCallback: validationFunctionFailedCallback
      });
      return this;
    };
    ValidationGroup.prototype.onPropertyValidate = function onPropertyValidate(validationFunction) {
      this.onPropertyValidationCallbacks.push(validationFunction);
      return this;
    };
    ValidationGroup.prototype.ensure = function ensure(bindingPath, configCallback) {
      this.builder.ensure(bindingPath, configCallback);
      this.onPropertyValidationCallbacks.forEach(function(callback) {
        callback(bindingPath);
      });
      return this;
    };
    ValidationGroup.prototype.isNotEmpty = function isNotEmpty() {
      return this.builder.isNotEmpty();
    };
    ValidationGroup.prototype.canBeEmpty = function canBeEmpty() {
      return this.builder.canBeEmpty();
    };
    ValidationGroup.prototype.isGreaterThanOrEqualTo = function isGreaterThanOrEqualTo(minimumValue) {
      return this.builder.isGreaterThanOrEqualTo(minimumValue);
    };
    ValidationGroup.prototype.isGreaterThan = function isGreaterThan(minimumValue) {
      return this.builder.isGreaterThan(minimumValue);
    };
    ValidationGroup.prototype.isBetween = function isBetween(minimumValue, maximumValue) {
      return this.builder.isBetween(minimumValue, maximumValue);
    };
    ValidationGroup.prototype.isLessThanOrEqualTo = function isLessThanOrEqualTo(maximumValue) {
      return this.builder.isLessThanOrEqualTo(maximumValue);
    };
    ValidationGroup.prototype.isLessThan = function isLessThan(maximumValue) {
      return this.builder.isLessThan(maximumValue);
    };
    ValidationGroup.prototype.isEqualTo = function isEqualTo(otherValue, otherValueLabel) {
      return this.builder.isEqualTo(otherValue, otherValueLabel);
    };
    ValidationGroup.prototype.isNotEqualTo = function isNotEqualTo(otherValue, otherValueLabel) {
      return this.builder.isNotEqualTo(otherValue, otherValueLabel);
    };
    ValidationGroup.prototype.isEmail = function isEmail() {
      return this.builder.isEmail();
    };
    ValidationGroup.prototype.isURL = function isURL() {
      return this.builder.isURL();
    };
    ValidationGroup.prototype.isIn = function isIn(collection) {
      return this.builder.isIn(collection);
    };
    ValidationGroup.prototype.hasMinLength = function hasMinLength(minimumValue) {
      return this.builder.hasMinLength(minimumValue);
    };
    ValidationGroup.prototype.hasMaxLength = function hasMaxLength(maximumValue) {
      return this.builder.hasMaxLength(maximumValue);
    };
    ValidationGroup.prototype.hasLengthBetween = function hasLengthBetween(minimumValue, maximumValue) {
      return this.builder.hasLengthBetween(minimumValue, maximumValue);
    };
    ValidationGroup.prototype.isNumber = function isNumber() {
      return this.builder.isNumber();
    };
    ValidationGroup.prototype.containsNoSpaces = function containsNoSpaces() {
      return this.builder.containsNoSpaces();
    };
    ValidationGroup.prototype.containsOnlyDigits = function containsOnlyDigits() {
      return this.builder.containsOnlyDigits();
    };
    ValidationGroup.prototype.containsOnly = function containsOnly(regex) {
      return this.builder.containsOnly(regex);
    };
    ValidationGroup.prototype.containsOnlyAlpha = function containsOnlyAlpha() {
      return this.builder.containsOnlyAlpha();
    };
    ValidationGroup.prototype.containsOnlyAlphaOrWhitespace = function containsOnlyAlphaOrWhitespace() {
      return this.builder.containsOnlyAlphaOrWhitespace();
    };
    ValidationGroup.prototype.containsOnlyLetters = function containsOnlyLetters() {
      return this.builder.containsOnlyAlpha();
    };
    ValidationGroup.prototype.containsOnlyLettersOrWhitespace = function containsOnlyLettersOrWhitespace() {
      return this.builder.containsOnlyAlphaOrWhitespace();
    };
    ValidationGroup.prototype.containsOnlyAlphanumerics = function containsOnlyAlphanumerics() {
      return this.builder.containsOnlyAlphanumerics();
    };
    ValidationGroup.prototype.containsOnlyAlphanumericsOrWhitespace = function containsOnlyAlphanumericsOrWhitespace() {
      return this.builder.containsOnlyAlphanumericsOrWhitespace();
    };
    ValidationGroup.prototype.isStrongPassword = function isStrongPassword(minimumComplexityLevel) {
      return this.builder.isStrongPassword(minimumComplexityLevel);
    };
    ValidationGroup.prototype.matches = function matches(regex) {
      return this.builder.matches(regex);
    };
    ValidationGroup.prototype.passes = function passes(customFunction, threshold) {
      return this.builder.passes(customFunction, threshold);
    };
    ValidationGroup.prototype.passesRule = function passesRule(validationRule) {
      return this.builder.passesRule(validationRule);
    };
    ValidationGroup.prototype['if'] = function _if(conditionExpression, threshold) {
      return this.builder['if'](conditionExpression, threshold);
    };
    ValidationGroup.prototype['else'] = function _else() {
      return this.builder['else']();
    };
    ValidationGroup.prototype.endIf = function endIf() {
      return this.builder.endIf();
    };
    ValidationGroup.prototype['switch'] = function _switch(conditionExpression) {
      return this.builder['switch'](conditionExpression);
    };
    ValidationGroup.prototype['case'] = function _case(caseLabel) {
      return this.builder['case'](caseLabel);
    };
    ValidationGroup.prototype['default'] = function _default() {
      return this.builder['default']();
    };
    ValidationGroup.prototype.endSwitch = function endSwitch() {
      return this.builder.endSwitch();
    };
    ValidationGroup.prototype.withMessage = function withMessage(message) {
      return this.builder.withMessage(message);
    };
    return ValidationGroup;
  })();
  exports.ValidationGroup = ValidationGroup;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validate-custom-attribute.js", ["exports", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js"], function(exports, _aureliaDependencyInjection, _aureliaTemplating) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidateCustomAttribute = (function() {
    function ValidateCustomAttribute(element) {
      _classCallCheck(this, _ValidateCustomAttribute);
      this.element = element;
      this.processedValidation = null;
      this.viewStrategy = null;
    }
    ValidateCustomAttribute.prototype.valueChanged = function valueChanged(newValue) {
      if (this.value === null || this.value === undefined) {
        return;
      }
      this.processedValidation = this.value;
      if (typeof this.value !== 'string') {
        this.subscribeChangedHandlers(this.element);
      }
      return;
    };
    ValidateCustomAttribute.prototype.subscribeChangedHandlers = function subscribeChangedHandlers(currentElement) {
      var _this = this;
      var viewStrategy = this.value.config.getViewStrategy();
      var validationProperty = viewStrategy.getValidationProperty(this.value, currentElement);
      var children = currentElement.children;
      this.viewStrategy = viewStrategy;
      if (validationProperty !== null && validationProperty !== undefined) {
        this.viewStrategy.prepareElement(validationProperty, currentElement);
        validationProperty.onValidate(function(vp) {
          _this.viewStrategy.updateElement(vp, currentElement);
        });
      }
      for (var i = 0; i < children.length; i++) {
        this.subscribeChangedHandlers(children[i]);
      }
    };
    ValidateCustomAttribute.prototype.attached = function attached() {
      if (this.processedValidation === null || this.processedValidation === undefined) {
        this.valueChanged(this.value);
      }
    };
    var _ValidateCustomAttribute = ValidateCustomAttribute;
    ValidateCustomAttribute = _aureliaDependencyInjection.inject(Element)(ValidateCustomAttribute) || ValidateCustomAttribute;
    ValidateCustomAttribute = _aureliaTemplating.customAttribute('validate')(ValidateCustomAttribute) || ValidateCustomAttribute;
    return ValidateCustomAttribute;
  })();
  exports.ValidateCustomAttribute = ValidateCustomAttribute;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/validation-view-strategy.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationViewStrategy = (function() {
    function ValidationViewStrategy() {
      _classCallCheck(this, ValidationViewStrategy);
      this.bindingPathAttributes = ['validate', 'value.bind', 'value.two-way'];
    }
    ValidationViewStrategy.prototype.getValidationProperty = function getValidationProperty(validation, element) {
      var atts = element.attributes;
      for (var i = 0; i < this.bindingPathAttributes.length; i++) {
        var attributeName = this.bindingPathAttributes[i];
        var bindingPath = undefined;
        var validationProperty = undefined;
        if (atts[attributeName]) {
          bindingPath = atts[attributeName].value.trim();
          if (bindingPath.indexOf('|') !== -1) {
            bindingPath = bindingPath.split('|')[0].trim();
          }
          validationProperty = validation.result.properties[bindingPath];
          if (attributeName === 'validate' && (validationProperty === null || validationProperty === undefined)) {
            validation.ensure(bindingPath);
            validationProperty = validation.result.properties[bindingPath];
          }
          return validationProperty;
        }
      }
      return null;
    };
    ValidationViewStrategy.prototype.prepareElement = function prepareElement(validationProperty, element) {
      throw Error('View strategy must implement prepareElement(validationProperty, element)');
    };
    ValidationViewStrategy.prototype.updateElement = function updateElement(validationProperty, element) {
      throw Error('View strategy must implement updateElement(validationProperty, element)');
    };
    return ValidationViewStrategy;
  })();
  exports.ValidationViewStrategy = ValidationViewStrategy;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/strategies/twbootstrap-view-strategy.js", ["exports", "npm:aurelia-validation@0.6.0/validation-view-strategy.js"], function(exports, _validationViewStrategy) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var TWBootstrapViewStrategyBase = (function(_ValidationViewStrategy) {
    _inherits(TWBootstrapViewStrategyBase, _ValidationViewStrategy);
    function TWBootstrapViewStrategyBase(appendMessageToInput, appendMessageToLabel, helpBlockClass) {
      _classCallCheck(this, TWBootstrapViewStrategyBase);
      _ValidationViewStrategy.call(this);
      this.appendMessageToInput = appendMessageToInput;
      this.appendMessageToLabel = appendMessageToLabel;
      this.helpBlockClass = helpBlockClass;
    }
    TWBootstrapViewStrategyBase.prototype.searchFormGroup = function searchFormGroup(currentElement, currentDepth) {
      if (currentDepth === 5) {
        return null;
      }
      if (currentElement.classList && currentElement.classList.contains('form-group')) {
        return currentElement;
      }
      return this.searchFormGroup(currentElement.parentNode, 1 + currentDepth);
    };
    TWBootstrapViewStrategyBase.prototype.findLabels = function findLabels(formGroup, inputId) {
      var labels = [];
      this.findLabelsRecursively(formGroup, inputId, labels, 0);
      return labels;
    };
    TWBootstrapViewStrategyBase.prototype.findLabelsRecursively = function findLabelsRecursively(currentElement, inputId, currentLabels, currentDepth) {
      if (currentDepth === 5) {
        return;
      }
      if (currentElement.nodeName === 'LABEL' && (currentElement.attributes['for'] && currentElement.attributes['for'].value === inputId || !currentElement.attributes['for'])) {
        currentLabels.push(currentElement);
      }
      for (var i = 0; i < currentElement.children.length; i++) {
        this.findLabelsRecursively(currentElement.children[i], inputId, currentLabels, 1 + currentDepth);
      }
    };
    TWBootstrapViewStrategyBase.prototype.appendMessageToElement = function appendMessageToElement(element, validationProperty) {
      var helpBlock = element.nextSibling;
      if (helpBlock) {
        if (!helpBlock.classList) {
          helpBlock = null;
        } else if (!helpBlock.classList.contains(this.helpBlockClass)) {
          helpBlock = null;
        }
      }
      if (!helpBlock) {
        helpBlock = document.createElement('p');
        helpBlock.classList.add('help-block');
        helpBlock.classList.add(this.helpBlockClass);
        if (element.nextSibling) {
          element.parentNode.insertBefore(helpBlock, element.nextSibling);
        } else {
          element.parentNode.appendChild(helpBlock);
        }
      }
      helpBlock.textContent = validationProperty ? validationProperty.message : '';
    };
    TWBootstrapViewStrategyBase.prototype.appendUIVisuals = function appendUIVisuals(validationProperty, currentElement) {
      var formGroup = this.searchFormGroup(currentElement, 0);
      if (formGroup === null) {
        return;
      }
      if (validationProperty && validationProperty.isDirty) {
        if (validationProperty.isValid) {
          formGroup.classList.remove('has-warning');
          formGroup.classList.add('has-success');
        } else {
          formGroup.classList.remove('has-success');
          formGroup.classList.add('has-warning');
        }
      } else {
        formGroup.classList.remove('has-warning');
        formGroup.classList.remove('has-success');
      }
      if (this.appendMessageToInput) {
        this.appendMessageToElement(currentElement, validationProperty);
      }
      if (this.appendMessageToLabel) {
        var labels = this.findLabels(formGroup, currentElement.id);
        for (var ii = 0; ii < labels.length; ii++) {
          var label = labels[ii];
          this.appendMessageToElement(label, validationProperty);
        }
      }
    };
    TWBootstrapViewStrategyBase.prototype.prepareElement = function prepareElement(validationProperty, element) {
      this.appendUIVisuals(null, element);
    };
    TWBootstrapViewStrategyBase.prototype.updateElement = function updateElement(validationProperty, element) {
      this.appendUIVisuals(validationProperty, element);
    };
    return TWBootstrapViewStrategyBase;
  })(_validationViewStrategy.ValidationViewStrategy);
  exports.TWBootstrapViewStrategyBase = TWBootstrapViewStrategyBase;
  var TWBootstrapViewStrategy = function TWBootstrapViewStrategy() {
    _classCallCheck(this, TWBootstrapViewStrategy);
  };
  exports.TWBootstrapViewStrategy = TWBootstrapViewStrategy;
  TWBootstrapViewStrategy.AppendToInput = new TWBootstrapViewStrategyBase(true, false, 'aurelia-validation-message');
  TWBootstrapViewStrategy.AppendToMessage = new TWBootstrapViewStrategyBase(false, true, 'aurelia-validation-message');
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/decorators.js", ["exports", "npm:aurelia-metadata@1.0.0-beta.1.js"], function(exports, _aureliaMetadata) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports.ensure = ensure;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ValidationMetadata = (function() {
    _createClass(ValidationMetadata, null, [{
      key: 'metadataKey',
      value: 'aurelia:validation',
      enumerable: true
    }]);
    function ValidationMetadata() {
      _classCallCheck(this, ValidationMetadata);
      this.properties = [];
    }
    ValidationMetadata.prototype.getOrCreateProperty = function getOrCreateProperty(propertyName) {
      var property = this.properties.find(function(x) {
        return x.propertyName === propertyName;
      });
      if (property === undefined) {
        property = new ValidationPropertyMetadata(propertyName);
        this.properties.push(property);
      }
      return property;
    };
    ValidationMetadata.prototype.setup = function setup(validation) {
      this.properties.forEach(function(property) {
        property.setup(validation);
      });
    };
    return ValidationMetadata;
  })();
  exports.ValidationMetadata = ValidationMetadata;
  var ValidationPropertyMetadata = (function() {
    function ValidationPropertyMetadata(propertyName) {
      _classCallCheck(this, ValidationPropertyMetadata);
      this.propertyName = propertyName;
      this.setupSteps = [];
    }
    ValidationPropertyMetadata.prototype.addSetupStep = function addSetupStep(setupStep) {
      this.setupSteps.push(setupStep);
    };
    ValidationPropertyMetadata.prototype.setup = function setup(validation) {
      validation.ensure(this.propertyName);
      this.setupSteps.forEach(function(setupStep) {
        setupStep(validation);
      });
    };
    return ValidationPropertyMetadata;
  })();
  function ensure(setupStep) {
    return function(target, propertyName) {
      var validationMetadata = _aureliaMetadata.metadata.getOrCreateOwn(ValidationMetadata.metadataKey, ValidationMetadata, target);
      var property = validationMetadata.getOrCreateProperty(propertyName);
      property.addSetupStep(setupStep);
    };
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0/index.js", ["exports", "npm:aurelia-validation@0.6.0/validation-config.js", "npm:aurelia-validation@0.6.0/validation.js", "npm:aurelia-validation@0.6.0/utilities.js", "npm:aurelia-validation@0.6.0/validation-locale.js", "npm:aurelia-validation@0.6.0/validation-result.js", "npm:aurelia-validation@0.6.0/validation-rules.js", "npm:aurelia-validation@0.6.0/validation-group.js", "npm:aurelia-validation@0.6.0/validate-custom-attribute.js", "npm:aurelia-validation@0.6.0/validation-view-strategy.js", "npm:aurelia-validation@0.6.0/strategies/twbootstrap-view-strategy.js", "npm:aurelia-validation@0.6.0/decorators.js"], function(exports, _validationConfig, _validation, _utilities, _validationLocale, _validationResult, _validationRules, _validationGroup, _validateCustomAttribute, _validationViewStrategy, _strategiesTwbootstrapViewStrategy, _decorators) {
  'use strict';
  exports.__esModule = true;
  exports.configure = configure;
  function _interopExportWildcard(obj, defaults) {
    var newObj = defaults({}, obj);
    delete newObj['default'];
    return newObj;
  }
  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
  exports.Utilities = _utilities.Utilities;
  exports.ValidationConfig = _validationConfig.ValidationConfig;
  exports.ValidationLocale = _validationLocale.ValidationLocale;
  _defaults(exports, _interopExportWildcard(_validationResult, _defaults));
  _defaults(exports, _interopExportWildcard(_validationRules, _defaults));
  exports.Validation = _validation.Validation;
  exports.ValidationGroup = _validationGroup.ValidationGroup;
  exports.ValidateCustomAttribute = _validateCustomAttribute.ValidateCustomAttribute;
  exports.ValidationViewStrategy = _validationViewStrategy.ValidationViewStrategy;
  exports.TWBootstrapViewStrategy = _strategiesTwbootstrapViewStrategy.TWBootstrapViewStrategy;
  exports.ensure = _decorators.ensure;
  function configure(aurelia, configCallback) {
    aurelia.globalResources('./validate-custom-attribute');
    if (configCallback !== undefined && typeof configCallback === 'function') {
      configCallback(_validation.Validation.defaults);
    }
    aurelia.singleton(_validationConfig.ValidationConfig, _validation.Validation.defaults);
    return _validation.Validation.defaults.locale();
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-validation@0.6.0.js", ["npm:aurelia-validation@0.6.0/index.js"], function(main) {
  return main;
});

})();
System.register("models/user.js", [], function (_export) {
    "use strict";

    var User;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            User = function () {
                function User(data) {
                    _classCallCheck(this, User);

                    this.userObj = {
                        company_name: "",
                        contact_no: "",
                        email: "",
                        first_name: "",
                        last_name: "",
                        role: "",
                        statuses: "",
                        title: ""
                    };

                    Object.assign(this, data || this.userObj);
                    this.name = this.first_name + ' ' + this.last_name;
                    this.showReinvite = this.role && this.role.name != 'ET' && !this.statuses.verified && this.statuses.active;
                }

                _createClass(User, [{
                    key: "getUserModel",
                    value: function getUserModel() {
                        return {
                            company_name: this.company_name,
                            contact_no: this.contact_no,
                            email: this.email,
                            first_name: this.first_name,
                            last_name: this.last_name,
                            title: this.title,
                            sync_contact: this.sync_contact
                        };
                    }
                }]);

                return User;
            }();

            _export("User", User);
        }
    };
});
(function() {
var define = System.amdDefine;
(function(global, factory) {
  if (typeof module === "object" && typeof module.exports === "object") {
    module.exports = global.document ? factory(global, true) : function(w) {
      if (!w.document) {
        throw new Error("jQuery requires a window with a document");
      }
      return factory(w);
    };
  } else {
    factory(global);
  }
}(typeof window !== "undefined" ? window : this, function(window, noGlobal) {
  var arr = [];
  var slice = arr.slice;
  var concat = arr.concat;
  var push = arr.push;
  var indexOf = arr.indexOf;
  var class2type = {};
  var toString = class2type.toString;
  var hasOwn = class2type.hasOwnProperty;
  var support = {};
  var document = window.document,
      version = "2.1.4",
      jQuery = function(selector, context) {
        return new jQuery.fn.init(selector, context);
      },
      rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
      rmsPrefix = /^-ms-/,
      rdashAlpha = /-([\da-z])/gi,
      fcamelCase = function(all, letter) {
        return letter.toUpperCase();
      };
  jQuery.fn = jQuery.prototype = {
    jquery: version,
    constructor: jQuery,
    selector: "",
    length: 0,
    toArray: function() {
      return slice.call(this);
    },
    get: function(num) {
      return num != null ? (num < 0 ? this[num + this.length] : this[num]) : slice.call(this);
    },
    pushStack: function(elems) {
      var ret = jQuery.merge(this.constructor(), elems);
      ret.prevObject = this;
      ret.context = this.context;
      return ret;
    },
    each: function(callback, args) {
      return jQuery.each(this, callback, args);
    },
    map: function(callback) {
      return this.pushStack(jQuery.map(this, function(elem, i) {
        return callback.call(elem, i, elem);
      }));
    },
    slice: function() {
      return this.pushStack(slice.apply(this, arguments));
    },
    first: function() {
      return this.eq(0);
    },
    last: function() {
      return this.eq(-1);
    },
    eq: function(i) {
      var len = this.length,
          j = +i + (i < 0 ? len : 0);
      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
    },
    end: function() {
      return this.prevObject || this.constructor(null);
    },
    push: push,
    sort: arr.sort,
    splice: arr.splice
  };
  jQuery.extend = jQuery.fn.extend = function() {
    var options,
        name,
        src,
        copy,
        copyIsArray,
        clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false;
    if (typeof target === "boolean") {
      deep = target;
      target = arguments[i] || {};
      i++;
    }
    if (typeof target !== "object" && !jQuery.isFunction(target)) {
      target = {};
    }
    if (i === length) {
      target = this;
      i--;
    }
    for (; i < length; i++) {
      if ((options = arguments[i]) != null) {
        for (name in options) {
          src = target[name];
          copy = options[name];
          if (target === copy) {
            continue;
          }
          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
            if (copyIsArray) {
              copyIsArray = false;
              clone = src && jQuery.isArray(src) ? src : [];
            } else {
              clone = src && jQuery.isPlainObject(src) ? src : {};
            }
            target[name] = jQuery.extend(deep, clone, copy);
          } else if (copy !== undefined) {
            target[name] = copy;
          }
        }
      }
    }
    return target;
  };
  jQuery.extend({
    expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
    isReady: true,
    error: function(msg) {
      throw new Error(msg);
    },
    noop: function() {},
    isFunction: function(obj) {
      return jQuery.type(obj) === "function";
    },
    isArray: Array.isArray,
    isWindow: function(obj) {
      return obj != null && obj === obj.window;
    },
    isNumeric: function(obj) {
      return !jQuery.isArray(obj) && (obj - parseFloat(obj) + 1) >= 0;
    },
    isPlainObject: function(obj) {
      if (jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
        return false;
      }
      if (obj.constructor && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
        return false;
      }
      return true;
    },
    isEmptyObject: function(obj) {
      var name;
      for (name in obj) {
        return false;
      }
      return true;
    },
    type: function(obj) {
      if (obj == null) {
        return obj + "";
      }
      return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
    },
    globalEval: function(code) {
      var script,
          indirect = eval;
      code = jQuery.trim(code);
      if (code) {
        if (code.indexOf("use strict") === 1) {
          script = document.createElement("script");
          script.text = code;
          document.head.appendChild(script).parentNode.removeChild(script);
        } else {
          indirect(code);
        }
      }
    },
    camelCase: function(string) {
      return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    },
    nodeName: function(elem, name) {
      return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    },
    each: function(obj, callback, args) {
      var value,
          i = 0,
          length = obj.length,
          isArray = isArraylike(obj);
      if (args) {
        if (isArray) {
          for (; i < length; i++) {
            value = callback.apply(obj[i], args);
            if (value === false) {
              break;
            }
          }
        } else {
          for (i in obj) {
            value = callback.apply(obj[i], args);
            if (value === false) {
              break;
            }
          }
        }
      } else {
        if (isArray) {
          for (; i < length; i++) {
            value = callback.call(obj[i], i, obj[i]);
            if (value === false) {
              break;
            }
          }
        } else {
          for (i in obj) {
            value = callback.call(obj[i], i, obj[i]);
            if (value === false) {
              break;
            }
          }
        }
      }
      return obj;
    },
    trim: function(text) {
      return text == null ? "" : (text + "").replace(rtrim, "");
    },
    makeArray: function(arr, results) {
      var ret = results || [];
      if (arr != null) {
        if (isArraylike(Object(arr))) {
          jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
        } else {
          push.call(ret, arr);
        }
      }
      return ret;
    },
    inArray: function(elem, arr, i) {
      return arr == null ? -1 : indexOf.call(arr, elem, i);
    },
    merge: function(first, second) {
      var len = +second.length,
          j = 0,
          i = first.length;
      for (; j < len; j++) {
        first[i++] = second[j];
      }
      first.length = i;
      return first;
    },
    grep: function(elems, callback, invert) {
      var callbackInverse,
          matches = [],
          i = 0,
          length = elems.length,
          callbackExpect = !invert;
      for (; i < length; i++) {
        callbackInverse = !callback(elems[i], i);
        if (callbackInverse !== callbackExpect) {
          matches.push(elems[i]);
        }
      }
      return matches;
    },
    map: function(elems, callback, arg) {
      var value,
          i = 0,
          length = elems.length,
          isArray = isArraylike(elems),
          ret = [];
      if (isArray) {
        for (; i < length; i++) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret.push(value);
          }
        }
      } else {
        for (i in elems) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret.push(value);
          }
        }
      }
      return concat.apply([], ret);
    },
    guid: 1,
    proxy: function(fn, context) {
      var tmp,
          args,
          proxy;
      if (typeof context === "string") {
        tmp = fn[context];
        context = fn;
        fn = tmp;
      }
      if (!jQuery.isFunction(fn)) {
        return undefined;
      }
      args = slice.call(arguments, 2);
      proxy = function() {
        return fn.apply(context || this, args.concat(slice.call(arguments)));
      };
      proxy.guid = fn.guid = fn.guid || jQuery.guid++;
      return proxy;
    },
    now: Date.now,
    support: support
  });
  jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
    class2type["[object " + name + "]"] = name.toLowerCase();
  });
  function isArraylike(obj) {
    var length = "length" in obj && obj.length,
        type = jQuery.type(obj);
    if (type === "function" || jQuery.isWindow(obj)) {
      return false;
    }
    if (obj.nodeType === 1 && length) {
      return true;
    }
    return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj;
  }
  var Sizzle = (function(window) {
    var i,
        support,
        Expr,
        getText,
        isXML,
        tokenize,
        compile,
        select,
        outermostContext,
        sortInput,
        hasDuplicate,
        setDocument,
        document,
        docElem,
        documentIsHTML,
        rbuggyQSA,
        rbuggyMatches,
        matches,
        contains,
        expando = "sizzle" + 1 * new Date(),
        preferredDoc = window.document,
        dirruns = 0,
        done = 0,
        classCache = createCache(),
        tokenCache = createCache(),
        compilerCache = createCache(),
        sortOrder = function(a, b) {
          if (a === b) {
            hasDuplicate = true;
          }
          return 0;
        },
        MAX_NEGATIVE = 1 << 31,
        hasOwn = ({}).hasOwnProperty,
        arr = [],
        pop = arr.pop,
        push_native = arr.push,
        push = arr.push,
        slice = arr.slice,
        indexOf = function(list, elem) {
          var i = 0,
              len = list.length;
          for (; i < len; i++) {
            if (list[i] === elem) {
              return i;
            }
          }
          return -1;
        },
        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        whitespace = "[\\x20\\t\\r\\n\\f]",
        characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
        identifier = characterEncoding.replace("w", "w#"),
        attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
        pseudos = ":(" + characterEncoding + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)",
        rwhitespace = new RegExp(whitespace + "+", "g"),
        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
        rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
        rpseudo = new RegExp(pseudos),
        ridentifier = new RegExp("^" + identifier + "$"),
        matchExpr = {
          "ID": new RegExp("^#(" + characterEncoding + ")"),
          "CLASS": new RegExp("^\\.(" + characterEncoding + ")"),
          "TAG": new RegExp("^(" + characterEncoding.replace("w", "w*") + ")"),
          "ATTR": new RegExp("^" + attributes),
          "PSEUDO": new RegExp("^" + pseudos),
          "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
          "bool": new RegExp("^(?:" + booleans + ")$", "i"),
          "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        },
        rinputs = /^(?:input|select|textarea|button)$/i,
        rheader = /^h\d$/i,
        rnative = /^[^{]+\{\s*\[native \w/,
        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        rsibling = /[+~]/,
        rescape = /'|\\/g,
        runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
        funescape = function(_, escaped, escapedWhitespace) {
          var high = "0x" + escaped - 0x10000;
          return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
        },
        unloadHandler = function() {
          setDocument();
        };
    try {
      push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);
      arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
      push = {apply: arr.length ? function(target, els) {
          push_native.apply(target, slice.call(els));
        } : function(target, els) {
          var j = target.length,
              i = 0;
          while ((target[j++] = els[i++])) {}
          target.length = j - 1;
        }};
    }
    function Sizzle(selector, context, results, seed) {
      var match,
          elem,
          m,
          nodeType,
          i,
          groups,
          old,
          nid,
          newContext,
          newSelector;
      if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
        setDocument(context);
      }
      context = context || document;
      results = results || [];
      nodeType = context.nodeType;
      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
        return results;
      }
      if (!seed && documentIsHTML) {
        if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
          if ((m = match[1])) {
            if (nodeType === 9) {
              elem = context.getElementById(m);
              if (elem && elem.parentNode) {
                if (elem.id === m) {
                  results.push(elem);
                  return results;
                }
              } else {
                return results;
              }
            } else {
              if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {
                results.push(elem);
                return results;
              }
            }
          } else if (match[2]) {
            push.apply(results, context.getElementsByTagName(selector));
            return results;
          } else if ((m = match[3]) && support.getElementsByClassName) {
            push.apply(results, context.getElementsByClassName(m));
            return results;
          }
        }
        if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
          nid = old = expando;
          newContext = context;
          newSelector = nodeType !== 1 && selector;
          if (nodeType === 1 && context.nodeName.toLowerCase() !== "object") {
            groups = tokenize(selector);
            if ((old = context.getAttribute("id"))) {
              nid = old.replace(rescape, "\\$&");
            } else {
              context.setAttribute("id", nid);
            }
            nid = "[id='" + nid + "'] ";
            i = groups.length;
            while (i--) {
              groups[i] = nid + toSelector(groups[i]);
            }
            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
            newSelector = groups.join(",");
          }
          if (newSelector) {
            try {
              push.apply(results, newContext.querySelectorAll(newSelector));
              return results;
            } catch (qsaError) {} finally {
              if (!old) {
                context.removeAttribute("id");
              }
            }
          }
        }
      }
      return select(selector.replace(rtrim, "$1"), context, results, seed);
    }
    function createCache() {
      var keys = [];
      function cache(key, value) {
        if (keys.push(key + " ") > Expr.cacheLength) {
          delete cache[keys.shift()];
        }
        return (cache[key + " "] = value);
      }
      return cache;
    }
    function markFunction(fn) {
      fn[expando] = true;
      return fn;
    }
    function assert(fn) {
      var div = document.createElement("div");
      try {
        return !!fn(div);
      } catch (e) {
        return false;
      } finally {
        if (div.parentNode) {
          div.parentNode.removeChild(div);
        }
        div = null;
      }
    }
    function addHandle(attrs, handler) {
      var arr = attrs.split("|"),
          i = attrs.length;
      while (i--) {
        Expr.attrHandle[arr[i]] = handler;
      }
    }
    function siblingCheck(a, b) {
      var cur = b && a,
          diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
      if (diff) {
        return diff;
      }
      if (cur) {
        while ((cur = cur.nextSibling)) {
          if (cur === b) {
            return -1;
          }
        }
      }
      return a ? 1 : -1;
    }
    function createInputPseudo(type) {
      return function(elem) {
        var name = elem.nodeName.toLowerCase();
        return name === "input" && elem.type === type;
      };
    }
    function createButtonPseudo(type) {
      return function(elem) {
        var name = elem.nodeName.toLowerCase();
        return (name === "input" || name === "button") && elem.type === type;
      };
    }
    function createPositionalPseudo(fn) {
      return markFunction(function(argument) {
        argument = +argument;
        return markFunction(function(seed, matches) {
          var j,
              matchIndexes = fn([], seed.length, argument),
              i = matchIndexes.length;
          while (i--) {
            if (seed[(j = matchIndexes[i])]) {
              seed[j] = !(matches[j] = seed[j]);
            }
          }
        });
      });
    }
    function testContext(context) {
      return context && typeof context.getElementsByTagName !== "undefined" && context;
    }
    support = Sizzle.support = {};
    isXML = Sizzle.isXML = function(elem) {
      var documentElement = elem && (elem.ownerDocument || elem).documentElement;
      return documentElement ? documentElement.nodeName !== "HTML" : false;
    };
    setDocument = Sizzle.setDocument = function(node) {
      var hasCompare,
          parent,
          doc = node ? node.ownerDocument || node : preferredDoc;
      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
      }
      document = doc;
      docElem = doc.documentElement;
      parent = doc.defaultView;
      if (parent && parent !== parent.top) {
        if (parent.addEventListener) {
          parent.addEventListener("unload", unloadHandler, false);
        } else if (parent.attachEvent) {
          parent.attachEvent("onunload", unloadHandler);
        }
      }
      documentIsHTML = !isXML(doc);
      support.attributes = assert(function(div) {
        div.className = "i";
        return !div.getAttribute("className");
      });
      support.getElementsByTagName = assert(function(div) {
        div.appendChild(doc.createComment(""));
        return !div.getElementsByTagName("*").length;
      });
      support.getElementsByClassName = rnative.test(doc.getElementsByClassName);
      support.getById = assert(function(div) {
        docElem.appendChild(div).id = expando;
        return !doc.getElementsByName || !doc.getElementsByName(expando).length;
      });
      if (support.getById) {
        Expr.find["ID"] = function(id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var m = context.getElementById(id);
            return m && m.parentNode ? [m] : [];
          }
        };
        Expr.filter["ID"] = function(id) {
          var attrId = id.replace(runescape, funescape);
          return function(elem) {
            return elem.getAttribute("id") === attrId;
          };
        };
      } else {
        delete Expr.find["ID"];
        Expr.filter["ID"] = function(id) {
          var attrId = id.replace(runescape, funescape);
          return function(elem) {
            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
            return node && node.value === attrId;
          };
        };
      }
      Expr.find["TAG"] = support.getElementsByTagName ? function(tag, context) {
        if (typeof context.getElementsByTagName !== "undefined") {
          return context.getElementsByTagName(tag);
        } else if (support.qsa) {
          return context.querySelectorAll(tag);
        }
      } : function(tag, context) {
        var elem,
            tmp = [],
            i = 0,
            results = context.getElementsByTagName(tag);
        if (tag === "*") {
          while ((elem = results[i++])) {
            if (elem.nodeType === 1) {
              tmp.push(elem);
            }
          }
          return tmp;
        }
        return results;
      };
      Expr.find["CLASS"] = support.getElementsByClassName && function(className, context) {
        if (documentIsHTML) {
          return context.getElementsByClassName(className);
        }
      };
      rbuggyMatches = [];
      rbuggyQSA = [];
      if ((support.qsa = rnative.test(doc.querySelectorAll))) {
        assert(function(div) {
          docElem.appendChild(div).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\f]' msallowcapture=''>" + "<option selected=''></option></select>";
          if (div.querySelectorAll("[msallowcapture^='']").length) {
            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
          }
          if (!div.querySelectorAll("[selected]").length) {
            rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
          }
          if (!div.querySelectorAll("[id~=" + expando + "-]").length) {
            rbuggyQSA.push("~=");
          }
          if (!div.querySelectorAll(":checked").length) {
            rbuggyQSA.push(":checked");
          }
          if (!div.querySelectorAll("a#" + expando + "+*").length) {
            rbuggyQSA.push(".#.+[+~]");
          }
        });
        assert(function(div) {
          var input = doc.createElement("input");
          input.setAttribute("type", "hidden");
          div.appendChild(input).setAttribute("name", "D");
          if (div.querySelectorAll("[name=d]").length) {
            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
          }
          if (!div.querySelectorAll(":enabled").length) {
            rbuggyQSA.push(":enabled", ":disabled");
          }
          div.querySelectorAll("*,:x");
          rbuggyQSA.push(",.*:");
        });
      }
      if ((support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)))) {
        assert(function(div) {
          support.disconnectedMatch = matches.call(div, "div");
          matches.call(div, "[s!='']:x");
          rbuggyMatches.push("!=", pseudos);
        });
      }
      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
      hasCompare = rnative.test(docElem.compareDocumentPosition);
      contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
        var adown = a.nodeType === 9 ? a.documentElement : a,
            bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      } : function(a, b) {
        if (b) {
          while ((b = b.parentNode)) {
            if (b === a) {
              return true;
            }
          }
        }
        return false;
      };
      sortOrder = hasCompare ? function(a, b) {
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
        if (compare) {
          return compare;
        }
        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
        if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {
          if (a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
            return -1;
          }
          if (b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
            return 1;
          }
          return sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0;
        }
        return compare & 4 ? -1 : 1;
      } : function(a, b) {
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        var cur,
            i = 0,
            aup = a.parentNode,
            bup = b.parentNode,
            ap = [a],
            bp = [b];
        if (!aup || !bup) {
          return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0;
        } else if (aup === bup) {
          return siblingCheck(a, b);
        }
        cur = a;
        while ((cur = cur.parentNode)) {
          ap.unshift(cur);
        }
        cur = b;
        while ((cur = cur.parentNode)) {
          bp.unshift(cur);
        }
        while (ap[i] === bp[i]) {
          i++;
        }
        return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
      };
      return doc;
    };
    Sizzle.matches = function(expr, elements) {
      return Sizzle(expr, null, null, elements);
    };
    Sizzle.matchesSelector = function(elem, expr) {
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      expr = expr.replace(rattributeQuotes, "='$1']");
      if (support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
          var ret = matches.call(elem, expr);
          if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
            return ret;
          }
        } catch (e) {}
      }
      return Sizzle(expr, document, null, [elem]).length > 0;
    };
    Sizzle.contains = function(context, elem) {
      if ((context.ownerDocument || context) !== document) {
        setDocument(context);
      }
      return contains(context, elem);
    };
    Sizzle.attr = function(elem, name) {
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      var fn = Expr.attrHandle[name.toLowerCase()],
          val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
    };
    Sizzle.error = function(msg) {
      throw new Error("Syntax error, unrecognized expression: " + msg);
    };
    Sizzle.uniqueSort = function(results) {
      var elem,
          duplicates = [],
          j = 0,
          i = 0;
      hasDuplicate = !support.detectDuplicates;
      sortInput = !support.sortStable && results.slice(0);
      results.sort(sortOrder);
      if (hasDuplicate) {
        while ((elem = results[i++])) {
          if (elem === results[i]) {
            j = duplicates.push(i);
          }
        }
        while (j--) {
          results.splice(duplicates[j], 1);
        }
      }
      sortInput = null;
      return results;
    };
    getText = Sizzle.getText = function(elem) {
      var node,
          ret = "",
          i = 0,
          nodeType = elem.nodeType;
      if (!nodeType) {
        while ((node = elem[i++])) {
          ret += getText(node);
        }
      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        if (typeof elem.textContent === "string") {
          return elem.textContent;
        } else {
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
          }
        }
      } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
      }
      return ret;
    };
    Expr = Sizzle.selectors = {
      cacheLength: 50,
      createPseudo: markFunction,
      match: matchExpr,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: true
        },
        " ": {dir: "parentNode"},
        "+": {
          dir: "previousSibling",
          first: true
        },
        "~": {dir: "previousSibling"}
      },
      preFilter: {
        "ATTR": function(match) {
          match[1] = match[1].replace(runescape, funescape);
          match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
          if (match[2] === "~=") {
            match[3] = " " + match[3] + " ";
          }
          return match.slice(0, 4);
        },
        "CHILD": function(match) {
          match[1] = match[1].toLowerCase();
          if (match[1].slice(0, 3) === "nth") {
            if (!match[3]) {
              Sizzle.error(match[0]);
            }
            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
            match[5] = +((match[7] + match[8]) || match[3] === "odd");
          } else if (match[3]) {
            Sizzle.error(match[0]);
          }
          return match;
        },
        "PSEUDO": function(match) {
          var excess,
              unquoted = !match[6] && match[2];
          if (matchExpr["CHILD"].test(match[0])) {
            return null;
          }
          if (match[3]) {
            match[2] = match[4] || match[5] || "";
          } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
            match[0] = match[0].slice(0, excess);
            match[2] = unquoted.slice(0, excess);
          }
          return match.slice(0, 3);
        }
      },
      filter: {
        "TAG": function(nodeNameSelector) {
          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
          return nodeNameSelector === "*" ? function() {
            return true;
          } : function(elem) {
            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
          };
        },
        "CLASS": function(className) {
          var pattern = classCache[className + " "];
          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
            return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
          });
        },
        "ATTR": function(name, operator, check) {
          return function(elem) {
            var result = Sizzle.attr(elem, name);
            if (result == null) {
              return operator === "!=";
            }
            if (!operator) {
              return true;
            }
            result += "";
            return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
          };
        },
        "CHILD": function(type, what, argument, first, last) {
          var simple = type.slice(0, 3) !== "nth",
              forward = type.slice(-4) !== "last",
              ofType = what === "of-type";
          return first === 1 && last === 0 ? function(elem) {
            return !!elem.parentNode;
          } : function(elem, context, xml) {
            var cache,
                outerCache,
                node,
                diff,
                nodeIndex,
                start,
                dir = simple !== forward ? "nextSibling" : "previousSibling",
                parent = elem.parentNode,
                name = ofType && elem.nodeName.toLowerCase(),
                useCache = !xml && !ofType;
            if (parent) {
              if (simple) {
                while (dir) {
                  node = elem;
                  while ((node = node[dir])) {
                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                      return false;
                    }
                  }
                  start = dir = type === "only" && !start && "nextSibling";
                }
                return true;
              }
              start = [forward ? parent.firstChild : parent.lastChild];
              if (forward && useCache) {
                outerCache = parent[expando] || (parent[expando] = {});
                cache = outerCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = cache[0] === dirruns && cache[2];
                node = nodeIndex && parent.childNodes[nodeIndex];
                while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
                  if (node.nodeType === 1 && ++diff && node === elem) {
                    outerCache[type] = [dirruns, nodeIndex, diff];
                    break;
                  }
                }
              } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {
                diff = cache[1];
              } else {
                while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
                  if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                    if (useCache) {
                      (node[expando] || (node[expando] = {}))[type] = [dirruns, diff];
                    }
                    if (node === elem) {
                      break;
                    }
                  }
                }
              }
              diff -= last;
              return diff === first || (diff % first === 0 && diff / first >= 0);
            }
          };
        },
        "PSEUDO": function(pseudo, argument) {
          var args,
              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
          if (fn[expando]) {
            return fn(argument);
          }
          if (fn.length > 1) {
            args = [pseudo, pseudo, "", argument];
            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
              var idx,
                  matched = fn(seed, argument),
                  i = matched.length;
              while (i--) {
                idx = indexOf(seed, matched[i]);
                seed[idx] = !(matches[idx] = matched[i]);
              }
            }) : function(elem) {
              return fn(elem, 0, args);
            };
          }
          return fn;
        }
      },
      pseudos: {
        "not": markFunction(function(selector) {
          var input = [],
              results = [],
              matcher = compile(selector.replace(rtrim, "$1"));
          return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
            var elem,
                unmatched = matcher(seed, null, xml, []),
                i = seed.length;
            while (i--) {
              if ((elem = unmatched[i])) {
                seed[i] = !(matches[i] = elem);
              }
            }
          }) : function(elem, context, xml) {
            input[0] = elem;
            matcher(input, null, xml, results);
            input[0] = null;
            return !results.pop();
          };
        }),
        "has": markFunction(function(selector) {
          return function(elem) {
            return Sizzle(selector, elem).length > 0;
          };
        }),
        "contains": markFunction(function(text) {
          text = text.replace(runescape, funescape);
          return function(elem) {
            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
          };
        }),
        "lang": markFunction(function(lang) {
          if (!ridentifier.test(lang || "")) {
            Sizzle.error("unsupported lang: " + lang);
          }
          lang = lang.replace(runescape, funescape).toLowerCase();
          return function(elem) {
            var elemLang;
            do {
              if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang"))) {
                elemLang = elemLang.toLowerCase();
                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);
            return false;
          };
        }),
        "target": function(elem) {
          var hash = window.location && window.location.hash;
          return hash && hash.slice(1) === elem.id;
        },
        "root": function(elem) {
          return elem === docElem;
        },
        "focus": function(elem) {
          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        "enabled": function(elem) {
          return elem.disabled === false;
        },
        "disabled": function(elem) {
          return elem.disabled === true;
        },
        "checked": function(elem) {
          var nodeName = elem.nodeName.toLowerCase();
          return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
        },
        "selected": function(elem) {
          if (elem.parentNode) {
            elem.parentNode.selectedIndex;
          }
          return elem.selected === true;
        },
        "empty": function(elem) {
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeType < 6) {
              return false;
            }
          }
          return true;
        },
        "parent": function(elem) {
          return !Expr.pseudos["empty"](elem);
        },
        "header": function(elem) {
          return rheader.test(elem.nodeName);
        },
        "input": function(elem) {
          return rinputs.test(elem.nodeName);
        },
        "button": function(elem) {
          var name = elem.nodeName.toLowerCase();
          return name === "input" && elem.type === "button" || name === "button";
        },
        "text": function(elem) {
          var attr;
          return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
        },
        "first": createPositionalPseudo(function() {
          return [0];
        }),
        "last": createPositionalPseudo(function(matchIndexes, length) {
          return [length - 1];
        }),
        "eq": createPositionalPseudo(function(matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),
        "even": createPositionalPseudo(function(matchIndexes, length) {
          var i = 0;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "odd": createPositionalPseudo(function(matchIndexes, length) {
          var i = 1;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; --i >= 0; ) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; ++i < length; ) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        })
      }
    };
    Expr.pseudos["nth"] = Expr.pseudos["eq"];
    for (i in {
      radio: true,
      checkbox: true,
      file: true,
      password: true,
      image: true
    }) {
      Expr.pseudos[i] = createInputPseudo(i);
    }
    for (i in {
      submit: true,
      reset: true
    }) {
      Expr.pseudos[i] = createButtonPseudo(i);
    }
    function setFilters() {}
    setFilters.prototype = Expr.filters = Expr.pseudos;
    Expr.setFilters = new setFilters();
    tokenize = Sizzle.tokenize = function(selector, parseOnly) {
      var matched,
          match,
          tokens,
          type,
          soFar,
          groups,
          preFilters,
          cached = tokenCache[selector + " "];
      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }
      soFar = selector;
      groups = [];
      preFilters = Expr.preFilter;
      while (soFar) {
        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            soFar = soFar.slice(match[0].length) || soFar;
          }
          groups.push((tokens = []));
        }
        matched = false;
        if ((match = rcombinators.exec(soFar))) {
          matched = match.shift();
          tokens.push({
            value: matched,
            type: match[0].replace(rtrim, " ")
          });
          soFar = soFar.slice(matched.length);
        }
        for (type in Expr.filter) {
          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type: type,
              matches: match
            });
            soFar = soFar.slice(matched.length);
          }
        }
        if (!matched) {
          break;
        }
      }
      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
    };
    function toSelector(tokens) {
      var i = 0,
          len = tokens.length,
          selector = "";
      for (; i < len; i++) {
        selector += tokens[i].value;
      }
      return selector;
    }
    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir,
          checkNonElements = base && dir === "parentNode",
          doneName = done++;
      return combinator.first ? function(elem, context, xml) {
        while ((elem = elem[dir])) {
          if (elem.nodeType === 1 || checkNonElements) {
            return matcher(elem, context, xml);
          }
        }
      } : function(elem, context, xml) {
        var oldCache,
            outerCache,
            newCache = [dirruns, doneName];
        if (xml) {
          while ((elem = elem[dir])) {
            if (elem.nodeType === 1 || checkNonElements) {
              if (matcher(elem, context, xml)) {
                return true;
              }
            }
          }
        } else {
          while ((elem = elem[dir])) {
            if (elem.nodeType === 1 || checkNonElements) {
              outerCache = elem[expando] || (elem[expando] = {});
              if ((oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                return (newCache[2] = oldCache[2]);
              } else {
                outerCache[dir] = newCache;
                if ((newCache[2] = matcher(elem, context, xml))) {
                  return true;
                }
              }
            }
          }
        }
      };
    }
    function elementMatcher(matchers) {
      return matchers.length > 1 ? function(elem, context, xml) {
        var i = matchers.length;
        while (i--) {
          if (!matchers[i](elem, context, xml)) {
            return false;
          }
        }
        return true;
      } : matchers[0];
    }
    function multipleContexts(selector, contexts, results) {
      var i = 0,
          len = contexts.length;
      for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
      }
      return results;
    }
    function condense(unmatched, map, filter, context, xml) {
      var elem,
          newUnmatched = [],
          i = 0,
          len = unmatched.length,
          mapped = map != null;
      for (; i < len; i++) {
        if ((elem = unmatched[i])) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);
            if (mapped) {
              map.push(i);
            }
          }
        }
      }
      return newUnmatched;
    }
    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
      if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
      }
      if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }
      return markFunction(function(seed, results, context, xml) {
        var temp,
            i,
            elem,
            preMap = [],
            postMap = [],
            preexisting = results.length,
            elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
            matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
            matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
        if (matcher) {
          matcher(matcherIn, matcherOut, context, xml);
        }
        if (postFilter) {
          temp = condense(matcherOut, postMap);
          postFilter(temp, [], context, xml);
          i = temp.length;
          while (i--) {
            if ((elem = temp[i])) {
              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
          }
        }
        if (seed) {
          if (postFinder || preFilter) {
            if (postFinder) {
              temp = [];
              i = matcherOut.length;
              while (i--) {
                if ((elem = matcherOut[i])) {
                  temp.push((matcherIn[i] = elem));
                }
              }
              postFinder(null, (matcherOut = []), temp, xml);
            }
            i = matcherOut.length;
            while (i--) {
              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          }
        } else {
          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }
    function matcherFromTokens(tokens) {
      var checkContext,
          matcher,
          j,
          len = tokens.length,
          leadingRelative = Expr.relative[tokens[0].type],
          implicitRelative = leadingRelative || Expr.relative[" "],
          i = leadingRelative ? 1 : 0,
          matchContext = addCombinator(function(elem) {
            return elem === checkContext;
          }, implicitRelative, true),
          matchAnyContext = addCombinator(function(elem) {
            return indexOf(checkContext, elem) > -1;
          }, implicitRelative, true),
          matchers = [function(elem, context, xml) {
            var ret = (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
            checkContext = null;
            return ret;
          }];
      for (; i < len; i++) {
        if ((matcher = Expr.relative[tokens[i].type])) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
          if (matcher[expando]) {
            j = ++i;
            for (; j < len; j++) {
              if (Expr.relative[tokens[j].type]) {
                break;
              }
            }
            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({value: tokens[i - 2].type === " " ? "*" : ""})).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && toSelector(tokens));
          }
          matchers.push(matcher);
        }
      }
      return elementMatcher(matchers);
    }
    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      var bySet = setMatchers.length > 0,
          byElement = elementMatchers.length > 0,
          superMatcher = function(seed, context, xml, results, outermost) {
            var elem,
                j,
                matcher,
                matchedCount = 0,
                i = "0",
                unmatched = seed && [],
                setMatched = [],
                contextBackup = outermostContext,
                elems = seed || byElement && Expr.find["TAG"]("*", outermost),
                dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
                len = elems.length;
            if (outermost) {
              outermostContext = context !== document && context;
            }
            for (; i !== len && (elem = elems[i]) != null; i++) {
              if (byElement && elem) {
                j = 0;
                while ((matcher = elementMatchers[j++])) {
                  if (matcher(elem, context, xml)) {
                    results.push(elem);
                    break;
                  }
                }
                if (outermost) {
                  dirruns = dirrunsUnique;
                }
              }
              if (bySet) {
                if ((elem = !matcher && elem)) {
                  matchedCount--;
                }
                if (seed) {
                  unmatched.push(elem);
                }
              }
            }
            matchedCount += i;
            if (bySet && i !== matchedCount) {
              j = 0;
              while ((matcher = setMatchers[j++])) {
                matcher(unmatched, setMatched, context, xml);
              }
              if (seed) {
                if (matchedCount > 0) {
                  while (i--) {
                    if (!(unmatched[i] || setMatched[i])) {
                      setMatched[i] = pop.call(results);
                    }
                  }
                }
                setMatched = condense(setMatched);
              }
              push.apply(results, setMatched);
              if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {
                Sizzle.uniqueSort(results);
              }
            }
            if (outermost) {
              dirruns = dirrunsUnique;
              outermostContext = contextBackup;
            }
            return unmatched;
          };
      return bySet ? markFunction(superMatcher) : superMatcher;
    }
    compile = Sizzle.compile = function(selector, match) {
      var i,
          setMatchers = [],
          elementMatchers = [],
          cached = compilerCache[selector + " "];
      if (!cached) {
        if (!match) {
          match = tokenize(selector);
        }
        i = match.length;
        while (i--) {
          cached = matcherFromTokens(match[i]);
          if (cached[expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        }
        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
        cached.selector = selector;
      }
      return cached;
    };
    select = Sizzle.select = function(selector, context, results, seed) {
      var i,
          tokens,
          token,
          type,
          find,
          compiled = typeof selector === "function" && selector,
          match = !seed && tokenize((selector = compiled.selector || selector));
      results = results || [];
      if (match.length === 1) {
        tokens = match[0] = match[0].slice(0);
        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
          context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
          if (!context) {
            return results;
          } else if (compiled) {
            context = context.parentNode;
          }
          selector = selector.slice(tokens.shift().value.length);
        }
        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
        while (i--) {
          token = tokens[i];
          if (Expr.relative[(type = token.type)]) {
            break;
          }
          if ((find = Expr.find[type])) {
            if ((seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
              tokens.splice(i, 1);
              selector = seed.length && toSelector(tokens);
              if (!selector) {
                push.apply(results, seed);
                return results;
              }
              break;
            }
          }
        }
      }
      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context);
      return results;
    };
    support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
    support.detectDuplicates = !!hasDuplicate;
    setDocument();
    support.sortDetached = assert(function(div1) {
      return div1.compareDocumentPosition(document.createElement("div")) & 1;
    });
    if (!assert(function(div) {
      div.innerHTML = "<a href='#'></a>";
      return div.firstChild.getAttribute("href") === "#";
    })) {
      addHandle("type|href|height|width", function(elem, name, isXML) {
        if (!isXML) {
          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        }
      });
    }
    if (!support.attributes || !assert(function(div) {
      div.innerHTML = "<input/>";
      div.firstChild.setAttribute("value", "");
      return div.firstChild.getAttribute("value") === "";
    })) {
      addHandle("value", function(elem, name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === "input") {
          return elem.defaultValue;
        }
      });
    }
    if (!assert(function(div) {
      return div.getAttribute("disabled") == null;
    })) {
      addHandle(booleans, function(elem, name, isXML) {
        var val;
        if (!isXML) {
          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        }
      });
    }
    return Sizzle;
  })(window);
  jQuery.find = Sizzle;
  jQuery.expr = Sizzle.selectors;
  jQuery.expr[":"] = jQuery.expr.pseudos;
  jQuery.unique = Sizzle.uniqueSort;
  jQuery.text = Sizzle.getText;
  jQuery.isXMLDoc = Sizzle.isXML;
  jQuery.contains = Sizzle.contains;
  var rneedsContext = jQuery.expr.match.needsContext;
  var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);
  var risSimple = /^.[^:#\[\.,]*$/;
  function winnow(elements, qualifier, not) {
    if (jQuery.isFunction(qualifier)) {
      return jQuery.grep(elements, function(elem, i) {
        return !!qualifier.call(elem, i, elem) !== not;
      });
    }
    if (qualifier.nodeType) {
      return jQuery.grep(elements, function(elem) {
        return (elem === qualifier) !== not;
      });
    }
    if (typeof qualifier === "string") {
      if (risSimple.test(qualifier)) {
        return jQuery.filter(qualifier, elements, not);
      }
      qualifier = jQuery.filter(qualifier, elements);
    }
    return jQuery.grep(elements, function(elem) {
      return (indexOf.call(qualifier, elem) >= 0) !== not;
    });
  }
  jQuery.filter = function(expr, elems, not) {
    var elem = elems[0];
    if (not) {
      expr = ":not(" + expr + ")";
    }
    return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
      return elem.nodeType === 1;
    }));
  };
  jQuery.fn.extend({
    find: function(selector) {
      var i,
          len = this.length,
          ret = [],
          self = this;
      if (typeof selector !== "string") {
        return this.pushStack(jQuery(selector).filter(function() {
          for (i = 0; i < len; i++) {
            if (jQuery.contains(self[i], this)) {
              return true;
            }
          }
        }));
      }
      for (i = 0; i < len; i++) {
        jQuery.find(selector, self[i], ret);
      }
      ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
      ret.selector = this.selector ? this.selector + " " + selector : selector;
      return ret;
    },
    filter: function(selector) {
      return this.pushStack(winnow(this, selector || [], false));
    },
    not: function(selector) {
      return this.pushStack(winnow(this, selector || [], true));
    },
    is: function(selector) {
      return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
    }
  });
  var rootjQuery,
      rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
      init = jQuery.fn.init = function(selector, context) {
        var match,
            elem;
        if (!selector) {
          return this;
        }
        if (typeof selector === "string") {
          if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
            match = [null, selector, null];
          } else {
            match = rquickExpr.exec(selector);
          }
          if (match && (match[1] || !context)) {
            if (match[1]) {
              context = context instanceof jQuery ? context[0] : context;
              jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
              if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                for (match in context) {
                  if (jQuery.isFunction(this[match])) {
                    this[match](context[match]);
                  } else {
                    this.attr(match, context[match]);
                  }
                }
              }
              return this;
            } else {
              elem = document.getElementById(match[2]);
              if (elem && elem.parentNode) {
                this.length = 1;
                this[0] = elem;
              }
              this.context = document;
              this.selector = selector;
              return this;
            }
          } else if (!context || context.jquery) {
            return (context || rootjQuery).find(selector);
          } else {
            return this.constructor(context).find(selector);
          }
        } else if (selector.nodeType) {
          this.context = this[0] = selector;
          this.length = 1;
          return this;
        } else if (jQuery.isFunction(selector)) {
          return typeof rootjQuery.ready !== "undefined" ? rootjQuery.ready(selector) : selector(jQuery);
        }
        if (selector.selector !== undefined) {
          this.selector = selector.selector;
          this.context = selector.context;
        }
        return jQuery.makeArray(selector, this);
      };
  init.prototype = jQuery.fn;
  rootjQuery = jQuery(document);
  var rparentsprev = /^(?:parents|prev(?:Until|All))/,
      guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
      };
  jQuery.extend({
    dir: function(elem, dir, until) {
      var matched = [],
          truncate = until !== undefined;
      while ((elem = elem[dir]) && elem.nodeType !== 9) {
        if (elem.nodeType === 1) {
          if (truncate && jQuery(elem).is(until)) {
            break;
          }
          matched.push(elem);
        }
      }
      return matched;
    },
    sibling: function(n, elem) {
      var matched = [];
      for (; n; n = n.nextSibling) {
        if (n.nodeType === 1 && n !== elem) {
          matched.push(n);
        }
      }
      return matched;
    }
  });
  jQuery.fn.extend({
    has: function(target) {
      var targets = jQuery(target, this),
          l = targets.length;
      return this.filter(function() {
        var i = 0;
        for (; i < l; i++) {
          if (jQuery.contains(this, targets[i])) {
            return true;
          }
        }
      });
    },
    closest: function(selectors, context) {
      var cur,
          i = 0,
          l = this.length,
          matched = [],
          pos = rneedsContext.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
      for (; i < l; i++) {
        for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
          if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
            matched.push(cur);
            break;
          }
        }
      }
      return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);
    },
    index: function(elem) {
      if (!elem) {
        return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1;
      }
      if (typeof elem === "string") {
        return indexOf.call(jQuery(elem), this[0]);
      }
      return indexOf.call(this, elem.jquery ? elem[0] : elem);
    },
    add: function(selector, context) {
      return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))));
    },
    addBack: function(selector) {
      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
    }
  });
  function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {}
    return cur;
  }
  jQuery.each({
    parent: function(elem) {
      var parent = elem.parentNode;
      return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function(elem) {
      return jQuery.dir(elem, "parentNode");
    },
    parentsUntil: function(elem, i, until) {
      return jQuery.dir(elem, "parentNode", until);
    },
    next: function(elem) {
      return sibling(elem, "nextSibling");
    },
    prev: function(elem) {
      return sibling(elem, "previousSibling");
    },
    nextAll: function(elem) {
      return jQuery.dir(elem, "nextSibling");
    },
    prevAll: function(elem) {
      return jQuery.dir(elem, "previousSibling");
    },
    nextUntil: function(elem, i, until) {
      return jQuery.dir(elem, "nextSibling", until);
    },
    prevUntil: function(elem, i, until) {
      return jQuery.dir(elem, "previousSibling", until);
    },
    siblings: function(elem) {
      return jQuery.sibling((elem.parentNode || {}).firstChild, elem);
    },
    children: function(elem) {
      return jQuery.sibling(elem.firstChild);
    },
    contents: function(elem) {
      return elem.contentDocument || jQuery.merge([], elem.childNodes);
    }
  }, function(name, fn) {
    jQuery.fn[name] = function(until, selector) {
      var matched = jQuery.map(this, fn, until);
      if (name.slice(-5) !== "Until") {
        selector = until;
      }
      if (selector && typeof selector === "string") {
        matched = jQuery.filter(selector, matched);
      }
      if (this.length > 1) {
        if (!guaranteedUnique[name]) {
          jQuery.unique(matched);
        }
        if (rparentsprev.test(name)) {
          matched.reverse();
        }
      }
      return this.pushStack(matched);
    };
  });
  var rnotwhite = (/\S+/g);
  var optionsCache = {};
  function createOptions(options) {
    var object = optionsCache[options] = {};
    jQuery.each(options.match(rnotwhite) || [], function(_, flag) {
      object[flag] = true;
    });
    return object;
  }
  jQuery.Callbacks = function(options) {
    options = typeof options === "string" ? (optionsCache[options] || createOptions(options)) : jQuery.extend({}, options);
    var memory,
        fired,
        firing,
        firingStart,
        firingLength,
        firingIndex,
        list = [],
        stack = !options.once && [],
        fire = function(data) {
          memory = options.memory && data;
          fired = true;
          firingIndex = firingStart || 0;
          firingStart = 0;
          firingLength = list.length;
          firing = true;
          for (; list && firingIndex < firingLength; firingIndex++) {
            if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {
              memory = false;
              break;
            }
          }
          firing = false;
          if (list) {
            if (stack) {
              if (stack.length) {
                fire(stack.shift());
              }
            } else if (memory) {
              list = [];
            } else {
              self.disable();
            }
          }
        },
        self = {
          add: function() {
            if (list) {
              var start = list.length;
              (function add(args) {
                jQuery.each(args, function(_, arg) {
                  var type = jQuery.type(arg);
                  if (type === "function") {
                    if (!options.unique || !self.has(arg)) {
                      list.push(arg);
                    }
                  } else if (arg && arg.length && type !== "string") {
                    add(arg);
                  }
                });
              })(arguments);
              if (firing) {
                firingLength = list.length;
              } else if (memory) {
                firingStart = start;
                fire(memory);
              }
            }
            return this;
          },
          remove: function() {
            if (list) {
              jQuery.each(arguments, function(_, arg) {
                var index;
                while ((index = jQuery.inArray(arg, list, index)) > -1) {
                  list.splice(index, 1);
                  if (firing) {
                    if (index <= firingLength) {
                      firingLength--;
                    }
                    if (index <= firingIndex) {
                      firingIndex--;
                    }
                  }
                }
              });
            }
            return this;
          },
          has: function(fn) {
            return fn ? jQuery.inArray(fn, list) > -1 : !!(list && list.length);
          },
          empty: function() {
            list = [];
            firingLength = 0;
            return this;
          },
          disable: function() {
            list = stack = memory = undefined;
            return this;
          },
          disabled: function() {
            return !list;
          },
          lock: function() {
            stack = undefined;
            if (!memory) {
              self.disable();
            }
            return this;
          },
          locked: function() {
            return !stack;
          },
          fireWith: function(context, args) {
            if (list && (!fired || stack)) {
              args = args || [];
              args = [context, args.slice ? args.slice() : args];
              if (firing) {
                stack.push(args);
              } else {
                fire(args);
              }
            }
            return this;
          },
          fire: function() {
            self.fireWith(this, arguments);
            return this;
          },
          fired: function() {
            return !!fired;
          }
        };
    return self;
  };
  jQuery.extend({
    Deferred: function(func) {
      var tuples = [["resolve", "done", jQuery.Callbacks("once memory"), "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), "rejected"], ["notify", "progress", jQuery.Callbacks("memory")]],
          state = "pending",
          promise = {
            state: function() {
              return state;
            },
            always: function() {
              deferred.done(arguments).fail(arguments);
              return this;
            },
            then: function() {
              var fns = arguments;
              return jQuery.Deferred(function(newDefer) {
                jQuery.each(tuples, function(i, tuple) {
                  var fn = jQuery.isFunction(fns[i]) && fns[i];
                  deferred[tuple[1]](function() {
                    var returned = fn && fn.apply(this, arguments);
                    if (returned && jQuery.isFunction(returned.promise)) {
                      returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);
                    } else {
                      newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);
                    }
                  });
                });
                fns = null;
              }).promise();
            },
            promise: function(obj) {
              return obj != null ? jQuery.extend(obj, promise) : promise;
            }
          },
          deferred = {};
      promise.pipe = promise.then;
      jQuery.each(tuples, function(i, tuple) {
        var list = tuple[2],
            stateString = tuple[3];
        promise[tuple[1]] = list.add;
        if (stateString) {
          list.add(function() {
            state = stateString;
          }, tuples[i ^ 1][2].disable, tuples[2][2].lock);
        }
        deferred[tuple[0]] = function() {
          deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments);
          return this;
        };
        deferred[tuple[0] + "With"] = list.fireWith;
      });
      promise.promise(deferred);
      if (func) {
        func.call(deferred, deferred);
      }
      return deferred;
    },
    when: function(subordinate) {
      var i = 0,
          resolveValues = slice.call(arguments),
          length = resolveValues.length,
          remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,
          deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
          updateFunc = function(i, contexts, values) {
            return function(value) {
              contexts[i] = this;
              values[i] = arguments.length > 1 ? slice.call(arguments) : value;
              if (values === progressValues) {
                deferred.notifyWith(contexts, values);
              } else if (!(--remaining)) {
                deferred.resolveWith(contexts, values);
              }
            };
          },
          progressValues,
          progressContexts,
          resolveContexts;
      if (length > 1) {
        progressValues = new Array(length);
        progressContexts = new Array(length);
        resolveContexts = new Array(length);
        for (; i < length; i++) {
          if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
            resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));
          } else {
            --remaining;
          }
        }
      }
      if (!remaining) {
        deferred.resolveWith(resolveContexts, resolveValues);
      }
      return deferred.promise();
    }
  });
  var readyList;
  jQuery.fn.ready = function(fn) {
    jQuery.ready.promise().done(fn);
    return this;
  };
  jQuery.extend({
    isReady: false,
    readyWait: 1,
    holdReady: function(hold) {
      if (hold) {
        jQuery.readyWait++;
      } else {
        jQuery.ready(true);
      }
    },
    ready: function(wait) {
      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
        return;
      }
      jQuery.isReady = true;
      if (wait !== true && --jQuery.readyWait > 0) {
        return;
      }
      readyList.resolveWith(document, [jQuery]);
      if (jQuery.fn.triggerHandler) {
        jQuery(document).triggerHandler("ready");
        jQuery(document).off("ready");
      }
    }
  });
  function completed() {
    document.removeEventListener("DOMContentLoaded", completed, false);
    window.removeEventListener("load", completed, false);
    jQuery.ready();
  }
  jQuery.ready.promise = function(obj) {
    if (!readyList) {
      readyList = jQuery.Deferred();
      if (document.readyState === "complete") {
        setTimeout(jQuery.ready);
      } else {
        document.addEventListener("DOMContentLoaded", completed, false);
        window.addEventListener("load", completed, false);
      }
    }
    return readyList.promise(obj);
  };
  jQuery.ready.promise();
  var access = jQuery.access = function(elems, fn, key, value, chainable, emptyGet, raw) {
    var i = 0,
        len = elems.length,
        bulk = key == null;
    if (jQuery.type(key) === "object") {
      chainable = true;
      for (i in key) {
        jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);
      }
    } else if (value !== undefined) {
      chainable = true;
      if (!jQuery.isFunction(value)) {
        raw = true;
      }
      if (bulk) {
        if (raw) {
          fn.call(elems, value);
          fn = null;
        } else {
          bulk = fn;
          fn = function(elem, key, value) {
            return bulk.call(jQuery(elem), value);
          };
        }
      }
      if (fn) {
        for (; i < len; i++) {
          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        }
      }
    }
    return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;
  };
  jQuery.acceptData = function(owner) {
    return owner.nodeType === 1 || owner.nodeType === 9 || !(+owner.nodeType);
  };
  function Data() {
    Object.defineProperty(this.cache = {}, 0, {get: function() {
        return {};
      }});
    this.expando = jQuery.expando + Data.uid++;
  }
  Data.uid = 1;
  Data.accepts = jQuery.acceptData;
  Data.prototype = {
    key: function(owner) {
      if (!Data.accepts(owner)) {
        return 0;
      }
      var descriptor = {},
          unlock = owner[this.expando];
      if (!unlock) {
        unlock = Data.uid++;
        try {
          descriptor[this.expando] = {value: unlock};
          Object.defineProperties(owner, descriptor);
        } catch (e) {
          descriptor[this.expando] = unlock;
          jQuery.extend(owner, descriptor);
        }
      }
      if (!this.cache[unlock]) {
        this.cache[unlock] = {};
      }
      return unlock;
    },
    set: function(owner, data, value) {
      var prop,
          unlock = this.key(owner),
          cache = this.cache[unlock];
      if (typeof data === "string") {
        cache[data] = value;
      } else {
        if (jQuery.isEmptyObject(cache)) {
          jQuery.extend(this.cache[unlock], data);
        } else {
          for (prop in data) {
            cache[prop] = data[prop];
          }
        }
      }
      return cache;
    },
    get: function(owner, key) {
      var cache = this.cache[this.key(owner)];
      return key === undefined ? cache : cache[key];
    },
    access: function(owner, key, value) {
      var stored;
      if (key === undefined || ((key && typeof key === "string") && value === undefined)) {
        stored = this.get(owner, key);
        return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));
      }
      this.set(owner, key, value);
      return value !== undefined ? value : key;
    },
    remove: function(owner, key) {
      var i,
          name,
          camel,
          unlock = this.key(owner),
          cache = this.cache[unlock];
      if (key === undefined) {
        this.cache[unlock] = {};
      } else {
        if (jQuery.isArray(key)) {
          name = key.concat(key.map(jQuery.camelCase));
        } else {
          camel = jQuery.camelCase(key);
          if (key in cache) {
            name = [key, camel];
          } else {
            name = camel;
            name = name in cache ? [name] : (name.match(rnotwhite) || []);
          }
        }
        i = name.length;
        while (i--) {
          delete cache[name[i]];
        }
      }
    },
    hasData: function(owner) {
      return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {});
    },
    discard: function(owner) {
      if (owner[this.expando]) {
        delete this.cache[owner[this.expando]];
      }
    }
  };
  var data_priv = new Data();
  var data_user = new Data();
  var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      rmultiDash = /([A-Z])/g;
  function dataAttr(elem, key, data) {
    var name;
    if (data === undefined && elem.nodeType === 1) {
      name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase();
      data = elem.getAttribute(name);
      if (typeof data === "string") {
        try {
          data = data === "true" ? true : data === "false" ? false : data === "null" ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;
        } catch (e) {}
        data_user.set(elem, key, data);
      } else {
        data = undefined;
      }
    }
    return data;
  }
  jQuery.extend({
    hasData: function(elem) {
      return data_user.hasData(elem) || data_priv.hasData(elem);
    },
    data: function(elem, name, data) {
      return data_user.access(elem, name, data);
    },
    removeData: function(elem, name) {
      data_user.remove(elem, name);
    },
    _data: function(elem, name, data) {
      return data_priv.access(elem, name, data);
    },
    _removeData: function(elem, name) {
      data_priv.remove(elem, name);
    }
  });
  jQuery.fn.extend({
    data: function(key, value) {
      var i,
          name,
          data,
          elem = this[0],
          attrs = elem && elem.attributes;
      if (key === undefined) {
        if (this.length) {
          data = data_user.get(elem);
          if (elem.nodeType === 1 && !data_priv.get(elem, "hasDataAttrs")) {
            i = attrs.length;
            while (i--) {
              if (attrs[i]) {
                name = attrs[i].name;
                if (name.indexOf("data-") === 0) {
                  name = jQuery.camelCase(name.slice(5));
                  dataAttr(elem, name, data[name]);
                }
              }
            }
            data_priv.set(elem, "hasDataAttrs", true);
          }
        }
        return data;
      }
      if (typeof key === "object") {
        return this.each(function() {
          data_user.set(this, key);
        });
      }
      return access(this, function(value) {
        var data,
            camelKey = jQuery.camelCase(key);
        if (elem && value === undefined) {
          data = data_user.get(elem, key);
          if (data !== undefined) {
            return data;
          }
          data = data_user.get(elem, camelKey);
          if (data !== undefined) {
            return data;
          }
          data = dataAttr(elem, camelKey, undefined);
          if (data !== undefined) {
            return data;
          }
          return;
        }
        this.each(function() {
          var data = data_user.get(this, camelKey);
          data_user.set(this, camelKey, value);
          if (key.indexOf("-") !== -1 && data !== undefined) {
            data_user.set(this, key, value);
          }
        });
      }, null, value, arguments.length > 1, null, true);
    },
    removeData: function(key) {
      return this.each(function() {
        data_user.remove(this, key);
      });
    }
  });
  jQuery.extend({
    queue: function(elem, type, data) {
      var queue;
      if (elem) {
        type = (type || "fx") + "queue";
        queue = data_priv.get(elem, type);
        if (data) {
          if (!queue || jQuery.isArray(data)) {
            queue = data_priv.access(elem, type, jQuery.makeArray(data));
          } else {
            queue.push(data);
          }
        }
        return queue || [];
      }
    },
    dequeue: function(elem, type) {
      type = type || "fx";
      var queue = jQuery.queue(elem, type),
          startLength = queue.length,
          fn = queue.shift(),
          hooks = jQuery._queueHooks(elem, type),
          next = function() {
            jQuery.dequeue(elem, type);
          };
      if (fn === "inprogress") {
        fn = queue.shift();
        startLength--;
      }
      if (fn) {
        if (type === "fx") {
          queue.unshift("inprogress");
        }
        delete hooks.stop;
        fn.call(elem, next, hooks);
      }
      if (!startLength && hooks) {
        hooks.empty.fire();
      }
    },
    _queueHooks: function(elem, type) {
      var key = type + "queueHooks";
      return data_priv.get(elem, key) || data_priv.access(elem, key, {empty: jQuery.Callbacks("once memory").add(function() {
          data_priv.remove(elem, [type + "queue", key]);
        })});
    }
  });
  jQuery.fn.extend({
    queue: function(type, data) {
      var setter = 2;
      if (typeof type !== "string") {
        data = type;
        type = "fx";
        setter--;
      }
      if (arguments.length < setter) {
        return jQuery.queue(this[0], type);
      }
      return data === undefined ? this : this.each(function() {
        var queue = jQuery.queue(this, type, data);
        jQuery._queueHooks(this, type);
        if (type === "fx" && queue[0] !== "inprogress") {
          jQuery.dequeue(this, type);
        }
      });
    },
    dequeue: function(type) {
      return this.each(function() {
        jQuery.dequeue(this, type);
      });
    },
    clearQueue: function(type) {
      return this.queue(type || "fx", []);
    },
    promise: function(type, obj) {
      var tmp,
          count = 1,
          defer = jQuery.Deferred(),
          elements = this,
          i = this.length,
          resolve = function() {
            if (!(--count)) {
              defer.resolveWith(elements, [elements]);
            }
          };
      if (typeof type !== "string") {
        obj = type;
        type = undefined;
      }
      type = type || "fx";
      while (i--) {
        tmp = data_priv.get(elements[i], type + "queueHooks");
        if (tmp && tmp.empty) {
          count++;
          tmp.empty.add(resolve);
        }
      }
      resolve();
      return defer.promise(obj);
    }
  });
  var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;
  var cssExpand = ["Top", "Right", "Bottom", "Left"];
  var isHidden = function(elem, el) {
    elem = el || elem;
    return jQuery.css(elem, "display") === "none" || !jQuery.contains(elem.ownerDocument, elem);
  };
  var rcheckableType = (/^(?:checkbox|radio)$/i);
  (function() {
    var fragment = document.createDocumentFragment(),
        div = fragment.appendChild(document.createElement("div")),
        input = document.createElement("input");
    input.setAttribute("type", "radio");
    input.setAttribute("checked", "checked");
    input.setAttribute("name", "t");
    div.appendChild(input);
    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
    div.innerHTML = "<textarea>x</textarea>";
    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
  })();
  var strundefined = typeof undefined;
  support.focusinBubbles = "onfocusin" in window;
  var rkeyEvent = /^key/,
      rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
      rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
      rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
  function returnTrue() {
    return true;
  }
  function returnFalse() {
    return false;
  }
  function safeActiveElement() {
    try {
      return document.activeElement;
    } catch (err) {}
  }
  jQuery.event = {
    global: {},
    add: function(elem, types, handler, data, selector) {
      var handleObjIn,
          eventHandle,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = data_priv.get(elem);
      if (!elemData) {
        return;
      }
      if (handler.handler) {
        handleObjIn = handler;
        handler = handleObjIn.handler;
        selector = handleObjIn.selector;
      }
      if (!handler.guid) {
        handler.guid = jQuery.guid++;
      }
      if (!(events = elemData.events)) {
        events = elemData.events = {};
      }
      if (!(eventHandle = elemData.handle)) {
        eventHandle = elemData.handle = function(e) {
          return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
        };
      }
      types = (types || "").match(rnotwhite) || [""];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort();
        if (!type) {
          continue;
        }
        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        special = jQuery.event.special[type] || {};
        handleObj = jQuery.extend({
          type: type,
          origType: origType,
          data: data,
          handler: handler,
          guid: handler.guid,
          selector: selector,
          needsContext: selector && jQuery.expr.match.needsContext.test(selector),
          namespace: namespaces.join(".")
        }, handleObjIn);
        if (!(handlers = events[type])) {
          handlers = events[type] = [];
          handlers.delegateCount = 0;
          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
            if (elem.addEventListener) {
              elem.addEventListener(type, eventHandle, false);
            }
          }
        }
        if (special.add) {
          special.add.call(elem, handleObj);
          if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
          }
        }
        if (selector) {
          handlers.splice(handlers.delegateCount++, 0, handleObj);
        } else {
          handlers.push(handleObj);
        }
        jQuery.event.global[type] = true;
      }
    },
    remove: function(elem, types, handler, selector, mappedTypes) {
      var j,
          origCount,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = data_priv.hasData(elem) && data_priv.get(elem);
      if (!elemData || !(events = elemData.events)) {
        return;
      }
      types = (types || "").match(rnotwhite) || [""];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort();
        if (!type) {
          for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
          }
          continue;
        }
        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        handlers = events[type] || [];
        tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
        origCount = j = handlers.length;
        while (j--) {
          handleObj = handlers[j];
          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
            handlers.splice(j, 1);
            if (handleObj.selector) {
              handlers.delegateCount--;
            }
            if (special.remove) {
              special.remove.call(elem, handleObj);
            }
          }
        }
        if (origCount && !handlers.length) {
          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
            jQuery.removeEvent(elem, type, elemData.handle);
          }
          delete events[type];
        }
      }
      if (jQuery.isEmptyObject(events)) {
        delete elemData.handle;
        data_priv.remove(elem, "events");
      }
    },
    trigger: function(event, data, elem, onlyHandlers) {
      var i,
          cur,
          tmp,
          bubbleType,
          ontype,
          handle,
          special,
          eventPath = [elem || document],
          type = hasOwn.call(event, "type") ? event.type : event,
          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
      cur = tmp = elem = elem || document;
      if (elem.nodeType === 3 || elem.nodeType === 8) {
        return;
      }
      if (rfocusMorph.test(type + jQuery.event.triggered)) {
        return;
      }
      if (type.indexOf(".") >= 0) {
        namespaces = type.split(".");
        type = namespaces.shift();
        namespaces.sort();
      }
      ontype = type.indexOf(":") < 0 && "on" + type;
      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
      event.isTrigger = onlyHandlers ? 2 : 3;
      event.namespace = namespaces.join(".");
      event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
      event.result = undefined;
      if (!event.target) {
        event.target = elem;
      }
      data = data == null ? [event] : jQuery.makeArray(data, [event]);
      special = jQuery.event.special[type] || {};
      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
        return;
      }
      if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
        bubbleType = special.delegateType || type;
        if (!rfocusMorph.test(bubbleType + type)) {
          cur = cur.parentNode;
        }
        for (; cur; cur = cur.parentNode) {
          eventPath.push(cur);
          tmp = cur;
        }
        if (tmp === (elem.ownerDocument || document)) {
          eventPath.push(tmp.defaultView || tmp.parentWindow || window);
        }
      }
      i = 0;
      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
        event.type = i > 1 ? bubbleType : special.bindType || type;
        handle = (data_priv.get(cur, "events") || {})[event.type] && data_priv.get(cur, "handle");
        if (handle) {
          handle.apply(cur, data);
        }
        handle = ontype && cur[ontype];
        if (handle && handle.apply && jQuery.acceptData(cur)) {
          event.result = handle.apply(cur, data);
          if (event.result === false) {
            event.preventDefault();
          }
        }
      }
      event.type = type;
      if (!onlyHandlers && !event.isDefaultPrevented()) {
        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && jQuery.acceptData(elem)) {
          if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
            tmp = elem[ontype];
            if (tmp) {
              elem[ontype] = null;
            }
            jQuery.event.triggered = type;
            elem[type]();
            jQuery.event.triggered = undefined;
            if (tmp) {
              elem[ontype] = tmp;
            }
          }
        }
      }
      return event.result;
    },
    dispatch: function(event) {
      event = jQuery.event.fix(event);
      var i,
          j,
          ret,
          matched,
          handleObj,
          handlerQueue = [],
          args = slice.call(arguments),
          handlers = (data_priv.get(this, "events") || {})[event.type] || [],
          special = jQuery.event.special[event.type] || {};
      args[0] = event;
      event.delegateTarget = this;
      if (special.preDispatch && special.preDispatch.call(this, event) === false) {
        return;
      }
      handlerQueue = jQuery.event.handlers.call(this, event, handlers);
      i = 0;
      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
        event.currentTarget = matched.elem;
        j = 0;
        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
          if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {
            event.handleObj = handleObj;
            event.data = handleObj.data;
            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
            if (ret !== undefined) {
              if ((event.result = ret) === false) {
                event.preventDefault();
                event.stopPropagation();
              }
            }
          }
        }
      }
      if (special.postDispatch) {
        special.postDispatch.call(this, event);
      }
      return event.result;
    },
    handlers: function(event, handlers) {
      var i,
          matches,
          sel,
          handleObj,
          handlerQueue = [],
          delegateCount = handlers.delegateCount,
          cur = event.target;
      if (delegateCount && cur.nodeType && (!event.button || event.type !== "click")) {
        for (; cur !== this; cur = cur.parentNode || this) {
          if (cur.disabled !== true || event.type !== "click") {
            matches = [];
            for (i = 0; i < delegateCount; i++) {
              handleObj = handlers[i];
              sel = handleObj.selector + " ";
              if (matches[sel] === undefined) {
                matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;
              }
              if (matches[sel]) {
                matches.push(handleObj);
              }
            }
            if (matches.length) {
              handlerQueue.push({
                elem: cur,
                handlers: matches
              });
            }
          }
        }
      }
      if (delegateCount < handlers.length) {
        handlerQueue.push({
          elem: this,
          handlers: handlers.slice(delegateCount)
        });
      }
      return handlerQueue;
    },
    props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
    fixHooks: {},
    keyHooks: {
      props: "char charCode key keyCode".split(" "),
      filter: function(event, original) {
        if (event.which == null) {
          event.which = original.charCode != null ? original.charCode : original.keyCode;
        }
        return event;
      }
    },
    mouseHooks: {
      props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
      filter: function(event, original) {
        var eventDoc,
            doc,
            body,
            button = original.button;
        if (event.pageX == null && original.clientX != null) {
          eventDoc = event.target.ownerDocument || document;
          doc = eventDoc.documentElement;
          body = eventDoc.body;
          event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
          event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
        }
        if (!event.which && button !== undefined) {
          event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));
        }
        return event;
      }
    },
    fix: function(event) {
      if (event[jQuery.expando]) {
        return event;
      }
      var i,
          prop,
          copy,
          type = event.type,
          originalEvent = event,
          fixHook = this.fixHooks[type];
      if (!fixHook) {
        this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};
      }
      copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
      event = new jQuery.Event(originalEvent);
      i = copy.length;
      while (i--) {
        prop = copy[i];
        event[prop] = originalEvent[prop];
      }
      if (!event.target) {
        event.target = document;
      }
      if (event.target.nodeType === 3) {
        event.target = event.target.parentNode;
      }
      return fixHook.filter ? fixHook.filter(event, originalEvent) : event;
    },
    special: {
      load: {noBubble: true},
      focus: {
        trigger: function() {
          if (this !== safeActiveElement() && this.focus) {
            this.focus();
            return false;
          }
        },
        delegateType: "focusin"
      },
      blur: {
        trigger: function() {
          if (this === safeActiveElement() && this.blur) {
            this.blur();
            return false;
          }
        },
        delegateType: "focusout"
      },
      click: {
        trigger: function() {
          if (this.type === "checkbox" && this.click && jQuery.nodeName(this, "input")) {
            this.click();
            return false;
          }
        },
        _default: function(event) {
          return jQuery.nodeName(event.target, "a");
        }
      },
      beforeunload: {postDispatch: function(event) {
          if (event.result !== undefined && event.originalEvent) {
            event.originalEvent.returnValue = event.result;
          }
        }}
    },
    simulate: function(type, elem, event, bubble) {
      var e = jQuery.extend(new jQuery.Event(), event, {
        type: type,
        isSimulated: true,
        originalEvent: {}
      });
      if (bubble) {
        jQuery.event.trigger(e, null, elem);
      } else {
        jQuery.event.dispatch.call(elem, e);
      }
      if (e.isDefaultPrevented()) {
        event.preventDefault();
      }
    }
  };
  jQuery.removeEvent = function(elem, type, handle) {
    if (elem.removeEventListener) {
      elem.removeEventListener(type, handle, false);
    }
  };
  jQuery.Event = function(src, props) {
    if (!(this instanceof jQuery.Event)) {
      return new jQuery.Event(src, props);
    }
    if (src && src.type) {
      this.originalEvent = src;
      this.type = src.type;
      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;
    } else {
      this.type = src;
    }
    if (props) {
      jQuery.extend(this, props);
    }
    this.timeStamp = src && src.timeStamp || jQuery.now();
    this[jQuery.expando] = true;
  };
  jQuery.Event.prototype = {
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    preventDefault: function() {
      var e = this.originalEvent;
      this.isDefaultPrevented = returnTrue;
      if (e && e.preventDefault) {
        e.preventDefault();
      }
    },
    stopPropagation: function() {
      var e = this.originalEvent;
      this.isPropagationStopped = returnTrue;
      if (e && e.stopPropagation) {
        e.stopPropagation();
      }
    },
    stopImmediatePropagation: function() {
      var e = this.originalEvent;
      this.isImmediatePropagationStopped = returnTrue;
      if (e && e.stopImmediatePropagation) {
        e.stopImmediatePropagation();
      }
      this.stopPropagation();
    }
  };
  jQuery.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function(orig, fix) {
    jQuery.event.special[orig] = {
      delegateType: fix,
      bindType: fix,
      handle: function(event) {
        var ret,
            target = this,
            related = event.relatedTarget,
            handleObj = event.handleObj;
        if (!related || (related !== target && !jQuery.contains(target, related))) {
          event.type = handleObj.origType;
          ret = handleObj.handler.apply(this, arguments);
          event.type = fix;
        }
        return ret;
      }
    };
  });
  if (!support.focusinBubbles) {
    jQuery.each({
      focus: "focusin",
      blur: "focusout"
    }, function(orig, fix) {
      var handler = function(event) {
        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);
      };
      jQuery.event.special[fix] = {
        setup: function() {
          var doc = this.ownerDocument || this,
              attaches = data_priv.access(doc, fix);
          if (!attaches) {
            doc.addEventListener(orig, handler, true);
          }
          data_priv.access(doc, fix, (attaches || 0) + 1);
        },
        teardown: function() {
          var doc = this.ownerDocument || this,
              attaches = data_priv.access(doc, fix) - 1;
          if (!attaches) {
            doc.removeEventListener(orig, handler, true);
            data_priv.remove(doc, fix);
          } else {
            data_priv.access(doc, fix, attaches);
          }
        }
      };
    });
  }
  jQuery.fn.extend({
    on: function(types, selector, data, fn, one) {
      var origFn,
          type;
      if (typeof types === "object") {
        if (typeof selector !== "string") {
          data = data || selector;
          selector = undefined;
        }
        for (type in types) {
          this.on(type, selector, data, types[type], one);
        }
        return this;
      }
      if (data == null && fn == null) {
        fn = selector;
        data = selector = undefined;
      } else if (fn == null) {
        if (typeof selector === "string") {
          fn = data;
          data = undefined;
        } else {
          fn = data;
          data = selector;
          selector = undefined;
        }
      }
      if (fn === false) {
        fn = returnFalse;
      } else if (!fn) {
        return this;
      }
      if (one === 1) {
        origFn = fn;
        fn = function(event) {
          jQuery().off(event);
          return origFn.apply(this, arguments);
        };
        fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
      }
      return this.each(function() {
        jQuery.event.add(this, types, fn, data, selector);
      });
    },
    one: function(types, selector, data, fn) {
      return this.on(types, selector, data, fn, 1);
    },
    off: function(types, selector, fn) {
      var handleObj,
          type;
      if (types && types.preventDefault && types.handleObj) {
        handleObj = types.handleObj;
        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
        return this;
      }
      if (typeof types === "object") {
        for (type in types) {
          this.off(type, selector, types[type]);
        }
        return this;
      }
      if (selector === false || typeof selector === "function") {
        fn = selector;
        selector = undefined;
      }
      if (fn === false) {
        fn = returnFalse;
      }
      return this.each(function() {
        jQuery.event.remove(this, types, fn, selector);
      });
    },
    trigger: function(type, data) {
      return this.each(function() {
        jQuery.event.trigger(type, data, this);
      });
    },
    triggerHandler: function(type, data) {
      var elem = this[0];
      if (elem) {
        return jQuery.event.trigger(type, data, elem, true);
      }
    }
  });
  var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
      rtagName = /<([\w:]+)/,
      rhtml = /<|&#?\w+;/,
      rnoInnerhtml = /<(?:script|style|link)/i,
      rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
      rscriptType = /^$|\/(?:java|ecma)script/i,
      rscriptTypeMasked = /^true\/(.*)/,
      rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
      wrapMap = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
      };
  wrapMap.optgroup = wrapMap.option;
  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
  wrapMap.th = wrapMap.td;
  function manipulationTarget(elem, content) {
    return jQuery.nodeName(elem, "table") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem;
  }
  function disableScript(elem) {
    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
    return elem;
  }
  function restoreScript(elem) {
    var match = rscriptTypeMasked.exec(elem.type);
    if (match) {
      elem.type = match[1];
    } else {
      elem.removeAttribute("type");
    }
    return elem;
  }
  function setGlobalEval(elems, refElements) {
    var i = 0,
        l = elems.length;
    for (; i < l; i++) {
      data_priv.set(elems[i], "globalEval", !refElements || data_priv.get(refElements[i], "globalEval"));
    }
  }
  function cloneCopyEvent(src, dest) {
    var i,
        l,
        type,
        pdataOld,
        pdataCur,
        udataOld,
        udataCur,
        events;
    if (dest.nodeType !== 1) {
      return;
    }
    if (data_priv.hasData(src)) {
      pdataOld = data_priv.access(src);
      pdataCur = data_priv.set(dest, pdataOld);
      events = pdataOld.events;
      if (events) {
        delete pdataCur.handle;
        pdataCur.events = {};
        for (type in events) {
          for (i = 0, l = events[type].length; i < l; i++) {
            jQuery.event.add(dest, type, events[type][i]);
          }
        }
      }
    }
    if (data_user.hasData(src)) {
      udataOld = data_user.access(src);
      udataCur = jQuery.extend({}, udataOld);
      data_user.set(dest, udataCur);
    }
  }
  function getAll(context, tag) {
    var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || "*") : context.querySelectorAll ? context.querySelectorAll(tag || "*") : [];
    return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;
  }
  function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase();
    if (nodeName === "input" && rcheckableType.test(src.type)) {
      dest.checked = src.checked;
    } else if (nodeName === "input" || nodeName === "textarea") {
      dest.defaultValue = src.defaultValue;
    }
  }
  jQuery.extend({
    clone: function(elem, dataAndEvents, deepDataAndEvents) {
      var i,
          l,
          srcElements,
          destElements,
          clone = elem.cloneNode(true),
          inPage = jQuery.contains(elem.ownerDocument, elem);
      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
        destElements = getAll(clone);
        srcElements = getAll(elem);
        for (i = 0, l = srcElements.length; i < l; i++) {
          fixInput(srcElements[i], destElements[i]);
        }
      }
      if (dataAndEvents) {
        if (deepDataAndEvents) {
          srcElements = srcElements || getAll(elem);
          destElements = destElements || getAll(clone);
          for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
          }
        } else {
          cloneCopyEvent(elem, clone);
        }
      }
      destElements = getAll(clone, "script");
      if (destElements.length > 0) {
        setGlobalEval(destElements, !inPage && getAll(elem, "script"));
      }
      return clone;
    },
    buildFragment: function(elems, context, scripts, selection) {
      var elem,
          tmp,
          tag,
          wrap,
          contains,
          j,
          fragment = context.createDocumentFragment(),
          nodes = [],
          i = 0,
          l = elems.length;
      for (; i < l; i++) {
        elem = elems[i];
        if (elem || elem === 0) {
          if (jQuery.type(elem) === "object") {
            jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
          } else if (!rhtml.test(elem)) {
            nodes.push(context.createTextNode(elem));
          } else {
            tmp = tmp || fragment.appendChild(context.createElement("div"));
            tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
            wrap = wrapMap[tag] || wrapMap._default;
            tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, "<$1></$2>") + wrap[2];
            j = wrap[0];
            while (j--) {
              tmp = tmp.lastChild;
            }
            jQuery.merge(nodes, tmp.childNodes);
            tmp = fragment.firstChild;
            tmp.textContent = "";
          }
        }
      }
      fragment.textContent = "";
      i = 0;
      while ((elem = nodes[i++])) {
        if (selection && jQuery.inArray(elem, selection) !== -1) {
          continue;
        }
        contains = jQuery.contains(elem.ownerDocument, elem);
        tmp = getAll(fragment.appendChild(elem), "script");
        if (contains) {
          setGlobalEval(tmp);
        }
        if (scripts) {
          j = 0;
          while ((elem = tmp[j++])) {
            if (rscriptType.test(elem.type || "")) {
              scripts.push(elem);
            }
          }
        }
      }
      return fragment;
    },
    cleanData: function(elems) {
      var data,
          elem,
          type,
          key,
          special = jQuery.event.special,
          i = 0;
      for (; (elem = elems[i]) !== undefined; i++) {
        if (jQuery.acceptData(elem)) {
          key = elem[data_priv.expando];
          if (key && (data = data_priv.cache[key])) {
            if (data.events) {
              for (type in data.events) {
                if (special[type]) {
                  jQuery.event.remove(elem, type);
                } else {
                  jQuery.removeEvent(elem, type, data.handle);
                }
              }
            }
            if (data_priv.cache[key]) {
              delete data_priv.cache[key];
            }
          }
        }
        delete data_user.cache[elem[data_user.expando]];
      }
    }
  });
  jQuery.fn.extend({
    text: function(value) {
      return access(this, function(value) {
        return value === undefined ? jQuery.text(this) : this.empty().each(function() {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            this.textContent = value;
          }
        });
      }, null, value, arguments.length);
    },
    append: function() {
      return this.domManip(arguments, function(elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.appendChild(elem);
        }
      });
    },
    prepend: function() {
      return this.domManip(arguments, function(elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.insertBefore(elem, target.firstChild);
        }
      });
    },
    before: function() {
      return this.domManip(arguments, function(elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this);
        }
      });
    },
    after: function() {
      return this.domManip(arguments, function(elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this.nextSibling);
        }
      });
    },
    remove: function(selector, keepData) {
      var elem,
          elems = selector ? jQuery.filter(selector, this) : this,
          i = 0;
      for (; (elem = elems[i]) != null; i++) {
        if (!keepData && elem.nodeType === 1) {
          jQuery.cleanData(getAll(elem));
        }
        if (elem.parentNode) {
          if (keepData && jQuery.contains(elem.ownerDocument, elem)) {
            setGlobalEval(getAll(elem, "script"));
          }
          elem.parentNode.removeChild(elem);
        }
      }
      return this;
    },
    empty: function() {
      var elem,
          i = 0;
      for (; (elem = this[i]) != null; i++) {
        if (elem.nodeType === 1) {
          jQuery.cleanData(getAll(elem, false));
          elem.textContent = "";
        }
      }
      return this;
    },
    clone: function(dataAndEvents, deepDataAndEvents) {
      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
      return this.map(function() {
        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
      });
    },
    html: function(value) {
      return access(this, function(value) {
        var elem = this[0] || {},
            i = 0,
            l = this.length;
        if (value === undefined && elem.nodeType === 1) {
          return elem.innerHTML;
        }
        if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
          value = value.replace(rxhtmlTag, "<$1></$2>");
          try {
            for (; i < l; i++) {
              elem = this[i] || {};
              if (elem.nodeType === 1) {
                jQuery.cleanData(getAll(elem, false));
                elem.innerHTML = value;
              }
            }
            elem = 0;
          } catch (e) {}
        }
        if (elem) {
          this.empty().append(value);
        }
      }, null, value, arguments.length);
    },
    replaceWith: function() {
      var arg = arguments[0];
      this.domManip(arguments, function(elem) {
        arg = this.parentNode;
        jQuery.cleanData(getAll(this));
        if (arg) {
          arg.replaceChild(elem, this);
        }
      });
      return arg && (arg.length || arg.nodeType) ? this : this.remove();
    },
    detach: function(selector) {
      return this.remove(selector, true);
    },
    domManip: function(args, callback) {
      args = concat.apply([], args);
      var fragment,
          first,
          scripts,
          hasScripts,
          node,
          doc,
          i = 0,
          l = this.length,
          set = this,
          iNoClone = l - 1,
          value = args[0],
          isFunction = jQuery.isFunction(value);
      if (isFunction || (l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value))) {
        return this.each(function(index) {
          var self = set.eq(index);
          if (isFunction) {
            args[0] = value.call(this, index, self.html());
          }
          self.domManip(args, callback);
        });
      }
      if (l) {
        fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, this);
        first = fragment.firstChild;
        if (fragment.childNodes.length === 1) {
          fragment = first;
        }
        if (first) {
          scripts = jQuery.map(getAll(fragment, "script"), disableScript);
          hasScripts = scripts.length;
          for (; i < l; i++) {
            node = fragment;
            if (i !== iNoClone) {
              node = jQuery.clone(node, true, true);
              if (hasScripts) {
                jQuery.merge(scripts, getAll(node, "script"));
              }
            }
            callback.call(this[i], node, i);
          }
          if (hasScripts) {
            doc = scripts[scripts.length - 1].ownerDocument;
            jQuery.map(scripts, restoreScript);
            for (i = 0; i < hasScripts; i++) {
              node = scripts[i];
              if (rscriptType.test(node.type || "") && !data_priv.access(node, "globalEval") && jQuery.contains(doc, node)) {
                if (node.src) {
                  if (jQuery._evalUrl) {
                    jQuery._evalUrl(node.src);
                  }
                } else {
                  jQuery.globalEval(node.textContent.replace(rcleanScript, ""));
                }
              }
            }
          }
        }
      }
      return this;
    }
  });
  jQuery.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function(name, original) {
    jQuery.fn[name] = function(selector) {
      var elems,
          ret = [],
          insert = jQuery(selector),
          last = insert.length - 1,
          i = 0;
      for (; i <= last; i++) {
        elems = i === last ? this : this.clone(true);
        jQuery(insert[i])[original](elems);
        push.apply(ret, elems.get());
      }
      return this.pushStack(ret);
    };
  });
  var iframe,
      elemdisplay = {};
  function actualDisplay(name, doc) {
    var style,
        elem = jQuery(doc.createElement(name)).appendTo(doc.body),
        display = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? style.display : jQuery.css(elem[0], "display");
    elem.detach();
    return display;
  }
  function defaultDisplay(nodeName) {
    var doc = document,
        display = elemdisplay[nodeName];
    if (!display) {
      display = actualDisplay(nodeName, doc);
      if (display === "none" || !display) {
        iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement);
        doc = iframe[0].contentDocument;
        doc.write();
        doc.close();
        display = actualDisplay(nodeName, doc);
        iframe.detach();
      }
      elemdisplay[nodeName] = display;
    }
    return display;
  }
  var rmargin = (/^margin/);
  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
  var getStyles = function(elem) {
    if (elem.ownerDocument.defaultView.opener) {
      return elem.ownerDocument.defaultView.getComputedStyle(elem, null);
    }
    return window.getComputedStyle(elem, null);
  };
  function curCSS(elem, name, computed) {
    var width,
        minWidth,
        maxWidth,
        ret,
        style = elem.style;
    computed = computed || getStyles(elem);
    if (computed) {
      ret = computed.getPropertyValue(name) || computed[name];
    }
    if (computed) {
      if (ret === "" && !jQuery.contains(elem.ownerDocument, elem)) {
        ret = jQuery.style(elem, name);
      }
      if (rnumnonpx.test(ret) && rmargin.test(name)) {
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth;
        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width;
        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
      }
    }
    return ret !== undefined ? ret + "" : ret;
  }
  function addGetHookIf(conditionFn, hookFn) {
    return {get: function() {
        if (conditionFn()) {
          delete this.get;
          return;
        }
        return (this.get = hookFn).apply(this, arguments);
      }};
  }
  (function() {
    var pixelPositionVal,
        boxSizingReliableVal,
        docElem = document.documentElement,
        container = document.createElement("div"),
        div = document.createElement("div");
    if (!div.style) {
      return;
    }
    div.style.backgroundClip = "content-box";
    div.cloneNode(true).style.backgroundClip = "";
    support.clearCloneStyle = div.style.backgroundClip === "content-box";
    container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" + "position:absolute";
    container.appendChild(div);
    function computePixelPositionAndBoxSizingReliable() {
      div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" + "box-sizing:border-box;display:block;margin-top:1%;top:1%;" + "border:1px;padding:1px;width:4px;position:absolute";
      div.innerHTML = "";
      docElem.appendChild(container);
      var divStyle = window.getComputedStyle(div, null);
      pixelPositionVal = divStyle.top !== "1%";
      boxSizingReliableVal = divStyle.width === "4px";
      docElem.removeChild(container);
    }
    if (window.getComputedStyle) {
      jQuery.extend(support, {
        pixelPosition: function() {
          computePixelPositionAndBoxSizingReliable();
          return pixelPositionVal;
        },
        boxSizingReliable: function() {
          if (boxSizingReliableVal == null) {
            computePixelPositionAndBoxSizingReliable();
          }
          return boxSizingReliableVal;
        },
        reliableMarginRight: function() {
          var ret,
              marginDiv = div.appendChild(document.createElement("div"));
          marginDiv.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" + "box-sizing:content-box;display:block;margin:0;border:0;padding:0";
          marginDiv.style.marginRight = marginDiv.style.width = "0";
          div.style.width = "1px";
          docElem.appendChild(container);
          ret = !parseFloat(window.getComputedStyle(marginDiv, null).marginRight);
          docElem.removeChild(container);
          div.removeChild(marginDiv);
          return ret;
        }
      });
    }
  })();
  jQuery.swap = function(elem, options, callback, args) {
    var ret,
        name,
        old = {};
    for (name in options) {
      old[name] = elem.style[name];
      elem.style[name] = options[name];
    }
    ret = callback.apply(elem, args || []);
    for (name in options) {
      elem.style[name] = old[name];
    }
    return ret;
  };
  var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
      rnumsplit = new RegExp("^(" + pnum + ")(.*)$", "i"),
      rrelNum = new RegExp("^([+-])=(" + pnum + ")", "i"),
      cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
      cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
      },
      cssPrefixes = ["Webkit", "O", "Moz", "ms"];
  function vendorPropName(style, name) {
    if (name in style) {
      return name;
    }
    var capName = name[0].toUpperCase() + name.slice(1),
        origName = name,
        i = cssPrefixes.length;
    while (i--) {
      name = cssPrefixes[i] + capName;
      if (name in style) {
        return name;
      }
    }
    return origName;
  }
  function setPositiveNumber(elem, value, subtract) {
    var matches = rnumsplit.exec(value);
    return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || "px") : value;
  }
  function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
    var i = extra === (isBorderBox ? "border" : "content") ? 4 : name === "width" ? 1 : 0,
        val = 0;
    for (; i < 4; i += 2) {
      if (extra === "margin") {
        val += jQuery.css(elem, extra + cssExpand[i], true, styles);
      }
      if (isBorderBox) {
        if (extra === "content") {
          val -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        }
        if (extra !== "margin") {
          val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      } else {
        val += jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        if (extra !== "padding") {
          val += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      }
    }
    return val;
  }
  function getWidthOrHeight(elem, name, extra) {
    var valueIsBorderBox = true,
        val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
        styles = getStyles(elem),
        isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";
    if (val <= 0 || val == null) {
      val = curCSS(elem, name, styles);
      if (val < 0 || val == null) {
        val = elem.style[name];
      }
      if (rnumnonpx.test(val)) {
        return val;
      }
      valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
      val = parseFloat(val) || 0;
    }
    return (val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles)) + "px";
  }
  function showHide(elements, show) {
    var display,
        elem,
        hidden,
        values = [],
        index = 0,
        length = elements.length;
    for (; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      values[index] = data_priv.get(elem, "olddisplay");
      display = elem.style.display;
      if (show) {
        if (!values[index] && display === "none") {
          elem.style.display = "";
        }
        if (elem.style.display === "" && isHidden(elem)) {
          values[index] = data_priv.access(elem, "olddisplay", defaultDisplay(elem.nodeName));
        }
      } else {
        hidden = isHidden(elem);
        if (display !== "none" || !hidden) {
          data_priv.set(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"));
        }
      }
    }
    for (index = 0; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      if (!show || elem.style.display === "none" || elem.style.display === "") {
        elem.style.display = show ? values[index] || "" : "none";
      }
    }
    return elements;
  }
  jQuery.extend({
    cssHooks: {opacity: {get: function(elem, computed) {
          if (computed) {
            var ret = curCSS(elem, "opacity");
            return ret === "" ? "1" : ret;
          }
        }}},
    cssNumber: {
      "columnCount": true,
      "fillOpacity": true,
      "flexGrow": true,
      "flexShrink": true,
      "fontWeight": true,
      "lineHeight": true,
      "opacity": true,
      "order": true,
      "orphans": true,
      "widows": true,
      "zIndex": true,
      "zoom": true
    },
    cssProps: {"float": "cssFloat"},
    style: function(elem, name, value, extra) {
      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
        return;
      }
      var ret,
          type,
          hooks,
          origName = jQuery.camelCase(name),
          style = elem.style;
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName));
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      if (value !== undefined) {
        type = typeof value;
        if (type === "string" && (ret = rrelNum.exec(value))) {
          value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name));
          type = "number";
        }
        if (value == null || value !== value) {
          return;
        }
        if (type === "number" && !jQuery.cssNumber[origName]) {
          value += "px";
        }
        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
          style[name] = "inherit";
        }
        if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
          style[name] = value;
        }
      } else {
        if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
          return ret;
        }
        return style[name];
      }
    },
    css: function(elem, name, extra, styles) {
      var val,
          num,
          hooks,
          origName = jQuery.camelCase(name);
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName));
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      if (hooks && "get" in hooks) {
        val = hooks.get(elem, true, extra);
      }
      if (val === undefined) {
        val = curCSS(elem, name, styles);
      }
      if (val === "normal" && name in cssNormalTransform) {
        val = cssNormalTransform[name];
      }
      if (extra === "" || extra) {
        num = parseFloat(val);
        return extra === true || jQuery.isNumeric(num) ? num || 0 : val;
      }
      return val;
    }
  });
  jQuery.each(["height", "width"], function(i, name) {
    jQuery.cssHooks[name] = {
      get: function(elem, computed, extra) {
        if (computed) {
          return rdisplayswap.test(jQuery.css(elem, "display")) && elem.offsetWidth === 0 ? jQuery.swap(elem, cssShow, function() {
            return getWidthOrHeight(elem, name, extra);
          }) : getWidthOrHeight(elem, name, extra);
        }
      },
      set: function(elem, value, extra) {
        var styles = extra && getStyles(elem);
        return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, "boxSizing", false, styles) === "border-box", styles) : 0);
      }
    };
  });
  jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {
    if (computed) {
      return jQuery.swap(elem, {"display": "inline-block"}, curCSS, [elem, "marginRight"]);
    }
  });
  jQuery.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function(prefix, suffix) {
    jQuery.cssHooks[prefix + suffix] = {expand: function(value) {
        var i = 0,
            expanded = {},
            parts = typeof value === "string" ? value.split(" ") : [value];
        for (; i < 4; i++) {
          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
        }
        return expanded;
      }};
    if (!rmargin.test(prefix)) {
      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    }
  });
  jQuery.fn.extend({
    css: function(name, value) {
      return access(this, function(elem, name, value) {
        var styles,
            len,
            map = {},
            i = 0;
        if (jQuery.isArray(name)) {
          styles = getStyles(elem);
          len = name.length;
          for (; i < len; i++) {
            map[name[i]] = jQuery.css(elem, name[i], false, styles);
          }
          return map;
        }
        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
      }, name, value, arguments.length > 1);
    },
    show: function() {
      return showHide(this, true);
    },
    hide: function() {
      return showHide(this);
    },
    toggle: function(state) {
      if (typeof state === "boolean") {
        return state ? this.show() : this.hide();
      }
      return this.each(function() {
        if (isHidden(this)) {
          jQuery(this).show();
        } else {
          jQuery(this).hide();
        }
      });
    }
  });
  function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
  }
  jQuery.Tween = Tween;
  Tween.prototype = {
    constructor: Tween,
    init: function(elem, options, prop, end, easing, unit) {
      this.elem = elem;
      this.prop = prop;
      this.easing = easing || "swing";
      this.options = options;
      this.start = this.now = this.cur();
      this.end = end;
      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
    },
    cur: function() {
      var hooks = Tween.propHooks[this.prop];
      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
    },
    run: function(percent) {
      var eased,
          hooks = Tween.propHooks[this.prop];
      if (this.options.duration) {
        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
      } else {
        this.pos = eased = percent;
      }
      this.now = (this.end - this.start) * eased + this.start;
      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }
      if (hooks && hooks.set) {
        hooks.set(this);
      } else {
        Tween.propHooks._default.set(this);
      }
      return this;
    }
  };
  Tween.prototype.init.prototype = Tween.prototype;
  Tween.propHooks = {_default: {
      get: function(tween) {
        var result;
        if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {
          return tween.elem[tween.prop];
        }
        result = jQuery.css(tween.elem, tween.prop, "");
        return !result || result === "auto" ? 0 : result;
      },
      set: function(tween) {
        if (jQuery.fx.step[tween.prop]) {
          jQuery.fx.step[tween.prop](tween);
        } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
        } else {
          tween.elem[tween.prop] = tween.now;
        }
      }
    }};
  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {set: function(tween) {
      if (tween.elem.nodeType && tween.elem.parentNode) {
        tween.elem[tween.prop] = tween.now;
      }
    }};
  jQuery.easing = {
    linear: function(p) {
      return p;
    },
    swing: function(p) {
      return 0.5 - Math.cos(p * Math.PI) / 2;
    }
  };
  jQuery.fx = Tween.prototype.init;
  jQuery.fx.step = {};
  var fxNow,
      timerId,
      rfxtypes = /^(?:toggle|show|hide)$/,
      rfxnum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i"),
      rrun = /queueHooks$/,
      animationPrefilters = [defaultPrefilter],
      tweeners = {"*": [function(prop, value) {
          var tween = this.createTween(prop, value),
              target = tween.cur(),
              parts = rfxnum.exec(value),
              unit = parts && parts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
              start = (jQuery.cssNumber[prop] || unit !== "px" && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),
              scale = 1,
              maxIterations = 20;
          if (start && start[3] !== unit) {
            unit = unit || start[3];
            parts = parts || [];
            start = +target || 1;
            do {
              scale = scale || ".5";
              start = start / scale;
              jQuery.style(tween.elem, prop, start + unit);
            } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);
          }
          if (parts) {
            start = tween.start = +start || +target || 0;
            tween.unit = unit;
            tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2];
          }
          return tween;
        }]};
  function createFxNow() {
    setTimeout(function() {
      fxNow = undefined;
    });
    return (fxNow = jQuery.now());
  }
  function genFx(type, includeWidth) {
    var which,
        i = 0,
        attrs = {height: type};
    includeWidth = includeWidth ? 1 : 0;
    for (; i < 4; i += 2 - includeWidth) {
      which = cssExpand[i];
      attrs["margin" + which] = attrs["padding" + which] = type;
    }
    if (includeWidth) {
      attrs.opacity = attrs.width = type;
    }
    return attrs;
  }
  function createTween(value, prop, animation) {
    var tween,
        collection = (tweeners[prop] || []).concat(tweeners["*"]),
        index = 0,
        length = collection.length;
    for (; index < length; index++) {
      if ((tween = collection[index].call(animation, prop, value))) {
        return tween;
      }
    }
  }
  function defaultPrefilter(elem, props, opts) {
    var prop,
        value,
        toggle,
        tween,
        hooks,
        oldfire,
        display,
        checkDisplay,
        anim = this,
        orig = {},
        style = elem.style,
        hidden = elem.nodeType && isHidden(elem),
        dataShow = data_priv.get(elem, "fxshow");
    if (!opts.queue) {
      hooks = jQuery._queueHooks(elem, "fx");
      if (hooks.unqueued == null) {
        hooks.unqueued = 0;
        oldfire = hooks.empty.fire;
        hooks.empty.fire = function() {
          if (!hooks.unqueued) {
            oldfire();
          }
        };
      }
      hooks.unqueued++;
      anim.always(function() {
        anim.always(function() {
          hooks.unqueued--;
          if (!jQuery.queue(elem, "fx").length) {
            hooks.empty.fire();
          }
        });
      });
    }
    if (elem.nodeType === 1 && ("height" in props || "width" in props)) {
      opts.overflow = [style.overflow, style.overflowX, style.overflowY];
      display = jQuery.css(elem, "display");
      checkDisplay = display === "none" ? data_priv.get(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display;
      if (checkDisplay === "inline" && jQuery.css(elem, "float") === "none") {
        style.display = "inline-block";
      }
    }
    if (opts.overflow) {
      style.overflow = "hidden";
      anim.always(function() {
        style.overflow = opts.overflow[0];
        style.overflowX = opts.overflow[1];
        style.overflowY = opts.overflow[2];
      });
    }
    for (prop in props) {
      value = props[prop];
      if (rfxtypes.exec(value)) {
        delete props[prop];
        toggle = toggle || value === "toggle";
        if (value === (hidden ? "hide" : "show")) {
          if (value === "show" && dataShow && dataShow[prop] !== undefined) {
            hidden = true;
          } else {
            continue;
          }
        }
        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
      } else {
        display = undefined;
      }
    }
    if (!jQuery.isEmptyObject(orig)) {
      if (dataShow) {
        if ("hidden" in dataShow) {
          hidden = dataShow.hidden;
        }
      } else {
        dataShow = data_priv.access(elem, "fxshow", {});
      }
      if (toggle) {
        dataShow.hidden = !hidden;
      }
      if (hidden) {
        jQuery(elem).show();
      } else {
        anim.done(function() {
          jQuery(elem).hide();
        });
      }
      anim.done(function() {
        var prop;
        data_priv.remove(elem, "fxshow");
        for (prop in orig) {
          jQuery.style(elem, prop, orig[prop]);
        }
      });
      for (prop in orig) {
        tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
        if (!(prop in dataShow)) {
          dataShow[prop] = tween.start;
          if (hidden) {
            tween.end = tween.start;
            tween.start = prop === "width" || prop === "height" ? 1 : 0;
          }
        }
      }
    } else if ((display === "none" ? defaultDisplay(elem.nodeName) : display) === "inline") {
      style.display = display;
    }
  }
  function propFilter(props, specialEasing) {
    var index,
        name,
        easing,
        value,
        hooks;
    for (index in props) {
      name = jQuery.camelCase(index);
      easing = specialEasing[name];
      value = props[index];
      if (jQuery.isArray(value)) {
        easing = value[1];
        value = props[index] = value[0];
      }
      if (index !== name) {
        props[name] = value;
        delete props[index];
      }
      hooks = jQuery.cssHooks[name];
      if (hooks && "expand" in hooks) {
        value = hooks.expand(value);
        delete props[name];
        for (index in value) {
          if (!(index in props)) {
            props[index] = value[index];
            specialEasing[index] = easing;
          }
        }
      } else {
        specialEasing[name] = easing;
      }
    }
  }
  function Animation(elem, properties, options) {
    var result,
        stopped,
        index = 0,
        length = animationPrefilters.length,
        deferred = jQuery.Deferred().always(function() {
          delete tick.elem;
        }),
        tick = function() {
          if (stopped) {
            return false;
          }
          var currentTime = fxNow || createFxNow(),
              remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
              temp = remaining / animation.duration || 0,
              percent = 1 - temp,
              index = 0,
              length = animation.tweens.length;
          for (; index < length; index++) {
            animation.tweens[index].run(percent);
          }
          deferred.notifyWith(elem, [animation, percent, remaining]);
          if (percent < 1 && length) {
            return remaining;
          } else {
            deferred.resolveWith(elem, [animation]);
            return false;
          }
        },
        animation = deferred.promise({
          elem: elem,
          props: jQuery.extend({}, properties),
          opts: jQuery.extend(true, {specialEasing: {}}, options),
          originalProperties: properties,
          originalOptions: options,
          startTime: fxNow || createFxNow(),
          duration: options.duration,
          tweens: [],
          createTween: function(prop, end) {
            var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
            animation.tweens.push(tween);
            return tween;
          },
          stop: function(gotoEnd) {
            var index = 0,
                length = gotoEnd ? animation.tweens.length : 0;
            if (stopped) {
              return this;
            }
            stopped = true;
            for (; index < length; index++) {
              animation.tweens[index].run(1);
            }
            if (gotoEnd) {
              deferred.resolveWith(elem, [animation, gotoEnd]);
            } else {
              deferred.rejectWith(elem, [animation, gotoEnd]);
            }
            return this;
          }
        }),
        props = animation.props;
    propFilter(props, animation.opts.specialEasing);
    for (; index < length; index++) {
      result = animationPrefilters[index].call(animation, elem, props, animation.opts);
      if (result) {
        return result;
      }
    }
    jQuery.map(props, createTween, animation);
    if (jQuery.isFunction(animation.opts.start)) {
      animation.opts.start.call(elem, animation);
    }
    jQuery.fx.timer(jQuery.extend(tick, {
      elem: elem,
      anim: animation,
      queue: animation.opts.queue
    }));
    return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
  }
  jQuery.Animation = jQuery.extend(Animation, {
    tweener: function(props, callback) {
      if (jQuery.isFunction(props)) {
        callback = props;
        props = ["*"];
      } else {
        props = props.split(" ");
      }
      var prop,
          index = 0,
          length = props.length;
      for (; index < length; index++) {
        prop = props[index];
        tweeners[prop] = tweeners[prop] || [];
        tweeners[prop].unshift(callback);
      }
    },
    prefilter: function(callback, prepend) {
      if (prepend) {
        animationPrefilters.unshift(callback);
      } else {
        animationPrefilters.push(callback);
      }
    }
  });
  jQuery.speed = function(speed, easing, fn) {
    var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
      complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
      duration: speed,
      easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
    };
    opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
    if (opt.queue == null || opt.queue === true) {
      opt.queue = "fx";
    }
    opt.old = opt.complete;
    opt.complete = function() {
      if (jQuery.isFunction(opt.old)) {
        opt.old.call(this);
      }
      if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
      }
    };
    return opt;
  };
  jQuery.fn.extend({
    fadeTo: function(speed, to, easing, callback) {
      return this.filter(isHidden).css("opacity", 0).show().end().animate({opacity: to}, speed, easing, callback);
    },
    animate: function(prop, speed, easing, callback) {
      var empty = jQuery.isEmptyObject(prop),
          optall = jQuery.speed(speed, easing, callback),
          doAnimation = function() {
            var anim = Animation(this, jQuery.extend({}, prop), optall);
            if (empty || data_priv.get(this, "finish")) {
              anim.stop(true);
            }
          };
      doAnimation.finish = doAnimation;
      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
    },
    stop: function(type, clearQueue, gotoEnd) {
      var stopQueue = function(hooks) {
        var stop = hooks.stop;
        delete hooks.stop;
        stop(gotoEnd);
      };
      if (typeof type !== "string") {
        gotoEnd = clearQueue;
        clearQueue = type;
        type = undefined;
      }
      if (clearQueue && type !== false) {
        this.queue(type || "fx", []);
      }
      return this.each(function() {
        var dequeue = true,
            index = type != null && type + "queueHooks",
            timers = jQuery.timers,
            data = data_priv.get(this);
        if (index) {
          if (data[index] && data[index].stop) {
            stopQueue(data[index]);
          }
        } else {
          for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
              stopQueue(data[index]);
            }
          }
        }
        for (index = timers.length; index--; ) {
          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
            timers[index].anim.stop(gotoEnd);
            dequeue = false;
            timers.splice(index, 1);
          }
        }
        if (dequeue || !gotoEnd) {
          jQuery.dequeue(this, type);
        }
      });
    },
    finish: function(type) {
      if (type !== false) {
        type = type || "fx";
      }
      return this.each(function() {
        var index,
            data = data_priv.get(this),
            queue = data[type + "queue"],
            hooks = data[type + "queueHooks"],
            timers = jQuery.timers,
            length = queue ? queue.length : 0;
        data.finish = true;
        jQuery.queue(this, type, []);
        if (hooks && hooks.stop) {
          hooks.stop.call(this, true);
        }
        for (index = timers.length; index--; ) {
          if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);
            timers.splice(index, 1);
          }
        }
        for (index = 0; index < length; index++) {
          if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
          }
        }
        delete data.finish;
      });
    }
  });
  jQuery.each(["toggle", "show", "hide"], function(i, name) {
    var cssFn = jQuery.fn[name];
    jQuery.fn[name] = function(speed, easing, callback) {
      return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
    };
  });
  jQuery.each({
    slideDown: genFx("show"),
    slideUp: genFx("hide"),
    slideToggle: genFx("toggle"),
    fadeIn: {opacity: "show"},
    fadeOut: {opacity: "hide"},
    fadeToggle: {opacity: "toggle"}
  }, function(name, props) {
    jQuery.fn[name] = function(speed, easing, callback) {
      return this.animate(props, speed, easing, callback);
    };
  });
  jQuery.timers = [];
  jQuery.fx.tick = function() {
    var timer,
        i = 0,
        timers = jQuery.timers;
    fxNow = jQuery.now();
    for (; i < timers.length; i++) {
      timer = timers[i];
      if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
      }
    }
    if (!timers.length) {
      jQuery.fx.stop();
    }
    fxNow = undefined;
  };
  jQuery.fx.timer = function(timer) {
    jQuery.timers.push(timer);
    if (timer()) {
      jQuery.fx.start();
    } else {
      jQuery.timers.pop();
    }
  };
  jQuery.fx.interval = 13;
  jQuery.fx.start = function() {
    if (!timerId) {
      timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);
    }
  };
  jQuery.fx.stop = function() {
    clearInterval(timerId);
    timerId = null;
  };
  jQuery.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
  };
  jQuery.fn.delay = function(time, type) {
    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
    type = type || "fx";
    return this.queue(type, function(next, hooks) {
      var timeout = setTimeout(next, time);
      hooks.stop = function() {
        clearTimeout(timeout);
      };
    });
  };
  (function() {
    var input = document.createElement("input"),
        select = document.createElement("select"),
        opt = select.appendChild(document.createElement("option"));
    input.type = "checkbox";
    support.checkOn = input.value !== "";
    support.optSelected = opt.selected;
    select.disabled = true;
    support.optDisabled = !opt.disabled;
    input = document.createElement("input");
    input.value = "t";
    input.type = "radio";
    support.radioValue = input.value === "t";
  })();
  var nodeHook,
      boolHook,
      attrHandle = jQuery.expr.attrHandle;
  jQuery.fn.extend({
    attr: function(name, value) {
      return access(this, jQuery.attr, name, value, arguments.length > 1);
    },
    removeAttr: function(name) {
      return this.each(function() {
        jQuery.removeAttr(this, name);
      });
    }
  });
  jQuery.extend({
    attr: function(elem, name, value) {
      var hooks,
          ret,
          nType = elem.nodeType;
      if (!elem || nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      if (typeof elem.getAttribute === strundefined) {
        return jQuery.prop(elem, name, value);
      }
      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        name = name.toLowerCase();
        hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);
      }
      if (value !== undefined) {
        if (value === null) {
          jQuery.removeAttr(elem, name);
        } else if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        } else {
          elem.setAttribute(name, value + "");
          return value;
        }
      } else if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      } else {
        ret = jQuery.find.attr(elem, name);
        return ret == null ? undefined : ret;
      }
    },
    removeAttr: function(elem, value) {
      var name,
          propName,
          i = 0,
          attrNames = value && value.match(rnotwhite);
      if (attrNames && elem.nodeType === 1) {
        while ((name = attrNames[i++])) {
          propName = jQuery.propFix[name] || name;
          if (jQuery.expr.match.bool.test(name)) {
            elem[propName] = false;
          }
          elem.removeAttribute(name);
        }
      }
    },
    attrHooks: {type: {set: function(elem, value) {
          if (!support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
            var val = elem.value;
            elem.setAttribute("type", value);
            if (val) {
              elem.value = val;
            }
            return value;
          }
        }}}
  });
  boolHook = {set: function(elem, value, name) {
      if (value === false) {
        jQuery.removeAttr(elem, name);
      } else {
        elem.setAttribute(name, name);
      }
      return name;
    }};
  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
    var getter = attrHandle[name] || jQuery.find.attr;
    attrHandle[name] = function(elem, name, isXML) {
      var ret,
          handle;
      if (!isXML) {
        handle = attrHandle[name];
        attrHandle[name] = ret;
        ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;
        attrHandle[name] = handle;
      }
      return ret;
    };
  });
  var rfocusable = /^(?:input|select|textarea|button)$/i;
  jQuery.fn.extend({
    prop: function(name, value) {
      return access(this, jQuery.prop, name, value, arguments.length > 1);
    },
    removeProp: function(name) {
      return this.each(function() {
        delete this[jQuery.propFix[name] || name];
      });
    }
  });
  jQuery.extend({
    propFix: {
      "for": "htmlFor",
      "class": "className"
    },
    prop: function(elem, name, value) {
      var ret,
          hooks,
          notxml,
          nType = elem.nodeType;
      if (!elem || nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      notxml = nType !== 1 || !jQuery.isXMLDoc(elem);
      if (notxml) {
        name = jQuery.propFix[name] || name;
        hooks = jQuery.propHooks[name];
      }
      if (value !== undefined) {
        return hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : (elem[name] = value);
      } else {
        return hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null ? ret : elem[name];
      }
    },
    propHooks: {tabIndex: {get: function(elem) {
          return elem.hasAttribute("tabindex") || rfocusable.test(elem.nodeName) || elem.href ? elem.tabIndex : -1;
        }}}
  });
  if (!support.optSelected) {
    jQuery.propHooks.selected = {get: function(elem) {
        var parent = elem.parentNode;
        if (parent && parent.parentNode) {
          parent.parentNode.selectedIndex;
        }
        return null;
      }};
  }
  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
    jQuery.propFix[this.toLowerCase()] = this;
  });
  var rclass = /[\t\r\n\f]/g;
  jQuery.fn.extend({
    addClass: function(value) {
      var classes,
          elem,
          cur,
          clazz,
          j,
          finalValue,
          proceed = typeof value === "string" && value,
          i = 0,
          len = this.length;
      if (jQuery.isFunction(value)) {
        return this.each(function(j) {
          jQuery(this).addClass(value.call(this, j, this.className));
        });
      }
      if (proceed) {
        classes = (value || "").match(rnotwhite) || [];
        for (; i < len; i++) {
          elem = this[i];
          cur = elem.nodeType === 1 && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : " ");
          if (cur) {
            j = 0;
            while ((clazz = classes[j++])) {
              if (cur.indexOf(" " + clazz + " ") < 0) {
                cur += clazz + " ";
              }
            }
            finalValue = jQuery.trim(cur);
            if (elem.className !== finalValue) {
              elem.className = finalValue;
            }
          }
        }
      }
      return this;
    },
    removeClass: function(value) {
      var classes,
          elem,
          cur,
          clazz,
          j,
          finalValue,
          proceed = arguments.length === 0 || typeof value === "string" && value,
          i = 0,
          len = this.length;
      if (jQuery.isFunction(value)) {
        return this.each(function(j) {
          jQuery(this).removeClass(value.call(this, j, this.className));
        });
      }
      if (proceed) {
        classes = (value || "").match(rnotwhite) || [];
        for (; i < len; i++) {
          elem = this[i];
          cur = elem.nodeType === 1 && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : "");
          if (cur) {
            j = 0;
            while ((clazz = classes[j++])) {
              while (cur.indexOf(" " + clazz + " ") >= 0) {
                cur = cur.replace(" " + clazz + " ", " ");
              }
            }
            finalValue = value ? jQuery.trim(cur) : "";
            if (elem.className !== finalValue) {
              elem.className = finalValue;
            }
          }
        }
      }
      return this;
    },
    toggleClass: function(value, stateVal) {
      var type = typeof value;
      if (typeof stateVal === "boolean" && type === "string") {
        return stateVal ? this.addClass(value) : this.removeClass(value);
      }
      if (jQuery.isFunction(value)) {
        return this.each(function(i) {
          jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);
        });
      }
      return this.each(function() {
        if (type === "string") {
          var className,
              i = 0,
              self = jQuery(this),
              classNames = value.match(rnotwhite) || [];
          while ((className = classNames[i++])) {
            if (self.hasClass(className)) {
              self.removeClass(className);
            } else {
              self.addClass(className);
            }
          }
        } else if (type === strundefined || type === "boolean") {
          if (this.className) {
            data_priv.set(this, "__className__", this.className);
          }
          this.className = this.className || value === false ? "" : data_priv.get(this, "__className__") || "";
        }
      });
    },
    hasClass: function(selector) {
      var className = " " + selector + " ",
          i = 0,
          l = this.length;
      for (; i < l; i++) {
        if (this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf(className) >= 0) {
          return true;
        }
      }
      return false;
    }
  });
  var rreturn = /\r/g;
  jQuery.fn.extend({val: function(value) {
      var hooks,
          ret,
          isFunction,
          elem = this[0];
      if (!arguments.length) {
        if (elem) {
          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
          if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
            return ret;
          }
          ret = elem.value;
          return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret;
        }
        return;
      }
      isFunction = jQuery.isFunction(value);
      return this.each(function(i) {
        var val;
        if (this.nodeType !== 1) {
          return;
        }
        if (isFunction) {
          val = value.call(this, i, jQuery(this).val());
        } else {
          val = value;
        }
        if (val == null) {
          val = "";
        } else if (typeof val === "number") {
          val += "";
        } else if (jQuery.isArray(val)) {
          val = jQuery.map(val, function(value) {
            return value == null ? "" : value + "";
          });
        }
        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
          this.value = val;
        }
      });
    }});
  jQuery.extend({valHooks: {
      option: {get: function(elem) {
          var val = jQuery.find.attr(elem, "value");
          return val != null ? val : jQuery.trim(jQuery.text(elem));
        }},
      select: {
        get: function(elem) {
          var value,
              option,
              options = elem.options,
              index = elem.selectedIndex,
              one = elem.type === "select-one" || index < 0,
              values = one ? null : [],
              max = one ? index + 1 : options.length,
              i = index < 0 ? max : one ? index : 0;
          for (; i < max; i++) {
            option = options[i];
            if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
              value = jQuery(option).val();
              if (one) {
                return value;
              }
              values.push(value);
            }
          }
          return values;
        },
        set: function(elem, value) {
          var optionSet,
              option,
              options = elem.options,
              values = jQuery.makeArray(value),
              i = options.length;
          while (i--) {
            option = options[i];
            if ((option.selected = jQuery.inArray(option.value, values) >= 0)) {
              optionSet = true;
            }
          }
          if (!optionSet) {
            elem.selectedIndex = -1;
          }
          return values;
        }
      }
    }});
  jQuery.each(["radio", "checkbox"], function() {
    jQuery.valHooks[this] = {set: function(elem, value) {
        if (jQuery.isArray(value)) {
          return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0);
        }
      }};
    if (!support.checkOn) {
      jQuery.valHooks[this].get = function(elem) {
        return elem.getAttribute("value") === null ? "on" : elem.value;
      };
    }
  });
  jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function(i, name) {
    jQuery.fn[name] = function(data, fn) {
      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
    };
  });
  jQuery.fn.extend({
    hover: function(fnOver, fnOut) {
      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    },
    bind: function(types, data, fn) {
      return this.on(types, null, data, fn);
    },
    unbind: function(types, fn) {
      return this.off(types, null, fn);
    },
    delegate: function(selector, types, data, fn) {
      return this.on(types, selector, data, fn);
    },
    undelegate: function(selector, types, fn) {
      return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
    }
  });
  var nonce = jQuery.now();
  var rquery = (/\?/);
  jQuery.parseJSON = function(data) {
    return JSON.parse(data + "");
  };
  jQuery.parseXML = function(data) {
    var xml,
        tmp;
    if (!data || typeof data !== "string") {
      return null;
    }
    try {
      tmp = new DOMParser();
      xml = tmp.parseFromString(data, "text/xml");
    } catch (e) {
      xml = undefined;
    }
    if (!xml || xml.getElementsByTagName("parsererror").length) {
      jQuery.error("Invalid XML: " + data);
    }
    return xml;
  };
  var rhash = /#.*$/,
      rts = /([?&])_=[^&]*/,
      rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
      rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      rnoContent = /^(?:GET|HEAD)$/,
      rprotocol = /^\/\//,
      rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
      prefilters = {},
      transports = {},
      allTypes = "*/".concat("*"),
      ajaxLocation = window.location.href,
      ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];
  function addToPrefiltersOrTransports(structure) {
    return function(dataTypeExpression, func) {
      if (typeof dataTypeExpression !== "string") {
        func = dataTypeExpression;
        dataTypeExpression = "*";
      }
      var dataType,
          i = 0,
          dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
      if (jQuery.isFunction(func)) {
        while ((dataType = dataTypes[i++])) {
          if (dataType[0] === "+") {
            dataType = dataType.slice(1) || "*";
            (structure[dataType] = structure[dataType] || []).unshift(func);
          } else {
            (structure[dataType] = structure[dataType] || []).push(func);
          }
        }
      }
    };
  }
  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    var inspected = {},
        seekingTransport = (structure === transports);
    function inspect(dataType) {
      var selected;
      inspected[dataType] = true;
      jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
        if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
          options.dataTypes.unshift(dataTypeOrTransport);
          inspect(dataTypeOrTransport);
          return false;
        } else if (seekingTransport) {
          return !(selected = dataTypeOrTransport);
        }
      });
      return selected;
    }
    return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
  }
  function ajaxExtend(target, src) {
    var key,
        deep,
        flatOptions = jQuery.ajaxSettings.flatOptions || {};
    for (key in src) {
      if (src[key] !== undefined) {
        (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];
      }
    }
    if (deep) {
      jQuery.extend(true, target, deep);
    }
    return target;
  }
  function ajaxHandleResponses(s, jqXHR, responses) {
    var ct,
        type,
        finalDataType,
        firstDataType,
        contents = s.contents,
        dataTypes = s.dataTypes;
    while (dataTypes[0] === "*") {
      dataTypes.shift();
      if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
      }
    }
    if (ct) {
      for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
          dataTypes.unshift(type);
          break;
        }
      }
    }
    if (dataTypes[0] in responses) {
      finalDataType = dataTypes[0];
    } else {
      for (type in responses) {
        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
          finalDataType = type;
          break;
        }
        if (!firstDataType) {
          firstDataType = type;
        }
      }
      finalDataType = finalDataType || firstDataType;
    }
    if (finalDataType) {
      if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
      }
      return responses[finalDataType];
    }
  }
  function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2,
        current,
        conv,
        tmp,
        prev,
        converters = {},
        dataTypes = s.dataTypes.slice();
    if (dataTypes[1]) {
      for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
      }
    }
    current = dataTypes.shift();
    while (current) {
      if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
      }
      if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
      }
      prev = current;
      current = dataTypes.shift();
      if (current) {
        if (current === "*") {
          current = prev;
        } else if (prev !== "*" && prev !== current) {
          conv = converters[prev + " " + current] || converters["* " + current];
          if (!conv) {
            for (conv2 in converters) {
              tmp = conv2.split(" ");
              if (tmp[1] === current) {
                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                if (conv) {
                  if (conv === true) {
                    conv = converters[conv2];
                  } else if (converters[conv2] !== true) {
                    current = tmp[0];
                    dataTypes.unshift(tmp[1]);
                  }
                  break;
                }
              }
            }
          }
          if (conv !== true) {
            if (conv && s["throws"]) {
              response = conv(response);
            } else {
              try {
                response = conv(response);
              } catch (e) {
                return {
                  state: "parsererror",
                  error: conv ? e : "No conversion from " + prev + " to " + current
                };
              }
            }
          }
        }
      }
    }
    return {
      state: "success",
      data: response
    };
  }
  jQuery.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: ajaxLocation,
      type: "GET",
      isLocal: rlocalProtocol.test(ajaxLocParts[1]),
      global: true,
      processData: true,
      async: true,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": allTypes,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /xml/,
        html: /html/,
        json: /json/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      converters: {
        "* text": String,
        "text html": true,
        "text json": jQuery.parseJSON,
        "text xml": jQuery.parseXML
      },
      flatOptions: {
        url: true,
        context: true
      }
    },
    ajaxSetup: function(target, settings) {
      return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
    },
    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
    ajaxTransport: addToPrefiltersOrTransports(transports),
    ajax: function(url, options) {
      if (typeof url === "object") {
        options = url;
        url = undefined;
      }
      options = options || {};
      var transport,
          cacheURL,
          responseHeadersString,
          responseHeaders,
          timeoutTimer,
          parts,
          fireGlobals,
          i,
          s = jQuery.ajaxSetup({}, options),
          callbackContext = s.context || s,
          globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
          deferred = jQuery.Deferred(),
          completeDeferred = jQuery.Callbacks("once memory"),
          statusCode = s.statusCode || {},
          requestHeaders = {},
          requestHeadersNames = {},
          state = 0,
          strAbort = "canceled",
          jqXHR = {
            readyState: 0,
            getResponseHeader: function(key) {
              var match;
              if (state === 2) {
                if (!responseHeaders) {
                  responseHeaders = {};
                  while ((match = rheaders.exec(responseHeadersString))) {
                    responseHeaders[match[1].toLowerCase()] = match[2];
                  }
                }
                match = responseHeaders[key.toLowerCase()];
              }
              return match == null ? null : match;
            },
            getAllResponseHeaders: function() {
              return state === 2 ? responseHeadersString : null;
            },
            setRequestHeader: function(name, value) {
              var lname = name.toLowerCase();
              if (!state) {
                name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                requestHeaders[name] = value;
              }
              return this;
            },
            overrideMimeType: function(type) {
              if (!state) {
                s.mimeType = type;
              }
              return this;
            },
            statusCode: function(map) {
              var code;
              if (map) {
                if (state < 2) {
                  for (code in map) {
                    statusCode[code] = [statusCode[code], map[code]];
                  }
                } else {
                  jqXHR.always(map[jqXHR.status]);
                }
              }
              return this;
            },
            abort: function(statusText) {
              var finalText = statusText || strAbort;
              if (transport) {
                transport.abort(finalText);
              }
              done(0, finalText);
              return this;
            }
          };
      deferred.promise(jqXHR).complete = completeDeferred.add;
      jqXHR.success = jqXHR.done;
      jqXHR.error = jqXHR.fail;
      s.url = ((url || s.url || ajaxLocation) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//");
      s.type = options.method || options.type || s.method || s.type;
      s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""];
      if (s.crossDomain == null) {
        parts = rurl.exec(s.url.toLowerCase());
        s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === "http:" ? "80" : "443")) !== (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? "80" : "443"))));
      }
      if (s.data && s.processData && typeof s.data !== "string") {
        s.data = jQuery.param(s.data, s.traditional);
      }
      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
      if (state === 2) {
        return jqXHR;
      }
      fireGlobals = jQuery.event && s.global;
      if (fireGlobals && jQuery.active++ === 0) {
        jQuery.event.trigger("ajaxStart");
      }
      s.type = s.type.toUpperCase();
      s.hasContent = !rnoContent.test(s.type);
      cacheURL = s.url;
      if (!s.hasContent) {
        if (s.data) {
          cacheURL = (s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data);
          delete s.data;
        }
        if (s.cache === false) {
          s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++;
        }
      }
      if (s.ifModified) {
        if (jQuery.lastModified[cacheURL]) {
          jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
        }
        if (jQuery.etag[cacheURL]) {
          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
        }
      }
      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
        jqXHR.setRequestHeader("Content-Type", s.contentType);
      }
      jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
      for (i in s.headers) {
        jqXHR.setRequestHeader(i, s.headers[i]);
      }
      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
        return jqXHR.abort();
      }
      strAbort = "abort";
      for (i in {
        success: 1,
        error: 1,
        complete: 1
      }) {
        jqXHR[i](s[i]);
      }
      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
      if (!transport) {
        done(-1, "No Transport");
      } else {
        jqXHR.readyState = 1;
        if (fireGlobals) {
          globalEventContext.trigger("ajaxSend", [jqXHR, s]);
        }
        if (s.async && s.timeout > 0) {
          timeoutTimer = setTimeout(function() {
            jqXHR.abort("timeout");
          }, s.timeout);
        }
        try {
          state = 1;
          transport.send(requestHeaders, done);
        } catch (e) {
          if (state < 2) {
            done(-1, e);
          } else {
            throw e;
          }
        }
      }
      function done(status, nativeStatusText, responses, headers) {
        var isSuccess,
            success,
            error,
            response,
            modified,
            statusText = nativeStatusText;
        if (state === 2) {
          return;
        }
        state = 2;
        if (timeoutTimer) {
          clearTimeout(timeoutTimer);
        }
        transport = undefined;
        responseHeadersString = headers || "";
        jqXHR.readyState = status > 0 ? 4 : 0;
        isSuccess = status >= 200 && status < 300 || status === 304;
        if (responses) {
          response = ajaxHandleResponses(s, jqXHR, responses);
        }
        response = ajaxConvert(s, response, jqXHR, isSuccess);
        if (isSuccess) {
          if (s.ifModified) {
            modified = jqXHR.getResponseHeader("Last-Modified");
            if (modified) {
              jQuery.lastModified[cacheURL] = modified;
            }
            modified = jqXHR.getResponseHeader("etag");
            if (modified) {
              jQuery.etag[cacheURL] = modified;
            }
          }
          if (status === 204 || s.type === "HEAD") {
            statusText = "nocontent";
          } else if (status === 304) {
            statusText = "notmodified";
          } else {
            statusText = response.state;
            success = response.data;
            error = response.error;
            isSuccess = !error;
          }
        } else {
          error = statusText;
          if (status || !statusText) {
            statusText = "error";
            if (status < 0) {
              status = 0;
            }
          }
        }
        jqXHR.status = status;
        jqXHR.statusText = (nativeStatusText || statusText) + "";
        if (isSuccess) {
          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
        } else {
          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
        }
        jqXHR.statusCode(statusCode);
        statusCode = undefined;
        if (fireGlobals) {
          globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
        }
        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
        if (fireGlobals) {
          globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
          if (!(--jQuery.active)) {
            jQuery.event.trigger("ajaxStop");
          }
        }
      }
      return jqXHR;
    },
    getJSON: function(url, data, callback) {
      return jQuery.get(url, data, callback, "json");
    },
    getScript: function(url, callback) {
      return jQuery.get(url, undefined, callback, "script");
    }
  });
  jQuery.each(["get", "post"], function(i, method) {
    jQuery[method] = function(url, data, callback, type) {
      if (jQuery.isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
      }
      return jQuery.ajax({
        url: url,
        type: method,
        dataType: type,
        data: data,
        success: callback
      });
    };
  });
  jQuery._evalUrl = function(url) {
    return jQuery.ajax({
      url: url,
      type: "GET",
      dataType: "script",
      async: false,
      global: false,
      "throws": true
    });
  };
  jQuery.fn.extend({
    wrapAll: function(html) {
      var wrap;
      if (jQuery.isFunction(html)) {
        return this.each(function(i) {
          jQuery(this).wrapAll(html.call(this, i));
        });
      }
      if (this[0]) {
        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
        if (this[0].parentNode) {
          wrap.insertBefore(this[0]);
        }
        wrap.map(function() {
          var elem = this;
          while (elem.firstElementChild) {
            elem = elem.firstElementChild;
          }
          return elem;
        }).append(this);
      }
      return this;
    },
    wrapInner: function(html) {
      if (jQuery.isFunction(html)) {
        return this.each(function(i) {
          jQuery(this).wrapInner(html.call(this, i));
        });
      }
      return this.each(function() {
        var self = jQuery(this),
            contents = self.contents();
        if (contents.length) {
          contents.wrapAll(html);
        } else {
          self.append(html);
        }
      });
    },
    wrap: function(html) {
      var isFunction = jQuery.isFunction(html);
      return this.each(function(i) {
        jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
      });
    },
    unwrap: function() {
      return this.parent().each(function() {
        if (!jQuery.nodeName(this, "body")) {
          jQuery(this).replaceWith(this.childNodes);
        }
      }).end();
    }
  });
  jQuery.expr.filters.hidden = function(elem) {
    return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
  };
  jQuery.expr.filters.visible = function(elem) {
    return !jQuery.expr.filters.hidden(elem);
  };
  var r20 = /%20/g,
      rbracket = /\[\]$/,
      rCRLF = /\r?\n/g,
      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
      rsubmittable = /^(?:input|select|textarea|keygen)/i;
  function buildParams(prefix, obj, traditional, add) {
    var name;
    if (jQuery.isArray(obj)) {
      jQuery.each(obj, function(i, v) {
        if (traditional || rbracket.test(prefix)) {
          add(prefix, v);
        } else {
          buildParams(prefix + "[" + (typeof v === "object" ? i : "") + "]", v, traditional, add);
        }
      });
    } else if (!traditional && jQuery.type(obj) === "object") {
      for (name in obj) {
        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
      }
    } else {
      add(prefix, obj);
    }
  }
  jQuery.param = function(a, traditional) {
    var prefix,
        s = [],
        add = function(key, value) {
          value = jQuery.isFunction(value) ? value() : (value == null ? "" : value);
          s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
        };
    if (traditional === undefined) {
      traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
    }
    if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
      jQuery.each(a, function() {
        add(this.name, this.value);
      });
    } else {
      for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
      }
    }
    return s.join("&").replace(r20, "+");
  };
  jQuery.fn.extend({
    serialize: function() {
      return jQuery.param(this.serializeArray());
    },
    serializeArray: function() {
      return this.map(function() {
        var elements = jQuery.prop(this, "elements");
        return elements ? jQuery.makeArray(elements) : this;
      }).filter(function() {
        var type = this.type;
        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
      }).map(function(i, elem) {
        var val = jQuery(this).val();
        return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
          return {
            name: elem.name,
            value: val.replace(rCRLF, "\r\n")
          };
        }) : {
          name: elem.name,
          value: val.replace(rCRLF, "\r\n")
        };
      }).get();
    }
  });
  jQuery.ajaxSettings.xhr = function() {
    try {
      return new XMLHttpRequest();
    } catch (e) {}
  };
  var xhrId = 0,
      xhrCallbacks = {},
      xhrSuccessStatus = {
        0: 200,
        1223: 204
      },
      xhrSupported = jQuery.ajaxSettings.xhr();
  if (window.attachEvent) {
    window.attachEvent("onunload", function() {
      for (var key in xhrCallbacks) {
        xhrCallbacks[key]();
      }
    });
  }
  support.cors = !!xhrSupported && ("withCredentials" in xhrSupported);
  support.ajax = xhrSupported = !!xhrSupported;
  jQuery.ajaxTransport(function(options) {
    var callback;
    if (support.cors || xhrSupported && !options.crossDomain) {
      return {
        send: function(headers, complete) {
          var i,
              xhr = options.xhr(),
              id = ++xhrId;
          xhr.open(options.type, options.url, options.async, options.username, options.password);
          if (options.xhrFields) {
            for (i in options.xhrFields) {
              xhr[i] = options.xhrFields[i];
            }
          }
          if (options.mimeType && xhr.overrideMimeType) {
            xhr.overrideMimeType(options.mimeType);
          }
          if (!options.crossDomain && !headers["X-Requested-With"]) {
            headers["X-Requested-With"] = "XMLHttpRequest";
          }
          for (i in headers) {
            xhr.setRequestHeader(i, headers[i]);
          }
          callback = function(type) {
            return function() {
              if (callback) {
                delete xhrCallbacks[id];
                callback = xhr.onload = xhr.onerror = null;
                if (type === "abort") {
                  xhr.abort();
                } else if (type === "error") {
                  complete(xhr.status, xhr.statusText);
                } else {
                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, typeof xhr.responseText === "string" ? {text: xhr.responseText} : undefined, xhr.getAllResponseHeaders());
                }
              }
            };
          };
          xhr.onload = callback();
          xhr.onerror = callback("error");
          callback = xhrCallbacks[id] = callback("abort");
          try {
            xhr.send(options.hasContent && options.data || null);
          } catch (e) {
            if (callback) {
              throw e;
            }
          }
        },
        abort: function() {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  jQuery.ajaxSetup({
    accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
    contents: {script: /(?:java|ecma)script/},
    converters: {"text script": function(text) {
        jQuery.globalEval(text);
        return text;
      }}
  });
  jQuery.ajaxPrefilter("script", function(s) {
    if (s.cache === undefined) {
      s.cache = false;
    }
    if (s.crossDomain) {
      s.type = "GET";
    }
  });
  jQuery.ajaxTransport("script", function(s) {
    if (s.crossDomain) {
      var script,
          callback;
      return {
        send: function(_, complete) {
          script = jQuery("<script>").prop({
            async: true,
            charset: s.scriptCharset,
            src: s.url
          }).on("load error", callback = function(evt) {
            script.remove();
            callback = null;
            if (evt) {
              complete(evt.type === "error" ? 404 : 200, evt.type);
            }
          });
          document.head.appendChild(script[0]);
        },
        abort: function() {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  var oldCallbacks = [],
      rjsonp = /(=)\?(?=&|$)|\?\?/;
  jQuery.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function() {
      var callback = oldCallbacks.pop() || (jQuery.expando + "_" + (nonce++));
      this[callback] = true;
      return callback;
    }
  });
  jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
    var callbackName,
        overwritten,
        responseContainer,
        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && !(s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
    if (jsonProp || s.dataTypes[0] === "jsonp") {
      callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
      if (jsonProp) {
        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
      } else if (s.jsonp !== false) {
        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
      }
      s.converters["script json"] = function() {
        if (!responseContainer) {
          jQuery.error(callbackName + " was not called");
        }
        return responseContainer[0];
      };
      s.dataTypes[0] = "json";
      overwritten = window[callbackName];
      window[callbackName] = function() {
        responseContainer = arguments;
      };
      jqXHR.always(function() {
        window[callbackName] = overwritten;
        if (s[callbackName]) {
          s.jsonpCallback = originalSettings.jsonpCallback;
          oldCallbacks.push(callbackName);
        }
        if (responseContainer && jQuery.isFunction(overwritten)) {
          overwritten(responseContainer[0]);
        }
        responseContainer = overwritten = undefined;
      });
      return "script";
    }
  });
  jQuery.parseHTML = function(data, context, keepScripts) {
    if (!data || typeof data !== "string") {
      return null;
    }
    if (typeof context === "boolean") {
      keepScripts = context;
      context = false;
    }
    context = context || document;
    var parsed = rsingleTag.exec(data),
        scripts = !keepScripts && [];
    if (parsed) {
      return [context.createElement(parsed[1])];
    }
    parsed = jQuery.buildFragment([data], context, scripts);
    if (scripts && scripts.length) {
      jQuery(scripts).remove();
    }
    return jQuery.merge([], parsed.childNodes);
  };
  var _load = jQuery.fn.load;
  jQuery.fn.load = function(url, params, callback) {
    if (typeof url !== "string" && _load) {
      return _load.apply(this, arguments);
    }
    var selector,
        type,
        response,
        self = this,
        off = url.indexOf(" ");
    if (off >= 0) {
      selector = jQuery.trim(url.slice(off));
      url = url.slice(0, off);
    }
    if (jQuery.isFunction(params)) {
      callback = params;
      params = undefined;
    } else if (params && typeof params === "object") {
      type = "POST";
    }
    if (self.length > 0) {
      jQuery.ajax({
        url: url,
        type: type,
        dataType: "html",
        data: params
      }).done(function(responseText) {
        response = arguments;
        self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
      }).complete(callback && function(jqXHR, status) {
        self.each(callback, response || [jqXHR.responseText, status, jqXHR]);
      });
    }
    return this;
  };
  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(i, type) {
    jQuery.fn[type] = function(fn) {
      return this.on(type, fn);
    };
  });
  jQuery.expr.filters.animated = function(elem) {
    return jQuery.grep(jQuery.timers, function(fn) {
      return elem === fn.elem;
    }).length;
  };
  var docElem = window.document.documentElement;
  function getWindow(elem) {
    return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;
  }
  jQuery.offset = {setOffset: function(elem, options, i) {
      var curPosition,
          curLeft,
          curCSSTop,
          curTop,
          curOffset,
          curCSSLeft,
          calculatePosition,
          position = jQuery.css(elem, "position"),
          curElem = jQuery(elem),
          props = {};
      if (position === "static") {
        elem.style.position = "relative";
      }
      curOffset = curElem.offset();
      curCSSTop = jQuery.css(elem, "top");
      curCSSLeft = jQuery.css(elem, "left");
      calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
      if (calculatePosition) {
        curPosition = curElem.position();
        curTop = curPosition.top;
        curLeft = curPosition.left;
      } else {
        curTop = parseFloat(curCSSTop) || 0;
        curLeft = parseFloat(curCSSLeft) || 0;
      }
      if (jQuery.isFunction(options)) {
        options = options.call(elem, i, curOffset);
      }
      if (options.top != null) {
        props.top = (options.top - curOffset.top) + curTop;
      }
      if (options.left != null) {
        props.left = (options.left - curOffset.left) + curLeft;
      }
      if ("using" in options) {
        options.using.call(elem, props);
      } else {
        curElem.css(props);
      }
    }};
  jQuery.fn.extend({
    offset: function(options) {
      if (arguments.length) {
        return options === undefined ? this : this.each(function(i) {
          jQuery.offset.setOffset(this, options, i);
        });
      }
      var docElem,
          win,
          elem = this[0],
          box = {
            top: 0,
            left: 0
          },
          doc = elem && elem.ownerDocument;
      if (!doc) {
        return;
      }
      docElem = doc.documentElement;
      if (!jQuery.contains(docElem, elem)) {
        return box;
      }
      if (typeof elem.getBoundingClientRect !== strundefined) {
        box = elem.getBoundingClientRect();
      }
      win = getWindow(doc);
      return {
        top: box.top + win.pageYOffset - docElem.clientTop,
        left: box.left + win.pageXOffset - docElem.clientLeft
      };
    },
    position: function() {
      if (!this[0]) {
        return;
      }
      var offsetParent,
          offset,
          elem = this[0],
          parentOffset = {
            top: 0,
            left: 0
          };
      if (jQuery.css(elem, "position") === "fixed") {
        offset = elem.getBoundingClientRect();
      } else {
        offsetParent = this.offsetParent();
        offset = this.offset();
        if (!jQuery.nodeName(offsetParent[0], "html")) {
          parentOffset = offsetParent.offset();
        }
        parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", true);
        parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", true);
      }
      return {
        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
      };
    },
    offsetParent: function() {
      return this.map(function() {
        var offsetParent = this.offsetParent || docElem;
        while (offsetParent && (!jQuery.nodeName(offsetParent, "html") && jQuery.css(offsetParent, "position") === "static")) {
          offsetParent = offsetParent.offsetParent;
        }
        return offsetParent || docElem;
      });
    }
  });
  jQuery.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function(method, prop) {
    var top = "pageYOffset" === prop;
    jQuery.fn[method] = function(val) {
      return access(this, function(elem, method, val) {
        var win = getWindow(elem);
        if (val === undefined) {
          return win ? win[prop] : elem[method];
        }
        if (win) {
          win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);
        } else {
          elem[method] = val;
        }
      }, method, val, arguments.length, null);
    };
  });
  jQuery.each(["top", "left"], function(i, prop) {
    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
      if (computed) {
        computed = curCSS(elem, prop);
        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
      }
    });
  });
  jQuery.each({
    Height: "height",
    Width: "width"
  }, function(name, type) {
    jQuery.each({
      padding: "inner" + name,
      content: type,
      "": "outer" + name
    }, function(defaultExtra, funcName) {
      jQuery.fn[funcName] = function(margin, value) {
        var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
        return access(this, function(elem, type, value) {
          var doc;
          if (jQuery.isWindow(elem)) {
            return elem.document.documentElement["client" + name];
          }
          if (elem.nodeType === 9) {
            doc = elem.documentElement;
            return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
          }
          return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
        }, type, chainable ? margin : undefined, chainable, null);
      };
    });
  });
  jQuery.fn.size = function() {
    return this.length;
  };
  jQuery.fn.andSelf = jQuery.fn.addBack;
  if (typeof define === "function" && define.amd) {
    define("github:components/jquery@2.1.4/jquery.js", [], function() {
      return jQuery;
    }) && define("jquery", ["github:components/jquery@2.1.4/jquery.js"], function(m) {
      return m;
    });
  }
  var _jQuery = window.jQuery,
      _$ = window.$;
  jQuery.noConflict = function(deep) {
    if (window.$ === jQuery) {
      window.$ = _$;
    }
    if (deep && window.jQuery === jQuery) {
      window.jQuery = _jQuery;
    }
    return jQuery;
  };
  if (typeof noGlobal === strundefined) {
    window.jQuery = window.$ = jQuery;
  }
  return jQuery;
}));

})();
(function() {
var define = System.amdDefine;
define("github:components/jquery@2.1.4.js", ["github:components/jquery@2.1.4/jquery.js"], function(main) {
  return main;
});

})();
System.registerDynamic("github:twbs/bootstrap@3.3.6/js/bootstrap.js", ["github:components/jquery@2.1.4.js"], false, function ($__require, $__exports, $__module) {
  var _retrieveGlobal = System.get("@@global-helpers").prepareGlobal($__module.id, "$", null);

  (function ($__global) {
    /* */
    "format global";
    "deps jquery";
    "exports $";
    /*!
     * Bootstrap v3.3.6 (http://getbootstrap.com)
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under the MIT license
     */

    if (typeof jQuery === 'undefined') {
      throw new Error('Bootstrap\'s JavaScript requires jQuery');
    }

    +function ($) {
      'use strict';

      var version = $.fn.jquery.split(' ')[0].split('.');
      if (version[0] < 2 && version[1] < 9 || version[0] == 1 && version[1] == 9 && version[2] < 1 || version[0] > 2) {
        throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3');
      }
    }(jQuery);

    /* ========================================================================
     * Bootstrap: transition.js v3.3.6
     * http://getbootstrap.com/javascript/#transitions
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
      // ============================================================

      function transitionEnd() {
        var el = document.createElement('bootstrap');

        var transEndEventNames = {
          WebkitTransition: 'webkitTransitionEnd',
          MozTransition: 'transitionend',
          OTransition: 'oTransitionEnd otransitionend',
          transition: 'transitionend'
        };

        for (var name in transEndEventNames) {
          if (el.style[name] !== undefined) {
            return { end: transEndEventNames[name] };
          }
        }

        return false; // explicit for ie8 (  ._.)
      }

      // http://blog.alexmaccaw.com/css-transitions
      $.fn.emulateTransitionEnd = function (duration) {
        var called = false;
        var $el = this;
        $(this).one('bsTransitionEnd', function () {
          called = true;
        });
        var callback = function () {
          if (!called) $($el).trigger($.support.transition.end);
        };
        setTimeout(callback, duration);
        return this;
      };

      $(function () {
        $.support.transition = transitionEnd();

        if (!$.support.transition) return;

        $.event.special.bsTransitionEnd = {
          bindType: $.support.transition.end,
          delegateType: $.support.transition.end,
          handle: function (e) {
            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
          }
        };
      });
    }(jQuery);

    /* ========================================================================
     * Bootstrap: alert.js v3.3.6
     * http://getbootstrap.com/javascript/#alerts
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // ALERT CLASS DEFINITION
      // ======================

      var dismiss = '[data-dismiss="alert"]';
      var Alert = function (el) {
        $(el).on('click', dismiss, this.close);
      };

      Alert.VERSION = '3.3.6';

      Alert.TRANSITION_DURATION = 150;

      Alert.prototype.close = function (e) {
        var $this = $(this);
        var selector = $this.attr('data-target');

        if (!selector) {
          selector = $this.attr('href');
          selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ''); // strip for ie7
        }

        var $parent = $(selector);

        if (e) e.preventDefault();

        if (!$parent.length) {
          $parent = $this.closest('.alert');
        }

        $parent.trigger(e = $.Event('close.bs.alert'));

        if (e.isDefaultPrevented()) return;

        $parent.removeClass('in');

        function removeElement() {
          // detach from parent, fire event then clean up data
          $parent.detach().trigger('closed.bs.alert').remove();
        }

        $.support.transition && $parent.hasClass('fade') ? $parent.one('bsTransitionEnd', removeElement).emulateTransitionEnd(Alert.TRANSITION_DURATION) : removeElement();
      };

      // ALERT PLUGIN DEFINITION
      // =======================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.alert');

          if (!data) $this.data('bs.alert', data = new Alert(this));
          if (typeof option == 'string') data[option].call($this);
        });
      }

      var old = $.fn.alert;

      $.fn.alert = Plugin;
      $.fn.alert.Constructor = Alert;

      // ALERT NO CONFLICT
      // =================

      $.fn.alert.noConflict = function () {
        $.fn.alert = old;
        return this;
      };

      // ALERT DATA-API
      // ==============

      $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close);
    }(jQuery);

    /* ========================================================================
     * Bootstrap: button.js v3.3.6
     * http://getbootstrap.com/javascript/#buttons
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // BUTTON PUBLIC CLASS DEFINITION
      // ==============================

      var Button = function (element, options) {
        this.$element = $(element);
        this.options = $.extend({}, Button.DEFAULTS, options);
        this.isLoading = false;
      };

      Button.VERSION = '3.3.6';

      Button.DEFAULTS = {
        loadingText: 'loading...'
      };

      Button.prototype.setState = function (state) {
        var d = 'disabled';
        var $el = this.$element;
        var val = $el.is('input') ? 'val' : 'html';
        var data = $el.data();

        state += 'Text';

        if (data.resetText == null) $el.data('resetText', $el[val]());

        // push to event loop to allow forms to submit
        setTimeout($.proxy(function () {
          $el[val](data[state] == null ? this.options[state] : data[state]);

          if (state == 'loadingText') {
            this.isLoading = true;
            $el.addClass(d).attr(d, d);
          } else if (this.isLoading) {
            this.isLoading = false;
            $el.removeClass(d).removeAttr(d);
          }
        }, this), 0);
      };

      Button.prototype.toggle = function () {
        var changed = true;
        var $parent = this.$element.closest('[data-toggle="buttons"]');

        if ($parent.length) {
          var $input = this.$element.find('input');
          if ($input.prop('type') == 'radio') {
            if ($input.prop('checked')) changed = false;
            $parent.find('.active').removeClass('active');
            this.$element.addClass('active');
          } else if ($input.prop('type') == 'checkbox') {
            if ($input.prop('checked') !== this.$element.hasClass('active')) changed = false;
            this.$element.toggleClass('active');
          }
          $input.prop('checked', this.$element.hasClass('active'));
          if (changed) $input.trigger('change');
        } else {
          this.$element.attr('aria-pressed', !this.$element.hasClass('active'));
          this.$element.toggleClass('active');
        }
      };

      // BUTTON PLUGIN DEFINITION
      // ========================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.button');
          var options = typeof option == 'object' && option;

          if (!data) $this.data('bs.button', data = new Button(this, options));

          if (option == 'toggle') data.toggle();else if (option) data.setState(option);
        });
      }

      var old = $.fn.button;

      $.fn.button = Plugin;
      $.fn.button.Constructor = Button;

      // BUTTON NO CONFLICT
      // ==================

      $.fn.button.noConflict = function () {
        $.fn.button = old;
        return this;
      };

      // BUTTON DATA-API
      // ===============

      $(document).on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
        var $btn = $(e.target);
        if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn');
        Plugin.call($btn, 'toggle');
        if (!($(e.target).is('input[type="radio"]') || $(e.target).is('input[type="checkbox"]'))) e.preventDefault();
      }).on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
        $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type));
      });
    }(jQuery);

    /* ========================================================================
     * Bootstrap: carousel.js v3.3.6
     * http://getbootstrap.com/javascript/#carousel
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // CAROUSEL CLASS DEFINITION
      // =========================

      var Carousel = function (element, options) {
        this.$element = $(element);
        this.$indicators = this.$element.find('.carousel-indicators');
        this.options = options;
        this.paused = null;
        this.sliding = null;
        this.interval = null;
        this.$active = null;
        this.$items = null;

        this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this));

        this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element.on('mouseenter.bs.carousel', $.proxy(this.pause, this)).on('mouseleave.bs.carousel', $.proxy(this.cycle, this));
      };

      Carousel.VERSION = '3.3.6';

      Carousel.TRANSITION_DURATION = 600;

      Carousel.DEFAULTS = {
        interval: 5000,
        pause: 'hover',
        wrap: true,
        keyboard: true
      };

      Carousel.prototype.keydown = function (e) {
        if (/input|textarea/i.test(e.target.tagName)) return;
        switch (e.which) {
          case 37:
            this.prev();break;
          case 39:
            this.next();break;
          default:
            return;
        }

        e.preventDefault();
      };

      Carousel.prototype.cycle = function (e) {
        e || (this.paused = false);

        this.interval && clearInterval(this.interval);

        this.options.interval && !this.paused && (this.interval = setInterval($.proxy(this.next, this), this.options.interval));

        return this;
      };

      Carousel.prototype.getItemIndex = function (item) {
        this.$items = item.parent().children('.item');
        return this.$items.index(item || this.$active);
      };

      Carousel.prototype.getItemForDirection = function (direction, active) {
        var activeIndex = this.getItemIndex(active);
        var willWrap = direction == 'prev' && activeIndex === 0 || direction == 'next' && activeIndex == this.$items.length - 1;
        if (willWrap && !this.options.wrap) return active;
        var delta = direction == 'prev' ? -1 : 1;
        var itemIndex = (activeIndex + delta) % this.$items.length;
        return this.$items.eq(itemIndex);
      };

      Carousel.prototype.to = function (pos) {
        var that = this;
        var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'));

        if (pos > this.$items.length - 1 || pos < 0) return;

        if (this.sliding) return this.$element.one('slid.bs.carousel', function () {
          that.to(pos);
        }); // yes, "slid"
        if (activeIndex == pos) return this.pause().cycle();

        return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos));
      };

      Carousel.prototype.pause = function (e) {
        e || (this.paused = true);

        if (this.$element.find('.next, .prev').length && $.support.transition) {
          this.$element.trigger($.support.transition.end);
          this.cycle(true);
        }

        this.interval = clearInterval(this.interval);

        return this;
      };

      Carousel.prototype.next = function () {
        if (this.sliding) return;
        return this.slide('next');
      };

      Carousel.prototype.prev = function () {
        if (this.sliding) return;
        return this.slide('prev');
      };

      Carousel.prototype.slide = function (type, next) {
        var $active = this.$element.find('.item.active');
        var $next = next || this.getItemForDirection(type, $active);
        var isCycling = this.interval;
        var direction = type == 'next' ? 'left' : 'right';
        var that = this;

        if ($next.hasClass('active')) return this.sliding = false;

        var relatedTarget = $next[0];
        var slideEvent = $.Event('slide.bs.carousel', {
          relatedTarget: relatedTarget,
          direction: direction
        });
        this.$element.trigger(slideEvent);
        if (slideEvent.isDefaultPrevented()) return;

        this.sliding = true;

        isCycling && this.pause();

        if (this.$indicators.length) {
          this.$indicators.find('.active').removeClass('active');
          var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)]);
          $nextIndicator && $nextIndicator.addClass('active');
        }

        var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }); // yes, "slid"
        if ($.support.transition && this.$element.hasClass('slide')) {
          $next.addClass(type);
          $next[0].offsetWidth; // force reflow
          $active.addClass(direction);
          $next.addClass(direction);
          $active.one('bsTransitionEnd', function () {
            $next.removeClass([type, direction].join(' ')).addClass('active');
            $active.removeClass(['active', direction].join(' '));
            that.sliding = false;
            setTimeout(function () {
              that.$element.trigger(slidEvent);
            }, 0);
          }).emulateTransitionEnd(Carousel.TRANSITION_DURATION);
        } else {
          $active.removeClass('active');
          $next.addClass('active');
          this.sliding = false;
          this.$element.trigger(slidEvent);
        }

        isCycling && this.cycle();

        return this;
      };

      // CAROUSEL PLUGIN DEFINITION
      // ==========================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.carousel');
          var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option);
          var action = typeof option == 'string' ? option : options.slide;

          if (!data) $this.data('bs.carousel', data = new Carousel(this, options));
          if (typeof option == 'number') data.to(option);else if (action) data[action]();else if (options.interval) data.pause().cycle();
        });
      }

      var old = $.fn.carousel;

      $.fn.carousel = Plugin;
      $.fn.carousel.Constructor = Carousel;

      // CAROUSEL NO CONFLICT
      // ====================

      $.fn.carousel.noConflict = function () {
        $.fn.carousel = old;
        return this;
      };

      // CAROUSEL DATA-API
      // =================

      var clickHandler = function (e) {
        var href;
        var $this = $(this);
        var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')); // strip for ie7
        if (!$target.hasClass('carousel')) return;
        var options = $.extend({}, $target.data(), $this.data());
        var slideIndex = $this.attr('data-slide-to');
        if (slideIndex) options.interval = false;

        Plugin.call($target, options);

        if (slideIndex) {
          $target.data('bs.carousel').to(slideIndex);
        }

        e.preventDefault();
      };

      $(document).on('click.bs.carousel.data-api', '[data-slide]', clickHandler).on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler);

      $(window).on('load', function () {
        $('[data-ride="carousel"]').each(function () {
          var $carousel = $(this);
          Plugin.call($carousel, $carousel.data());
        });
      });
    }(jQuery);

    /* ========================================================================
     * Bootstrap: collapse.js v3.3.6
     * http://getbootstrap.com/javascript/#collapse
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // COLLAPSE PUBLIC CLASS DEFINITION
      // ================================

      var Collapse = function (element, options) {
        this.$element = $(element);
        this.options = $.extend({}, Collapse.DEFAULTS, options);
        this.$trigger = $('[data-toggle="collapse"][href="#' + element.id + '"],' + '[data-toggle="collapse"][data-target="#' + element.id + '"]');
        this.transitioning = null;

        if (this.options.parent) {
          this.$parent = this.getParent();
        } else {
          this.addAriaAndCollapsedClass(this.$element, this.$trigger);
        }

        if (this.options.toggle) this.toggle();
      };

      Collapse.VERSION = '3.3.6';

      Collapse.TRANSITION_DURATION = 350;

      Collapse.DEFAULTS = {
        toggle: true
      };

      Collapse.prototype.dimension = function () {
        var hasWidth = this.$element.hasClass('width');
        return hasWidth ? 'width' : 'height';
      };

      Collapse.prototype.show = function () {
        if (this.transitioning || this.$element.hasClass('in')) return;

        var activesData;
        var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing');

        if (actives && actives.length) {
          activesData = actives.data('bs.collapse');
          if (activesData && activesData.transitioning) return;
        }

        var startEvent = $.Event('show.bs.collapse');
        this.$element.trigger(startEvent);
        if (startEvent.isDefaultPrevented()) return;

        if (actives && actives.length) {
          Plugin.call(actives, 'hide');
          activesData || actives.data('bs.collapse', null);
        }

        var dimension = this.dimension();

        this.$element.removeClass('collapse').addClass('collapsing')[dimension](0).attr('aria-expanded', true);

        this.$trigger.removeClass('collapsed').attr('aria-expanded', true);

        this.transitioning = 1;

        var complete = function () {
          this.$element.removeClass('collapsing').addClass('collapse in')[dimension]('');
          this.transitioning = 0;
          this.$element.trigger('shown.bs.collapse');
        };

        if (!$.support.transition) return complete.call(this);

        var scrollSize = $.camelCase(['scroll', dimension].join('-'));

        this.$element.one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);
      };

      Collapse.prototype.hide = function () {
        if (this.transitioning || !this.$element.hasClass('in')) return;

        var startEvent = $.Event('hide.bs.collapse');
        this.$element.trigger(startEvent);
        if (startEvent.isDefaultPrevented()) return;

        var dimension = this.dimension();

        this.$element[dimension](this.$element[dimension]())[0].offsetHeight;

        this.$element.addClass('collapsing').removeClass('collapse in').attr('aria-expanded', false);

        this.$trigger.addClass('collapsed').attr('aria-expanded', false);

        this.transitioning = 1;

        var complete = function () {
          this.transitioning = 0;
          this.$element.removeClass('collapsing').addClass('collapse').trigger('hidden.bs.collapse');
        };

        if (!$.support.transition) return complete.call(this);

        this.$element[dimension](0).one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION);
      };

      Collapse.prototype.toggle = function () {
        this[this.$element.hasClass('in') ? 'hide' : 'show']();
      };

      Collapse.prototype.getParent = function () {
        return $(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each($.proxy(function (i, element) {
          var $element = $(element);
          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element);
        }, this)).end();
      };

      Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
        var isOpen = $element.hasClass('in');

        $element.attr('aria-expanded', isOpen);
        $trigger.toggleClass('collapsed', !isOpen).attr('aria-expanded', isOpen);
      };

      function getTargetFromTrigger($trigger) {
        var href;
        var target = $trigger.attr('data-target') || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, ''); // strip for ie7

        return $(target);
      }

      // COLLAPSE PLUGIN DEFINITION
      // ==========================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.collapse');
          var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option);

          if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false;
          if (!data) $this.data('bs.collapse', data = new Collapse(this, options));
          if (typeof option == 'string') data[option]();
        });
      }

      var old = $.fn.collapse;

      $.fn.collapse = Plugin;
      $.fn.collapse.Constructor = Collapse;

      // COLLAPSE NO CONFLICT
      // ====================

      $.fn.collapse.noConflict = function () {
        $.fn.collapse = old;
        return this;
      };

      // COLLAPSE DATA-API
      // =================

      $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
        var $this = $(this);

        if (!$this.attr('data-target')) e.preventDefault();

        var $target = getTargetFromTrigger($this);
        var data = $target.data('bs.collapse');
        var option = data ? 'toggle' : $this.data();

        Plugin.call($target, option);
      });
    }(jQuery);

    /* ========================================================================
     * Bootstrap: dropdown.js v3.3.6
     * http://getbootstrap.com/javascript/#dropdowns
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // DROPDOWN CLASS DEFINITION
      // =========================

      var backdrop = '.dropdown-backdrop';
      var toggle = '[data-toggle="dropdown"]';
      var Dropdown = function (element) {
        $(element).on('click.bs.dropdown', this.toggle);
      };

      Dropdown.VERSION = '3.3.6';

      function getParent($this) {
        var selector = $this.attr('data-target');

        if (!selector) {
          selector = $this.attr('href');
          selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, ''); // strip for ie7
        }

        var $parent = selector && $(selector);

        return $parent && $parent.length ? $parent : $this.parent();
      }

      function clearMenus(e) {
        if (e && e.which === 3) return;
        $(backdrop).remove();
        $(toggle).each(function () {
          var $this = $(this);
          var $parent = getParent($this);
          var relatedTarget = { relatedTarget: this };

          if (!$parent.hasClass('open')) return;

          if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return;

          $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));

          if (e.isDefaultPrevented()) return;

          $this.attr('aria-expanded', 'false');
          $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget));
        });
      }

      Dropdown.prototype.toggle = function (e) {
        var $this = $(this);

        if ($this.is('.disabled, :disabled')) return;

        var $parent = getParent($this);
        var isActive = $parent.hasClass('open');

        clearMenus();

        if (!isActive) {
          if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
            // if mobile we use a backdrop because click events don't delegate
            $(document.createElement('div')).addClass('dropdown-backdrop').insertAfter($(this)).on('click', clearMenus);
          }

          var relatedTarget = { relatedTarget: this };
          $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));

          if (e.isDefaultPrevented()) return;

          $this.trigger('focus').attr('aria-expanded', 'true');

          $parent.toggleClass('open').trigger($.Event('shown.bs.dropdown', relatedTarget));
        }

        return false;
      };

      Dropdown.prototype.keydown = function (e) {
        if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;

        var $this = $(this);

        e.preventDefault();
        e.stopPropagation();

        if ($this.is('.disabled, :disabled')) return;

        var $parent = getParent($this);
        var isActive = $parent.hasClass('open');

        if (!isActive && e.which != 27 || isActive && e.which == 27) {
          if (e.which == 27) $parent.find(toggle).trigger('focus');
          return $this.trigger('click');
        }

        var desc = ' li:not(.disabled):visible a';
        var $items = $parent.find('.dropdown-menu' + desc);

        if (!$items.length) return;

        var index = $items.index(e.target);

        if (e.which == 38 && index > 0) index--; // up
        if (e.which == 40 && index < $items.length - 1) index++; // down
        if (!~index) index = 0;

        $items.eq(index).trigger('focus');
      };

      // DROPDOWN PLUGIN DEFINITION
      // ==========================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.dropdown');

          if (!data) $this.data('bs.dropdown', data = new Dropdown(this));
          if (typeof option == 'string') data[option].call($this);
        });
      }

      var old = $.fn.dropdown;

      $.fn.dropdown = Plugin;
      $.fn.dropdown.Constructor = Dropdown;

      // DROPDOWN NO CONFLICT
      // ====================

      $.fn.dropdown.noConflict = function () {
        $.fn.dropdown = old;
        return this;
      };

      // APPLY TO STANDARD DROPDOWN ELEMENTS
      // ===================================

      $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function (e) {
        e.stopPropagation();
      }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown).on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown);
    }(jQuery);

    /* ========================================================================
     * Bootstrap: modal.js v3.3.6
     * http://getbootstrap.com/javascript/#modals
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // MODAL CLASS DEFINITION
      // ======================

      var Modal = function (element, options) {
        this.options = options;
        this.$body = $(document.body);
        this.$element = $(element);
        this.$dialog = this.$element.find('.modal-dialog');
        this.$backdrop = null;
        this.isShown = null;
        this.originalBodyPad = null;
        this.scrollbarWidth = 0;
        this.ignoreBackdropClick = false;

        if (this.options.remote) {
          this.$element.find('.modal-content').load(this.options.remote, $.proxy(function () {
            this.$element.trigger('loaded.bs.modal');
          }, this));
        }
      };

      Modal.VERSION = '3.3.6';

      Modal.TRANSITION_DURATION = 300;
      Modal.BACKDROP_TRANSITION_DURATION = 150;

      Modal.DEFAULTS = {
        backdrop: true,
        keyboard: true,
        show: true
      };

      Modal.prototype.toggle = function (_relatedTarget) {
        return this.isShown ? this.hide() : this.show(_relatedTarget);
      };

      Modal.prototype.show = function (_relatedTarget) {
        var that = this;
        var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget });

        this.$element.trigger(e);

        if (this.isShown || e.isDefaultPrevented()) return;

        this.isShown = true;

        this.checkScrollbar();
        this.setScrollbar();
        this.$body.addClass('modal-open');

        this.escape();
        this.resize();

        this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this));

        this.$dialog.on('mousedown.dismiss.bs.modal', function () {
          that.$element.one('mouseup.dismiss.bs.modal', function (e) {
            if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true;
          });
        });

        this.backdrop(function () {
          var transition = $.support.transition && that.$element.hasClass('fade');

          if (!that.$element.parent().length) {
            that.$element.appendTo(that.$body); // don't move modals dom position
          }

          that.$element.show().scrollTop(0);

          that.adjustDialog();

          if (transition) {
            that.$element[0].offsetWidth; // force reflow
          }

          that.$element.addClass('in');

          that.enforceFocus();

          var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget });

          transition ? that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e);
          }).emulateTransitionEnd(Modal.TRANSITION_DURATION) : that.$element.trigger('focus').trigger(e);
        });
      };

      Modal.prototype.hide = function (e) {
        if (e) e.preventDefault();

        e = $.Event('hide.bs.modal');

        this.$element.trigger(e);

        if (!this.isShown || e.isDefaultPrevented()) return;

        this.isShown = false;

        this.escape();
        this.resize();

        $(document).off('focusin.bs.modal');

        this.$element.removeClass('in').off('click.dismiss.bs.modal').off('mouseup.dismiss.bs.modal');

        this.$dialog.off('mousedown.dismiss.bs.modal');

        $.support.transition && this.$element.hasClass('fade') ? this.$element.one('bsTransitionEnd', $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION) : this.hideModal();
      };

      Modal.prototype.enforceFocus = function () {
        $(document).off('focusin.bs.modal') // guard against infinite focus loop
        .on('focusin.bs.modal', $.proxy(function (e) {
          if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
            this.$element.trigger('focus');
          }
        }, this));
      };

      Modal.prototype.escape = function () {
        if (this.isShown && this.options.keyboard) {
          this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
            e.which == 27 && this.hide();
          }, this));
        } else if (!this.isShown) {
          this.$element.off('keydown.dismiss.bs.modal');
        }
      };

      Modal.prototype.resize = function () {
        if (this.isShown) {
          $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this));
        } else {
          $(window).off('resize.bs.modal');
        }
      };

      Modal.prototype.hideModal = function () {
        var that = this;
        this.$element.hide();
        this.backdrop(function () {
          that.$body.removeClass('modal-open');
          that.resetAdjustments();
          that.resetScrollbar();
          that.$element.trigger('hidden.bs.modal');
        });
      };

      Modal.prototype.removeBackdrop = function () {
        this.$backdrop && this.$backdrop.remove();
        this.$backdrop = null;
      };

      Modal.prototype.backdrop = function (callback) {
        var that = this;
        var animate = this.$element.hasClass('fade') ? 'fade' : '';

        if (this.isShown && this.options.backdrop) {
          var doAnimate = $.support.transition && animate;

          this.$backdrop = $(document.createElement('div')).addClass('modal-backdrop ' + animate).appendTo(this.$body);

          this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
            if (this.ignoreBackdropClick) {
              this.ignoreBackdropClick = false;
              return;
            }
            if (e.target !== e.currentTarget) return;
            this.options.backdrop == 'static' ? this.$element[0].focus() : this.hide();
          }, this));

          if (doAnimate) this.$backdrop[0].offsetWidth; // force reflow

          this.$backdrop.addClass('in');

          if (!callback) return;

          doAnimate ? this.$backdrop.one('bsTransitionEnd', callback).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callback();
        } else if (!this.isShown && this.$backdrop) {
          this.$backdrop.removeClass('in');

          var callbackRemove = function () {
            that.removeBackdrop();
            callback && callback();
          };
          $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one('bsTransitionEnd', callbackRemove).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callbackRemove();
        } else if (callback) {
          callback();
        }
      };

      // these following methods are used to handle overflowing modals

      Modal.prototype.handleUpdate = function () {
        this.adjustDialog();
      };

      Modal.prototype.adjustDialog = function () {
        var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;

        this.$element.css({
          paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
          paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
        });
      };

      Modal.prototype.resetAdjustments = function () {
        this.$element.css({
          paddingLeft: '',
          paddingRight: ''
        });
      };

      Modal.prototype.checkScrollbar = function () {
        var fullWindowWidth = window.innerWidth;
        if (!fullWindowWidth) {
          // workaround for missing window.innerWidth in IE8
          var documentElementRect = document.documentElement.getBoundingClientRect();
          fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);
        }
        this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;
        this.scrollbarWidth = this.measureScrollbar();
      };

      Modal.prototype.setScrollbar = function () {
        var bodyPad = parseInt(this.$body.css('padding-right') || 0, 10);
        this.originalBodyPad = document.body.style.paddingRight || '';
        if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth);
      };

      Modal.prototype.resetScrollbar = function () {
        this.$body.css('padding-right', this.originalBodyPad);
      };

      Modal.prototype.measureScrollbar = function () {
        // thx walsh
        var scrollDiv = document.createElement('div');
        scrollDiv.className = 'modal-scrollbar-measure';
        this.$body.append(scrollDiv);
        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        this.$body[0].removeChild(scrollDiv);
        return scrollbarWidth;
      };

      // MODAL PLUGIN DEFINITION
      // =======================

      function Plugin(option, _relatedTarget) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.modal');
          var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option);

          if (!data) $this.data('bs.modal', data = new Modal(this, options));
          if (typeof option == 'string') data[option](_relatedTarget);else if (options.show) data.show(_relatedTarget);
        });
      }

      var old = $.fn.modal;

      $.fn.modal = Plugin;
      $.fn.modal.Constructor = Modal;

      // MODAL NO CONFLICT
      // =================

      $.fn.modal.noConflict = function () {
        $.fn.modal = old;
        return this;
      };

      // MODAL DATA-API
      // ==============

      $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
        var $this = $(this);
        var href = $this.attr('href');
        var $target = $($this.attr('data-target') || href && href.replace(/.*(?=#[^\s]+$)/, '')); // strip for ie7
        var option = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data());

        if ($this.is('a')) e.preventDefault();

        $target.one('show.bs.modal', function (showEvent) {
          if (showEvent.isDefaultPrevented()) return; // only register focus restorer if modal will actually get shown
          $target.one('hidden.bs.modal', function () {
            $this.is(':visible') && $this.trigger('focus');
          });
        });
        Plugin.call($target, option, this);
      });
    }(jQuery);

    /* ========================================================================
     * Bootstrap: tooltip.js v3.3.6
     * http://getbootstrap.com/javascript/#tooltip
     * Inspired by the original jQuery.tipsy by Jason Frame
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // TOOLTIP PUBLIC CLASS DEFINITION
      // ===============================

      var Tooltip = function (element, options) {
        this.type = null;
        this.options = null;
        this.enabled = null;
        this.timeout = null;
        this.hoverState = null;
        this.$element = null;
        this.inState = null;

        this.init('tooltip', element, options);
      };

      Tooltip.VERSION = '3.3.6';

      Tooltip.TRANSITION_DURATION = 150;

      Tooltip.DEFAULTS = {
        animation: true,
        placement: 'top',
        selector: false,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: 'hover focus',
        title: '',
        delay: 0,
        html: false,
        container: false,
        viewport: {
          selector: 'body',
          padding: 0
        }
      };

      Tooltip.prototype.init = function (type, element, options) {
        this.enabled = true;
        this.type = type;
        this.$element = $(element);
        this.options = this.getOptions(options);
        this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport);
        this.inState = { click: false, hover: false, focus: false };

        if (this.$element[0] instanceof document.constructor && !this.options.selector) {
          throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!');
        }

        var triggers = this.options.trigger.split(' ');

        for (var i = triggers.length; i--;) {
          var trigger = triggers[i];

          if (trigger == 'click') {
            this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this));
          } else if (trigger != 'manual') {
            var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';
            var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';

            this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this));
            this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this));
          }
        }

        this.options.selector ? this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' }) : this.fixTitle();
      };

      Tooltip.prototype.getDefaults = function () {
        return Tooltip.DEFAULTS;
      };

      Tooltip.prototype.getOptions = function (options) {
        options = $.extend({}, this.getDefaults(), this.$element.data(), options);

        if (options.delay && typeof options.delay == 'number') {
          options.delay = {
            show: options.delay,
            hide: options.delay
          };
        }

        return options;
      };

      Tooltip.prototype.getDelegateOptions = function () {
        var options = {};
        var defaults = this.getDefaults();

        this._options && $.each(this._options, function (key, value) {
          if (defaults[key] != value) options[key] = value;
        });

        return options;
      };

      Tooltip.prototype.enter = function (obj) {
        var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);

        if (!self) {
          self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
          $(obj.currentTarget).data('bs.' + this.type, self);
        }

        if (obj instanceof $.Event) {
          self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true;
        }

        if (self.tip().hasClass('in') || self.hoverState == 'in') {
          self.hoverState = 'in';
          return;
        }

        clearTimeout(self.timeout);

        self.hoverState = 'in';

        if (!self.options.delay || !self.options.delay.show) return self.show();

        self.timeout = setTimeout(function () {
          if (self.hoverState == 'in') self.show();
        }, self.options.delay.show);
      };

      Tooltip.prototype.isInStateTrue = function () {
        for (var key in this.inState) {
          if (this.inState[key]) return true;
        }

        return false;
      };

      Tooltip.prototype.leave = function (obj) {
        var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);

        if (!self) {
          self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
          $(obj.currentTarget).data('bs.' + this.type, self);
        }

        if (obj instanceof $.Event) {
          self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false;
        }

        if (self.isInStateTrue()) return;

        clearTimeout(self.timeout);

        self.hoverState = 'out';

        if (!self.options.delay || !self.options.delay.hide) return self.hide();

        self.timeout = setTimeout(function () {
          if (self.hoverState == 'out') self.hide();
        }, self.options.delay.hide);
      };

      Tooltip.prototype.show = function () {
        var e = $.Event('show.bs.' + this.type);

        if (this.hasContent() && this.enabled) {
          this.$element.trigger(e);

          var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
          if (e.isDefaultPrevented() || !inDom) return;
          var that = this;

          var $tip = this.tip();

          var tipId = this.getUID(this.type);

          this.setContent();
          $tip.attr('id', tipId);
          this.$element.attr('aria-describedby', tipId);

          if (this.options.animation) $tip.addClass('fade');

          var placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;

          var autoToken = /\s?auto?\s?/i;
          var autoPlace = autoToken.test(placement);
          if (autoPlace) placement = placement.replace(autoToken, '') || 'top';

          $tip.detach().css({ top: 0, left: 0, display: 'block' }).addClass(placement).data('bs.' + this.type, this);

          this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element);
          this.$element.trigger('inserted.bs.' + this.type);

          var pos = this.getPosition();
          var actualWidth = $tip[0].offsetWidth;
          var actualHeight = $tip[0].offsetHeight;

          if (autoPlace) {
            var orgPlacement = placement;
            var viewportDim = this.getPosition(this.$viewport);

            placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top' : placement == 'top' && pos.top - actualHeight < viewportDim.top ? 'bottom' : placement == 'right' && pos.right + actualWidth > viewportDim.width ? 'left' : placement == 'left' && pos.left - actualWidth < viewportDim.left ? 'right' : placement;

            $tip.removeClass(orgPlacement).addClass(placement);
          }

          var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);

          this.applyPlacement(calculatedOffset, placement);

          var complete = function () {
            var prevHoverState = that.hoverState;
            that.$element.trigger('shown.bs.' + that.type);
            that.hoverState = null;

            if (prevHoverState == 'out') that.leave(that);
          };

          $.support.transition && this.$tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();
        }
      };

      Tooltip.prototype.applyPlacement = function (offset, placement) {
        var $tip = this.tip();
        var width = $tip[0].offsetWidth;
        var height = $tip[0].offsetHeight;

        // manually read margins because getBoundingClientRect includes difference
        var marginTop = parseInt($tip.css('margin-top'), 10);
        var marginLeft = parseInt($tip.css('margin-left'), 10);

        // we must check for NaN for ie 8/9
        if (isNaN(marginTop)) marginTop = 0;
        if (isNaN(marginLeft)) marginLeft = 0;

        offset.top += marginTop;
        offset.left += marginLeft;

        // $.fn.offset doesn't round pixel values
        // so we use setOffset directly with our own function B-0
        $.offset.setOffset($tip[0], $.extend({
          using: function (props) {
            $tip.css({
              top: Math.round(props.top),
              left: Math.round(props.left)
            });
          }
        }, offset), 0);

        $tip.addClass('in');

        // check to see if placing tip in new offset caused the tip to resize itself
        var actualWidth = $tip[0].offsetWidth;
        var actualHeight = $tip[0].offsetHeight;

        if (placement == 'top' && actualHeight != height) {
          offset.top = offset.top + height - actualHeight;
        }

        var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);

        if (delta.left) offset.left += delta.left;else offset.top += delta.top;

        var isVertical = /top|bottom/.test(placement);
        var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;
        var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';

        $tip.offset(offset);
        this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical);
      };

      Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
        this.arrow().css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%').css(isVertical ? 'top' : 'left', '');
      };

      Tooltip.prototype.setContent = function () {
        var $tip = this.tip();
        var title = this.getTitle();

        $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title);
        $tip.removeClass('fade in top bottom left right');
      };

      Tooltip.prototype.hide = function (callback) {
        var that = this;
        var $tip = $(this.$tip);
        var e = $.Event('hide.bs.' + this.type);

        function complete() {
          if (that.hoverState != 'in') $tip.detach();
          that.$element.removeAttr('aria-describedby').trigger('hidden.bs.' + that.type);
          callback && callback();
        }

        this.$element.trigger(e);

        if (e.isDefaultPrevented()) return;

        $tip.removeClass('in');

        $.support.transition && $tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();

        this.hoverState = null;

        return this;
      };

      Tooltip.prototype.fixTitle = function () {
        var $e = this.$element;
        if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
          $e.attr('data-original-title', $e.attr('title') || '').attr('title', '');
        }
      };

      Tooltip.prototype.hasContent = function () {
        return this.getTitle();
      };

      Tooltip.prototype.getPosition = function ($element) {
        $element = $element || this.$element;

        var el = $element[0];
        var isBody = el.tagName == 'BODY';

        var elRect = el.getBoundingClientRect();
        if (elRect.width == null) {
          // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
          elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top });
        }
        var elOffset = isBody ? { top: 0, left: 0 } : $element.offset();
        var scroll = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() };
        var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null;

        return $.extend({}, elRect, scroll, outerDims, elOffset);
      };

      Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
        return placement == 'bottom' ? { top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2 } : placement == 'top' ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } : placement == 'left' ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */{ top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width };
      };

      Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
        var delta = { top: 0, left: 0 };
        if (!this.$viewport) return delta;

        var viewportPadding = this.options.viewport && this.options.viewport.padding || 0;
        var viewportDimensions = this.getPosition(this.$viewport);

        if (/right|left/.test(placement)) {
          var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll;
          var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;
          if (topEdgeOffset < viewportDimensions.top) {
            // top overflow
            delta.top = viewportDimensions.top - topEdgeOffset;
          } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) {
            // bottom overflow
            delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;
          }
        } else {
          var leftEdgeOffset = pos.left - viewportPadding;
          var rightEdgeOffset = pos.left + viewportPadding + actualWidth;
          if (leftEdgeOffset < viewportDimensions.left) {
            // left overflow
            delta.left = viewportDimensions.left - leftEdgeOffset;
          } else if (rightEdgeOffset > viewportDimensions.right) {
            // right overflow
            delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;
          }
        }

        return delta;
      };

      Tooltip.prototype.getTitle = function () {
        var title;
        var $e = this.$element;
        var o = this.options;

        title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title);

        return title;
      };

      Tooltip.prototype.getUID = function (prefix) {
        do prefix += ~~(Math.random() * 1000000); while (document.getElementById(prefix));
        return prefix;
      };

      Tooltip.prototype.tip = function () {
        if (!this.$tip) {
          this.$tip = $(this.options.template);
          if (this.$tip.length != 1) {
            throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!');
          }
        }
        return this.$tip;
      };

      Tooltip.prototype.arrow = function () {
        return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');
      };

      Tooltip.prototype.enable = function () {
        this.enabled = true;
      };

      Tooltip.prototype.disable = function () {
        this.enabled = false;
      };

      Tooltip.prototype.toggleEnabled = function () {
        this.enabled = !this.enabled;
      };

      Tooltip.prototype.toggle = function (e) {
        var self = this;
        if (e) {
          self = $(e.currentTarget).data('bs.' + this.type);
          if (!self) {
            self = new this.constructor(e.currentTarget, this.getDelegateOptions());
            $(e.currentTarget).data('bs.' + this.type, self);
          }
        }

        if (e) {
          self.inState.click = !self.inState.click;
          if (self.isInStateTrue()) self.enter(self);else self.leave(self);
        } else {
          self.tip().hasClass('in') ? self.leave(self) : self.enter(self);
        }
      };

      Tooltip.prototype.destroy = function () {
        var that = this;
        clearTimeout(this.timeout);
        this.hide(function () {
          that.$element.off('.' + that.type).removeData('bs.' + that.type);
          if (that.$tip) {
            that.$tip.detach();
          }
          that.$tip = null;
          that.$arrow = null;
          that.$viewport = null;
        });
      };

      // TOOLTIP PLUGIN DEFINITION
      // =========================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.tooltip');
          var options = typeof option == 'object' && option;

          if (!data && /destroy|hide/.test(option)) return;
          if (!data) $this.data('bs.tooltip', data = new Tooltip(this, options));
          if (typeof option == 'string') data[option]();
        });
      }

      var old = $.fn.tooltip;

      $.fn.tooltip = Plugin;
      $.fn.tooltip.Constructor = Tooltip;

      // TOOLTIP NO CONFLICT
      // ===================

      $.fn.tooltip.noConflict = function () {
        $.fn.tooltip = old;
        return this;
      };
    }(jQuery);

    /* ========================================================================
     * Bootstrap: popover.js v3.3.6
     * http://getbootstrap.com/javascript/#popovers
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // POPOVER PUBLIC CLASS DEFINITION
      // ===============================

      var Popover = function (element, options) {
        this.init('popover', element, options);
      };

      if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js');

      Popover.VERSION = '3.3.6';

      Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
        placement: 'right',
        trigger: 'click',
        content: '',
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
      });

      // NOTE: POPOVER EXTENDS tooltip.js
      // ================================

      Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype);

      Popover.prototype.constructor = Popover;

      Popover.prototype.getDefaults = function () {
        return Popover.DEFAULTS;
      };

      Popover.prototype.setContent = function () {
        var $tip = this.tip();
        var title = this.getTitle();
        var content = this.getContent();

        $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title);
        $tip.find('.popover-content').children().detach().end()[// we use append for html objects to maintain js events
        this.options.html ? typeof content == 'string' ? 'html' : 'append' : 'text'](content);

        $tip.removeClass('fade top bottom left right in');

        // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
        // this manually by checking the contents.
        if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide();
      };

      Popover.prototype.hasContent = function () {
        return this.getTitle() || this.getContent();
      };

      Popover.prototype.getContent = function () {
        var $e = this.$element;
        var o = this.options;

        return $e.attr('data-content') || (typeof o.content == 'function' ? o.content.call($e[0]) : o.content);
      };

      Popover.prototype.arrow = function () {
        return this.$arrow = this.$arrow || this.tip().find('.arrow');
      };

      // POPOVER PLUGIN DEFINITION
      // =========================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.popover');
          var options = typeof option == 'object' && option;

          if (!data && /destroy|hide/.test(option)) return;
          if (!data) $this.data('bs.popover', data = new Popover(this, options));
          if (typeof option == 'string') data[option]();
        });
      }

      var old = $.fn.popover;

      $.fn.popover = Plugin;
      $.fn.popover.Constructor = Popover;

      // POPOVER NO CONFLICT
      // ===================

      $.fn.popover.noConflict = function () {
        $.fn.popover = old;
        return this;
      };
    }(jQuery);

    /* ========================================================================
     * Bootstrap: scrollspy.js v3.3.6
     * http://getbootstrap.com/javascript/#scrollspy
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // SCROLLSPY CLASS DEFINITION
      // ==========================

      function ScrollSpy(element, options) {
        this.$body = $(document.body);
        this.$scrollElement = $(element).is(document.body) ? $(window) : $(element);
        this.options = $.extend({}, ScrollSpy.DEFAULTS, options);
        this.selector = (this.options.target || '') + ' .nav li > a';
        this.offsets = [];
        this.targets = [];
        this.activeTarget = null;
        this.scrollHeight = 0;

        this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this));
        this.refresh();
        this.process();
      }

      ScrollSpy.VERSION = '3.3.6';

      ScrollSpy.DEFAULTS = {
        offset: 10
      };

      ScrollSpy.prototype.getScrollHeight = function () {
        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);
      };

      ScrollSpy.prototype.refresh = function () {
        var that = this;
        var offsetMethod = 'offset';
        var offsetBase = 0;

        this.offsets = [];
        this.targets = [];
        this.scrollHeight = this.getScrollHeight();

        if (!$.isWindow(this.$scrollElement[0])) {
          offsetMethod = 'position';
          offsetBase = this.$scrollElement.scrollTop();
        }

        this.$body.find(this.selector).map(function () {
          var $el = $(this);
          var href = $el.data('target') || $el.attr('href');
          var $href = /^#./.test(href) && $(href);

          return $href && $href.length && $href.is(':visible') && [[$href[offsetMethod]().top + offsetBase, href]] || null;
        }).sort(function (a, b) {
          return a[0] - b[0];
        }).each(function () {
          that.offsets.push(this[0]);
          that.targets.push(this[1]);
        });
      };

      ScrollSpy.prototype.process = function () {
        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset;
        var scrollHeight = this.getScrollHeight();
        var maxScroll = this.options.offset + scrollHeight - this.$scrollElement.height();
        var offsets = this.offsets;
        var targets = this.targets;
        var activeTarget = this.activeTarget;
        var i;

        if (this.scrollHeight != scrollHeight) {
          this.refresh();
        }

        if (scrollTop >= maxScroll) {
          return activeTarget != (i = targets[targets.length - 1]) && this.activate(i);
        }

        if (activeTarget && scrollTop < offsets[0]) {
          this.activeTarget = null;
          return this.clear();
        }

        for (i = offsets.length; i--;) {
          activeTarget != targets[i] && scrollTop >= offsets[i] && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1]) && this.activate(targets[i]);
        }
      };

      ScrollSpy.prototype.activate = function (target) {
        this.activeTarget = target;

        this.clear();

        var selector = this.selector + '[data-target="' + target + '"],' + this.selector + '[href="' + target + '"]';

        var active = $(selector).parents('li').addClass('active');

        if (active.parent('.dropdown-menu').length) {
          active = active.closest('li.dropdown').addClass('active');
        }

        active.trigger('activate.bs.scrollspy');
      };

      ScrollSpy.prototype.clear = function () {
        $(this.selector).parentsUntil(this.options.target, '.active').removeClass('active');
      };

      // SCROLLSPY PLUGIN DEFINITION
      // ===========================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.scrollspy');
          var options = typeof option == 'object' && option;

          if (!data) $this.data('bs.scrollspy', data = new ScrollSpy(this, options));
          if (typeof option == 'string') data[option]();
        });
      }

      var old = $.fn.scrollspy;

      $.fn.scrollspy = Plugin;
      $.fn.scrollspy.Constructor = ScrollSpy;

      // SCROLLSPY NO CONFLICT
      // =====================

      $.fn.scrollspy.noConflict = function () {
        $.fn.scrollspy = old;
        return this;
      };

      // SCROLLSPY DATA-API
      // ==================

      $(window).on('load.bs.scrollspy.data-api', function () {
        $('[data-spy="scroll"]').each(function () {
          var $spy = $(this);
          Plugin.call($spy, $spy.data());
        });
      });
    }(jQuery);

    /* ========================================================================
     * Bootstrap: tab.js v3.3.6
     * http://getbootstrap.com/javascript/#tabs
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // TAB CLASS DEFINITION
      // ====================

      var Tab = function (element) {
        // jscs:disable requireDollarBeforejQueryAssignment
        this.element = $(element);
        // jscs:enable requireDollarBeforejQueryAssignment
      };

      Tab.VERSION = '3.3.6';

      Tab.TRANSITION_DURATION = 150;

      Tab.prototype.show = function () {
        var $this = this.element;
        var $ul = $this.closest('ul:not(.dropdown-menu)');
        var selector = $this.data('target');

        if (!selector) {
          selector = $this.attr('href');
          selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ''); // strip for ie7
        }

        if ($this.parent('li').hasClass('active')) return;

        var $previous = $ul.find('.active:last a');
        var hideEvent = $.Event('hide.bs.tab', {
          relatedTarget: $this[0]
        });
        var showEvent = $.Event('show.bs.tab', {
          relatedTarget: $previous[0]
        });

        $previous.trigger(hideEvent);
        $this.trigger(showEvent);

        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return;

        var $target = $(selector);

        this.activate($this.closest('li'), $ul);
        this.activate($target, $target.parent(), function () {
          $previous.trigger({
            type: 'hidden.bs.tab',
            relatedTarget: $this[0]
          });
          $this.trigger({
            type: 'shown.bs.tab',
            relatedTarget: $previous[0]
          });
        });
      };

      Tab.prototype.activate = function (element, container, callback) {
        var $active = container.find('> .active');
        var transition = callback && $.support.transition && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length);

        function next() {
          $active.removeClass('active').find('> .dropdown-menu > .active').removeClass('active').end().find('[data-toggle="tab"]').attr('aria-expanded', false);

          element.addClass('active').find('[data-toggle="tab"]').attr('aria-expanded', true);

          if (transition) {
            element[0].offsetWidth; // reflow for transition
            element.addClass('in');
          } else {
            element.removeClass('fade');
          }

          if (element.parent('.dropdown-menu').length) {
            element.closest('li.dropdown').addClass('active').end().find('[data-toggle="tab"]').attr('aria-expanded', true);
          }

          callback && callback();
        }

        $active.length && transition ? $active.one('bsTransitionEnd', next).emulateTransitionEnd(Tab.TRANSITION_DURATION) : next();

        $active.removeClass('in');
      };

      // TAB PLUGIN DEFINITION
      // =====================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.tab');

          if (!data) $this.data('bs.tab', data = new Tab(this));
          if (typeof option == 'string') data[option]();
        });
      }

      var old = $.fn.tab;

      $.fn.tab = Plugin;
      $.fn.tab.Constructor = Tab;

      // TAB NO CONFLICT
      // ===============

      $.fn.tab.noConflict = function () {
        $.fn.tab = old;
        return this;
      };

      // TAB DATA-API
      // ============

      var clickHandler = function (e) {
        e.preventDefault();
        Plugin.call($(this), 'show');
      };

      $(document).on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler).on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler);
    }(jQuery);

    /* ========================================================================
     * Bootstrap: affix.js v3.3.6
     * http://getbootstrap.com/javascript/#affix
     * ========================================================================
     * Copyright 2011-2015 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     * ======================================================================== */

    +function ($) {
      'use strict';

      // AFFIX CLASS DEFINITION
      // ======================

      var Affix = function (element, options) {
        this.options = $.extend({}, Affix.DEFAULTS, options);

        this.$target = $(this.options.target).on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this)).on('click.bs.affix.data-api', $.proxy(this.checkPositionWithEventLoop, this));

        this.$element = $(element);
        this.affixed = null;
        this.unpin = null;
        this.pinnedOffset = null;

        this.checkPosition();
      };

      Affix.VERSION = '3.3.6';

      Affix.RESET = 'affix affix-top affix-bottom';

      Affix.DEFAULTS = {
        offset: 0,
        target: window
      };

      Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
        var scrollTop = this.$target.scrollTop();
        var position = this.$element.offset();
        var targetHeight = this.$target.height();

        if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false;

        if (this.affixed == 'bottom') {
          if (offsetTop != null) return scrollTop + this.unpin <= position.top ? false : 'bottom';
          return scrollTop + targetHeight <= scrollHeight - offsetBottom ? false : 'bottom';
        }

        var initializing = this.affixed == null;
        var colliderTop = initializing ? scrollTop : position.top;
        var colliderHeight = initializing ? targetHeight : height;

        if (offsetTop != null && scrollTop <= offsetTop) return 'top';
        if (offsetBottom != null && colliderTop + colliderHeight >= scrollHeight - offsetBottom) return 'bottom';

        return false;
      };

      Affix.prototype.getPinnedOffset = function () {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(Affix.RESET).addClass('affix');
        var scrollTop = this.$target.scrollTop();
        var position = this.$element.offset();
        return this.pinnedOffset = position.top - scrollTop;
      };

      Affix.prototype.checkPositionWithEventLoop = function () {
        setTimeout($.proxy(this.checkPosition, this), 1);
      };

      Affix.prototype.checkPosition = function () {
        if (!this.$element.is(':visible')) return;

        var height = this.$element.height();
        var offset = this.options.offset;
        var offsetTop = offset.top;
        var offsetBottom = offset.bottom;
        var scrollHeight = Math.max($(document).height(), $(document.body).height());

        if (typeof offset != 'object') offsetBottom = offsetTop = offset;
        if (typeof offsetTop == 'function') offsetTop = offset.top(this.$element);
        if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element);

        var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom);

        if (this.affixed != affix) {
          if (this.unpin != null) this.$element.css('top', '');

          var affixType = 'affix' + (affix ? '-' + affix : '');
          var e = $.Event(affixType + '.bs.affix');

          this.$element.trigger(e);

          if (e.isDefaultPrevented()) return;

          this.affixed = affix;
          this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null;

          this.$element.removeClass(Affix.RESET).addClass(affixType).trigger(affixType.replace('affix', 'affixed') + '.bs.affix');
        }

        if (affix == 'bottom') {
          this.$element.offset({
            top: scrollHeight - height - offsetBottom
          });
        }
      };

      // AFFIX PLUGIN DEFINITION
      // =======================

      function Plugin(option) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data('bs.affix');
          var options = typeof option == 'object' && option;

          if (!data) $this.data('bs.affix', data = new Affix(this, options));
          if (typeof option == 'string') data[option]();
        });
      }

      var old = $.fn.affix;

      $.fn.affix = Plugin;
      $.fn.affix.Constructor = Affix;

      // AFFIX NO CONFLICT
      // =================

      $.fn.affix.noConflict = function () {
        $.fn.affix = old;
        return this;
      };

      // AFFIX DATA-API
      // ==============

      $(window).on('load', function () {
        $('[data-spy="affix"]').each(function () {
          var $spy = $(this);
          var data = $spy.data();

          data.offset = data.offset || {};

          if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom;
          if (data.offsetTop != null) data.offset.top = data.offsetTop;

          Plugin.call($spy, data);
        });
      });
    }(jQuery);
  })(this);

  return _retrieveGlobal();
});
System.registerDynamic("github:twbs/bootstrap@3.3.6.js", ["github:twbs/bootstrap@3.3.6/js/bootstrap.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:twbs/bootstrap@3.3.6/js/bootstrap.js");
});
System.register('view-models/users/sfdc-contact-sync.js', ['github:lodash/lodash@3.10.1.js', 'github:twbs/bootstrap@3.3.6.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/sfdc_contact_sync_service.js'], function (_export) {
  'use strict';

  var _, $, bootstrap, EventAggregator, bindable, inject, SfdcContactSyncService, SfdcContactSync;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }, function (_bootstrap) {
      $ = _bootstrap['default'];
      bootstrap = _bootstrap['default'];
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }, function (_serviceSfdc_contact_sync_service) {
      SfdcContactSyncService = _serviceSfdc_contact_sync_service.SfdcContactSyncService;
    }],
    execute: function () {
      SfdcContactSync = function () {
        function SfdcContactSync(sfdcContactSyncService, ea) {
          _classCallCheck(this, _SfdcContactSync);

          this.sfdcContactSyncService = sfdcContactSyncService;
          this.ea = ea;
          this.standardFlds = [];
        }

        _createClass(SfdcContactSync, [{
          key: 'processSfdcStandardFlds',
          value: function processSfdcStandardFlds(userFormPreferenceHash) {
            this.standardFlds = _.cloneDeep(userFormPreferenceHash.external);
          }
        }, {
          key: 'processSfdcCustomFlds',
          value: function processSfdcCustomFlds(callback, userForms) {
            var _this = this;

            var formBuilderHash = userForms.formBuilderHash;
            var allFields = [];
            var copyUserFields = _.cloneDeep(formBuilderHash.external_custom_form);
            [].push.apply(allFields, this.standardFlds);
            [].push.apply(allFields, copyUserFields);
            this.sfdcContactSyncService.getSfdcSyncedContactFields(this.getSFDCRequestObj(allFields)).then(function (apiResponse) {
              if (typeof apiResponse.response === 'string') {
                apiResponse = JSON.parse(apiResponse.response);
              }
              var sfdcDefaults = {};
              _.forEach(copyUserFields, function (field) {
                var matchedField = apiResponse.mapped_fields[field.field_name];
                if (matchedField) {
                  var selectedVal = matchedField['value'];
                  if (field.type === 'textfield') {
                    selectedVal = matchedField['value'] === '' ? field.values : matchedField['value'];
                  }
                  field.values = matchedField['prefill'];
                  sfdcDefaults[field.field_name] = selectedVal;
                }
              });
              formBuilderHash.external_custom_form = copyUserFields;
              _this.ea.publish(callback, { formBuilderHash: formBuilderHash, sfdcDefaults: sfdcDefaults });
            })['catch'](function () {
              _this.ea.publish(callback, { formBuilderHash: formBuilderHash });
            });
          }
        }, {
          key: 'getSFDCRequestObj',
          value: function getSFDCRequestObj(fields) {
            var requestObj = {
              mapped_fields: {}
            };
            _.forEach(fields, function (form_element) {
              if (form_element.integration_field && form_element.integration_field.uuid) {
                requestObj.mapped_fields[form_element.field_name] = {
                  value: "",
                  prefill: "",
                  integration_field_uuid: form_element.integration_field.uuid
                };
              }
            });
            return requestObj;
          }
        }]);

        var _SfdcContactSync = SfdcContactSync;
        SfdcContactSync = inject(SfdcContactSyncService, EventAggregator)(SfdcContactSync) || SfdcContactSync;
        return SfdcContactSync;
      }();

      _export('SfdcContactSync', SfdcContactSync);
    }
  };
});
System.register('view-models/users/user-forms.js', ['github:lodash/lodash@3.10.1.js', 'github:twbs/bootstrap@3.3.6.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'service/user_form_request_service.js', 'service/sfdc_contact_sync_service.js', 'view-models/users/sfdc-contact-sync.js'], function (_export) {
  'use strict';

  var _, $, bootstrap, EventAggregator, bindable, inject, UserFormRequestService, SfdcContactSyncService, SfdcContactSync, UserForms;

  var _createDecoratedClass = function () {
    function defineProperties(target, descriptors, initializers) {
      for (var i = 0; i < descriptors.length; i++) {
        var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
          for (var f = 0; f < decorators.length; f++) {
            var decorator = decorators[f];if (typeof decorator === 'function') {
              descriptor = decorator(target, key, descriptor) || descriptor;
            } else {
              throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
            }
          }if (descriptor.initializer !== undefined) {
            initializers[key] = descriptor;continue;
          }
        }Object.defineProperty(target, key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
    };
  }();

  var _get = function get(_x, _x2, _x3) {
    var _again = true;_function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);if (parent === null) {
          return undefined;
        } else {
          _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;if (getter === undefined) {
          return undefined;
        }return getter.call(receiver);
      }
    }
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
    var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
  }

  return {
    setters: [function (_lodashLodash) {
      _ = _lodashLodash['default'];
    }, function (_bootstrap) {
      $ = _bootstrap['default'];
      bootstrap = _bootstrap['default'];
    }, function (_aureliaEventAggregator) {
      EventAggregator = _aureliaEventAggregator.EventAggregator;
    }, function (_aureliaFramework) {
      bindable = _aureliaFramework.bindable;
      inject = _aureliaFramework.inject;
    }, function (_serviceUser_form_request_service) {
      UserFormRequestService = _serviceUser_form_request_service.UserFormRequestService;
    }, function (_serviceSfdc_contact_sync_service) {
      SfdcContactSyncService = _serviceSfdc_contact_sync_service.SfdcContactSyncService;
    }, function (_sfdcContactSync) {
      SfdcContactSync = _sfdcContactSync.SfdcContactSync;
    }],
    execute: function () {
      UserForms = function (_SfdcContactSync) {
        var _instanceInitializers = {};
        var _instanceInitializers = {};

        _inherits(UserForms, _SfdcContactSync);

        _createDecoratedClass(UserForms, [{
          key: 'currentUserTypePreferences',
          decorators: [bindable],
          initializer: null,
          enumerable: true
        }], null, _instanceInitializers);

        function UserForms(userFormRequestService, sfdcContactSyncService, ea) {
          _classCallCheck(this, _UserForms);

          _get(Object.getPrototypeOf(_UserForms.prototype), 'constructor', this).call(this, sfdcContactSyncService, ea);
          this.userFormPreferenceHash = {
            internal: {},
            external: {}
          };

          _defineDecoratedPropertyDescriptor(this, 'currentUserTypePreferences', _instanceInitializers);

          this.ea = ea;
          this.userFormRequestService = userFormRequestService;
          this.setupUserFormPreferences();
        }

        _createDecoratedClass(UserForms, [{
          key: 'setupUserFormPreferences',
          value: function setupUserFormPreferences() {
            var _this = this;

            this.userFormRequestService.getUserFormRules().then(function (apiResponse) {
              if (typeof apiResponse.response === 'string') {
                apiResponse = JSON.parse(apiResponse.response);
              }
              if (apiResponse.data instanceof Array) {
                var fieldHash = _.groupBy(apiResponse.data, 'type');
                _this.userFormPreferenceHash.internal = _this.processData(fieldHash['InternalUserFormField']);
                _this.userFormPreferenceHash.external = _this.processData(fieldHash['ExternalUserFormField']);
              }
              if (typeof jiffle !== 'undefined') {
                _this.processSfdcStandardFlds(_this.userFormPreferenceHash);
              }
              _this.fetchUserCustomForms();
            })['catch'](function () {
              _this.fetchUserCustomForms();
            });
          }
        }, {
          key: 'fetchUserCustomForms',
          value: function fetchUserCustomForms() {
            var _this2 = this;

            this.userFormRequestService.getUserCustomForms().then(function (apiResponse) {
              if (typeof apiResponse.response === 'string') {
                apiResponse = JSON.parse(apiResponse.response);
              }
              var formsTypeHash = _.groupBy(apiResponse.data, 'type');
              var userFormHash = _.groupBy(formsTypeHash['UserForm'], 'name');
              var formBuilderHash = {};
              _.forEach(userFormHash, function (formData, formName) {
                formBuilderHash[formName] = _.first(formData)['fields'];
              });
              if (typeof jiffle !== 'undefined') {
                _this2.processSfdcCustomFlds('usercustomforms:fetch', { formBuilderHash: formBuilderHash });
              } else {
                _this2.ea.publish('usercustomforms:fetch', { formBuilderHash: formBuilderHash });
              }
            })['catch'](function () {
              _this2.ea.publish('usercustomforms:fetch', {});
            });
          }
        }, {
          key: 'processData',
          value: function processData(fields) {
            var _this3 = this;

            var responseHash = {};
            if (fields instanceof Array) {
              fields.forEach(function (field) {
                responseHash[field.field_name] = _this3.configureFields(field.field_info);
              });
            }
            return responseHash;
          }
        }, {
          key: 'configureFields',
          value: function configureFields(obj) {
            obj.mandatory = this.isTrue(obj.mandatory);
            obj.show = this.isTrue(obj.show);
            obj.can_disable = this.isTrue(obj.can_disable);
            obj.can_hide = this.isTrue(obj.can_hide);
            return obj;
          }
        }, {
          key: 'isTrue',
          value: function isTrue(conf) {
            return conf === 'true' || conf === true || conf === 'yes';
          }
        }, {
          key: 'subscribeToEvents',
          value: function subscribeToEvents() {}
        }], null, _instanceInitializers);

        var _UserForms = UserForms;
        UserForms = inject(UserFormRequestService, SfdcContactSyncService, EventAggregator)(UserForms) || UserForms;
        return UserForms;
      }(SfdcContactSync);

      _export('UserForms', UserForms);
    }
  };
});
System.register('service/user_request_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
    'use strict';

    var HttpRequest, inject, API, UserRequestService;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [function (_utilsRequest) {
            HttpRequest = _utilsRequest.HttpRequest;
        }, function (_aureliaFramework) {
            inject = _aureliaFramework.inject;
        }, function (_commonsApi) {
            API = _commonsApi.API;
        }],
        execute: function () {
            UserRequestService = function () {
                function UserRequestService(httpRequest, Api) {
                    _classCallCheck(this, _UserRequestService);

                    this.new_user_url = "";
                    this.externalAttendeeFetchUrl = "";
                    this.internalAttendeeFetchUrl = "";
                    this.validateUserUrl = '';

                    this.httpRequest = httpRequest;
                    this.api = Api;
                }

                _createClass(UserRequestService, [{
                    key: 'validateUserEmail',
                    value: function validateUserEmail(params) {
                        if (this.validateUserUrl == '') {
                            this.validateUserUrl = domainValidateUrl;
                        }
                        return this.httpRequest.createGetRequest(this.validateUserUrl, params);
                    }
                }, {
                    key: 'createNewUser',
                    value: function createNewUser(data) {
                        var new_user_url = this.new_user_url;

                        if (new_user_url == "") {
                            new_user_url = this.api.getBaseUrl() + this.api.userCreate;
                        }

                        return this.httpRequest.createPostRequest(new_user_url, data, 'create_attendee');
                    }
                }, {
                    key: 'getExternalUsers',
                    value: function getExternalUsers(params) {
                        var externalAttendeeFetchUrl = this.externalAttendeeFetchUrl;

                        if (externalAttendeeFetchUrl == "") {
                            externalAttendeeFetchUrl = this.api.getBaseUrl() + this.api.externalUsers;
                        }

                        return this.httpRequest.createGetRequest(externalAttendeeFetchUrl, params);
                    }
                }, {
                    key: 'getInternalUsers',
                    value: function getInternalUsers(params) {
                        var internalAttendeeFetchUrl = this.internalAttendeeFetchUrl;

                        if (internalAttendeeFetchUrl == "") {
                            internalAttendeeFetchUrl = this.api.getBaseUrl() + this.api.internalUsers;
                        }

                        return this.httpRequest.createGetRequest(internalAttendeeFetchUrl, params);
                    }
                }, {
                    key: 'getComplianceMessage',
                    value: function getComplianceMessage() {
                        var fetchComplianceMessageUrl = this.api.getPortalAbsolutePath() + this.api.getComplianceMesaage;
                        return this.httpRequest.createGetRequest(fetchComplianceMessageUrl);
                    }
                }]);

                var _UserRequestService = UserRequestService;
                UserRequestService = inject(HttpRequest, API)(UserRequestService) || UserRequestService;
                return UserRequestService;
            }();

            _export('UserRequestService', UserRequestService);
        }
    };
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-loader-default@1.0.0-beta.1.0.1/aurelia-loader-default.js", ["exports", "npm:aurelia-loader@1.0.0-beta.1.js", "npm:aurelia-pal@1.0.0-beta.1.js", "npm:aurelia-metadata@1.0.0-beta.1.js"], function(exports, _aureliaLoader, _aureliaPal, _aureliaMetadata) {
  'use strict';
  exports.__esModule = true;
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var TextTemplateLoader = (function() {
    function TextTemplateLoader() {
      _classCallCheck(this, TextTemplateLoader);
    }
    TextTemplateLoader.prototype.loadTemplate = function loadTemplate(loader, entry) {
      return loader.loadText(entry.address).then(function(text) {
        entry.template = _aureliaPal.DOM.createTemplateFromMarkup(text);
      });
    };
    return TextTemplateLoader;
  })();
  exports.TextTemplateLoader = TextTemplateLoader;
  function ensureOriginOnExports(executed, name) {
    var target = executed;
    var key = undefined;
    var exportedValue = undefined;
    if (target.__useDefault) {
      target = target['default'];
    }
    _aureliaMetadata.Origin.set(target, new _aureliaMetadata.Origin(name, 'default'));
    for (key in target) {
      exportedValue = target[key];
      if (typeof exportedValue === 'function') {
        _aureliaMetadata.Origin.set(exportedValue, new _aureliaMetadata.Origin(name, key));
      }
    }
    return executed;
  }
  var DefaultLoader = (function(_Loader) {
    _inherits(DefaultLoader, _Loader);
    function DefaultLoader() {
      _classCallCheck(this, DefaultLoader);
      _Loader.call(this);
      this.textPluginName = 'text';
      this.moduleRegistry = {};
      this.useTemplateLoader(new TextTemplateLoader());
      var that = this;
      this.addPlugin('template-registry-entry', {'fetch': function fetch(address) {
          var entry = that.getOrCreateTemplateRegistryEntry(address);
          return entry.templateIsLoaded ? entry : that.templateLoader.loadTemplate(that, entry).then(function(x) {
            return entry;
          });
        }});
    }
    DefaultLoader.prototype.useTemplateLoader = function useTemplateLoader(templateLoader) {
      this.templateLoader = templateLoader;
    };
    DefaultLoader.prototype.loadAllModules = function loadAllModules(ids) {
      var loads = [];
      for (var i = 0,
          ii = ids.length; i < ii; ++i) {
        loads.push(this.loadModule(ids[i]));
      }
      return Promise.all(loads);
    };
    DefaultLoader.prototype.loadTemplate = function loadTemplate(url) {
      return this._import(this.applyPluginToUrl(url, 'template-registry-entry'));
    };
    DefaultLoader.prototype.loadText = function loadText(url) {
      return this._import(this.applyPluginToUrl(url, this.textPluginName));
    };
    return DefaultLoader;
  })(_aureliaLoader.Loader);
  exports.DefaultLoader = DefaultLoader;
  _aureliaPal.PLATFORM.Loader = DefaultLoader;
  if (!_aureliaPal.PLATFORM.global.System || !_aureliaPal.PLATFORM.global.System['import']) {
    if (_aureliaPal.PLATFORM.global.requirejs && requirejs.s && requirejs.s.contexts && requirejs.s.contexts._ && requirejs.s.contexts._.defined) {
      _aureliaPal.PLATFORM.eachModule = function(callback) {
        var defined = requirejs.s.contexts._.defined;
        for (var key in defined) {
          try {
            if (callback(key, defined[key]))
              return;
          } catch (e) {}
        }
      };
    } else {
      _aureliaPal.PLATFORM.eachModule = function(callback) {};
    }
    DefaultLoader.prototype._import = function(moduleId) {
      return new Promise(function(resolve, reject) {
        require([moduleId], resolve, reject);
      });
    };
    DefaultLoader.prototype.loadModule = function(id) {
      var _this = this;
      var existing = this.moduleRegistry[id];
      if (existing) {
        return Promise.resolve(existing);
      }
      return new Promise(function(resolve, reject) {
        require([id], function(m) {
          _this.moduleRegistry[id] = m;
          resolve(ensureOriginOnExports(m, id));
        }, reject);
      });
    };
    DefaultLoader.prototype.map = function(id, source) {};
    DefaultLoader.prototype.normalizeSync = function(moduleId, relativeTo) {
      return moduleId;
    };
    DefaultLoader.prototype.applyPluginToUrl = function(url, pluginName) {
      return pluginName + '!' + url;
    };
    DefaultLoader.prototype.addPlugin = function(pluginName, implementation) {
      define(pluginName, [], {'load': function load(name, req, onload) {
          var address = req.toUrl(name);
          var result = implementation.fetch(address);
          Promise.resolve(result).then(onload);
        }});
    };
  } else {
    _aureliaPal.PLATFORM.eachModule = function(callback) {
      var modules = System._loader.modules;
      for (var key in modules) {
        try {
          if (callback(key, modules[key].module))
            return;
        } catch (e) {}
      }
    };
    System.set('text', System.newModule({'translate': function translate(load) {
        return 'module.exports = "' + load.source.replace(/(["\\])/g, '\\$1').replace(/[\f]/g, '\\f').replace(/[\b]/g, '\\b').replace(/[\n]/g, '\\n').replace(/[\t]/g, '\\t').replace(/[\r]/g, '\\r').replace(/[\u2028]/g, '\\u2028').replace(/[\u2029]/g, '\\u2029') + '";';
      }}));
    DefaultLoader.prototype._import = function(moduleId) {
      return System['import'](moduleId);
    };
    DefaultLoader.prototype.loadModule = function(id) {
      var _this2 = this;
      var newId = System.normalizeSync(id);
      var existing = this.moduleRegistry[newId];
      if (existing) {
        return Promise.resolve(existing);
      }
      return System['import'](newId).then(function(m) {
        _this2.moduleRegistry[newId] = m;
        return ensureOriginOnExports(m, newId);
      });
    };
    DefaultLoader.prototype.map = function(id, source) {
      System.map[id] = source;
    };
    DefaultLoader.prototype.normalizeSync = function(moduleId, relativeTo) {
      return System.normalizeSync(moduleId, relativeTo);
    };
    DefaultLoader.prototype.applyPluginToUrl = function(url, pluginName) {
      return url + '!' + pluginName;
    };
    DefaultLoader.prototype.addPlugin = function(pluginName, implementation) {
      System.set(pluginName, System.newModule({
        'fetch': function fetch(load, _fetch) {
          var result = implementation.fetch(load.address);
          return Promise.resolve(result).then(function(x) {
            load.metadata.result = x;
            return '';
          });
        },
        'instantiate': function instantiate(load) {
          return load.metadata.result;
        }
      }));
    };
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-loader-default@1.0.0-beta.1.0.1.js", ["npm:aurelia-loader-default@1.0.0-beta.1.0.1/aurelia-loader-default.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/df.js", ["exports", "npm:aurelia-i18n@0.4.1/i18n.js"], function(exports, _i18n) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var DfValueConverter = (function() {
    DfValueConverter.inject = function inject() {
      return [_i18n.I18N];
    };
    function DfValueConverter(i18n) {
      _classCallCheck(this, DfValueConverter);
      this.service = i18n;
    }
    DfValueConverter.prototype.toView = function toView(value, formatOptions, locale, dateFormat) {
      var df = dateFormat || this.service.df(formatOptions, locale || this.service.getLocale());
      return df.format(value);
    };
    return DfValueConverter;
  })();
  exports.DfValueConverter = DfValueConverter;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/nf.js", ["exports", "npm:aurelia-i18n@0.4.1/i18n.js"], function(exports, _i18n) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var NfValueConverter = (function() {
    NfValueConverter.inject = function inject() {
      return [_i18n.I18N];
    };
    function NfValueConverter(i18n) {
      _classCallCheck(this, NfValueConverter);
      this.service = i18n;
    }
    NfValueConverter.prototype.toView = function toView(value, formatOptions, locale, numberFormat) {
      var nf = numberFormat || this.service.nf(formatOptions, locale || this.service.getLocale());
      return nf.format(value);
    };
    return NfValueConverter;
  })();
  exports.NfValueConverter = NfValueConverter;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/defaultTranslations/relative.time.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  var translations = {
    ar: {translation: {
        'now': 'الآن',
        'second_ago': 'منذ __count__ ثانية',
        'second_ago_plural': 'منذ __count__ ثواني',
        'second_in': 'في __count__ ثانية',
        'second_in_plural': 'في __count__ ثواني',
        'minute_ago': 'منذ __count__ دقيقة',
        'minute_ago_plural': 'منذ __count__ دقائق',
        'minute_in': 'في __count__ دقيقة',
        'minute_in_plural': 'في __count__ دقائق',
        'hour_ago': 'منذ __count__ ساعة',
        'hour_ago_plural': 'منذ __count__ ساعات',
        'hour_in': 'في __count__ ساعة',
        'hour_in_plural': 'في __count__ ساعات',
        'day_ago': 'منذ __count__ يوم',
        'day_ago_plural': 'منذ __count__ أيام',
        'day_in': 'في __count__ يوم',
        'day_in_plural': 'في __count__ أيام'
      }},
    en: {translation: {
        'now': 'just now',
        'second_ago': '__count__ second ago',
        'second_ago_plural': '__count__ seconds ago',
        'second_in': 'in __count__ second',
        'second_in_plural': 'in __count__ seconds',
        'minute_ago': '__count__ minute ago',
        'minute_ago_plural': '__count__ minutes ago',
        'minute_in': 'in __count__ minute',
        'minute_in_plural': 'in __count__ minutes',
        'hour_ago': '__count__ hour ago',
        'hour_ago_plural': '__count__ hours ago',
        'hour_in': 'in __count__ hour',
        'hour_in_plural': 'in __count__ hours',
        'day_ago': '__count__ day ago',
        'day_ago_plural': '__count__ days ago',
        'day_in': 'in __count__ day',
        'day_in_plural': 'in __count__ days',
        'month_ago': '__count__ month ago',
        'month_ago_plural': '__count__ months ago',
        'month_in': 'in __count__ month',
        'month_in_plural': 'in __count__ months',
        'year_ago': '__count__ year ago',
        'year_ago_plural': '__count__ years ago',
        'year_in': 'in __count__ year',
        'year_in_plural': 'in __count__ years'
      }},
    de: {translation: {
        'now': 'jetzt gerade',
        'second_ago': 'vor __count__ Sekunde',
        'second_ago_plural': 'vor __count__ Sekunden',
        'second_in': 'in __count__ Sekunde',
        'second_in_plural': 'in __count__ Sekunden',
        'minute_ago': 'vor __count__ Minute',
        'minute_ago_plural': 'vor __count__ Minuten',
        'minute_in': 'in __count__ Minute',
        'minute_in_plural': 'in __count__ Minuten',
        'hour_ago': 'vor __count__ Stunde',
        'hour_ago_plural': 'vor __count__ Stunden',
        'hour_in': 'in __count__ Stunde',
        'hour_in_plural': 'in __count__ Stunden',
        'day_ago': 'vor __count__ Tag',
        'day_ago_plural': 'vor __count__ Tagen',
        'day_in': 'in __count__ Tag',
        'day_in_plural': 'in __count__ Tagen',
        'month_ago': 'vor __count__ Monat',
        'month_ago_plural': 'vor __count__ Monaten',
        'month_in': 'in __count__ Monat',
        'month_in_plural': 'in __count__ Monaten',
        'year_ago': 'vor __count__ Jahr',
        'year_ago_plural': 'vor __count__ Jahren',
        'year_in': 'in __count__ Jahr',
        'year_in_plural': 'in __count__ Jahren'
      }},
    nl: {translation: {
        'now': 'zonet',
        'second_ago': '__count__ seconde geleden',
        'second_ago_plural': '__count__ seconden geleden',
        'second_in': 'in __count__ seconde',
        'second_in_plural': 'in __count__ seconden',
        'minute_ago': '__count__ minuut geleden',
        'minute_ago_plural': '__count__ minuten geleden',
        'minute_in': 'in __count__ minuut',
        'minute_in_plural': 'in __count__ minuten',
        'hour_ago': '__count__ uur geleden',
        'hour_ago_plural': '__count__ uren geleden',
        'hour_in': 'in __count__ uur',
        'hour_in_plural': 'in __count__ uren',
        'day_ago': '__count__ dag geleden',
        'day_ago_plural': '__count__ dagen geleden',
        'day_in': 'in __count__ dag',
        'day_in_plural': 'in __count__ dagen'
      }},
    fr: {translation: {
        'now': 'juste',
        'second_ago': '__count__ seconde passé',
        'second_ago_plural': '__count__ secondes passé',
        'second_in': 'en __count__ seconde',
        'second_in_plural': 'en __count__ secondes',
        'minute_ago': '__count__ minute passé',
        'minute_ago_plural': '__count__ minutes passé',
        'minute_in': 'en __count__ minute',
        'minute_in_plural': 'en __count__ minutes',
        'hour_ago': '__count__ heure passé',
        'hour_ago_plural': '__count__ heures passé',
        'hour_in': 'en __count__ heure',
        'hour_in_plural': 'en __count__ heures',
        'day_ago': '__count__ jour passé',
        'day_ago_plural': '__count__ jours passé',
        'day_in': 'en __count__ jour',
        'day_in_plural': 'en __count__ jours'
      }},
    th: {translation: {
        'now': 'เมื่อกี้',
        'second_ago': '__count__ วินาที ที่ผ่านมา',
        'second_ago_plural': '__count__ วินาที ที่ผ่านมา',
        'second_in': 'อีก __count__ วินาที',
        'second_in_plural': 'อีก __count__ วินาที',
        'minute_ago': '__count__ นาที ที่ผ่านมา',
        'minute_ago_plural': '__count__ นาที ที่ผ่านมา',
        'minute_in': 'อีก __count__ นาที',
        'minute_in_plural': 'อีก __count__ นาที',
        'hour_ago': '__count__ ชั่วโมง ที่ผ่านมา',
        'hour_ago_plural': '__count__ ชั่วโมง ที่ผ่านมา',
        'hour_in': 'อีก __count__ ชั่วโมง',
        'hour_in_plural': 'อีก __count__ ชั่วโมง',
        'day_ago': '__count__ วัน ที่ผ่านมา',
        'day_ago_plural': '__count__ วัน ที่ผ่านมา',
        'day_in': 'อีก __count__ วัน',
        'day_in_plural': 'อีก __count__ วัน'
      }},
    sv: {translation: {
        'now': 'just nu',
        'second_ago': '__count__ sekund sedan',
        'second_ago_plural': '__count__ sekunder sedan',
        'second_in': 'om __count__ sekund',
        'second_in_plural': 'om __count__ sekunder',
        'minute_ago': '__count__ minut sedan',
        'minute_ago_plural': '__count__ minuter sedan',
        'minute_in': 'om __count__ minut',
        'minute_in_plural': 'om __count__ minuter',
        'hour_ago': '__count__ timme sedan',
        'hour_ago_plural': '__count__ timmar sedan',
        'hour_in': 'om __count__ timme',
        'hour_in_plural': 'om __count__ timmar',
        'day_ago': '__count__ dag sedan',
        'day_ago_plural': '__count__ dagar sedan',
        'day_in': 'om __count__ dag',
        'day_in_plural': 'om __count__ dagar'
      }},
    da: {translation: {
        'now': 'lige nu',
        'second_ago': '__count__ sekunder siden',
        'second_ago_plural': '__count__ sekunder siden',
        'second_in': 'om __count__ sekund',
        'second_in_plural': 'om __count__ sekunder',
        'minute_ago': '__count__ minut siden',
        'minute_ago_plural': '__count__ minutter siden',
        'minute_in': 'om __count__ minut',
        'minute_in_plural': 'om __count__ minutter',
        'hour_ago': '__count__ time siden',
        'hour_ago_plural': '__count__ timer siden',
        'hour_in': 'om __count__ time',
        'hour_in_plural': 'om __count__ timer',
        'day_ago': '__count__ dag siden',
        'day_ago_plural': '__count__ dage siden',
        'day_in': 'om __count__ dag',
        'day_in_plural': 'om __count__ dage'
      }},
    no: {translation: {
        'now': 'akkurat nå',
        'second_ago': '__count__ sekund siden',
        'second_ago_plural': '__count__ sekunder siden',
        'second_in': 'om __count__ sekund',
        'second_in_plural': 'om __count__ sekunder',
        'minute_ago': '__count__ minutt siden',
        'minute_ago_plural': '__count__ minutter siden',
        'minute_in': 'om __count__ minutt',
        'minute_in_plural': 'om __count__ minutter',
        'hour_ago': '__count__ time siden',
        'hour_ago_plural': '__count__ timer siden',
        'hour_in': 'om __count__ time',
        'hour_in_plural': 'om __count__ timer',
        'day_ago': '__count__ dag siden',
        'day_ago_plural': '__count__ dager siden',
        'day_in': 'om __count__ dag',
        'day_in_plural': 'om __count__ dager'
      }},
    jp: {translation: {
        'now': 'たった今',
        'second_ago': '__count__ 秒前',
        'second_ago_plural': '__count__ 秒前',
        'second_in': 'あと __count__ 秒',
        'second_in_plural': 'あと __count__ 秒',
        'minute_ago': '__count__ 分前',
        'minute_ago_plural': '__count__ 分前',
        'minute_in': 'あと __count__ 分',
        'minute_in_plural': 'あと __count__ 分',
        'hour_ago': '__count__ 時間前',
        'hour_ago_plural': '__count__ 時間前',
        'hour_in': 'あと __count__ 時間',
        'hour_in_plural': 'あと __count__ 時間',
        'day_ago': '__count__ 日間前',
        'day_ago_plural': '__count__ 日間前',
        'day_in': 'あと __count__ 日間',
        'day_in_plural': 'あと __count__ 日間'
      }}
  };
  exports.translations = translations;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/relativeTime.js", ["exports", "npm:aurelia-i18n@0.4.1/i18n.js", "npm:aurelia-i18n@0.4.1/defaultTranslations/relative.time.js"], function(exports, _i18n, _defaultTranslationsRelativeTime) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var RelativeTime = (function() {
    RelativeTime.inject = function inject() {
      return [_i18n.I18N];
    };
    function RelativeTime(i18n) {
      var _this = this;
      _classCallCheck(this, RelativeTime);
      this.service = i18n;
      var trans = _defaultTranslationsRelativeTime.translations['default'] || _defaultTranslationsRelativeTime.translations;
      Object.keys(trans).map(function(key) {
        var translation = trans[key].translation;
        var options = i18n.i18next.options;
        if (options.interpolationPrefix !== '__' || options.interpolationSuffix !== '__') {
          for (var subkey in translation) {
            translation[subkey] = translation[subkey].replace('__count__', options.interpolationPrefix + 'count' + options.interpolationSuffix);
          }
        }
        _this.service.i18next.addResources(key, 'translation', translation);
      });
    }
    RelativeTime.prototype.getRelativeTime = function getRelativeTime(time) {
      var now = new Date();
      var diff = now.getTime() - time.getTime();
      var timeDiff = this.getTimeDiffDescription(diff, 'year', 31104000000);
      if (!timeDiff) {
        timeDiff = this.getTimeDiffDescription(diff, 'month', 2592000000);
        if (!timeDiff) {
          timeDiff = this.getTimeDiffDescription(diff, 'day', 86400000);
          if (!timeDiff) {
            timeDiff = this.getTimeDiffDescription(diff, 'hour', 3600000);
            if (!timeDiff) {
              timeDiff = this.getTimeDiffDescription(diff, 'minute', 60000);
              if (!timeDiff) {
                timeDiff = this.getTimeDiffDescription(diff, 'second', 1000);
                if (!timeDiff) {
                  timeDiff = this.service.tr('now');
                }
              }
            }
          }
        }
      }
      return timeDiff;
    };
    RelativeTime.prototype.getTimeDiffDescription = function getTimeDiffDescription(diff, unit, timeDivisor) {
      var unitAmount = (diff / timeDivisor).toFixed(0);
      if (unitAmount > 0) {
        return this.service.tr(unit, {
          count: parseInt(unitAmount, 10),
          context: 'ago'
        });
      } else if (unitAmount < 0) {
        var abs = Math.abs(unitAmount);
        return this.service.tr(unit, {
          count: abs,
          context: 'in'
        });
      }
      return null;
    };
    return RelativeTime;
  })();
  exports.RelativeTime = RelativeTime;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/rt.js", ["exports", "npm:aurelia-i18n@0.4.1/relativeTime.js"], function(exports, _relativeTime) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var RtValueConverter = (function() {
    RtValueConverter.inject = function inject() {
      return [_relativeTime.RelativeTime];
    };
    function RtValueConverter(relativeTime) {
      _classCallCheck(this, RtValueConverter);
      this.service = relativeTime;
    }
    RtValueConverter.prototype.toView = function toView(value) {
      return this.service.getRelativeTime(value);
    };
    return RtValueConverter;
  })();
  exports.RtValueConverter = RtValueConverter;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/t.js", ["exports", "npm:aurelia-i18n@0.4.1/i18n.js", "npm:aurelia-event-aggregator@1.0.0-beta.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-i18n@0.4.1/utils.js"], function(exports, _i18n, _aureliaEventAggregator, _aureliaTemplating, _utils) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var TValueConverter = (function() {
    TValueConverter.inject = function inject() {
      return [_i18n.I18N];
    };
    function TValueConverter(i18n) {
      _classCallCheck(this, TValueConverter);
      this.service = i18n;
    }
    TValueConverter.prototype.toView = function toView(value, options) {
      return this.service.tr(value, options);
    };
    return TValueConverter;
  })();
  exports.TValueConverter = TValueConverter;
  var TParamsCustomAttribute = (function() {
    _createClass(TParamsCustomAttribute, null, [{
      key: 'inject',
      value: [Element],
      enumerable: true
    }]);
    function TParamsCustomAttribute(element) {
      _classCallCheck(this, _TParamsCustomAttribute);
      this.element = element;
    }
    TParamsCustomAttribute.prototype.valueChanged = function valueChanged() {};
    var _TParamsCustomAttribute = TParamsCustomAttribute;
    TParamsCustomAttribute = _aureliaTemplating.customAttribute('t-params')(TParamsCustomAttribute) || TParamsCustomAttribute;
    return TParamsCustomAttribute;
  })();
  exports.TParamsCustomAttribute = TParamsCustomAttribute;
  var TCustomAttribute = (function() {
    _createClass(TCustomAttribute, null, [{
      key: 'inject',
      value: [Element, _i18n.I18N, _aureliaEventAggregator.EventAggregator, _utils.LazyOptional.of(TParamsCustomAttribute)],
      enumerable: true
    }]);
    function TCustomAttribute(element, i18n, ea, tparams) {
      _classCallCheck(this, _TCustomAttribute);
      this.element = element;
      this.service = i18n;
      this.ea = ea;
      this.lazyParams = tparams;
    }
    TCustomAttribute.prototype.bind = function bind() {
      var _this = this;
      this.params = this.lazyParams();
      setTimeout(function() {
        if (_this.params) {
          _this.params.valueChanged = function(newParams, oldParams) {
            _this.paramsChanged(_this.value, newParams, oldParams);
          };
        }
        var p = _this.params !== null ? _this.params.value : undefined;
        _this.subscription = _this.ea.subscribe('i18n:locale:changed', function() {
          _this.service.updateValue(_this.element, _this.value, p);
        });
        setTimeout(function() {
          _this.service.updateValue(_this.element, _this.value, p);
        });
      });
    };
    TCustomAttribute.prototype.paramsChanged = function paramsChanged(newValue, newParams) {
      this.service.updateValue(this.element, newValue, newParams);
    };
    TCustomAttribute.prototype.valueChanged = function valueChanged(newValue) {
      var p = this.params !== null ? this.params.value : undefined;
      this.service.updateValue(this.element, newValue, p);
    };
    TCustomAttribute.prototype.unbind = function unbind() {
      this.subscription.dispose();
    };
    var _TCustomAttribute = TCustomAttribute;
    TCustomAttribute = _aureliaTemplating.customAttribute('t')(TCustomAttribute) || TCustomAttribute;
    return TCustomAttribute;
  })();
  exports.TCustomAttribute = TCustomAttribute;
});

})();
System.registerDynamic("github:i18next/i18next@1.11.1/i18next.js", [], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    // i18next, v1.11.1
    // Copyright (c)2015 Jan Mühlemann (jamuhl).
    // Distributed under MIT license
    // http://i18next.com
    (function (root) {

        // add indexOf to non ECMA-262 standard compliant browsers
        if (!Array.prototype.indexOf) {
            Array.prototype.indexOf = function (searchElement /*, fromIndex */) {
                "use strict";

                if (this == null) {
                    throw new TypeError();
                }
                var t = Object(this);
                var len = t.length >>> 0;
                if (len === 0) {
                    return -1;
                }
                var n = 0;
                if (arguments.length > 0) {
                    n = Number(arguments[1]);
                    if (n != n) {
                        // shortcut for verifying if it's NaN
                        n = 0;
                    } else if (n != 0 && n != Infinity && n != -Infinity) {
                        n = (n > 0 || -1) * Math.floor(Math.abs(n));
                    }
                }
                if (n >= len) {
                    return -1;
                }
                var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
                for (; k < len; k++) {
                    if (k in t && t[k] === searchElement) {
                        return k;
                    }
                }
                return -1;
            };
        }

        // add lastIndexOf to non ECMA-262 standard compliant browsers
        if (!Array.prototype.lastIndexOf) {
            Array.prototype.lastIndexOf = function (searchElement /*, fromIndex*/) {
                "use strict";

                if (this == null) {
                    throw new TypeError();
                }
                var t = Object(this);
                var len = t.length >>> 0;
                if (len === 0) {
                    return -1;
                }
                var n = len;
                if (arguments.length > 1) {
                    n = Number(arguments[1]);
                    if (n != n) {
                        n = 0;
                    } else if (n != 0 && n != 1 / 0 && n != -(1 / 0)) {
                        n = (n > 0 || -1) * Math.floor(Math.abs(n));
                    }
                }
                var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);
                for (; k >= 0; k--) {
                    if (k in t && t[k] === searchElement) {
                        return k;
                    }
                }
                return -1;
            };
        }

        // Add string trim for IE8.
        if (typeof String.prototype.trim !== 'function') {
            String.prototype.trim = function () {
                return this.replace(/^\s+|\s+$/g, '');
            };
        }

        var $ = root.jQuery || root.Zepto,
            i18n = {},
            resStore = {},
            currentLng,
            replacementCounter = 0,
            languages = [],
            initialized = false,
            sync = {},
            conflictReference = null;

        // Export the i18next object for **CommonJS**. 
        // If we're not in CommonJS, add `i18n` to the
        // global object or to jquery.
        if (typeof module !== 'undefined' && module.exports) {
            module.exports = i18n;
        } else {
            if ($) {
                $.i18n = $.i18n || i18n;
            }

            if (root.i18n) {
                conflictReference = root.i18n;
            }
            root.i18n = i18n;
        }
        sync = {

            load: function (lngs, options, cb) {
                if (options.useLocalStorage) {
                    sync._loadLocal(lngs, options, function (err, store) {
                        var missingLngs = [];
                        for (var i = 0, len = lngs.length; i < len; i++) {
                            if (!store[lngs[i]]) missingLngs.push(lngs[i]);
                        }

                        if (missingLngs.length > 0) {
                            sync._fetch(missingLngs, options, function (err, fetched) {
                                f.extend(store, fetched);
                                sync._storeLocal(fetched);

                                cb(err, store);
                            });
                        } else {
                            cb(err, store);
                        }
                    });
                } else {
                    sync._fetch(lngs, options, function (err, store) {
                        cb(err, store);
                    });
                }
            },

            _loadLocal: function (lngs, options, cb) {
                var store = {},
                    nowMS = new Date().getTime();

                if (window.localStorage) {

                    var todo = lngs.length;

                    f.each(lngs, function (key, lng) {
                        var local = f.localStorage.getItem('res_' + lng);

                        if (local) {
                            local = JSON.parse(local);

                            if (local.i18nStamp && local.i18nStamp + options.localStorageExpirationTime > nowMS) {
                                store[lng] = local;
                            }
                        }

                        todo--; // wait for all done befor callback
                        if (todo === 0) cb(null, store);
                    });
                }
            },

            _storeLocal: function (store) {
                if (window.localStorage) {
                    for (var m in store) {
                        store[m].i18nStamp = new Date().getTime();
                        f.localStorage.setItem('res_' + m, JSON.stringify(store[m]));
                    }
                }
                return;
            },

            _fetch: function (lngs, options, cb) {
                var ns = options.ns,
                    store = {};

                if (!options.dynamicLoad) {
                    var todo = ns.namespaces.length * lngs.length,
                        errors;

                    // load each file individual
                    f.each(ns.namespaces, function (nsIndex, nsValue) {
                        f.each(lngs, function (lngIndex, lngValue) {

                            // Call this once our translation has returned.
                            var loadComplete = function (err, data) {
                                if (err) {
                                    errors = errors || [];
                                    errors.push(err);
                                }
                                store[lngValue] = store[lngValue] || {};
                                store[lngValue][nsValue] = data;

                                todo--; // wait for all done befor callback
                                if (todo === 0) cb(errors, store);
                            };

                            if (typeof options.customLoad == 'function') {
                                // Use the specified custom callback.
                                options.customLoad(lngValue, nsValue, options, loadComplete);
                            } else {
                                //~ // Use our inbuilt sync.
                                sync._fetchOne(lngValue, nsValue, options, loadComplete);
                            }
                        });
                    });
                } else {
                    // Call this once our translation has returned.
                    var loadComplete = function (err, data) {
                        cb(err, data);
                    };

                    if (typeof options.customLoad == 'function') {
                        // Use the specified custom callback.
                        options.customLoad(lngs, ns.namespaces, options, loadComplete);
                    } else {
                        var url = applyReplacement(options.resGetPath, { lng: lngs.join('+'), ns: ns.namespaces.join('+') });
                        // load all needed stuff once
                        f.ajax({
                            url: url,
                            cache: options.cache,
                            success: function (data, status, xhr) {
                                f.log('loaded: ' + url);
                                loadComplete(null, data);
                            },
                            error: function (xhr, status, error) {
                                f.log('failed loading: ' + url);
                                loadComplete('failed loading resource.json error: ' + error);
                            },
                            dataType: "json",
                            async: options.getAsync,
                            timeout: options.ajaxTimeout
                        });
                    }
                }
            },

            _fetchOne: function (lng, ns, options, done) {
                var url = applyReplacement(options.resGetPath, { lng: lng, ns: ns });
                f.ajax({
                    url: url,
                    cache: options.cache,
                    success: function (data, status, xhr) {
                        f.log('loaded: ' + url);
                        done(null, data);
                    },
                    error: function (xhr, status, error) {
                        if (status && status == 200 || xhr && xhr.status && xhr.status == 200) {
                            // file loaded but invalid json, stop waste time !
                            f.error('There is a typo in: ' + url);
                        } else if (status && status == 404 || xhr && xhr.status && xhr.status == 404) {
                            f.log('Does not exist: ' + url);
                        } else {
                            var theStatus = status ? status : xhr && xhr.status ? xhr.status : null;
                            f.log(theStatus + ' when loading ' + url);
                        }

                        done(error, {});
                    },
                    dataType: "json",
                    async: options.getAsync,
                    timeout: options.ajaxTimeout,
                    headers: options.headers
                });
            },

            postMissing: function (lng, ns, key, defaultValue, lngs) {
                var payload = {};
                payload[key] = defaultValue;

                var urls = [];

                if (o.sendMissingTo === 'fallback' && o.fallbackLng[0] !== false) {
                    for (var i = 0; i < o.fallbackLng.length; i++) {
                        urls.push({ lng: o.fallbackLng[i], url: applyReplacement(o.resPostPath, { lng: o.fallbackLng[i], ns: ns }) });
                    }
                } else if (o.sendMissingTo === 'current' || o.sendMissingTo === 'fallback' && o.fallbackLng[0] === false) {
                    urls.push({ lng: lng, url: applyReplacement(o.resPostPath, { lng: lng, ns: ns }) });
                } else if (o.sendMissingTo === 'all') {
                    for (var i = 0, l = lngs.length; i < l; i++) {
                        urls.push({ lng: lngs[i], url: applyReplacement(o.resPostPath, { lng: lngs[i], ns: ns }) });
                    }
                }

                for (var y = 0, len = urls.length; y < len; y++) {
                    var item = urls[y];
                    f.ajax({
                        url: item.url,
                        type: o.sendType,
                        data: payload,
                        success: function (data, status, xhr) {
                            f.log('posted missing key \'' + key + '\' to: ' + item.url);

                            // add key to resStore
                            var keys = key.split('.');
                            var x = 0;
                            var value = resStore[item.lng][ns];
                            while (keys[x]) {
                                if (x === keys.length - 1) {
                                    value = value[keys[x]] = defaultValue;
                                } else {
                                    value = value[keys[x]] = value[keys[x]] || {};
                                }
                                x++;
                            }
                        },
                        error: function (xhr, status, error) {
                            f.log('failed posting missing key \'' + key + '\' to: ' + item.url);
                        },
                        dataType: "json",
                        async: o.postAsync,
                        timeout: o.ajaxTimeout
                    });
                }
            },

            reload: reload
        };
        // defaults
        var o = {
            lng: undefined,
            load: 'all',
            preload: [],
            lowerCaseLng: false,
            returnObjectTrees: false,
            fallbackLng: ['dev'],
            fallbackNS: [],
            detectLngQS: 'setLng',
            detectLngFromLocalStorage: false,
            ns: {
                namespaces: ['translation'],
                defaultNs: 'translation'
            },
            fallbackOnNull: true,
            fallbackOnEmpty: false,
            fallbackToDefaultNS: false,
            showKeyIfEmpty: false,
            nsseparator: ':',
            keyseparator: '.',
            selectorAttr: 'data-i18n',
            debug: false,

            resGetPath: 'locales/__lng__/__ns__.json',
            resPostPath: 'locales/add/__lng__/__ns__',

            getAsync: true,
            postAsync: true,

            resStore: undefined,
            useLocalStorage: false,
            localStorageExpirationTime: 7 * 24 * 60 * 60 * 1000,

            dynamicLoad: false,
            sendMissing: false,
            sendMissingTo: 'fallback', // current | all
            sendType: 'POST',

            interpolationPrefix: '__',
            interpolationSuffix: '__',
            defaultVariables: false,
            reusePrefix: '$t(',
            reuseSuffix: ')',
            pluralSuffix: '_plural',
            pluralNotFound: ['plural_not_found', Math.random()].join(''),
            contextNotFound: ['context_not_found', Math.random()].join(''),
            escapeInterpolation: false,
            indefiniteSuffix: '_indefinite',
            indefiniteNotFound: ['indefinite_not_found', Math.random()].join(''),

            setJqueryExt: true,
            defaultValueFromContent: true,
            useDataAttrOptions: false,
            cookieExpirationTime: undefined,
            useCookie: true,
            cookieName: 'i18next',
            cookieDomain: undefined,

            objectTreeKeyHandler: undefined,
            postProcess: undefined,
            parseMissingKey: undefined,
            missingKeyHandler: sync.postMissing,
            ajaxTimeout: 0,

            shortcutFunction: 'sprintf' // or: defaultValue
        };
        function _extend(target, source) {
            if (!source || typeof source === 'function') {
                return target;
            }

            for (var attr in source) {
                target[attr] = source[attr];
            }
            return target;
        }

        function _deepExtend(target, source, overwrite) {
            for (var prop in source) if (prop in target) {
                // If we reached a leaf string in target or source then replace with source or skip depending on the 'overwrite' switch
                if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {
                    if (overwrite) {
                        target[prop] = source[prop];
                    }
                } else {
                    _deepExtend(target[prop], source[prop], overwrite);
                }
            } else {
                target[prop] = source[prop];
            }
            return target;
        }

        function _each(object, callback, args) {
            var name,
                i = 0,
                length = object.length,
                isObj = length === undefined || Object.prototype.toString.apply(object) !== '[object Array]' || typeof object === "function";

            if (args) {
                if (isObj) {
                    for (name in object) {
                        if (callback.apply(object[name], args) === false) {
                            break;
                        }
                    }
                } else {
                    for (; i < length;) {
                        if (callback.apply(object[i++], args) === false) {
                            break;
                        }
                    }
                }

                // A special, fast, case for the most common use of each
            } else {
                if (isObj) {
                    for (name in object) {
                        if (callback.call(object[name], name, object[name]) === false) {
                            break;
                        }
                    }
                } else {
                    for (; i < length;) {
                        if (callback.call(object[i], i, object[i++]) === false) {
                            break;
                        }
                    }
                }
            }

            return object;
        }

        var _entityMap = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': '&quot;',
            "'": '&#39;',
            "/": '&#x2F;'
        };

        function _escape(data) {
            if (typeof data === 'string') {
                return data.replace(/[&<>"'\/]/g, function (s) {
                    return _entityMap[s];
                });
            } else {
                return data;
            }
        }

        function _ajax(options) {

            // v0.5.0 of https://github.com/goloroden/http.js
            var getXhr = function (callback) {
                // Use the native XHR object if the browser supports it.
                if (window.XMLHttpRequest) {
                    return callback(null, new XMLHttpRequest());
                } else if (window.ActiveXObject) {
                    // In Internet Explorer check for ActiveX versions of the XHR object.
                    try {
                        return callback(null, new ActiveXObject("Msxml2.XMLHTTP"));
                    } catch (e) {
                        return callback(null, new ActiveXObject("Microsoft.XMLHTTP"));
                    }
                }

                // If no XHR support was found, throw an error.
                return callback(new Error());
            };

            var encodeUsingUrlEncoding = function (data) {
                if (typeof data === 'string') {
                    return data;
                }

                var result = [];
                for (var dataItem in data) {
                    if (data.hasOwnProperty(dataItem)) {
                        result.push(encodeURIComponent(dataItem) + '=' + encodeURIComponent(data[dataItem]));
                    }
                }

                return result.join('&');
            };

            var utf8 = function (text) {
                text = text.replace(/\r\n/g, '\n');
                var result = '';

                for (var i = 0; i < text.length; i++) {
                    var c = text.charCodeAt(i);

                    if (c < 128) {
                        result += String.fromCharCode(c);
                    } else if (c > 127 && c < 2048) {
                        result += String.fromCharCode(c >> 6 | 192);
                        result += String.fromCharCode(c & 63 | 128);
                    } else {
                        result += String.fromCharCode(c >> 12 | 224);
                        result += String.fromCharCode(c >> 6 & 63 | 128);
                        result += String.fromCharCode(c & 63 | 128);
                    }
                }

                return result;
            };

            var base64 = function (text) {
                var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

                text = utf8(text);
                var result = '',
                    chr1,
                    chr2,
                    chr3,
                    enc1,
                    enc2,
                    enc3,
                    enc4,
                    i = 0;

                do {
                    chr1 = text.charCodeAt(i++);
                    chr2 = text.charCodeAt(i++);
                    chr3 = text.charCodeAt(i++);

                    enc1 = chr1 >> 2;
                    enc2 = (chr1 & 3) << 4 | chr2 >> 4;
                    enc3 = (chr2 & 15) << 2 | chr3 >> 6;
                    enc4 = chr3 & 63;

                    if (isNaN(chr2)) {
                        enc3 = enc4 = 64;
                    } else if (isNaN(chr3)) {
                        enc4 = 64;
                    }

                    result += keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);
                    chr1 = chr2 = chr3 = '';
                    enc1 = enc2 = enc3 = enc4 = '';
                } while (i < text.length);

                return result;
            };

            var mergeHeaders = function () {
                // Use the first header object as base.
                var result = arguments[0];

                // Iterate through the remaining header objects and add them.
                for (var i = 1; i < arguments.length; i++) {
                    var currentHeaders = arguments[i];
                    for (var header in currentHeaders) {
                        if (currentHeaders.hasOwnProperty(header)) {
                            result[header] = currentHeaders[header];
                        }
                    }
                }

                // Return the merged headers.
                return result;
            };

            var ajax = function (method, url, options, callback) {
                // Adjust parameters.
                if (typeof options === 'function') {
                    callback = options;
                    options = {};
                }

                // Set default parameter values.
                options.cache = options.cache || false;
                options.data = options.data || {};
                options.headers = options.headers || {};
                options.jsonp = options.jsonp || false;
                options.async = options.async === undefined ? true : options.async;

                // Merge the various header objects.
                var headers = mergeHeaders({
                    'accept': '*/*',
                    'content-type': 'application/x-www-form-urlencoded;charset=UTF-8'
                }, ajax.headers, options.headers);

                // Encode the data according to the content-type.
                var payload;
                if (headers['content-type'] === 'application/json') {
                    payload = JSON.stringify(options.data);
                } else {
                    payload = encodeUsingUrlEncoding(options.data);
                }

                // Specially prepare GET requests: Setup the query string, handle caching and make a JSONP call
                // if neccessary.
                if (method === 'GET') {
                    // Setup the query string.
                    var queryString = [];
                    if (payload) {
                        queryString.push(payload);
                        payload = null;
                    }

                    // Handle caching.
                    if (!options.cache) {
                        queryString.push('_=' + new Date().getTime());
                    }

                    // If neccessary prepare the query string for a JSONP call.
                    if (options.jsonp) {
                        queryString.push('callback=' + options.jsonp);
                        queryString.push('jsonp=' + options.jsonp);
                    }

                    // Merge the query string and attach it to the url.
                    queryString = queryString.join('&');
                    if (queryString.length > 1) {
                        if (url.indexOf('?') > -1) {
                            url += '&' + queryString;
                        } else {
                            url += '?' + queryString;
                        }
                    }

                    // Make a JSONP call if neccessary.
                    if (options.jsonp) {
                        var head = document.getElementsByTagName('head')[0];
                        var script = document.createElement('script');
                        script.type = 'text/javascript';
                        script.src = url;
                        head.appendChild(script);
                        return;
                    }
                }

                // Since we got here, it is no JSONP request, so make a normal XHR request.
                getXhr(function (err, xhr) {
                    if (err) return callback(err);

                    // Open the request.
                    xhr.open(method, url, options.async);

                    // Set the request headers.
                    for (var header in headers) {
                        if (headers.hasOwnProperty(header)) {
                            xhr.setRequestHeader(header, headers[header]);
                        }
                    }

                    // Handle the request events.
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            var data = xhr.responseText || '';

                            // If no callback is given, return.
                            if (!callback) {
                                return;
                            }

                            // Return an object that provides access to the data as text and JSON.
                            callback(xhr.status, {
                                text: function () {
                                    return data;
                                },

                                json: function () {
                                    try {
                                        return JSON.parse(data);
                                    } catch (e) {
                                        f.error('Can not parse JSON. URL: ' + url);
                                        return {};
                                    }
                                }
                            });
                        }
                    };

                    // Actually send the XHR request.
                    xhr.send(payload);
                });
            };

            // Define the external interface.
            var http = {
                authBasic: function (username, password) {
                    ajax.headers['Authorization'] = 'Basic ' + base64(username + ':' + password);
                },

                connect: function (url, options, callback) {
                    return ajax('CONNECT', url, options, callback);
                },

                del: function (url, options, callback) {
                    return ajax('DELETE', url, options, callback);
                },

                get: function (url, options, callback) {
                    return ajax('GET', url, options, callback);
                },

                head: function (url, options, callback) {
                    return ajax('HEAD', url, options, callback);
                },

                headers: function (headers) {
                    ajax.headers = headers || {};
                },

                isAllowed: function (url, verb, callback) {
                    this.options(url, function (status, data) {
                        callback(data.text().indexOf(verb) !== -1);
                    });
                },

                options: function (url, options, callback) {
                    return ajax('OPTIONS', url, options, callback);
                },

                patch: function (url, options, callback) {
                    return ajax('PATCH', url, options, callback);
                },

                post: function (url, options, callback) {
                    return ajax('POST', url, options, callback);
                },

                put: function (url, options, callback) {
                    return ajax('PUT', url, options, callback);
                },

                trace: function (url, options, callback) {
                    return ajax('TRACE', url, options, callback);
                }
            };

            var methode = options.type ? options.type.toLowerCase() : 'get';

            http[methode](options.url, options, function (status, data) {
                // file: protocol always gives status code 0, so check for data
                if (status === 200 || status === 0 && data.text()) {
                    options.success(data.json(), status, null);
                } else {
                    options.error(data.text(), status, null);
                }
            });
        }

        var _cookie = {
            create: function (name, value, minutes, domain) {
                var expires;
                if (minutes) {
                    var date = new Date();
                    date.setTime(date.getTime() + minutes * 60 * 1000);
                    expires = "; expires=" + date.toGMTString();
                } else expires = "";
                domain = domain ? "domain=" + domain + ";" : "";
                document.cookie = name + "=" + value + expires + ";" + domain + "path=/";
            },

            read: function (name) {
                var nameEQ = name + "=";
                var ca = document.cookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
                }
                return null;
            },

            remove: function (name) {
                this.create(name, "", -1);
            }
        };

        var cookie_noop = {
            create: function (name, value, minutes, domain) {},
            read: function (name) {
                return null;
            },
            remove: function (name) {}
        };

        // move dependent functions to a container so that
        // they can be overriden easier in no jquery environment (node.js)
        var f = {
            extend: $ ? $.extend : _extend,
            deepExtend: _deepExtend,
            each: $ ? $.each : _each,
            ajax: $ ? $.ajax : typeof document !== 'undefined' ? _ajax : function () {},
            cookie: typeof document !== 'undefined' ? _cookie : cookie_noop,
            detectLanguage: detectLanguage,
            escape: _escape,
            log: function (str) {
                if (o.debug && typeof console !== "undefined") console.log(str);
            },
            error: function (str) {
                if (typeof console !== "undefined") console.error(str);
            },
            getCountyIndexOfLng: function (lng) {
                var lng_index = 0;
                if (lng === 'nb-NO' || lng === 'nn-NO' || lng === 'nb-no' || lng === 'nn-no') lng_index = 1;
                return lng_index;
            },
            toLanguages: function (lng, fallbackLng) {
                var log = this.log;

                fallbackLng = fallbackLng || o.fallbackLng;
                if (typeof fallbackLng === 'string') fallbackLng = [fallbackLng];

                function applyCase(l) {
                    var ret = l;

                    if (typeof l === 'string' && l.indexOf('-') > -1) {
                        var parts = l.split('-');

                        ret = o.lowerCaseLng ? parts[0].toLowerCase() + '-' + parts[1].toLowerCase() : parts[0].toLowerCase() + '-' + parts[1].toUpperCase();
                    } else {
                        ret = o.lowerCaseLng ? l.toLowerCase() : l;
                    }

                    return ret;
                }

                var languages = [];
                var whitelist = o.lngWhitelist || false;
                var addLanguage = function (language) {
                    //reject langs not whitelisted
                    if (!whitelist || whitelist.indexOf(language) > -1) {
                        languages.push(language);
                    } else {
                        log('rejecting non-whitelisted language: ' + language);
                    }
                };
                if (typeof lng === 'string' && lng.indexOf('-') > -1) {
                    var parts = lng.split('-');

                    if (o.load !== 'unspecific') addLanguage(applyCase(lng));
                    if (o.load !== 'current') addLanguage(applyCase(parts[this.getCountyIndexOfLng(lng)]));
                } else {
                    addLanguage(applyCase(lng));
                }

                for (var i = 0; i < fallbackLng.length; i++) {
                    if (languages.indexOf(fallbackLng[i]) === -1 && fallbackLng[i]) languages.push(applyCase(fallbackLng[i]));
                }
                return languages;
            },
            regexEscape: function (str) {
                return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
            },
            regexReplacementEscape: function (strOrFn) {
                if (typeof strOrFn === 'string') {
                    return strOrFn.replace(/\$/g, "$$$$");
                } else {
                    return strOrFn;
                }
            },
            localStorage: {
                setItem: function (key, value) {
                    if (window.localStorage) {
                        try {
                            window.localStorage.setItem(key, value);
                        } catch (e) {
                            f.log('failed to set value for key "' + key + '" to localStorage.');
                        }
                    }
                },
                getItem: function (key, value) {
                    if (window.localStorage) {
                        try {
                            return window.localStorage.getItem(key, value);
                        } catch (e) {
                            f.log('failed to get value for key "' + key + '" from localStorage.');
                            return undefined;
                        }
                    }
                }
            }
        };
        function init(options, cb) {

            if (typeof options === 'function') {
                cb = options;
                options = {};
            }
            options = options || {};

            // override defaults with passed in options
            f.extend(o, options);
            delete o.fixLng; /* passed in each time */

            // override functions: .log(), .detectLanguage(), etc
            if (o.functions) {
                delete o.functions;
                f.extend(f, options.functions);
            }

            // create namespace object if namespace is passed in as string
            if (typeof o.ns == 'string') {
                o.ns = { namespaces: [o.ns], defaultNs: o.ns };
            }

            // fallback namespaces
            if (typeof o.fallbackNS == 'string') {
                o.fallbackNS = [o.fallbackNS];
            }

            // fallback languages
            if (typeof o.fallbackLng == 'string' || typeof o.fallbackLng == 'boolean') {
                o.fallbackLng = [o.fallbackLng];
            }

            // escape prefix/suffix
            o.interpolationPrefixEscaped = f.regexEscape(o.interpolationPrefix);
            o.interpolationSuffixEscaped = f.regexEscape(o.interpolationSuffix);

            if (!o.lng) o.lng = f.detectLanguage();

            languages = f.toLanguages(o.lng);
            currentLng = languages[0];
            f.log('currentLng set to: ' + currentLng);

            if (o.useCookie && f.cookie.read(o.cookieName) !== currentLng) {
                //cookie is unset or invalid
                f.cookie.create(o.cookieName, currentLng, o.cookieExpirationTime, o.cookieDomain);
            }
            if (o.detectLngFromLocalStorage && typeof document !== 'undefined' && window.localStorage) {
                f.localStorage.setItem('i18next_lng', currentLng);
            }

            var lngTranslate = translate;
            if (options.fixLng) {
                lngTranslate = function (key, options) {
                    options = options || {};
                    options.lng = options.lng || lngTranslate.lng;
                    return translate(key, options);
                };
                lngTranslate.lng = currentLng;
            }

            pluralExtensions.setCurrentLng(currentLng);

            // add JQuery extensions
            if ($ && o.setJqueryExt) {
                addJqueryFunct && addJqueryFunct();
            } else {
                addJqueryLikeFunctionality && addJqueryLikeFunctionality();
            }

            // jQuery deferred
            var deferred;
            if ($ && $.Deferred) {
                deferred = $.Deferred();
            }

            // return immidiatly if res are passed in
            if (o.resStore) {
                resStore = o.resStore;
                initialized = true;
                if (cb) cb(null, lngTranslate);
                if (deferred) deferred.resolve(lngTranslate);
                if (deferred) return deferred.promise();
                return;
            }

            // languages to load
            var lngsToLoad = f.toLanguages(o.lng);
            if (typeof o.preload === 'string') o.preload = [o.preload];
            for (var i = 0, l = o.preload.length; i < l; i++) {
                var pres = f.toLanguages(o.preload[i]);
                for (var y = 0, len = pres.length; y < len; y++) {
                    if (lngsToLoad.indexOf(pres[y]) < 0) {
                        lngsToLoad.push(pres[y]);
                    }
                }
            }

            // else load them
            i18n.sync.load(lngsToLoad, o, function (err, store) {
                resStore = store;
                initialized = true;

                if (cb) cb(err, lngTranslate);
                if (deferred) (!err ? deferred.resolve : deferred.reject)(err || lngTranslate);
            });

            if (deferred) return deferred.promise();
        }

        function isInitialized() {
            return initialized;
        }
        function preload(lngs, cb) {
            if (typeof lngs === 'string') lngs = [lngs];
            for (var i = 0, l = lngs.length; i < l; i++) {
                if (o.preload.indexOf(lngs[i]) < 0) {
                    o.preload.push(lngs[i]);
                }
            }
            return init(cb);
        }

        function addResourceBundle(lng, ns, resources, deep, overwrite) {
            if (typeof ns !== 'string') {
                resources = ns;
                ns = o.ns.defaultNs;
            } else if (o.ns.namespaces.indexOf(ns) < 0) {
                o.ns.namespaces.push(ns);
            }

            resStore[lng] = resStore[lng] || {};
            resStore[lng][ns] = resStore[lng][ns] || {};

            if (deep) {
                f.deepExtend(resStore[lng][ns], resources, overwrite);
            } else {
                f.extend(resStore[lng][ns], resources);
            }
            if (o.useLocalStorage) {
                sync._storeLocal(resStore);
            }
        }

        function hasResourceBundle(lng, ns) {
            if (typeof ns !== 'string') {
                ns = o.ns.defaultNs;
            }

            resStore[lng] = resStore[lng] || {};
            var res = resStore[lng][ns] || {};

            var hasValues = false;
            for (var prop in res) {
                if (res.hasOwnProperty(prop)) {
                    hasValues = true;
                }
            }

            return hasValues;
        }

        function getResourceBundle(lng, ns) {
            if (typeof ns !== 'string') {
                ns = o.ns.defaultNs;
            }

            resStore[lng] = resStore[lng] || {};
            return f.extend({}, resStore[lng][ns]);
        }

        function removeResourceBundle(lng, ns) {
            if (typeof ns !== 'string') {
                ns = o.ns.defaultNs;
            }

            resStore[lng] = resStore[lng] || {};
            resStore[lng][ns] = {};
            if (o.useLocalStorage) {
                sync._storeLocal(resStore);
            }
        }

        function addResource(lng, ns, key, value) {
            if (typeof ns !== 'string') {
                resource = ns;
                ns = o.ns.defaultNs;
            } else if (o.ns.namespaces.indexOf(ns) < 0) {
                o.ns.namespaces.push(ns);
            }

            resStore[lng] = resStore[lng] || {};
            resStore[lng][ns] = resStore[lng][ns] || {};

            var keys = key.split(o.keyseparator);
            var x = 0;
            var node = resStore[lng][ns];
            var origRef = node;

            while (keys[x]) {
                if (x == keys.length - 1) node[keys[x]] = value;else {
                    if (node[keys[x]] == null) node[keys[x]] = {};

                    node = node[keys[x]];
                }
                x++;
            }
            if (o.useLocalStorage) {
                sync._storeLocal(resStore);
            }
        }

        function addResources(lng, ns, resources) {
            if (typeof ns !== 'string') {
                resources = ns;
                ns = o.ns.defaultNs;
            } else if (o.ns.namespaces.indexOf(ns) < 0) {
                o.ns.namespaces.push(ns);
            }

            for (var m in resources) {
                if (typeof resources[m] === 'string') addResource(lng, ns, m, resources[m]);
            }
        }

        function setDefaultNamespace(ns) {
            o.ns.defaultNs = ns;
        }

        function loadNamespace(namespace, cb) {
            loadNamespaces([namespace], cb);
        }

        function loadNamespaces(namespaces, cb) {
            var opts = {
                dynamicLoad: o.dynamicLoad,
                resGetPath: o.resGetPath,
                getAsync: o.getAsync,
                customLoad: o.customLoad,
                ns: { namespaces: namespaces, defaultNs: '' /* new namespaces to load */
                } };

            // languages to load
            var lngsToLoad = f.toLanguages(o.lng);
            if (typeof o.preload === 'string') o.preload = [o.preload];
            for (var i = 0, l = o.preload.length; i < l; i++) {
                var pres = f.toLanguages(o.preload[i]);
                for (var y = 0, len = pres.length; y < len; y++) {
                    if (lngsToLoad.indexOf(pres[y]) < 0) {
                        lngsToLoad.push(pres[y]);
                    }
                }
            }

            // check if we have to load
            var lngNeedLoad = [];
            for (var a = 0, lenA = lngsToLoad.length; a < lenA; a++) {
                var needLoad = false;
                var resSet = resStore[lngsToLoad[a]];
                if (resSet) {
                    for (var b = 0, lenB = namespaces.length; b < lenB; b++) {
                        if (!resSet[namespaces[b]]) needLoad = true;
                    }
                } else {
                    needLoad = true;
                }

                if (needLoad) lngNeedLoad.push(lngsToLoad[a]);
            }

            if (lngNeedLoad.length) {
                i18n.sync._fetch(lngNeedLoad, opts, function (err, store) {
                    var todo = namespaces.length * lngNeedLoad.length;

                    // load each file individual
                    f.each(namespaces, function (nsIndex, nsValue) {

                        // append namespace to namespace array
                        if (o.ns.namespaces.indexOf(nsValue) < 0) {
                            o.ns.namespaces.push(nsValue);
                        }

                        f.each(lngNeedLoad, function (lngIndex, lngValue) {
                            resStore[lngValue] = resStore[lngValue] || {};
                            resStore[lngValue][nsValue] = store[lngValue][nsValue];

                            todo--; // wait for all done befor callback
                            if (todo === 0 && cb) {
                                if (o.useLocalStorage) i18n.sync._storeLocal(resStore);
                                cb();
                            }
                        });
                    });
                });
            } else {
                if (cb) cb();
            }
        }

        function setLng(lng, options, cb) {
            if (typeof options === 'function') {
                cb = options;
                options = {};
            } else if (!options) {
                options = {};
            }

            options.lng = lng;
            return init(options, cb);
        }

        function lng() {
            return currentLng;
        }

        function dir() {
            var rtlLangs = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam"];

            if (rtlLangs.some(function (lang) {
                return new RegExp('^' + lang).test(currentLng);
            })) {
                return 'rtl';
            }
            return 'ltr';
        }

        function reload(cb) {
            resStore = {};
            setLng(currentLng, cb);
        }

        function noConflict() {

            window.i18next = window.i18n;

            if (conflictReference) {
                window.i18n = conflictReference;
            } else {
                delete window.i18n;
            }
        }
        function addJqueryFunct() {
            // $.t shortcut
            $.t = $.t || translate;

            function parse(ele, key, options) {
                if (key.length === 0) return;

                var attr = 'text';

                if (key.indexOf('[') === 0) {
                    var parts = key.split(']');
                    key = parts[1];
                    attr = parts[0].substr(1, parts[0].length - 1);
                }

                if (key.indexOf(';') === key.length - 1) {
                    key = key.substr(0, key.length - 2);
                }

                var optionsToUse;
                if (attr === 'html') {
                    optionsToUse = o.defaultValueFromContent ? $.extend({ defaultValue: ele.html() }, options) : options;
                    ele.html($.t(key, optionsToUse));
                } else if (attr === 'text') {
                    optionsToUse = o.defaultValueFromContent ? $.extend({ defaultValue: ele.text() }, options) : options;
                    ele.text($.t(key, optionsToUse));
                } else if (attr === 'prepend') {
                    optionsToUse = o.defaultValueFromContent ? $.extend({ defaultValue: ele.html() }, options) : options;
                    ele.prepend($.t(key, optionsToUse));
                } else if (attr === 'append') {
                    optionsToUse = o.defaultValueFromContent ? $.extend({ defaultValue: ele.html() }, options) : options;
                    ele.append($.t(key, optionsToUse));
                } else if (attr.indexOf("data-") === 0) {
                    var dataAttr = attr.substr("data-".length);
                    optionsToUse = o.defaultValueFromContent ? $.extend({ defaultValue: ele.data(dataAttr) }, options) : options;
                    var translated = $.t(key, optionsToUse);
                    //we change into the data cache
                    ele.data(dataAttr, translated);
                    //we change into the dom
                    ele.attr(attr, translated);
                } else {
                    optionsToUse = o.defaultValueFromContent ? $.extend({ defaultValue: ele.attr(attr) }, options) : options;
                    ele.attr(attr, $.t(key, optionsToUse));
                }
            }

            function localize(ele, options) {
                var key = ele.attr(o.selectorAttr);
                if (!key && typeof key !== 'undefined' && key !== false) key = ele.text() || ele.val();
                if (!key) return;

                var target = ele,
                    targetSelector = ele.data("i18n-target");
                if (targetSelector) {
                    target = ele.find(targetSelector) || ele;
                }

                if (!options && o.useDataAttrOptions === true) {
                    options = ele.data("i18n-options");
                }
                options = options || {};

                if (key.indexOf(';') >= 0) {
                    var keys = key.split(';');

                    $.each(keys, function (m, k) {
                        if (k !== '') parse(target, k, options);
                    });
                } else {
                    parse(target, key, options);
                }

                if (o.useDataAttrOptions === true) {
                    var clone = $.extend({ lng: 'non', lngs: [], _origLng: 'non' }, options);
                    delete clone.lng;
                    delete clone.lngs;
                    delete clone._origLng;
                    ele.data("i18n-options", clone);
                }
            }

            // fn
            $.fn.i18n = function (options) {
                return this.each(function () {
                    // localize element itself
                    localize($(this), options);

                    // localize childs
                    var elements = $(this).find('[' + o.selectorAttr + ']');
                    elements.each(function () {
                        localize($(this), options);
                    });
                });
            };
        }
        function addJqueryLikeFunctionality() {

            function parse(ele, key, options) {
                if (key.length === 0) return;

                var attr = 'text';

                if (key.indexOf('[') === 0) {
                    var parts = key.split(']');
                    key = parts[1];
                    attr = parts[0].substr(1, parts[0].length - 1);
                }

                if (key.indexOf(';') === key.length - 1) {
                    key = key.substr(0, key.length - 2);
                }

                if (attr === 'html') {
                    ele.innerHTML = translate(key, options);
                } else if (attr === 'text') {
                    ele.textContent = translate(key, options);
                } else if (attr === 'prepend') {
                    ele.insertAdjacentHTML(translate(key, options), 'afterbegin');
                } else if (attr === 'append') {
                    ele.insertAdjacentHTML(translate(key, options), 'beforeend');
                } else {
                    ele.setAttribute(attr, translate(key, options));
                }
            }

            function localize(ele, options) {
                var key = ele.getAttribute(o.selectorAttr);
                if (!key && typeof key !== 'undefined' && key !== false) key = ele.textContent || ele.value;
                if (!key) return;

                var target = ele,
                    targetSelector = ele.getAttribute("i18n-target");
                if (targetSelector) {
                    target = ele.querySelector(targetSelector) || ele;
                }

                if (key.indexOf(';') >= 0) {
                    var keys = key.split(';'),
                        index = 0,
                        length = keys.length;

                    for (; index < length; index++) {
                        if (keys[index] !== '') parse(target, keys[index], options);
                    }
                } else {
                    parse(target, key, options);
                }
            }

            // fn
            i18n.translateObject = function (object, options) {
                // localize childs
                var elements = object.querySelectorAll('[' + o.selectorAttr + ']');
                var index = 0,
                    length = elements.length;
                for (; index < length; index++) {
                    localize(elements[index], options);
                }
            };
        }
        function applyReplacement(str, replacementHash, nestedKey, options) {
            if (!str) return str;

            options = options || replacementHash; // first call uses replacement hash combined with options
            if (str.indexOf(options.interpolationPrefix || o.interpolationPrefix) < 0) return str;

            var prefix = options.interpolationPrefix ? f.regexEscape(options.interpolationPrefix) : o.interpolationPrefixEscaped,
                suffix = options.interpolationSuffix ? f.regexEscape(options.interpolationSuffix) : o.interpolationSuffixEscaped,
                keyseparator = options.keyseparator || o.keyseparator,
                unEscapingSuffix = 'HTML' + suffix;

            var hash = replacementHash.replace && typeof replacementHash.replace === 'object' ? replacementHash.replace : replacementHash;
            var replacementRegex = new RegExp([prefix, '(.+?)', '(HTML)?', suffix].join(''), 'g');
            var escapeInterpolation = options.escapeInterpolation || o.escapeInterpolation;
            return str.replace(replacementRegex, function (wholeMatch, keyMatch, htmlMatched) {
                // Check for recursive matches of object
                var objectMatching = hash;
                var keyLeaf = keyMatch;
                while (keyLeaf.indexOf(keyseparator) >= 0 && typeof objectMatching === 'object' && objectMatching) {
                    var propName = keyLeaf.slice(0, keyLeaf.indexOf(keyseparator));
                    keyLeaf = keyLeaf.slice(keyLeaf.indexOf(keyseparator) + 1);
                    objectMatching = objectMatching[propName];
                }
                if (objectMatching && typeof objectMatching === 'object' && objectMatching.hasOwnProperty(keyLeaf)) {
                    var value = objectMatching[keyLeaf];
                    if (escapeInterpolation && !htmlMatched) {
                        return f.escape(objectMatching[keyLeaf]);
                    } else {
                        return objectMatching[keyLeaf];
                    }
                } else {
                    return wholeMatch;
                }
            });
        }

        // append it to functions
        f.applyReplacement = applyReplacement;

        function applyReuse(translated, options) {
            var comma = ',';
            var options_open = '{';
            var options_close = '}';

            var opts = f.extend({}, options);
            delete opts.postProcess;
            delete opts.isFallbackLookup;

            while (translated.indexOf(o.reusePrefix) != -1) {
                replacementCounter++;
                if (replacementCounter > o.maxRecursion) {
                    break;
                } // safety net for too much recursion
                var index_of_opening = translated.lastIndexOf(o.reusePrefix);
                var index_of_end_of_closing = translated.indexOf(o.reuseSuffix, index_of_opening) + o.reuseSuffix.length;
                var token = translated.substring(index_of_opening, index_of_end_of_closing);
                var token_without_symbols = token.replace(o.reusePrefix, '').replace(o.reuseSuffix, '');

                if (index_of_end_of_closing <= index_of_opening) {
                    f.error('there is an missing closing in following translation value', translated);
                    return '';
                }

                if (token_without_symbols.indexOf(comma) != -1) {
                    var index_of_token_end_of_closing = token_without_symbols.indexOf(comma);
                    if (token_without_symbols.indexOf(options_open, index_of_token_end_of_closing) != -1 && token_without_symbols.indexOf(options_close, index_of_token_end_of_closing) != -1) {
                        var index_of_opts_opening = token_without_symbols.indexOf(options_open, index_of_token_end_of_closing);
                        var index_of_opts_end_of_closing = token_without_symbols.indexOf(options_close, index_of_opts_opening) + options_close.length;
                        try {
                            opts = f.extend(opts, JSON.parse(token_without_symbols.substring(index_of_opts_opening, index_of_opts_end_of_closing)));
                            token_without_symbols = token_without_symbols.substring(0, index_of_token_end_of_closing);
                        } catch (e) {}
                    }
                }

                var translated_token = _translate(token_without_symbols, opts);
                translated = translated.replace(token, f.regexReplacementEscape(translated_token));
            }
            return translated;
        }

        function hasContext(options) {
            return options.context && (typeof options.context == 'string' || typeof options.context == 'number');
        }

        function needsPlural(options, lng) {
            return options.count !== undefined && typeof options.count != 'string' /* && pluralExtensions.needsPlural(lng, options.count)*/;
        }

        function needsIndefiniteArticle(options) {
            return options.indefinite_article !== undefined && typeof options.indefinite_article != 'string' && options.indefinite_article;
        }

        function exists(key, options) {
            options = options || {};

            var notFound = _getDefaultValue(key, options),
                found = _find(key, options);

            return found !== undefined || found === notFound;
        }

        function translate(key, options) {
            if (!initialized) {
                f.log('i18next not finished initialization. you might have called t function before loading resources finished.');

                if (options && options.defaultValue) {
                    return options.detaultValue;
                } else {
                    return '';
                }
            };
            replacementCounter = 0;
            return _translate.apply(null, arguments);
        }

        function _getDefaultValue(key, options) {
            return options.defaultValue !== undefined ? options.defaultValue : key;
        }

        function _injectSprintfProcessor() {

            var values = [];

            // mh: build array from second argument onwards
            for (var i = 1; i < arguments.length; i++) {
                values.push(arguments[i]);
            }

            return {
                postProcess: 'sprintf',
                sprintf: values
            };
        }

        function _translate(potentialKeys, options) {
            if (typeof options !== 'undefined' && typeof options !== 'object') {
                if (o.shortcutFunction === 'sprintf') {
                    // mh: gettext like sprintf syntax found, automatically create sprintf processor
                    options = _injectSprintfProcessor.apply(null, arguments);
                } else if (o.shortcutFunction === 'defaultValue') {
                    options = {
                        defaultValue: options
                    };
                }
            } else {
                options = options || {};
            }

            if (typeof o.defaultVariables === 'object') {
                options = f.extend({}, o.defaultVariables, options);
            }

            if (potentialKeys === undefined || potentialKeys === null || potentialKeys === '') return '';

            if (typeof potentialKeys === 'number') {
                potentialKeys = String(potentialKeys);
            }

            if (typeof potentialKeys === 'string') {
                potentialKeys = [potentialKeys];
            }

            var key = potentialKeys[0];

            if (potentialKeys.length > 1) {
                for (var i = 0; i < potentialKeys.length; i++) {
                    key = potentialKeys[i];
                    if (exists(key, options)) {
                        break;
                    }
                }
            }

            var notFound = _getDefaultValue(key, options),
                found = _find(key, options),
                nsseparator = options.nsseparator || o.nsseparator,
                lngs = options.lng ? f.toLanguages(options.lng, options.fallbackLng) : languages,
                ns = options.ns || o.ns.defaultNs,
                parts;

            // split ns and key
            if (key.indexOf(nsseparator) > -1) {
                parts = key.split(nsseparator);
                ns = parts[0];
                key = parts[1];
            }

            if (found === undefined && o.sendMissing && typeof o.missingKeyHandler === 'function') {
                if (options.lng) {
                    o.missingKeyHandler(lngs[0], ns, key, notFound, lngs);
                } else {
                    o.missingKeyHandler(o.lng, ns, key, notFound, lngs);
                }
            }

            var postProcessorsToApply;
            if (typeof o.postProcess === 'string' && o.postProcess !== '') {
                postProcessorsToApply = [o.postProcess];
            } else if (typeof o.postProcess === 'array' || typeof o.postProcess === 'object') {
                postProcessorsToApply = o.postProcess;
            } else {
                postProcessorsToApply = [];
            }

            if (typeof options.postProcess === 'string' && options.postProcess !== '') {
                postProcessorsToApply = postProcessorsToApply.concat([options.postProcess]);
            } else if (typeof options.postProcess === 'array' || typeof options.postProcess === 'object') {
                postProcessorsToApply = postProcessorsToApply.concat(options.postProcess);
            }

            if (found !== undefined && postProcessorsToApply.length) {
                postProcessorsToApply.forEach(function (postProcessor) {
                    if (postProcessors[postProcessor]) {
                        found = postProcessors[postProcessor](found, key, options);
                    }
                });
            }

            // process notFound if function exists
            var splitNotFound = notFound;
            if (notFound.indexOf(nsseparator) > -1) {
                parts = notFound.split(nsseparator);
                splitNotFound = parts[1];
            }
            if (splitNotFound === key && o.parseMissingKey) {
                notFound = o.parseMissingKey(notFound);
            }

            if (found === undefined) {
                notFound = applyReplacement(notFound, options);
                notFound = applyReuse(notFound, options);

                if (postProcessorsToApply.length) {
                    found = _getDefaultValue(key, options);
                    postProcessorsToApply.forEach(function (postProcessor) {
                        if (postProcessors[postProcessor]) {
                            found = postProcessors[postProcessor](found, key, options);
                        }
                    });
                }
            }

            return found !== undefined ? found : notFound;
        }

        function _find(key, options) {
            options = options || {};

            var optionWithoutCount,
                translated,
                notFound = _getDefaultValue(key, options),
                lngs = languages;

            if (!resStore) {
                return notFound;
            } // no resStore to translate from

            // CI mode
            if (lngs[0].toLowerCase() === 'cimode') return notFound;

            // passed in lng
            if (options.lngs) lngs = options.lngs;
            if (options.lng) {
                lngs = f.toLanguages(options.lng, options.fallbackLng);

                if (!resStore[lngs[0]]) {
                    var oldAsync = o.getAsync;
                    o.getAsync = false;

                    i18n.sync.load(lngs, o, function (err, store) {
                        f.extend(resStore, store);
                        o.getAsync = oldAsync;
                    });
                }
            }

            var ns = options.ns || o.ns.defaultNs;
            var nsseparator = options.nsseparator || o.nsseparator;
            if (key.indexOf(nsseparator) > -1) {
                var parts = key.split(nsseparator);
                ns = parts[0];
                key = parts[1];
            }

            if (hasContext(options)) {
                optionWithoutCount = f.extend({}, options);
                delete optionWithoutCount.context;
                optionWithoutCount.defaultValue = o.contextNotFound;

                var contextKey = ns + nsseparator + key + '_' + options.context;

                translated = translate(contextKey, optionWithoutCount);
                if (translated != o.contextNotFound) {
                    return applyReplacement(translated, { context: options.context }); // apply replacement for context only
                } // else continue translation with original/nonContext key
            }

            if (needsPlural(options, lngs[0])) {
                optionWithoutCount = f.extend({ lngs: [lngs[0]] }, options);
                delete optionWithoutCount.count;
                optionWithoutCount._origLng = optionWithoutCount._origLng || optionWithoutCount.lng || lngs[0];
                delete optionWithoutCount.lng;
                optionWithoutCount.defaultValue = o.pluralNotFound;

                var pluralKey;
                if (!pluralExtensions.needsPlural(lngs[0], options.count)) {
                    pluralKey = ns + nsseparator + key;
                } else {
                    pluralKey = ns + nsseparator + key + o.pluralSuffix;
                    var pluralExtension = pluralExtensions.get(lngs[0], options.count);
                    if (pluralExtension >= 0) {
                        pluralKey = pluralKey + '_' + pluralExtension;
                    } else if (pluralExtension === 1) {
                        pluralKey = ns + nsseparator + key; // singular
                    }
                }

                translated = translate(pluralKey, optionWithoutCount);

                if (translated != o.pluralNotFound) {
                    return applyReplacement(translated, {
                        count: options.count,
                        interpolationPrefix: options.interpolationPrefix,
                        interpolationSuffix: options.interpolationSuffix
                    }); // apply replacement for count only
                } else if (lngs.length > 1) {
                    // remove failed lng
                    var clone = lngs.slice();
                    clone.shift();
                    options = f.extend(options, { lngs: clone });
                    options._origLng = optionWithoutCount._origLng;
                    delete options.lng;
                    // retry with fallbacks
                    translated = translate(ns + nsseparator + key, options);
                    if (translated != o.pluralNotFound) return translated;
                } else {
                    optionWithoutCount.lng = optionWithoutCount._origLng;
                    delete optionWithoutCount._origLng;
                    translated = translate(ns + nsseparator + key, optionWithoutCount);

                    return applyReplacement(translated, {
                        count: options.count,
                        interpolationPrefix: options.interpolationPrefix,
                        interpolationSuffix: options.interpolationSuffix
                    });
                }
            }

            if (needsIndefiniteArticle(options)) {
                var optionsWithoutIndef = f.extend({}, options);
                delete optionsWithoutIndef.indefinite_article;
                optionsWithoutIndef.defaultValue = o.indefiniteNotFound;
                // If we don't have a count, we want the indefinite, if we do have a count, and needsPlural is false
                var indefiniteKey = ns + nsseparator + key + (options.count && !needsPlural(options, lngs[0]) || !options.count ? o.indefiniteSuffix : "");
                translated = translate(indefiniteKey, optionsWithoutIndef);
                if (translated != o.indefiniteNotFound) {
                    return translated;
                }
            }

            var found;
            var keyseparator = options.keyseparator || o.keyseparator;
            var keys = key.split(keyseparator);
            for (var i = 0, len = lngs.length; i < len; i++) {
                if (found !== undefined) break;

                var l = lngs[i];

                var x = 0;
                var value = resStore[l] && resStore[l][ns];
                while (keys[x]) {
                    value = value && value[keys[x]];
                    x++;
                }
                if (value !== undefined && (!o.showKeyIfEmpty || value !== '')) {
                    var valueType = Object.prototype.toString.apply(value);
                    if (typeof value === 'string') {
                        value = applyReplacement(value, options);
                        value = applyReuse(value, options);
                    } else if (valueType === '[object Array]' && !o.returnObjectTrees && !options.returnObjectTrees) {
                        value = value.join('\n');
                        value = applyReplacement(value, options);
                        value = applyReuse(value, options);
                    } else if (value === null && o.fallbackOnNull === true) {
                        value = undefined;
                    } else if (value !== null) {
                        if (!o.returnObjectTrees && !options.returnObjectTrees) {
                            if (o.objectTreeKeyHandler && typeof o.objectTreeKeyHandler == 'function') {
                                value = o.objectTreeKeyHandler(key, value, l, ns, options);
                            } else {
                                value = 'key \'' + ns + ':' + key + ' (' + l + ')\' ' + 'returned an object instead of string.';
                                f.log(value);
                            }
                        } else if (valueType !== '[object Number]' && valueType !== '[object Function]' && valueType !== '[object RegExp]') {
                            var copy = valueType === '[object Array]' ? [] : {}; // apply child translation on a copy
                            f.each(value, function (m) {
                                copy[m] = _translate(ns + nsseparator + key + keyseparator + m, options);
                            });
                            value = copy;
                        }
                    }

                    if (typeof value === 'string' && value.trim() === '' && o.fallbackOnEmpty === true) value = undefined;

                    found = value;
                }
            }

            if (found === undefined && !options.isFallbackLookup && (o.fallbackToDefaultNS === true || o.fallbackNS && o.fallbackNS.length > 0)) {
                // set flag for fallback lookup - avoid recursion
                options.isFallbackLookup = true;

                if (o.fallbackNS.length) {

                    for (var y = 0, lenY = o.fallbackNS.length; y < lenY; y++) {
                        found = _find(o.fallbackNS[y] + nsseparator + key, options);

                        if (found || found === "" && o.fallbackOnEmpty === false) {
                            /* compare value without namespace */
                            var foundValue = found.indexOf(nsseparator) > -1 ? found.split(nsseparator)[1] : found,
                                notFoundValue = notFound.indexOf(nsseparator) > -1 ? notFound.split(nsseparator)[1] : notFound;

                            if (foundValue !== notFoundValue) break;
                        }
                    }
                } else {
                    options.ns = o.ns.defaultNs;
                    found = _find(key, options); // fallback to default NS
                }
                options.isFallbackLookup = false;
            }

            return found;
        }
        function detectLanguage() {
            var detectedLng;
            var whitelist = o.lngWhitelist || [];
            var userLngChoices = [];

            // get from qs
            var qsParm = [];
            if (typeof window !== 'undefined') {
                (function () {
                    var query = window.location.search.substring(1);
                    var params = query.split('&');
                    for (var i = 0; i < params.length; i++) {
                        var pos = params[i].indexOf('=');
                        if (pos > 0) {
                            var key = params[i].substring(0, pos);
                            if (key == o.detectLngQS) {
                                userLngChoices.push(params[i].substring(pos + 1));
                            }
                        }
                    }
                })();
            }

            // get from cookie
            if (o.useCookie && typeof document !== 'undefined') {
                var c = f.cookie.read(o.cookieName);
                if (c) userLngChoices.push(c);
            }

            // get from localStorage
            if (o.detectLngFromLocalStorage && typeof window !== 'undefined' && window.localStorage) {
                var lang = f.localStorage.getItem('i18next_lng');
                if (lang) {
                    userLngChoices.push(lang);
                }
            }

            // get from navigator
            if (typeof navigator !== 'undefined') {
                if (navigator.languages) {
                    // chrome only; not an array, so can't use .push.apply instead of iterating
                    for (var i = 0; i < navigator.languages.length; i++) {
                        userLngChoices.push(navigator.languages[i]);
                    }
                }
                if (navigator.userLanguage) {
                    userLngChoices.push(navigator.userLanguage);
                }
                if (navigator.language) {
                    userLngChoices.push(navigator.language);
                }
            }

            (function () {
                for (var i = 0; i < userLngChoices.length; i++) {
                    var lng = userLngChoices[i];

                    if (lng.indexOf('-') > -1) {
                        var parts = lng.split('-');
                        lng = o.lowerCaseLng ? parts[0].toLowerCase() + '-' + parts[1].toLowerCase() : parts[0].toLowerCase() + '-' + parts[1].toUpperCase();
                    }

                    if (whitelist.length === 0 || whitelist.indexOf(lng) > -1) {
                        detectedLng = lng;
                        break;
                    }
                }
            })();

            //fallback
            if (!detectedLng) {
                detectedLng = o.fallbackLng[0];
            }

            return detectedLng;
        }
        // definition http://translate.sourceforge.net/wiki/l10n/pluralforms

        /* [code, name, numbers, pluralsType] */
        var _rules = [["ach", "Acholi", [1, 2], 1], ["af", "Afrikaans", [1, 2], 2], ["ak", "Akan", [1, 2], 1], ["am", "Amharic", [1, 2], 1], ["an", "Aragonese", [1, 2], 2], ["ar", "Arabic", [0, 1, 2, 3, 11, 100], 5], ["arn", "Mapudungun", [1, 2], 1], ["ast", "Asturian", [1, 2], 2], ["ay", "Aymará", [1], 3], ["az", "Azerbaijani", [1, 2], 2], ["be", "Belarusian", [1, 2, 5], 4], ["bg", "Bulgarian", [1, 2], 2], ["bn", "Bengali", [1, 2], 2], ["bo", "Tibetan", [1], 3], ["br", "Breton", [1, 2], 1], ["bs", "Bosnian", [1, 2, 5], 4], ["ca", "Catalan", [1, 2], 2], ["cgg", "Chiga", [1], 3], ["cs", "Czech", [1, 2, 5], 6], ["csb", "Kashubian", [1, 2, 5], 7], ["cy", "Welsh", [1, 2, 3, 8], 8], ["da", "Danish", [1, 2], 2], ["de", "German", [1, 2], 2], ["dev", "Development Fallback", [1, 2], 2], ["dz", "Dzongkha", [1], 3], ["el", "Greek", [1, 2], 2], ["en", "English", [1, 2], 2], ["eo", "Esperanto", [1, 2], 2], ["es", "Spanish", [1, 2], 2], ["es_ar", "Argentinean Spanish", [1, 2], 2], ["et", "Estonian", [1, 2], 2], ["eu", "Basque", [1, 2], 2], ["fa", "Persian", [1], 3], ["fi", "Finnish", [1, 2], 2], ["fil", "Filipino", [1, 2], 1], ["fo", "Faroese", [1, 2], 2], ["fr", "French", [1, 2], 9], ["fur", "Friulian", [1, 2], 2], ["fy", "Frisian", [1, 2], 2], ["ga", "Irish", [1, 2, 3, 7, 11], 10], ["gd", "Scottish Gaelic", [1, 2, 3, 20], 11], ["gl", "Galician", [1, 2], 2], ["gu", "Gujarati", [1, 2], 2], ["gun", "Gun", [1, 2], 1], ["ha", "Hausa", [1, 2], 2], ["he", "Hebrew", [1, 2], 2], ["hi", "Hindi", [1, 2], 2], ["hr", "Croatian", [1, 2, 5], 4], ["hu", "Hungarian", [1, 2], 2], ["hy", "Armenian", [1, 2], 2], ["ia", "Interlingua", [1, 2], 2], ["id", "Indonesian", [1], 3], ["is", "Icelandic", [1, 2], 12], ["it", "Italian", [1, 2], 2], ["ja", "Japanese", [1], 3], ["jbo", "Lojban", [1], 3], ["jv", "Javanese", [0, 1], 13], ["ka", "Georgian", [1], 3], ["kk", "Kazakh", [1], 3], ["km", "Khmer", [1], 3], ["kn", "Kannada", [1, 2], 2], ["ko", "Korean", [1], 3], ["ku", "Kurdish", [1, 2], 2], ["kw", "Cornish", [1, 2, 3, 4], 14], ["ky", "Kyrgyz", [1], 3], ["lb", "Letzeburgesch", [1, 2], 2], ["ln", "Lingala", [1, 2], 1], ["lo", "Lao", [1], 3], ["lt", "Lithuanian", [1, 2, 10], 15], ["lv", "Latvian", [1, 2, 0], 16], ["mai", "Maithili", [1, 2], 2], ["mfe", "Mauritian Creole", [1, 2], 1], ["mg", "Malagasy", [1, 2], 1], ["mi", "Maori", [1, 2], 1], ["mk", "Macedonian", [1, 2], 17], ["ml", "Malayalam", [1, 2], 2], ["mn", "Mongolian", [1, 2], 2], ["mnk", "Mandinka", [0, 1, 2], 18], ["mr", "Marathi", [1, 2], 2], ["ms", "Malay", [1], 3], ["mt", "Maltese", [1, 2, 11, 20], 19], ["nah", "Nahuatl", [1, 2], 2], ["nap", "Neapolitan", [1, 2], 2], ["nb", "Norwegian Bokmal", [1, 2], 2], ["ne", "Nepali", [1, 2], 2], ["nl", "Dutch", [1, 2], 2], ["nn", "Norwegian Nynorsk", [1, 2], 2], ["no", "Norwegian", [1, 2], 2], ["nso", "Northern Sotho", [1, 2], 2], ["oc", "Occitan", [1, 2], 1], ["or", "Oriya", [2, 1], 2], ["pa", "Punjabi", [1, 2], 2], ["pap", "Papiamento", [1, 2], 2], ["pl", "Polish", [1, 2, 5], 7], ["pms", "Piemontese", [1, 2], 2], ["ps", "Pashto", [1, 2], 2], ["pt", "Portuguese", [1, 2], 2], ["pt_br", "Brazilian Portuguese", [1, 2], 2], ["rm", "Romansh", [1, 2], 2], ["ro", "Romanian", [1, 2, 20], 20], ["ru", "Russian", [1, 2, 5], 4], ["sah", "Yakut", [1], 3], ["sco", "Scots", [1, 2], 2], ["se", "Northern Sami", [1, 2], 2], ["si", "Sinhala", [1, 2], 2], ["sk", "Slovak", [1, 2, 5], 6], ["sl", "Slovenian", [5, 1, 2, 3], 21], ["so", "Somali", [1, 2], 2], ["son", "Songhay", [1, 2], 2], ["sq", "Albanian", [1, 2], 2], ["sr", "Serbian", [1, 2, 5], 4], ["su", "Sundanese", [1], 3], ["sv", "Swedish", [1, 2], 2], ["sw", "Swahili", [1, 2], 2], ["ta", "Tamil", [1, 2], 2], ["te", "Telugu", [1, 2], 2], ["tg", "Tajik", [1, 2], 1], ["th", "Thai", [1], 3], ["ti", "Tigrinya", [1, 2], 1], ["tk", "Turkmen", [1, 2], 2], ["tr", "Turkish", [1, 2], 1], ["tt", "Tatar", [1], 3], ["ug", "Uyghur", [1], 3], ["uk", "Ukrainian", [1, 2, 5], 4], ["ur", "Urdu", [1, 2], 2], ["uz", "Uzbek", [1, 2], 1], ["vi", "Vietnamese", [1], 3], ["wa", "Walloon", [1, 2], 1], ["wo", "Wolof", [1], 3], ["yo", "Yoruba", [1, 2], 2], ["zh", "Chinese", [1], 3]];

        var _rulesPluralsTypes = {
            1: function (n) {
                return Number(n > 1);
            },
            2: function (n) {
                return Number(n != 1);
            },
            3: function (n) {
                return 0;
            },
            4: function (n) {
                return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
            },
            5: function (n) {
                return Number(n === 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
            },
            6: function (n) {
                return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);
            },
            7: function (n) {
                return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
            },
            8: function (n) {
                return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);
            },
            9: function (n) {
                return Number(n >= 2);
            },
            10: function (n) {
                return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
            },
            11: function (n) {
                return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);
            },
            12: function (n) {
                return Number(n % 10 != 1 || n % 100 == 11);
            },
            13: function (n) {
                return Number(n !== 0);
            },
            14: function (n) {
                return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);
            },
            15: function (n) {
                return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
            },
            16: function (n) {
                return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);
            },
            17: function (n) {
                return Number(n == 1 || n % 10 == 1 ? 0 : 1);
            },
            18: function (n) {
                return Number(n == 0 ? 0 : n == 1 ? 1 : 2);
            },
            19: function (n) {
                return Number(n == 1 ? 0 : n === 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);
            },
            20: function (n) {
                return Number(n == 1 ? 0 : n === 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);
            },
            21: function (n) {
                return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);
            }
        };

        var pluralExtensions = {

            rules: function () {
                var l,
                    rules = {};
                for (l = _rules.length; l--;) {
                    rules[_rules[l][0]] = {
                        name: _rules[l][1],
                        numbers: _rules[l][2],
                        plurals: _rulesPluralsTypes[_rules[l][3]]
                    };
                }
                return rules;
            }(),

            // you can add your own pluralExtensions
            addRule: function (lng, obj) {
                pluralExtensions.rules[lng] = obj;
            },

            setCurrentLng: function (lng) {
                if (!pluralExtensions.currentRule || pluralExtensions.currentRule.lng !== lng) {
                    var parts = lng.split('-');

                    pluralExtensions.currentRule = {
                        lng: lng,
                        rule: pluralExtensions.rules[parts[0]]
                    };
                }
            },

            needsPlural: function (lng, count) {
                var parts = lng.split('-');

                var ext;
                if (pluralExtensions.currentRule && pluralExtensions.currentRule.lng === lng) {
                    ext = pluralExtensions.currentRule.rule;
                } else {
                    ext = pluralExtensions.rules[parts[f.getCountyIndexOfLng(lng)]];
                }

                if (ext && ext.numbers.length <= 1) {
                    return false;
                } else {
                    return this.get(lng, count) !== 1;
                }
            },

            get: function (lng, count) {
                var parts = lng.split('-');

                function getResult(l, c) {
                    var ext;
                    if (pluralExtensions.currentRule && pluralExtensions.currentRule.lng === lng) {
                        ext = pluralExtensions.currentRule.rule;
                    } else {
                        ext = pluralExtensions.rules[l];
                    }
                    if (ext) {
                        var i;
                        if (ext.noAbs) {
                            i = ext.plurals(c);
                        } else {
                            i = ext.plurals(Math.abs(c));
                        }

                        var number = ext.numbers[i];
                        if (ext.numbers.length === 2 && ext.numbers[0] === 1) {
                            if (number === 2) {
                                number = -1; // regular plural
                            } else if (number === 1) {
                                number = 1; // singular
                            }
                        } //console.log(count + '-' + number);
                        return number;
                    } else {
                        return c === 1 ? '1' : '-1';
                    }
                }

                return getResult(parts[f.getCountyIndexOfLng(lng)], count);
            }

        };
        var postProcessors = {};
        var addPostProcessor = function (name, fc) {
            postProcessors[name] = fc;
        };
        // sprintf support
        var sprintf = function () {
            function get_type(variable) {
                return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();
            }
            function str_repeat(input, multiplier) {
                for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}
                return output.join('');
            }

            var str_format = function () {
                if (!str_format.cache.hasOwnProperty(arguments[0])) {
                    str_format.cache[arguments[0]] = str_format.parse(arguments[0]);
                }
                return str_format.format.call(null, str_format.cache[arguments[0]], arguments);
            };

            str_format.format = function (parse_tree, argv) {
                var cursor = 1,
                    tree_length = parse_tree.length,
                    node_type = '',
                    arg,
                    output = [],
                    i,
                    k,
                    match,
                    pad,
                    pad_character,
                    pad_length;
                for (i = 0; i < tree_length; i++) {
                    node_type = get_type(parse_tree[i]);
                    if (node_type === 'string') {
                        output.push(parse_tree[i]);
                    } else if (node_type === 'array') {
                        match = parse_tree[i]; // convenience purposes only
                        if (match[2]) {
                            // keyword argument
                            arg = argv[cursor];
                            for (k = 0; k < match[2].length; k++) {
                                if (!arg.hasOwnProperty(match[2][k])) {
                                    throw sprintf('[sprintf] property "%s" does not exist', match[2][k]);
                                }
                                arg = arg[match[2][k]];
                            }
                        } else if (match[1]) {
                            // positional argument (explicit)
                            arg = argv[match[1]];
                        } else {
                            // positional argument (implicit)
                            arg = argv[cursor++];
                        }

                        if (/[^s]/.test(match[8]) && get_type(arg) != 'number') {
                            throw sprintf('[sprintf] expecting number but found %s', get_type(arg));
                        }
                        switch (match[8]) {
                            case 'b':
                                arg = arg.toString(2);break;
                            case 'c':
                                arg = String.fromCharCode(arg);break;
                            case 'd':
                                arg = parseInt(arg, 10);break;
                            case 'e':
                                arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential();break;
                            case 'f':
                                arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg);break;
                            case 'o':
                                arg = arg.toString(8);break;
                            case 's':
                                arg = (arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg;break;
                            case 'u':
                                arg = Math.abs(arg);break;
                            case 'x':
                                arg = arg.toString(16);break;
                            case 'X':
                                arg = arg.toString(16).toUpperCase();break;
                        }
                        arg = /[def]/.test(match[8]) && match[3] && arg >= 0 ? '+' + arg : arg;
                        pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';
                        pad_length = match[6] - String(arg).length;
                        pad = match[6] ? str_repeat(pad_character, pad_length) : '';
                        output.push(match[5] ? arg + pad : pad + arg);
                    }
                }
                return output.join('');
            };

            str_format.cache = {};

            str_format.parse = function (fmt) {
                var _fmt = fmt,
                    match = [],
                    parse_tree = [],
                    arg_names = 0;
                while (_fmt) {
                    if ((match = /^[^\x25]+/.exec(_fmt)) !== null) {
                        parse_tree.push(match[0]);
                    } else if ((match = /^\x25{2}/.exec(_fmt)) !== null) {
                        parse_tree.push('%');
                    } else if ((match = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {
                        if (match[2]) {
                            arg_names |= 1;
                            var field_list = [],
                                replacement_field = match[2],
                                field_match = [];
                            if ((field_match = /^([a-z_][a-z_\d]*)/i.exec(replacement_field)) !== null) {
                                field_list.push(field_match[1]);
                                while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {
                                    if ((field_match = /^\.([a-z_][a-z_\d]*)/i.exec(replacement_field)) !== null) {
                                        field_list.push(field_match[1]);
                                    } else if ((field_match = /^\[(\d+)\]/.exec(replacement_field)) !== null) {
                                        field_list.push(field_match[1]);
                                    } else {
                                        throw '[sprintf] huh?';
                                    }
                                }
                            } else {
                                throw '[sprintf] huh?';
                            }
                            match[2] = field_list;
                        } else {
                            arg_names |= 2;
                        }
                        if (arg_names === 3) {
                            throw '[sprintf] mixing positional and named placeholders is not (yet) supported';
                        }
                        parse_tree.push(match);
                    } else {
                        throw '[sprintf] huh?';
                    }
                    _fmt = _fmt.substring(match[0].length);
                }
                return parse_tree;
            };

            return str_format;
        }();

        var vsprintf = function (fmt, argv) {
            argv.unshift(fmt);
            return sprintf.apply(null, argv);
        };

        addPostProcessor("sprintf", function (val, key, opts) {
            if (!opts.sprintf) return val;

            if (Object.prototype.toString.apply(opts.sprintf) === '[object Array]') {
                return vsprintf(val, opts.sprintf);
            } else if (typeof opts.sprintf === 'object') {
                return sprintf(val, opts.sprintf);
            }

            return val;
        });
        // public api interface
        i18n.init = init;
        i18n.isInitialized = isInitialized;
        i18n.setLng = setLng;
        i18n.preload = preload;
        i18n.addResourceBundle = addResourceBundle;
        i18n.hasResourceBundle = hasResourceBundle;
        i18n.getResourceBundle = getResourceBundle;
        i18n.addResource = addResource;
        i18n.addResources = addResources;
        i18n.removeResourceBundle = removeResourceBundle;
        i18n.loadNamespace = loadNamespace;
        i18n.loadNamespaces = loadNamespaces;
        i18n.setDefaultNamespace = setDefaultNamespace;
        i18n.t = translate;
        i18n.translate = translate;
        i18n.exists = exists;
        i18n.detectLanguage = f.detectLanguage;
        i18n.pluralExtensions = pluralExtensions;
        i18n.sync = sync;
        i18n.functions = f;
        i18n.lng = lng;
        i18n.dir = dir;
        i18n.addPostProcessor = addPostProcessor;
        i18n.applyReplacement = f.applyReplacement;
        i18n.options = o;
        i18n.noConflict = noConflict;
    })(typeof exports === 'undefined' ? window : exports);
});
System.registerDynamic("github:i18next/i18next@1.11.1.js", ["github:i18next/i18next@1.11.1/i18next.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:i18next/i18next@1.11.1/i18next.js");
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/utils.js", ["exports", "npm:aurelia-dependency-injection@1.0.0-beta.1.js"], function(exports, _aureliaDependencyInjection) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var extend = function extend(destination, source) {
    for (var property in source) {
      destination[property] = source[property];
    }
    return destination;
  };
  exports.extend = extend;
  var assignObjectToKeys = function assignObjectToKeys(root, obj) {
    if (obj === undefined || obj === null) {
      return obj;
    }
    var opts = {};
    Object.keys(obj).map(function(key) {
      if (typeof obj[key] === 'object') {
        extend(opts, assignObjectToKeys(key, obj[key]));
      } else {
        opts[root !== '' ? root + '.' + key : key] = obj[key];
      }
    });
    return opts;
  };
  exports.assignObjectToKeys = assignObjectToKeys;
  var LazyOptional = (function() {
    function LazyOptional(key) {
      _classCallCheck(this, _LazyOptional);
      this.key = key;
    }
    LazyOptional.prototype.get = function get(container) {
      var _this = this;
      return function() {
        if (container.hasResolver(_this.key, false)) {
          return container.get(_this.key);
        }
        return null;
      };
    };
    LazyOptional.of = function of(key) {
      return new LazyOptional(key);
    };
    var _LazyOptional = LazyOptional;
    LazyOptional = _aureliaDependencyInjection.resolver()(LazyOptional) || LazyOptional;
    return LazyOptional;
  })();
  exports.LazyOptional = LazyOptional;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/i18n.js", ["exports", "github:i18next/i18next@1.11.1.js", "npm:aurelia-i18n@0.4.1/utils.js"], function(exports, _i18next, _utils) {
  'use strict';
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _i18n = _interopRequireDefault(_i18next);
  var I18N = (function() {
    function I18N(ea, loader) {
      _classCallCheck(this, I18N);
      this.globalVars = {};
      this.i18next = _i18n['default'];
      this.ea = ea;
      this.Intl = window.Intl;
      var i18nName = loader.normalizeSync('aurelia-i18n');
      var intlName = loader.normalizeSync('Intl.js', i18nName);
      if (window.Intl === undefined) {
        loader.loadModule(intlName).then(function(poly) {
          window.Intl = poly;
        });
      }
    }
    I18N.prototype.setup = function setup(options) {
      var defaultOptions = {
        resGetPath: 'locale/__lng__/__ns__.json',
        lng: 'en',
        getAsync: false,
        sendMissing: false,
        attributes: ['t', 'i18n'],
        fallbackLng: 'en',
        debug: false
      };
      _i18n['default'].init(options || defaultOptions);
      if (_i18n['default'].options.attributes instanceof String) {
        _i18n['default'].options.attributes = [_i18n['default'].options.attributes];
      }
    };
    I18N.prototype.setLocale = function setLocale(locale) {
      var _this = this;
      return new Promise(function(resolve) {
        var oldLocale = _this.getLocale();
        _this.i18next.setLng(locale, function(tr) {
          _this.ea.publish('i18n:locale:changed', {
            oldValue: oldLocale,
            newValue: locale
          });
          resolve(tr);
        });
      });
    };
    I18N.prototype.getLocale = function getLocale() {
      return this.i18next.lng();
    };
    I18N.prototype.nf = function nf(options, locales) {
      return new this.Intl.NumberFormat(locales || this.getLocale(), options || {});
    };
    I18N.prototype.df = function df(options, locales) {
      return new this.Intl.DateTimeFormat(locales || this.getLocale(), options);
    };
    I18N.prototype.tr = function tr(key, options) {
      var fullOptions = this.globalVars;
      if (options !== undefined) {
        fullOptions = Object.assign(Object.assign({}, this.globalVars), options);
      }
      return this.i18next.t(key, _utils.assignObjectToKeys('', fullOptions));
    };
    I18N.prototype.registerGlobalVariable = function registerGlobalVariable(key, value) {
      this.globalVars[key] = value;
    };
    I18N.prototype.unregisterGlobalVariable = function unregisterGlobalVariable(key) {
      delete this.globalVars[key];
    };
    I18N.prototype.updateTranslations = function updateTranslations(el) {
      var i = undefined;
      var l = undefined;
      var selector = [].concat(this.i18next.options.attributes);
      for (i = 0, l = selector.length; i < l; i++)
        selector[i] = '[' + selector[i] + ']';
      selector = selector.join(',');
      var nodes = el.querySelectorAll(selector);
      for (i = 0, l = nodes.length; i < l; i++) {
        var node = nodes[i];
        var keys = undefined;
        for (var i2 = 0,
            l2 = this.i18next.options.attributes.length; i2 < l2; i2++) {
          keys = node.getAttribute(this.i18next.options.attributes[i2]);
          if (keys)
            break;
        }
        if (!keys)
          continue;
        this.updateValue(node, keys);
      }
    };
    I18N.prototype.updateValue = function updateValue(node, value, params) {
      if (value === null || value === undefined) {
        return;
      }
      var keys = value.split(';');
      for (var _iterator = keys,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var key = _ref;
        var re = /\[([a-z]*)\]/g;
        var m = undefined;
        var attr = 'text';
        if (node.nodeName === 'IMG')
          attr = 'src';
        while ((m = re.exec(key)) !== null) {
          if (m.index === re.lastIndex) {
            re.lastIndex++;
          }
          if (m) {
            key = key.replace(m[0], '');
            attr = m[1];
          }
        }
        if (!node._textContent)
          node._textContent = node.textContent;
        if (!node._innerHTML)
          node._innerHTML = node.innerHTML;
        switch (attr) {
          case 'text':
            node.textContent = this.tr(key, params);
            break;
          case 'prepend':
            node.innerHTML = this.tr(key, params) + node._innerHTML.trim();
            break;
          case 'append':
            node.innerHTML = node._innerHTML.trim() + this.tr(key, params);
            break;
          case 'html':
            node.innerHTML = this.tr(key, params);
            break;
          default:
            node.setAttribute(attr, this.tr(key, params));
            break;
        }
      }
    };
    return I18N;
  })();
  exports.I18N = I18N;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/base-i18n.js", ["exports", "npm:aurelia-i18n@0.4.1/i18n.js", "npm:aurelia-event-aggregator@1.0.0-beta.1.js"], function(exports, _i18n, _aureliaEventAggregator) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var BaseI18N = (function() {
    _createClass(BaseI18N, null, [{
      key: 'inject',
      value: [_i18n.I18N, Element, _aureliaEventAggregator.EventAggregator],
      enumerable: true
    }]);
    function BaseI18N(i18n, element, ea) {
      var _this = this;
      _classCallCheck(this, BaseI18N);
      this.i18n = i18n;
      this.element = element;
      this.__i18nDisposer = ea.subscribe('i18n:locale:changed', function() {
        _this.i18n.updateTranslations(_this.element);
      });
    }
    BaseI18N.prototype.attached = function attached() {
      this.i18n.updateTranslations(this.element);
    };
    BaseI18N.prototype.detached = function detached() {
      this.__i18nDisposer.dispose();
    };
    return BaseI18N;
  })();
  exports.BaseI18N = BaseI18N;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1/aurelia-i18n.js", ["exports", "npm:aurelia-event-aggregator@1.0.0-beta.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-loader-default@1.0.0-beta.1.0.1.js", "npm:aurelia-i18n@0.4.1/i18n.js", "npm:aurelia-i18n@0.4.1/relativeTime.js", "npm:aurelia-i18n@0.4.1/df.js", "npm:aurelia-i18n@0.4.1/nf.js", "npm:aurelia-i18n@0.4.1/rt.js", "npm:aurelia-i18n@0.4.1/t.js", "npm:aurelia-i18n@0.4.1/base-i18n.js"], function(exports, _aureliaEventAggregator, _aureliaTemplating, _aureliaLoaderDefault, _i18n, _relativeTime, _df, _nf, _rt, _t, _baseI18n) {
  'use strict';
  exports.__esModule = true;
  console.log(_aureliaLoaderDefault.DefaultLoader);
  function configure(frameworkConfig, cb) {
    if (cb === undefined || typeof cb !== 'function') {
      var errorMsg = 'You need to provide a callback method to properly configure the library';
      throw errorMsg;
    }
    frameworkConfig.globalResources('./t');
    frameworkConfig.globalResources('./nf');
    frameworkConfig.globalResources('./df');
    frameworkConfig.globalResources('./rt');
    var instance = new _i18n.I18N(frameworkConfig.container.get(_aureliaEventAggregator.EventAggregator), frameworkConfig.container.get(_aureliaLoaderDefault.DefaultLoader));
    frameworkConfig.container.registerInstance(_i18n.I18N, instance);
    var ret = cb(instance);
    frameworkConfig.postTask(function() {
      var resources = frameworkConfig.container.get(_aureliaTemplating.ViewResources);
      var htmlBehaviorResource = resources.getAttribute('t');
      var attributes = instance.i18next.options.attributes;
      if (!attributes) {
        attributes = ['t', 'i18n'];
      }
      attributes.forEach(function(alias) {
        return resources.registerAttribute(alias, htmlBehaviorResource, 't');
      });
    });
    return ret;
  }
  exports.configure = configure;
  exports.I18N = _i18n.I18N;
  exports.RelativeTime = _relativeTime.RelativeTime;
  exports.DfValueConverter = _df.DfValueConverter;
  exports.NfValueConverter = _nf.NfValueConverter;
  exports.RtValueConverter = _rt.RtValueConverter;
  exports.TValueConverter = _t.TValueConverter;
  exports.TCustomAttribute = _t.TCustomAttribute;
  exports.TParamsCustomAttribute = _t.TParamsCustomAttribute;
  exports.BaseI18N = _baseI18n.BaseI18N;
  exports.EventAggregator = _aureliaEventAggregator.EventAggregator;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-i18n@0.4.1.js", ["npm:aurelia-i18n@0.4.1/aurelia-i18n.js"], function(main) {
  return main;
});

})();
System.register('service/user_form_request_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
	'use strict';

	var HttpRequest, inject, API, UserFormRequestService;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	return {
		setters: [function (_utilsRequest) {
			HttpRequest = _utilsRequest.HttpRequest;
		}, function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
		}, function (_commonsApi) {
			API = _commonsApi.API;
		}],
		execute: function () {
			UserFormRequestService = function () {
				function UserFormRequestService(httpRequest, Api) {
					_classCallCheck(this, _UserFormRequestService);

					this.httpRequest = httpRequest;
					this.api = Api;
				}

				_createClass(UserFormRequestService, [{
					key: 'getUserFormRules',
					value: function getUserFormRules() {
						var userFormRulesUrl = this.api.getPortalAbsolutePath() + this.api.fetch_user_form_rules;
						return this.httpRequest.createGetRequest(userFormRulesUrl);
					}
				}, {
					key: 'getUserCustomForms',
					value: function getUserCustomForms() {
						var userCustomFormUrl = this.api.getPortalAbsolutePath() + this.api.fetch_portal_custom_form;
						return this.httpRequest.createGetRequest(userCustomFormUrl);
					}
				}]);

				var _UserFormRequestService = UserFormRequestService;
				UserFormRequestService = inject(HttpRequest, API)(UserFormRequestService) || UserFormRequestService;
				return UserFormRequestService;
			}();

			_export('UserFormRequestService', UserFormRequestService);
		}
	};
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-http-client@1.0.0-beta.1/aurelia-http-client.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-path@1.0.0-beta.1.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _coreJs, _aureliaPath, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports.timeoutTransformer = timeoutTransformer;
  exports.callbackParameterNameTransformer = callbackParameterNameTransformer;
  exports.credentialsTransformer = credentialsTransformer;
  exports.progressTransformer = progressTransformer;
  exports.responseTypeTransformer = responseTypeTransformer;
  exports.headerTransformer = headerTransformer;
  exports.contentTransformer = contentTransformer;
  exports.createJSONPRequestMessageProcessor = createJSONPRequestMessageProcessor;
  exports.createHttpRequestMessageProcessor = createHttpRequestMessageProcessor;
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Headers = (function() {
    function Headers() {
      var headers = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      _classCallCheck(this, Headers);
      this.headers = headers;
    }
    Headers.prototype.add = function add(key, value) {
      this.headers[key] = value;
    };
    Headers.prototype.get = function get(key) {
      return this.headers[key];
    };
    Headers.prototype.clear = function clear() {
      this.headers = {};
    };
    Headers.prototype.has = function has(header) {
      var lowered = header.toLowerCase();
      var headers = this.headers;
      for (var _key in headers) {
        if (_key.toLowerCase() === lowered) {
          return true;
        }
      }
      return false;
    };
    Headers.prototype.configureXHR = function configureXHR(xhr) {
      var headers = this.headers;
      for (var _key2 in headers) {
        xhr.setRequestHeader(_key2, headers[_key2]);
      }
    };
    Headers.parse = function parse(headerStr) {
      var headers = new Headers();
      if (!headerStr) {
        return headers;
      }
      var headerPairs = headerStr.split('\r\n');
      for (var i = 0; i < headerPairs.length; i++) {
        var headerPair = headerPairs[i];
        var index = headerPair.indexOf(': ');
        if (index > 0) {
          var _key3 = headerPair.substring(0, index);
          var val = headerPair.substring(index + 2);
          headers.add(_key3, val);
        }
      }
      return headers;
    };
    return Headers;
  })();
  exports.Headers = Headers;
  var RequestMessage = (function() {
    function RequestMessage(method, url, content, headers) {
      _classCallCheck(this, RequestMessage);
      this.method = method;
      this.url = url;
      this.content = content;
      this.headers = headers || new Headers();
      this.baseUrl = '';
    }
    RequestMessage.prototype.buildFullUrl = function buildFullUrl() {
      var absoluteUrl = /^([a-z][a-z0-9+\-.]*:)?\/\//i;
      var url = absoluteUrl.test(this.url) ? this.url : _aureliaPath.join(this.baseUrl, this.url);
      if (this.params) {
        var qs = _aureliaPath.buildQueryString(this.params);
        url = qs ? url + '?' + qs : url;
      }
      return url;
    };
    return RequestMessage;
  })();
  exports.RequestMessage = RequestMessage;
  var HttpResponseMessage = (function() {
    function HttpResponseMessage(requestMessage, xhr, responseType, reviver) {
      _classCallCheck(this, HttpResponseMessage);
      this.requestMessage = requestMessage;
      this.statusCode = xhr.status;
      this.response = xhr.response || xhr.responseText;
      this.isSuccess = xhr.status >= 200 && xhr.status < 400;
      this.statusText = xhr.statusText;
      this.reviver = reviver;
      this.mimeType = null;
      if (xhr.getAllResponseHeaders) {
        try {
          this.headers = Headers.parse(xhr.getAllResponseHeaders());
        } catch (err) {
          if (xhr.requestHeaders)
            this.headers = {headers: xhr.requestHeaders};
        }
      } else {
        this.headers = new Headers();
      }
      var contentType = undefined;
      if (this.headers && this.headers.headers)
        contentType = this.headers.headers['Content-Type'];
      if (contentType) {
        this.mimeType = responseType = contentType.split(';')[0].trim();
        if (mimeTypes.hasOwnProperty(this.mimeType))
          responseType = mimeTypes[this.mimeType];
      }
      this.responseType = responseType;
    }
    _createClass(HttpResponseMessage, [{
      key: 'content',
      get: function get() {
        try {
          if (this._content !== undefined) {
            return this._content;
          }
          if (this.response === undefined || this.response === null) {
            this._content = this.response;
            return this._content;
          }
          if (this.responseType === 'json') {
            this._content = JSON.parse(this.response, this.reviver);
            return this._content;
          }
          if (this.reviver) {
            this._content = this.reviver(this.response);
            return this._content;
          }
          this._content = this.response;
          return this._content;
        } catch (e) {
          if (this.isSuccess) {
            throw e;
          }
          this._content = null;
          return this._content;
        }
      }
    }]);
    return HttpResponseMessage;
  })();
  exports.HttpResponseMessage = HttpResponseMessage;
  var mimeTypes = {
    'text/html': 'html',
    'text/javascript': 'js',
    'application/javascript': 'js',
    'text/json': 'json',
    'application/json': 'json',
    'application/rss+xml': 'rss',
    'application/atom+xml': 'atom',
    'application/xhtml+xml': 'xhtml',
    'text/markdown': 'md',
    'text/xml': 'xml',
    'text/mathml': 'mml',
    'application/xml': 'xml',
    'text/yml': 'yml',
    'text/csv': 'csv',
    'text/css': 'css',
    'text/less': 'less',
    'text/stylus': 'styl',
    'text/scss': 'scss',
    'text/sass': 'sass',
    'text/plain': 'txt'
  };
  exports.mimeTypes = mimeTypes;
  function applyXhrTransformers(xhrTransformers, client, processor, message, xhr) {
    var i = undefined;
    var ii = undefined;
    for (i = 0, ii = xhrTransformers.length; i < ii; ++i) {
      xhrTransformers[i](client, processor, message, xhr);
    }
  }
  var RequestMessageProcessor = (function() {
    function RequestMessageProcessor(xhrType, xhrTransformers) {
      _classCallCheck(this, RequestMessageProcessor);
      this.XHRType = xhrType;
      this.xhrTransformers = xhrTransformers;
      this.isAborted = false;
    }
    RequestMessageProcessor.prototype.abort = function abort() {
      if (this.xhr && this.xhr.readyState !== _aureliaPal.PLATFORM.XMLHttpRequest.UNSENT) {
        this.xhr.abort();
      }
      this.isAborted = true;
    };
    RequestMessageProcessor.prototype.process = function process(client, requestMessage) {
      var _this = this;
      var promise = new Promise(function(resolve, reject) {
        var xhr = _this.xhr = new _this.XHRType();
        xhr.onload = function(e) {
          var response = new HttpResponseMessage(requestMessage, xhr, requestMessage.responseType, requestMessage.reviver);
          if (response.isSuccess) {
            resolve(response);
          } else {
            reject(response);
          }
        };
        xhr.ontimeout = function(e) {
          reject(new HttpResponseMessage(requestMessage, {
            response: e,
            status: xhr.status,
            statusText: xhr.statusText
          }, 'timeout'));
        };
        xhr.onerror = function(e) {
          reject(new HttpResponseMessage(requestMessage, {
            response: e,
            status: xhr.status,
            statusText: xhr.statusText
          }, 'error'));
        };
        xhr.onabort = function(e) {
          reject(new HttpResponseMessage(requestMessage, {
            response: e,
            status: xhr.status,
            statusText: xhr.statusText
          }, 'abort'));
        };
      });
      return Promise.resolve(requestMessage).then(function(message) {
        var processRequest = function processRequest() {
          if (_this.isAborted) {
            _this.xhr.abort();
          } else {
            _this.xhr.open(message.method, message.buildFullUrl(), true, message.user, message.password);
            applyXhrTransformers(_this.xhrTransformers, client, _this, message, _this.xhr);
            _this.xhr.send(message.content);
          }
          return promise;
        };
        var chain = [[processRequest, undefined]];
        var interceptors = message.interceptors || [];
        interceptors.forEach(function(interceptor) {
          if (interceptor.request || interceptor.requestError) {
            chain.unshift([interceptor.request ? interceptor.request.bind(interceptor) : undefined, interceptor.requestError ? interceptor.requestError.bind(interceptor) : undefined]);
          }
          if (interceptor.response || interceptor.responseError) {
            chain.push([interceptor.response ? interceptor.response.bind(interceptor) : undefined, interceptor.responseError ? interceptor.responseError.bind(interceptor) : undefined]);
          }
        });
        var interceptorsPromise = Promise.resolve(message);
        while (chain.length) {
          var _interceptorsPromise;
          interceptorsPromise = (_interceptorsPromise = interceptorsPromise).then.apply(_interceptorsPromise, chain.shift());
        }
        return interceptorsPromise;
      });
    };
    return RequestMessageProcessor;
  })();
  exports.RequestMessageProcessor = RequestMessageProcessor;
  function timeoutTransformer(client, processor, message, xhr) {
    if (message.timeout !== undefined) {
      xhr.timeout = message.timeout;
    }
  }
  function callbackParameterNameTransformer(client, processor, message, xhr) {
    if (message.callbackParameterName !== undefined) {
      xhr.callbackParameterName = message.callbackParameterName;
    }
  }
  function credentialsTransformer(client, processor, message, xhr) {
    if (message.withCredentials !== undefined) {
      xhr.withCredentials = message.withCredentials;
    }
  }
  function progressTransformer(client, processor, message, xhr) {
    if (message.progressCallback) {
      xhr.upload.onprogress = message.progressCallback;
    }
  }
  function responseTypeTransformer(client, processor, message, xhr) {
    var responseType = message.responseType;
    if (responseType === 'json') {
      responseType = 'text';
    }
    xhr.responseType = responseType;
  }
  function headerTransformer(client, processor, message, xhr) {
    message.headers.configureXHR(xhr);
  }
  function contentTransformer(client, processor, message, xhr) {
    if (message.skipContentProcessing) {
      return;
    }
    if (_aureliaPal.PLATFORM.global.FormData && message.content instanceof FormData) {
      return;
    }
    if (_aureliaPal.PLATFORM.global.Blob && message.content instanceof Blob) {
      return;
    }
    if (_aureliaPal.PLATFORM.global.ArrayBufferView && message.content instanceof ArrayBufferView) {
      return;
    }
    if (message.content instanceof Document) {
      return;
    }
    if (typeof message.content === 'string') {
      return;
    }
    if (message.content === null || message.content === undefined) {
      return;
    }
    message.content = JSON.stringify(message.content, message.replacer);
    if (!message.headers.has('Content-Type')) {
      message.headers.add('Content-Type', 'application/json');
    }
  }
  var JSONPRequestMessage = (function(_RequestMessage) {
    _inherits(JSONPRequestMessage, _RequestMessage);
    function JSONPRequestMessage(url, callbackParameterName) {
      _classCallCheck(this, JSONPRequestMessage);
      _RequestMessage.call(this, 'JSONP', url);
      this.responseType = 'jsonp';
      this.callbackParameterName = callbackParameterName;
    }
    return JSONPRequestMessage;
  })(RequestMessage);
  exports.JSONPRequestMessage = JSONPRequestMessage;
  var JSONPXHR = (function() {
    function JSONPXHR() {
      _classCallCheck(this, JSONPXHR);
    }
    JSONPXHR.prototype.open = function open(method, url) {
      this.method = method;
      this.url = url;
      this.callbackName = 'jsonp_callback_' + Math.round(100000 * Math.random());
    };
    JSONPXHR.prototype.send = function send() {
      var _this2 = this;
      var url = this.url + (this.url.indexOf('?') >= 0 ? '&' : '?') + encodeURIComponent(this.callbackParameterName) + '=' + this.callbackName;
      var script = _aureliaPal.DOM.createElement('script');
      script.src = url;
      script.onerror = function(e) {
        cleanUp();
        _this2.status = 0;
        _this2.onerror(new Error('error'));
      };
      var cleanUp = function cleanUp() {
        delete _aureliaPal.PLATFORM.global[_this2.callbackName];
        _aureliaPal.DOM.removeNode(script);
      };
      _aureliaPal.PLATFORM.global[this.callbackName] = function(data) {
        cleanUp();
        if (_this2.status === undefined) {
          _this2.status = 200;
          _this2.statusText = 'OK';
          _this2.response = data;
          _this2.onload(_this2);
        }
      };
      _aureliaPal.DOM.appendNode(script);
      if (this.timeout !== undefined) {
        setTimeout(function() {
          if (_this2.status === undefined) {
            _this2.status = 0;
            _this2.ontimeout(new Error('timeout'));
          }
        }, this.timeout);
      }
    };
    JSONPXHR.prototype.abort = function abort() {
      if (this.status === undefined) {
        this.status = 0;
        this.onabort(new Error('abort'));
      }
    };
    JSONPXHR.prototype.setRequestHeader = function setRequestHeader() {};
    return JSONPXHR;
  })();
  function createJSONPRequestMessageProcessor() {
    return new RequestMessageProcessor(JSONPXHR, [timeoutTransformer, callbackParameterNameTransformer]);
  }
  var HttpRequestMessage = (function(_RequestMessage2) {
    _inherits(HttpRequestMessage, _RequestMessage2);
    function HttpRequestMessage(method, url, content, headers) {
      _classCallCheck(this, HttpRequestMessage);
      _RequestMessage2.call(this, method, url, content, headers);
      this.responseType = 'json';
    }
    return HttpRequestMessage;
  })(RequestMessage);
  exports.HttpRequestMessage = HttpRequestMessage;
  function createHttpRequestMessageProcessor() {
    return new RequestMessageProcessor(_aureliaPal.PLATFORM.XMLHttpRequest, [timeoutTransformer, credentialsTransformer, progressTransformer, responseTypeTransformer, contentTransformer, headerTransformer]);
  }
  var RequestBuilder = (function() {
    function RequestBuilder(client) {
      _classCallCheck(this, RequestBuilder);
      this.client = client;
      this.transformers = client.requestTransformers.slice(0);
      this.useJsonp = false;
    }
    RequestBuilder.prototype.asDelete = function asDelete() {
      return this._addTransformer(function(client, processor, message) {
        message.method = 'DELETE';
      });
    };
    RequestBuilder.prototype.asGet = function asGet() {
      return this._addTransformer(function(client, processor, message) {
        message.method = 'GET';
      });
    };
    RequestBuilder.prototype.asHead = function asHead() {
      return this._addTransformer(function(client, processor, message) {
        message.method = 'HEAD';
      });
    };
    RequestBuilder.prototype.asOptions = function asOptions() {
      return this._addTransformer(function(client, processor, message) {
        message.method = 'OPTIONS';
      });
    };
    RequestBuilder.prototype.asPatch = function asPatch() {
      return this._addTransformer(function(client, processor, message) {
        message.method = 'PATCH';
      });
    };
    RequestBuilder.prototype.asPost = function asPost() {
      return this._addTransformer(function(client, processor, message) {
        message.method = 'POST';
      });
    };
    RequestBuilder.prototype.asPut = function asPut() {
      return this._addTransformer(function(client, processor, message) {
        message.method = 'PUT';
      });
    };
    RequestBuilder.prototype.asJsonp = function asJsonp(callbackParameterName) {
      this.useJsonp = true;
      return this._addTransformer(function(client, processor, message) {
        message.callbackParameterName = callbackParameterName;
      });
    };
    RequestBuilder.prototype.withUrl = function withUrl(url) {
      return this._addTransformer(function(client, processor, message) {
        message.url = url;
      });
    };
    RequestBuilder.prototype.withContent = function withContent(content) {
      return this._addTransformer(function(client, processor, message) {
        message.content = content;
      });
    };
    RequestBuilder.prototype.withBaseUrl = function withBaseUrl(baseUrl) {
      return this._addTransformer(function(client, processor, message) {
        message.baseUrl = baseUrl;
      });
    };
    RequestBuilder.prototype.withParams = function withParams(params) {
      return this._addTransformer(function(client, processor, message) {
        message.params = params;
      });
    };
    RequestBuilder.prototype.withResponseType = function withResponseType(responseType) {
      return this._addTransformer(function(client, processor, message) {
        message.responseType = responseType;
      });
    };
    RequestBuilder.prototype.withTimeout = function withTimeout(timeout) {
      return this._addTransformer(function(client, processor, message) {
        message.timeout = timeout;
      });
    };
    RequestBuilder.prototype.withHeader = function withHeader(key, value) {
      return this._addTransformer(function(client, processor, message) {
        message.headers.add(key, value);
      });
    };
    RequestBuilder.prototype.withCredentials = function withCredentials(value) {
      return this._addTransformer(function(client, processor, message) {
        message.withCredentials = value;
      });
    };
    RequestBuilder.prototype.withLogin = function withLogin(user, password) {
      return this._addTransformer(function(client, processor, message) {
        message.user = user;
        message.password = password;
      });
    };
    RequestBuilder.prototype.withReviver = function withReviver(reviver) {
      return this._addTransformer(function(client, processor, message) {
        message.reviver = reviver;
      });
    };
    RequestBuilder.prototype.withReplacer = function withReplacer(replacer) {
      return this._addTransformer(function(client, processor, message) {
        message.replacer = replacer;
      });
    };
    RequestBuilder.prototype.withProgressCallback = function withProgressCallback(progressCallback) {
      return this._addTransformer(function(client, processor, message) {
        message.progressCallback = progressCallback;
      });
    };
    RequestBuilder.prototype.withCallbackParameterName = function withCallbackParameterName(callbackParameterName) {
      return this._addTransformer(function(client, processor, message) {
        message.callbackParameterName = callbackParameterName;
      });
    };
    RequestBuilder.prototype.withInterceptor = function withInterceptor(interceptor) {
      return this._addTransformer(function(client, processor, message) {
        message.interceptors = message.interceptors || [];
        message.interceptors.unshift(interceptor);
      });
    };
    RequestBuilder.prototype.skipContentProcessing = function skipContentProcessing() {
      return this._addTransformer(function(client, processor, message) {
        message.skipContentProcessing = true;
      });
    };
    RequestBuilder.prototype._addTransformer = function _addTransformer(fn) {
      this.transformers.push(fn);
      return this;
    };
    RequestBuilder.addHelper = function addHelper(name, fn) {
      RequestBuilder.prototype[name] = function() {
        return this._addTransformer(fn.apply(this, arguments));
      };
    };
    RequestBuilder.prototype.send = function send() {
      var message = this.useJsonp ? new JSONPRequestMessage() : new HttpRequestMessage();
      return this.client.send(message, this.transformers);
    };
    return RequestBuilder;
  })();
  exports.RequestBuilder = RequestBuilder;
  function trackRequestStart(client, processor) {
    client.pendingRequests.push(processor);
    client.isRequesting = true;
  }
  function trackRequestEnd(client, processor) {
    var index = client.pendingRequests.indexOf(processor);
    client.pendingRequests.splice(index, 1);
    client.isRequesting = client.pendingRequests.length > 0;
    if (!client.isRequesting) {
      (function() {
        var evt = _aureliaPal.DOM.createCustomEvent('aurelia-http-client-requests-drained', {
          bubbles: true,
          cancelable: true
        });
        setTimeout(function() {
          return _aureliaPal.DOM.dispatchEvent(evt);
        }, 1);
      })();
    }
  }
  var HttpClient = (function() {
    function HttpClient() {
      _classCallCheck(this, HttpClient);
      this.requestTransformers = [];
      this.requestProcessorFactories = new Map();
      this.requestProcessorFactories.set(HttpRequestMessage, createHttpRequestMessageProcessor);
      this.requestProcessorFactories.set(JSONPRequestMessage, createJSONPRequestMessageProcessor);
      this.pendingRequests = [];
      this.isRequesting = false;
    }
    HttpClient.prototype.configure = function configure(fn) {
      var builder = new RequestBuilder(this);
      fn(builder);
      this.requestTransformers = builder.transformers;
      return this;
    };
    HttpClient.prototype.createRequest = function createRequest(url) {
      var builder = new RequestBuilder(this);
      if (url) {
        builder.withUrl(url);
      }
      return builder;
    };
    HttpClient.prototype.send = function send(requestMessage, transformers) {
      var _this3 = this;
      var createProcessor = this.requestProcessorFactories.get(requestMessage.constructor);
      var processor = undefined;
      var promise = undefined;
      var i = undefined;
      var ii = undefined;
      if (!createProcessor) {
        throw new Error('No request message processor factory for ' + requestMessage.constructor + '.');
      }
      processor = createProcessor();
      trackRequestStart(this, processor);
      transformers = transformers || this.requestTransformers;
      promise = Promise.resolve(requestMessage).then(function(message) {
        for (i = 0, ii = transformers.length; i < ii; ++i) {
          transformers[i](_this3, processor, message);
        }
        return processor.process(_this3, message).then(function(response) {
          trackRequestEnd(_this3, processor);
          return response;
        })['catch'](function(response) {
          trackRequestEnd(_this3, processor);
          throw response;
        });
      });
      promise.abort = promise.cancel = function() {
        processor.abort();
      };
      return promise;
    };
    HttpClient.prototype['delete'] = function _delete(url) {
      return this.createRequest(url).asDelete().send();
    };
    HttpClient.prototype.get = function get(url) {
      return this.createRequest(url).asGet().send();
    };
    HttpClient.prototype.head = function head(url) {
      return this.createRequest(url).asHead().send();
    };
    HttpClient.prototype.jsonp = function jsonp(url) {
      var callbackParameterName = arguments.length <= 1 || arguments[1] === undefined ? 'jsoncallback' : arguments[1];
      return this.createRequest(url).asJsonp(callbackParameterName).send();
    };
    HttpClient.prototype.options = function options(url) {
      return this.createRequest(url).asOptions().send();
    };
    HttpClient.prototype.put = function put(url, content) {
      return this.createRequest(url).asPut().withContent(content).send();
    };
    HttpClient.prototype.patch = function patch(url, content) {
      return this.createRequest(url).asPatch().withContent(content).send();
    };
    HttpClient.prototype.post = function post(url, content) {
      return this.createRequest(url).asPost().withContent(content).send();
    };
    return HttpClient;
  })();
  exports.HttpClient = HttpClient;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-http-client@1.0.0-beta.1.js", ["npm:aurelia-http-client@1.0.0-beta.1/aurelia-http-client.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
(function(global, factory) {
  if (typeof module === "object" && typeof module.exports === "object") {
    module.exports = global.document ? factory(global, true) : function(w) {
      if (!w.document) {
        throw new Error("jQuery requires a window with a document");
      }
      return factory(w);
    };
  } else {
    factory(global);
  }
}(typeof window !== "undefined" ? window : this, function(window, noGlobal) {
  var arr = [];
  var document = window.document;
  var slice = arr.slice;
  var concat = arr.concat;
  var push = arr.push;
  var indexOf = arr.indexOf;
  var class2type = {};
  var toString = class2type.toString;
  var hasOwn = class2type.hasOwnProperty;
  var support = {};
  var version = "2.2.4",
      jQuery = function(selector, context) {
        return new jQuery.fn.init(selector, context);
      },
      rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
      rmsPrefix = /^-ms-/,
      rdashAlpha = /-([\da-z])/gi,
      fcamelCase = function(all, letter) {
        return letter.toUpperCase();
      };
  jQuery.fn = jQuery.prototype = {
    jquery: version,
    constructor: jQuery,
    selector: "",
    length: 0,
    toArray: function() {
      return slice.call(this);
    },
    get: function(num) {
      return num != null ? (num < 0 ? this[num + this.length] : this[num]) : slice.call(this);
    },
    pushStack: function(elems) {
      var ret = jQuery.merge(this.constructor(), elems);
      ret.prevObject = this;
      ret.context = this.context;
      return ret;
    },
    each: function(callback) {
      return jQuery.each(this, callback);
    },
    map: function(callback) {
      return this.pushStack(jQuery.map(this, function(elem, i) {
        return callback.call(elem, i, elem);
      }));
    },
    slice: function() {
      return this.pushStack(slice.apply(this, arguments));
    },
    first: function() {
      return this.eq(0);
    },
    last: function() {
      return this.eq(-1);
    },
    eq: function(i) {
      var len = this.length,
          j = +i + (i < 0 ? len : 0);
      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
    },
    end: function() {
      return this.prevObject || this.constructor();
    },
    push: push,
    sort: arr.sort,
    splice: arr.splice
  };
  jQuery.extend = jQuery.fn.extend = function() {
    var options,
        name,
        src,
        copy,
        copyIsArray,
        clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false;
    if (typeof target === "boolean") {
      deep = target;
      target = arguments[i] || {};
      i++;
    }
    if (typeof target !== "object" && !jQuery.isFunction(target)) {
      target = {};
    }
    if (i === length) {
      target = this;
      i--;
    }
    for (; i < length; i++) {
      if ((options = arguments[i]) != null) {
        for (name in options) {
          src = target[name];
          copy = options[name];
          if (target === copy) {
            continue;
          }
          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
            if (copyIsArray) {
              copyIsArray = false;
              clone = src && jQuery.isArray(src) ? src : [];
            } else {
              clone = src && jQuery.isPlainObject(src) ? src : {};
            }
            target[name] = jQuery.extend(deep, clone, copy);
          } else if (copy !== undefined) {
            target[name] = copy;
          }
        }
      }
    }
    return target;
  };
  jQuery.extend({
    expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
    isReady: true,
    error: function(msg) {
      throw new Error(msg);
    },
    noop: function() {},
    isFunction: function(obj) {
      return jQuery.type(obj) === "function";
    },
    isArray: Array.isArray,
    isWindow: function(obj) {
      return obj != null && obj === obj.window;
    },
    isNumeric: function(obj) {
      var realStringObj = obj && obj.toString();
      return !jQuery.isArray(obj) && (realStringObj - parseFloat(realStringObj) + 1) >= 0;
    },
    isPlainObject: function(obj) {
      var key;
      if (jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
        return false;
      }
      if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype || {}, "isPrototypeOf")) {
        return false;
      }
      for (key in obj) {}
      return key === undefined || hasOwn.call(obj, key);
    },
    isEmptyObject: function(obj) {
      var name;
      for (name in obj) {
        return false;
      }
      return true;
    },
    type: function(obj) {
      if (obj == null) {
        return obj + "";
      }
      return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
    },
    globalEval: function(code) {
      var script,
          indirect = eval;
      code = jQuery.trim(code);
      if (code) {
        if (code.indexOf("use strict") === 1) {
          script = document.createElement("script");
          script.text = code;
          document.head.appendChild(script).parentNode.removeChild(script);
        } else {
          indirect(code);
        }
      }
    },
    camelCase: function(string) {
      return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    },
    nodeName: function(elem, name) {
      return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    },
    each: function(obj, callback) {
      var length,
          i = 0;
      if (isArrayLike(obj)) {
        length = obj.length;
        for (; i < length; i++) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      } else {
        for (i in obj) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      }
      return obj;
    },
    trim: function(text) {
      return text == null ? "" : (text + "").replace(rtrim, "");
    },
    makeArray: function(arr, results) {
      var ret = results || [];
      if (arr != null) {
        if (isArrayLike(Object(arr))) {
          jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
        } else {
          push.call(ret, arr);
        }
      }
      return ret;
    },
    inArray: function(elem, arr, i) {
      return arr == null ? -1 : indexOf.call(arr, elem, i);
    },
    merge: function(first, second) {
      var len = +second.length,
          j = 0,
          i = first.length;
      for (; j < len; j++) {
        first[i++] = second[j];
      }
      first.length = i;
      return first;
    },
    grep: function(elems, callback, invert) {
      var callbackInverse,
          matches = [],
          i = 0,
          length = elems.length,
          callbackExpect = !invert;
      for (; i < length; i++) {
        callbackInverse = !callback(elems[i], i);
        if (callbackInverse !== callbackExpect) {
          matches.push(elems[i]);
        }
      }
      return matches;
    },
    map: function(elems, callback, arg) {
      var length,
          value,
          i = 0,
          ret = [];
      if (isArrayLike(elems)) {
        length = elems.length;
        for (; i < length; i++) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret.push(value);
          }
        }
      } else {
        for (i in elems) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret.push(value);
          }
        }
      }
      return concat.apply([], ret);
    },
    guid: 1,
    proxy: function(fn, context) {
      var tmp,
          args,
          proxy;
      if (typeof context === "string") {
        tmp = fn[context];
        context = fn;
        fn = tmp;
      }
      if (!jQuery.isFunction(fn)) {
        return undefined;
      }
      args = slice.call(arguments, 2);
      proxy = function() {
        return fn.apply(context || this, args.concat(slice.call(arguments)));
      };
      proxy.guid = fn.guid = fn.guid || jQuery.guid++;
      return proxy;
    },
    now: Date.now,
    support: support
  });
  if (typeof Symbol === "function") {
    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
  }
  jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(i, name) {
    class2type["[object " + name + "]"] = name.toLowerCase();
  });
  function isArrayLike(obj) {
    var length = !!obj && "length" in obj && obj.length,
        type = jQuery.type(obj);
    if (type === "function" || jQuery.isWindow(obj)) {
      return false;
    }
    return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj;
  }
  var Sizzle = (function(window) {
    var i,
        support,
        Expr,
        getText,
        isXML,
        tokenize,
        compile,
        select,
        outermostContext,
        sortInput,
        hasDuplicate,
        setDocument,
        document,
        docElem,
        documentIsHTML,
        rbuggyQSA,
        rbuggyMatches,
        matches,
        contains,
        expando = "sizzle" + 1 * new Date(),
        preferredDoc = window.document,
        dirruns = 0,
        done = 0,
        classCache = createCache(),
        tokenCache = createCache(),
        compilerCache = createCache(),
        sortOrder = function(a, b) {
          if (a === b) {
            hasDuplicate = true;
          }
          return 0;
        },
        MAX_NEGATIVE = 1 << 31,
        hasOwn = ({}).hasOwnProperty,
        arr = [],
        pop = arr.pop,
        push_native = arr.push,
        push = arr.push,
        slice = arr.slice,
        indexOf = function(list, elem) {
          var i = 0,
              len = list.length;
          for (; i < len; i++) {
            if (list[i] === elem) {
              return i;
            }
          }
          return -1;
        },
        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        whitespace = "[\\x20\\t\\r\\n\\f]",
        identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
        attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
        pseudos = ":(" + identifier + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)",
        rwhitespace = new RegExp(whitespace + "+", "g"),
        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
        rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
        rpseudo = new RegExp(pseudos),
        ridentifier = new RegExp("^" + identifier + "$"),
        matchExpr = {
          "ID": new RegExp("^#(" + identifier + ")"),
          "CLASS": new RegExp("^\\.(" + identifier + ")"),
          "TAG": new RegExp("^(" + identifier + "|[*])"),
          "ATTR": new RegExp("^" + attributes),
          "PSEUDO": new RegExp("^" + pseudos),
          "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
          "bool": new RegExp("^(?:" + booleans + ")$", "i"),
          "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        },
        rinputs = /^(?:input|select|textarea|button)$/i,
        rheader = /^h\d$/i,
        rnative = /^[^{]+\{\s*\[native \w/,
        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        rsibling = /[+~]/,
        rescape = /'|\\/g,
        runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
        funescape = function(_, escaped, escapedWhitespace) {
          var high = "0x" + escaped - 0x10000;
          return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
        },
        unloadHandler = function() {
          setDocument();
        };
    try {
      push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);
      arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
      push = {apply: arr.length ? function(target, els) {
          push_native.apply(target, slice.call(els));
        } : function(target, els) {
          var j = target.length,
              i = 0;
          while ((target[j++] = els[i++])) {}
          target.length = j - 1;
        }};
    }
    function Sizzle(selector, context, results, seed) {
      var m,
          i,
          elem,
          nid,
          nidselect,
          match,
          groups,
          newSelector,
          newContext = context && context.ownerDocument,
          nodeType = context ? context.nodeType : 9;
      results = results || [];
      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
        return results;
      }
      if (!seed) {
        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
          setDocument(context);
        }
        context = context || document;
        if (documentIsHTML) {
          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
            if ((m = match[1])) {
              if (nodeType === 9) {
                if ((elem = context.getElementById(m))) {
                  if (elem.id === m) {
                    results.push(elem);
                    return results;
                  }
                } else {
                  return results;
                }
              } else {
                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                  results.push(elem);
                  return results;
                }
              }
            } else if (match[2]) {
              push.apply(results, context.getElementsByTagName(selector));
              return results;
            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
              push.apply(results, context.getElementsByClassName(m));
              return results;
            }
          }
          if (support.qsa && !compilerCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
            if (nodeType !== 1) {
              newContext = context;
              newSelector = selector;
            } else if (context.nodeName.toLowerCase() !== "object") {
              if ((nid = context.getAttribute("id"))) {
                nid = nid.replace(rescape, "\\$&");
              } else {
                context.setAttribute("id", (nid = expando));
              }
              groups = tokenize(selector);
              i = groups.length;
              nidselect = ridentifier.test(nid) ? "#" + nid : "[id='" + nid + "']";
              while (i--) {
                groups[i] = nidselect + " " + toSelector(groups[i]);
              }
              newSelector = groups.join(",");
              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
            }
            if (newSelector) {
              try {
                push.apply(results, newContext.querySelectorAll(newSelector));
                return results;
              } catch (qsaError) {} finally {
                if (nid === expando) {
                  context.removeAttribute("id");
                }
              }
            }
          }
        }
      }
      return select(selector.replace(rtrim, "$1"), context, results, seed);
    }
    function createCache() {
      var keys = [];
      function cache(key, value) {
        if (keys.push(key + " ") > Expr.cacheLength) {
          delete cache[keys.shift()];
        }
        return (cache[key + " "] = value);
      }
      return cache;
    }
    function markFunction(fn) {
      fn[expando] = true;
      return fn;
    }
    function assert(fn) {
      var div = document.createElement("div");
      try {
        return !!fn(div);
      } catch (e) {
        return false;
      } finally {
        if (div.parentNode) {
          div.parentNode.removeChild(div);
        }
        div = null;
      }
    }
    function addHandle(attrs, handler) {
      var arr = attrs.split("|"),
          i = arr.length;
      while (i--) {
        Expr.attrHandle[arr[i]] = handler;
      }
    }
    function siblingCheck(a, b) {
      var cur = b && a,
          diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
      if (diff) {
        return diff;
      }
      if (cur) {
        while ((cur = cur.nextSibling)) {
          if (cur === b) {
            return -1;
          }
        }
      }
      return a ? 1 : -1;
    }
    function createInputPseudo(type) {
      return function(elem) {
        var name = elem.nodeName.toLowerCase();
        return name === "input" && elem.type === type;
      };
    }
    function createButtonPseudo(type) {
      return function(elem) {
        var name = elem.nodeName.toLowerCase();
        return (name === "input" || name === "button") && elem.type === type;
      };
    }
    function createPositionalPseudo(fn) {
      return markFunction(function(argument) {
        argument = +argument;
        return markFunction(function(seed, matches) {
          var j,
              matchIndexes = fn([], seed.length, argument),
              i = matchIndexes.length;
          while (i--) {
            if (seed[(j = matchIndexes[i])]) {
              seed[j] = !(matches[j] = seed[j]);
            }
          }
        });
      });
    }
    function testContext(context) {
      return context && typeof context.getElementsByTagName !== "undefined" && context;
    }
    support = Sizzle.support = {};
    isXML = Sizzle.isXML = function(elem) {
      var documentElement = elem && (elem.ownerDocument || elem).documentElement;
      return documentElement ? documentElement.nodeName !== "HTML" : false;
    };
    setDocument = Sizzle.setDocument = function(node) {
      var hasCompare,
          parent,
          doc = node ? node.ownerDocument || node : preferredDoc;
      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
      }
      document = doc;
      docElem = document.documentElement;
      documentIsHTML = !isXML(document);
      if ((parent = document.defaultView) && parent.top !== parent) {
        if (parent.addEventListener) {
          parent.addEventListener("unload", unloadHandler, false);
        } else if (parent.attachEvent) {
          parent.attachEvent("onunload", unloadHandler);
        }
      }
      support.attributes = assert(function(div) {
        div.className = "i";
        return !div.getAttribute("className");
      });
      support.getElementsByTagName = assert(function(div) {
        div.appendChild(document.createComment(""));
        return !div.getElementsByTagName("*").length;
      });
      support.getElementsByClassName = rnative.test(document.getElementsByClassName);
      support.getById = assert(function(div) {
        docElem.appendChild(div).id = expando;
        return !document.getElementsByName || !document.getElementsByName(expando).length;
      });
      if (support.getById) {
        Expr.find["ID"] = function(id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var m = context.getElementById(id);
            return m ? [m] : [];
          }
        };
        Expr.filter["ID"] = function(id) {
          var attrId = id.replace(runescape, funescape);
          return function(elem) {
            return elem.getAttribute("id") === attrId;
          };
        };
      } else {
        delete Expr.find["ID"];
        Expr.filter["ID"] = function(id) {
          var attrId = id.replace(runescape, funescape);
          return function(elem) {
            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
            return node && node.value === attrId;
          };
        };
      }
      Expr.find["TAG"] = support.getElementsByTagName ? function(tag, context) {
        if (typeof context.getElementsByTagName !== "undefined") {
          return context.getElementsByTagName(tag);
        } else if (support.qsa) {
          return context.querySelectorAll(tag);
        }
      } : function(tag, context) {
        var elem,
            tmp = [],
            i = 0,
            results = context.getElementsByTagName(tag);
        if (tag === "*") {
          while ((elem = results[i++])) {
            if (elem.nodeType === 1) {
              tmp.push(elem);
            }
          }
          return tmp;
        }
        return results;
      };
      Expr.find["CLASS"] = support.getElementsByClassName && function(className, context) {
        if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
          return context.getElementsByClassName(className);
        }
      };
      rbuggyMatches = [];
      rbuggyQSA = [];
      if ((support.qsa = rnative.test(document.querySelectorAll))) {
        assert(function(div) {
          docElem.appendChild(div).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>";
          if (div.querySelectorAll("[msallowcapture^='']").length) {
            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
          }
          if (!div.querySelectorAll("[selected]").length) {
            rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
          }
          if (!div.querySelectorAll("[id~=" + expando + "-]").length) {
            rbuggyQSA.push("~=");
          }
          if (!div.querySelectorAll(":checked").length) {
            rbuggyQSA.push(":checked");
          }
          if (!div.querySelectorAll("a#" + expando + "+*").length) {
            rbuggyQSA.push(".#.+[+~]");
          }
        });
        assert(function(div) {
          var input = document.createElement("input");
          input.setAttribute("type", "hidden");
          div.appendChild(input).setAttribute("name", "D");
          if (div.querySelectorAll("[name=d]").length) {
            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
          }
          if (!div.querySelectorAll(":enabled").length) {
            rbuggyQSA.push(":enabled", ":disabled");
          }
          div.querySelectorAll("*,:x");
          rbuggyQSA.push(",.*:");
        });
      }
      if ((support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)))) {
        assert(function(div) {
          support.disconnectedMatch = matches.call(div, "div");
          matches.call(div, "[s!='']:x");
          rbuggyMatches.push("!=", pseudos);
        });
      }
      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
      hasCompare = rnative.test(docElem.compareDocumentPosition);
      contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
        var adown = a.nodeType === 9 ? a.documentElement : a,
            bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      } : function(a, b) {
        if (b) {
          while ((b = b.parentNode)) {
            if (b === a) {
              return true;
            }
          }
        }
        return false;
      };
      sortOrder = hasCompare ? function(a, b) {
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
        if (compare) {
          return compare;
        }
        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
        if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {
          if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
            return -1;
          }
          if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
            return 1;
          }
          return sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0;
        }
        return compare & 4 ? -1 : 1;
      } : function(a, b) {
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        var cur,
            i = 0,
            aup = a.parentNode,
            bup = b.parentNode,
            ap = [a],
            bp = [b];
        if (!aup || !bup) {
          return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? (indexOf(sortInput, a) - indexOf(sortInput, b)) : 0;
        } else if (aup === bup) {
          return siblingCheck(a, b);
        }
        cur = a;
        while ((cur = cur.parentNode)) {
          ap.unshift(cur);
        }
        cur = b;
        while ((cur = cur.parentNode)) {
          bp.unshift(cur);
        }
        while (ap[i] === bp[i]) {
          i++;
        }
        return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
      };
      return document;
    };
    Sizzle.matches = function(expr, elements) {
      return Sizzle(expr, null, null, elements);
    };
    Sizzle.matchesSelector = function(elem, expr) {
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      expr = expr.replace(rattributeQuotes, "='$1']");
      if (support.matchesSelector && documentIsHTML && !compilerCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
          var ret = matches.call(elem, expr);
          if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
            return ret;
          }
        } catch (e) {}
      }
      return Sizzle(expr, document, null, [elem]).length > 0;
    };
    Sizzle.contains = function(context, elem) {
      if ((context.ownerDocument || context) !== document) {
        setDocument(context);
      }
      return contains(context, elem);
    };
    Sizzle.attr = function(elem, name) {
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      var fn = Expr.attrHandle[name.toLowerCase()],
          val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
    };
    Sizzle.error = function(msg) {
      throw new Error("Syntax error, unrecognized expression: " + msg);
    };
    Sizzle.uniqueSort = function(results) {
      var elem,
          duplicates = [],
          j = 0,
          i = 0;
      hasDuplicate = !support.detectDuplicates;
      sortInput = !support.sortStable && results.slice(0);
      results.sort(sortOrder);
      if (hasDuplicate) {
        while ((elem = results[i++])) {
          if (elem === results[i]) {
            j = duplicates.push(i);
          }
        }
        while (j--) {
          results.splice(duplicates[j], 1);
        }
      }
      sortInput = null;
      return results;
    };
    getText = Sizzle.getText = function(elem) {
      var node,
          ret = "",
          i = 0,
          nodeType = elem.nodeType;
      if (!nodeType) {
        while ((node = elem[i++])) {
          ret += getText(node);
        }
      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        if (typeof elem.textContent === "string") {
          return elem.textContent;
        } else {
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
          }
        }
      } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
      }
      return ret;
    };
    Expr = Sizzle.selectors = {
      cacheLength: 50,
      createPseudo: markFunction,
      match: matchExpr,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: true
        },
        " ": {dir: "parentNode"},
        "+": {
          dir: "previousSibling",
          first: true
        },
        "~": {dir: "previousSibling"}
      },
      preFilter: {
        "ATTR": function(match) {
          match[1] = match[1].replace(runescape, funescape);
          match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
          if (match[2] === "~=") {
            match[3] = " " + match[3] + " ";
          }
          return match.slice(0, 4);
        },
        "CHILD": function(match) {
          match[1] = match[1].toLowerCase();
          if (match[1].slice(0, 3) === "nth") {
            if (!match[3]) {
              Sizzle.error(match[0]);
            }
            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
            match[5] = +((match[7] + match[8]) || match[3] === "odd");
          } else if (match[3]) {
            Sizzle.error(match[0]);
          }
          return match;
        },
        "PSEUDO": function(match) {
          var excess,
              unquoted = !match[6] && match[2];
          if (matchExpr["CHILD"].test(match[0])) {
            return null;
          }
          if (match[3]) {
            match[2] = match[4] || match[5] || "";
          } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
            match[0] = match[0].slice(0, excess);
            match[2] = unquoted.slice(0, excess);
          }
          return match.slice(0, 3);
        }
      },
      filter: {
        "TAG": function(nodeNameSelector) {
          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
          return nodeNameSelector === "*" ? function() {
            return true;
          } : function(elem) {
            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
          };
        },
        "CLASS": function(className) {
          var pattern = classCache[className + " "];
          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
            return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
          });
        },
        "ATTR": function(name, operator, check) {
          return function(elem) {
            var result = Sizzle.attr(elem, name);
            if (result == null) {
              return operator === "!=";
            }
            if (!operator) {
              return true;
            }
            result += "";
            return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
          };
        },
        "CHILD": function(type, what, argument, first, last) {
          var simple = type.slice(0, 3) !== "nth",
              forward = type.slice(-4) !== "last",
              ofType = what === "of-type";
          return first === 1 && last === 0 ? function(elem) {
            return !!elem.parentNode;
          } : function(elem, context, xml) {
            var cache,
                uniqueCache,
                outerCache,
                node,
                nodeIndex,
                start,
                dir = simple !== forward ? "nextSibling" : "previousSibling",
                parent = elem.parentNode,
                name = ofType && elem.nodeName.toLowerCase(),
                useCache = !xml && !ofType,
                diff = false;
            if (parent) {
              if (simple) {
                while (dir) {
                  node = elem;
                  while ((node = node[dir])) {
                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                      return false;
                    }
                  }
                  start = dir = type === "only" && !start && "nextSibling";
                }
                return true;
              }
              start = [forward ? parent.firstChild : parent.lastChild];
              if (forward && useCache) {
                node = parent;
                outerCache = node[expando] || (node[expando] = {});
                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                cache = uniqueCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = nodeIndex && cache[2];
                node = nodeIndex && parent.childNodes[nodeIndex];
                while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
                  if (node.nodeType === 1 && ++diff && node === elem) {
                    uniqueCache[type] = [dirruns, nodeIndex, diff];
                    break;
                  }
                }
              } else {
                if (useCache) {
                  node = elem;
                  outerCache = node[expando] || (node[expando] = {});
                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                  cache = uniqueCache[type] || [];
                  nodeIndex = cache[0] === dirruns && cache[1];
                  diff = nodeIndex;
                }
                if (diff === false) {
                  while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {
                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                      if (useCache) {
                        outerCache = node[expando] || (node[expando] = {});
                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                        uniqueCache[type] = [dirruns, diff];
                      }
                      if (node === elem) {
                        break;
                      }
                    }
                  }
                }
              }
              diff -= last;
              return diff === first || (diff % first === 0 && diff / first >= 0);
            }
          };
        },
        "PSEUDO": function(pseudo, argument) {
          var args,
              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
          if (fn[expando]) {
            return fn(argument);
          }
          if (fn.length > 1) {
            args = [pseudo, pseudo, "", argument];
            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
              var idx,
                  matched = fn(seed, argument),
                  i = matched.length;
              while (i--) {
                idx = indexOf(seed, matched[i]);
                seed[idx] = !(matches[idx] = matched[i]);
              }
            }) : function(elem) {
              return fn(elem, 0, args);
            };
          }
          return fn;
        }
      },
      pseudos: {
        "not": markFunction(function(selector) {
          var input = [],
              results = [],
              matcher = compile(selector.replace(rtrim, "$1"));
          return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
            var elem,
                unmatched = matcher(seed, null, xml, []),
                i = seed.length;
            while (i--) {
              if ((elem = unmatched[i])) {
                seed[i] = !(matches[i] = elem);
              }
            }
          }) : function(elem, context, xml) {
            input[0] = elem;
            matcher(input, null, xml, results);
            input[0] = null;
            return !results.pop();
          };
        }),
        "has": markFunction(function(selector) {
          return function(elem) {
            return Sizzle(selector, elem).length > 0;
          };
        }),
        "contains": markFunction(function(text) {
          text = text.replace(runescape, funescape);
          return function(elem) {
            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
          };
        }),
        "lang": markFunction(function(lang) {
          if (!ridentifier.test(lang || "")) {
            Sizzle.error("unsupported lang: " + lang);
          }
          lang = lang.replace(runescape, funescape).toLowerCase();
          return function(elem) {
            var elemLang;
            do {
              if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang"))) {
                elemLang = elemLang.toLowerCase();
                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);
            return false;
          };
        }),
        "target": function(elem) {
          var hash = window.location && window.location.hash;
          return hash && hash.slice(1) === elem.id;
        },
        "root": function(elem) {
          return elem === docElem;
        },
        "focus": function(elem) {
          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        "enabled": function(elem) {
          return elem.disabled === false;
        },
        "disabled": function(elem) {
          return elem.disabled === true;
        },
        "checked": function(elem) {
          var nodeName = elem.nodeName.toLowerCase();
          return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
        },
        "selected": function(elem) {
          if (elem.parentNode) {
            elem.parentNode.selectedIndex;
          }
          return elem.selected === true;
        },
        "empty": function(elem) {
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeType < 6) {
              return false;
            }
          }
          return true;
        },
        "parent": function(elem) {
          return !Expr.pseudos["empty"](elem);
        },
        "header": function(elem) {
          return rheader.test(elem.nodeName);
        },
        "input": function(elem) {
          return rinputs.test(elem.nodeName);
        },
        "button": function(elem) {
          var name = elem.nodeName.toLowerCase();
          return name === "input" && elem.type === "button" || name === "button";
        },
        "text": function(elem) {
          var attr;
          return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
        },
        "first": createPositionalPseudo(function() {
          return [0];
        }),
        "last": createPositionalPseudo(function(matchIndexes, length) {
          return [length - 1];
        }),
        "eq": createPositionalPseudo(function(matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),
        "even": createPositionalPseudo(function(matchIndexes, length) {
          var i = 0;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "odd": createPositionalPseudo(function(matchIndexes, length) {
          var i = 1;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; --i >= 0; ) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; ++i < length; ) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        })
      }
    };
    Expr.pseudos["nth"] = Expr.pseudos["eq"];
    for (i in {
      radio: true,
      checkbox: true,
      file: true,
      password: true,
      image: true
    }) {
      Expr.pseudos[i] = createInputPseudo(i);
    }
    for (i in {
      submit: true,
      reset: true
    }) {
      Expr.pseudos[i] = createButtonPseudo(i);
    }
    function setFilters() {}
    setFilters.prototype = Expr.filters = Expr.pseudos;
    Expr.setFilters = new setFilters();
    tokenize = Sizzle.tokenize = function(selector, parseOnly) {
      var matched,
          match,
          tokens,
          type,
          soFar,
          groups,
          preFilters,
          cached = tokenCache[selector + " "];
      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }
      soFar = selector;
      groups = [];
      preFilters = Expr.preFilter;
      while (soFar) {
        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            soFar = soFar.slice(match[0].length) || soFar;
          }
          groups.push((tokens = []));
        }
        matched = false;
        if ((match = rcombinators.exec(soFar))) {
          matched = match.shift();
          tokens.push({
            value: matched,
            type: match[0].replace(rtrim, " ")
          });
          soFar = soFar.slice(matched.length);
        }
        for (type in Expr.filter) {
          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type: type,
              matches: match
            });
            soFar = soFar.slice(matched.length);
          }
        }
        if (!matched) {
          break;
        }
      }
      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
    };
    function toSelector(tokens) {
      var i = 0,
          len = tokens.length,
          selector = "";
      for (; i < len; i++) {
        selector += tokens[i].value;
      }
      return selector;
    }
    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir,
          checkNonElements = base && dir === "parentNode",
          doneName = done++;
      return combinator.first ? function(elem, context, xml) {
        while ((elem = elem[dir])) {
          if (elem.nodeType === 1 || checkNonElements) {
            return matcher(elem, context, xml);
          }
        }
      } : function(elem, context, xml) {
        var oldCache,
            uniqueCache,
            outerCache,
            newCache = [dirruns, doneName];
        if (xml) {
          while ((elem = elem[dir])) {
            if (elem.nodeType === 1 || checkNonElements) {
              if (matcher(elem, context, xml)) {
                return true;
              }
            }
          }
        } else {
          while ((elem = elem[dir])) {
            if (elem.nodeType === 1 || checkNonElements) {
              outerCache = elem[expando] || (elem[expando] = {});
              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
              if ((oldCache = uniqueCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                return (newCache[2] = oldCache[2]);
              } else {
                uniqueCache[dir] = newCache;
                if ((newCache[2] = matcher(elem, context, xml))) {
                  return true;
                }
              }
            }
          }
        }
      };
    }
    function elementMatcher(matchers) {
      return matchers.length > 1 ? function(elem, context, xml) {
        var i = matchers.length;
        while (i--) {
          if (!matchers[i](elem, context, xml)) {
            return false;
          }
        }
        return true;
      } : matchers[0];
    }
    function multipleContexts(selector, contexts, results) {
      var i = 0,
          len = contexts.length;
      for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
      }
      return results;
    }
    function condense(unmatched, map, filter, context, xml) {
      var elem,
          newUnmatched = [],
          i = 0,
          len = unmatched.length,
          mapped = map != null;
      for (; i < len; i++) {
        if ((elem = unmatched[i])) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);
            if (mapped) {
              map.push(i);
            }
          }
        }
      }
      return newUnmatched;
    }
    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
      if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
      }
      if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }
      return markFunction(function(seed, results, context, xml) {
        var temp,
            i,
            elem,
            preMap = [],
            postMap = [],
            preexisting = results.length,
            elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
            matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
            matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
        if (matcher) {
          matcher(matcherIn, matcherOut, context, xml);
        }
        if (postFilter) {
          temp = condense(matcherOut, postMap);
          postFilter(temp, [], context, xml);
          i = temp.length;
          while (i--) {
            if ((elem = temp[i])) {
              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
          }
        }
        if (seed) {
          if (postFinder || preFilter) {
            if (postFinder) {
              temp = [];
              i = matcherOut.length;
              while (i--) {
                if ((elem = matcherOut[i])) {
                  temp.push((matcherIn[i] = elem));
                }
              }
              postFinder(null, (matcherOut = []), temp, xml);
            }
            i = matcherOut.length;
            while (i--) {
              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          }
        } else {
          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }
    function matcherFromTokens(tokens) {
      var checkContext,
          matcher,
          j,
          len = tokens.length,
          leadingRelative = Expr.relative[tokens[0].type],
          implicitRelative = leadingRelative || Expr.relative[" "],
          i = leadingRelative ? 1 : 0,
          matchContext = addCombinator(function(elem) {
            return elem === checkContext;
          }, implicitRelative, true),
          matchAnyContext = addCombinator(function(elem) {
            return indexOf(checkContext, elem) > -1;
          }, implicitRelative, true),
          matchers = [function(elem, context, xml) {
            var ret = (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
            checkContext = null;
            return ret;
          }];
      for (; i < len; i++) {
        if ((matcher = Expr.relative[tokens[i].type])) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
          if (matcher[expando]) {
            j = ++i;
            for (; j < len; j++) {
              if (Expr.relative[tokens[j].type]) {
                break;
              }
            }
            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({value: tokens[i - 2].type === " " ? "*" : ""})).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && toSelector(tokens));
          }
          matchers.push(matcher);
        }
      }
      return elementMatcher(matchers);
    }
    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      var bySet = setMatchers.length > 0,
          byElement = elementMatchers.length > 0,
          superMatcher = function(seed, context, xml, results, outermost) {
            var elem,
                j,
                matcher,
                matchedCount = 0,
                i = "0",
                unmatched = seed && [],
                setMatched = [],
                contextBackup = outermostContext,
                elems = seed || byElement && Expr.find["TAG"]("*", outermost),
                dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
                len = elems.length;
            if (outermost) {
              outermostContext = context === document || context || outermost;
            }
            for (; i !== len && (elem = elems[i]) != null; i++) {
              if (byElement && elem) {
                j = 0;
                if (!context && elem.ownerDocument !== document) {
                  setDocument(elem);
                  xml = !documentIsHTML;
                }
                while ((matcher = elementMatchers[j++])) {
                  if (matcher(elem, context || document, xml)) {
                    results.push(elem);
                    break;
                  }
                }
                if (outermost) {
                  dirruns = dirrunsUnique;
                }
              }
              if (bySet) {
                if ((elem = !matcher && elem)) {
                  matchedCount--;
                }
                if (seed) {
                  unmatched.push(elem);
                }
              }
            }
            matchedCount += i;
            if (bySet && i !== matchedCount) {
              j = 0;
              while ((matcher = setMatchers[j++])) {
                matcher(unmatched, setMatched, context, xml);
              }
              if (seed) {
                if (matchedCount > 0) {
                  while (i--) {
                    if (!(unmatched[i] || setMatched[i])) {
                      setMatched[i] = pop.call(results);
                    }
                  }
                }
                setMatched = condense(setMatched);
              }
              push.apply(results, setMatched);
              if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {
                Sizzle.uniqueSort(results);
              }
            }
            if (outermost) {
              dirruns = dirrunsUnique;
              outermostContext = contextBackup;
            }
            return unmatched;
          };
      return bySet ? markFunction(superMatcher) : superMatcher;
    }
    compile = Sizzle.compile = function(selector, match) {
      var i,
          setMatchers = [],
          elementMatchers = [],
          cached = compilerCache[selector + " "];
      if (!cached) {
        if (!match) {
          match = tokenize(selector);
        }
        i = match.length;
        while (i--) {
          cached = matcherFromTokens(match[i]);
          if (cached[expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        }
        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
        cached.selector = selector;
      }
      return cached;
    };
    select = Sizzle.select = function(selector, context, results, seed) {
      var i,
          tokens,
          token,
          type,
          find,
          compiled = typeof selector === "function" && selector,
          match = !seed && tokenize((selector = compiled.selector || selector));
      results = results || [];
      if (match.length === 1) {
        tokens = match[0] = match[0].slice(0);
        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
          context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
          if (!context) {
            return results;
          } else if (compiled) {
            context = context.parentNode;
          }
          selector = selector.slice(tokens.shift().value.length);
        }
        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
        while (i--) {
          token = tokens[i];
          if (Expr.relative[(type = token.type)]) {
            break;
          }
          if ((find = Expr.find[type])) {
            if ((seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
              tokens.splice(i, 1);
              selector = seed.length && toSelector(tokens);
              if (!selector) {
                push.apply(results, seed);
                return results;
              }
              break;
            }
          }
        }
      }
      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
      return results;
    };
    support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
    support.detectDuplicates = !!hasDuplicate;
    setDocument();
    support.sortDetached = assert(function(div1) {
      return div1.compareDocumentPosition(document.createElement("div")) & 1;
    });
    if (!assert(function(div) {
      div.innerHTML = "<a href='#'></a>";
      return div.firstChild.getAttribute("href") === "#";
    })) {
      addHandle("type|href|height|width", function(elem, name, isXML) {
        if (!isXML) {
          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        }
      });
    }
    if (!support.attributes || !assert(function(div) {
      div.innerHTML = "<input/>";
      div.firstChild.setAttribute("value", "");
      return div.firstChild.getAttribute("value") === "";
    })) {
      addHandle("value", function(elem, name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === "input") {
          return elem.defaultValue;
        }
      });
    }
    if (!assert(function(div) {
      return div.getAttribute("disabled") == null;
    })) {
      addHandle(booleans, function(elem, name, isXML) {
        var val;
        if (!isXML) {
          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        }
      });
    }
    return Sizzle;
  })(window);
  jQuery.find = Sizzle;
  jQuery.expr = Sizzle.selectors;
  jQuery.expr[":"] = jQuery.expr.pseudos;
  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
  jQuery.text = Sizzle.getText;
  jQuery.isXMLDoc = Sizzle.isXML;
  jQuery.contains = Sizzle.contains;
  var dir = function(elem, dir, until) {
    var matched = [],
        truncate = until !== undefined;
    while ((elem = elem[dir]) && elem.nodeType !== 9) {
      if (elem.nodeType === 1) {
        if (truncate && jQuery(elem).is(until)) {
          break;
        }
        matched.push(elem);
      }
    }
    return matched;
  };
  var siblings = function(n, elem) {
    var matched = [];
    for (; n; n = n.nextSibling) {
      if (n.nodeType === 1 && n !== elem) {
        matched.push(n);
      }
    }
    return matched;
  };
  var rneedsContext = jQuery.expr.match.needsContext;
  var rsingleTag = (/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/);
  var risSimple = /^.[^:#\[\.,]*$/;
  function winnow(elements, qualifier, not) {
    if (jQuery.isFunction(qualifier)) {
      return jQuery.grep(elements, function(elem, i) {
        return !!qualifier.call(elem, i, elem) !== not;
      });
    }
    if (qualifier.nodeType) {
      return jQuery.grep(elements, function(elem) {
        return (elem === qualifier) !== not;
      });
    }
    if (typeof qualifier === "string") {
      if (risSimple.test(qualifier)) {
        return jQuery.filter(qualifier, elements, not);
      }
      qualifier = jQuery.filter(qualifier, elements);
    }
    return jQuery.grep(elements, function(elem) {
      return (indexOf.call(qualifier, elem) > -1) !== not;
    });
  }
  jQuery.filter = function(expr, elems, not) {
    var elem = elems[0];
    if (not) {
      expr = ":not(" + expr + ")";
    }
    return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
      return elem.nodeType === 1;
    }));
  };
  jQuery.fn.extend({
    find: function(selector) {
      var i,
          len = this.length,
          ret = [],
          self = this;
      if (typeof selector !== "string") {
        return this.pushStack(jQuery(selector).filter(function() {
          for (i = 0; i < len; i++) {
            if (jQuery.contains(self[i], this)) {
              return true;
            }
          }
        }));
      }
      for (i = 0; i < len; i++) {
        jQuery.find(selector, self[i], ret);
      }
      ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
      ret.selector = this.selector ? this.selector + " " + selector : selector;
      return ret;
    },
    filter: function(selector) {
      return this.pushStack(winnow(this, selector || [], false));
    },
    not: function(selector) {
      return this.pushStack(winnow(this, selector || [], true));
    },
    is: function(selector) {
      return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
    }
  });
  var rootjQuery,
      rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
      init = jQuery.fn.init = function(selector, context, root) {
        var match,
            elem;
        if (!selector) {
          return this;
        }
        root = root || rootjQuery;
        if (typeof selector === "string") {
          if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
            match = [null, selector, null];
          } else {
            match = rquickExpr.exec(selector);
          }
          if (match && (match[1] || !context)) {
            if (match[1]) {
              context = context instanceof jQuery ? context[0] : context;
              jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
              if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                for (match in context) {
                  if (jQuery.isFunction(this[match])) {
                    this[match](context[match]);
                  } else {
                    this.attr(match, context[match]);
                  }
                }
              }
              return this;
            } else {
              elem = document.getElementById(match[2]);
              if (elem && elem.parentNode) {
                this.length = 1;
                this[0] = elem;
              }
              this.context = document;
              this.selector = selector;
              return this;
            }
          } else if (!context || context.jquery) {
            return (context || root).find(selector);
          } else {
            return this.constructor(context).find(selector);
          }
        } else if (selector.nodeType) {
          this.context = this[0] = selector;
          this.length = 1;
          return this;
        } else if (jQuery.isFunction(selector)) {
          return root.ready !== undefined ? root.ready(selector) : selector(jQuery);
        }
        if (selector.selector !== undefined) {
          this.selector = selector.selector;
          this.context = selector.context;
        }
        return jQuery.makeArray(selector, this);
      };
  init.prototype = jQuery.fn;
  rootjQuery = jQuery(document);
  var rparentsprev = /^(?:parents|prev(?:Until|All))/,
      guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
      };
  jQuery.fn.extend({
    has: function(target) {
      var targets = jQuery(target, this),
          l = targets.length;
      return this.filter(function() {
        var i = 0;
        for (; i < l; i++) {
          if (jQuery.contains(this, targets[i])) {
            return true;
          }
        }
      });
    },
    closest: function(selectors, context) {
      var cur,
          i = 0,
          l = this.length,
          matched = [],
          pos = rneedsContext.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
      for (; i < l; i++) {
        for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
          if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
            matched.push(cur);
            break;
          }
        }
      }
      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
    },
    index: function(elem) {
      if (!elem) {
        return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1;
      }
      if (typeof elem === "string") {
        return indexOf.call(jQuery(elem), this[0]);
      }
      return indexOf.call(this, elem.jquery ? elem[0] : elem);
    },
    add: function(selector, context) {
      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
    },
    addBack: function(selector) {
      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
    }
  });
  function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {}
    return cur;
  }
  jQuery.each({
    parent: function(elem) {
      var parent = elem.parentNode;
      return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function(elem) {
      return dir(elem, "parentNode");
    },
    parentsUntil: function(elem, i, until) {
      return dir(elem, "parentNode", until);
    },
    next: function(elem) {
      return sibling(elem, "nextSibling");
    },
    prev: function(elem) {
      return sibling(elem, "previousSibling");
    },
    nextAll: function(elem) {
      return dir(elem, "nextSibling");
    },
    prevAll: function(elem) {
      return dir(elem, "previousSibling");
    },
    nextUntil: function(elem, i, until) {
      return dir(elem, "nextSibling", until);
    },
    prevUntil: function(elem, i, until) {
      return dir(elem, "previousSibling", until);
    },
    siblings: function(elem) {
      return siblings((elem.parentNode || {}).firstChild, elem);
    },
    children: function(elem) {
      return siblings(elem.firstChild);
    },
    contents: function(elem) {
      return elem.contentDocument || jQuery.merge([], elem.childNodes);
    }
  }, function(name, fn) {
    jQuery.fn[name] = function(until, selector) {
      var matched = jQuery.map(this, fn, until);
      if (name.slice(-5) !== "Until") {
        selector = until;
      }
      if (selector && typeof selector === "string") {
        matched = jQuery.filter(selector, matched);
      }
      if (this.length > 1) {
        if (!guaranteedUnique[name]) {
          jQuery.uniqueSort(matched);
        }
        if (rparentsprev.test(name)) {
          matched.reverse();
        }
      }
      return this.pushStack(matched);
    };
  });
  var rnotwhite = (/\S+/g);
  function createOptions(options) {
    var object = {};
    jQuery.each(options.match(rnotwhite) || [], function(_, flag) {
      object[flag] = true;
    });
    return object;
  }
  jQuery.Callbacks = function(options) {
    options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);
    var firing,
        memory,
        fired,
        locked,
        list = [],
        queue = [],
        firingIndex = -1,
        fire = function() {
          locked = options.once;
          fired = firing = true;
          for (; queue.length; firingIndex = -1) {
            memory = queue.shift();
            while (++firingIndex < list.length) {
              if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                firingIndex = list.length;
                memory = false;
              }
            }
          }
          if (!options.memory) {
            memory = false;
          }
          firing = false;
          if (locked) {
            if (memory) {
              list = [];
            } else {
              list = "";
            }
          }
        },
        self = {
          add: function() {
            if (list) {
              if (memory && !firing) {
                firingIndex = list.length - 1;
                queue.push(memory);
              }
              (function add(args) {
                jQuery.each(args, function(_, arg) {
                  if (jQuery.isFunction(arg)) {
                    if (!options.unique || !self.has(arg)) {
                      list.push(arg);
                    }
                  } else if (arg && arg.length && jQuery.type(arg) !== "string") {
                    add(arg);
                  }
                });
              })(arguments);
              if (memory && !firing) {
                fire();
              }
            }
            return this;
          },
          remove: function() {
            jQuery.each(arguments, function(_, arg) {
              var index;
              while ((index = jQuery.inArray(arg, list, index)) > -1) {
                list.splice(index, 1);
                if (index <= firingIndex) {
                  firingIndex--;
                }
              }
            });
            return this;
          },
          has: function(fn) {
            return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
          },
          empty: function() {
            if (list) {
              list = [];
            }
            return this;
          },
          disable: function() {
            locked = queue = [];
            list = memory = "";
            return this;
          },
          disabled: function() {
            return !list;
          },
          lock: function() {
            locked = queue = [];
            if (!memory) {
              list = memory = "";
            }
            return this;
          },
          locked: function() {
            return !!locked;
          },
          fireWith: function(context, args) {
            if (!locked) {
              args = args || [];
              args = [context, args.slice ? args.slice() : args];
              queue.push(args);
              if (!firing) {
                fire();
              }
            }
            return this;
          },
          fire: function() {
            self.fireWith(this, arguments);
            return this;
          },
          fired: function() {
            return !!fired;
          }
        };
    return self;
  };
  jQuery.extend({
    Deferred: function(func) {
      var tuples = [["resolve", "done", jQuery.Callbacks("once memory"), "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), "rejected"], ["notify", "progress", jQuery.Callbacks("memory")]],
          state = "pending",
          promise = {
            state: function() {
              return state;
            },
            always: function() {
              deferred.done(arguments).fail(arguments);
              return this;
            },
            then: function() {
              var fns = arguments;
              return jQuery.Deferred(function(newDefer) {
                jQuery.each(tuples, function(i, tuple) {
                  var fn = jQuery.isFunction(fns[i]) && fns[i];
                  deferred[tuple[1]](function() {
                    var returned = fn && fn.apply(this, arguments);
                    if (returned && jQuery.isFunction(returned.promise)) {
                      returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                    } else {
                      newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);
                    }
                  });
                });
                fns = null;
              }).promise();
            },
            promise: function(obj) {
              return obj != null ? jQuery.extend(obj, promise) : promise;
            }
          },
          deferred = {};
      promise.pipe = promise.then;
      jQuery.each(tuples, function(i, tuple) {
        var list = tuple[2],
            stateString = tuple[3];
        promise[tuple[1]] = list.add;
        if (stateString) {
          list.add(function() {
            state = stateString;
          }, tuples[i ^ 1][2].disable, tuples[2][2].lock);
        }
        deferred[tuple[0]] = function() {
          deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments);
          return this;
        };
        deferred[tuple[0] + "With"] = list.fireWith;
      });
      promise.promise(deferred);
      if (func) {
        func.call(deferred, deferred);
      }
      return deferred;
    },
    when: function(subordinate) {
      var i = 0,
          resolveValues = slice.call(arguments),
          length = resolveValues.length,
          remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,
          deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
          updateFunc = function(i, contexts, values) {
            return function(value) {
              contexts[i] = this;
              values[i] = arguments.length > 1 ? slice.call(arguments) : value;
              if (values === progressValues) {
                deferred.notifyWith(contexts, values);
              } else if (!(--remaining)) {
                deferred.resolveWith(contexts, values);
              }
            };
          },
          progressValues,
          progressContexts,
          resolveContexts;
      if (length > 1) {
        progressValues = new Array(length);
        progressContexts = new Array(length);
        resolveContexts = new Array(length);
        for (; i < length; i++) {
          if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
            resolveValues[i].promise().progress(updateFunc(i, progressContexts, progressValues)).done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject);
          } else {
            --remaining;
          }
        }
      }
      if (!remaining) {
        deferred.resolveWith(resolveContexts, resolveValues);
      }
      return deferred.promise();
    }
  });
  var readyList;
  jQuery.fn.ready = function(fn) {
    jQuery.ready.promise().done(fn);
    return this;
  };
  jQuery.extend({
    isReady: false,
    readyWait: 1,
    holdReady: function(hold) {
      if (hold) {
        jQuery.readyWait++;
      } else {
        jQuery.ready(true);
      }
    },
    ready: function(wait) {
      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
        return;
      }
      jQuery.isReady = true;
      if (wait !== true && --jQuery.readyWait > 0) {
        return;
      }
      readyList.resolveWith(document, [jQuery]);
      if (jQuery.fn.triggerHandler) {
        jQuery(document).triggerHandler("ready");
        jQuery(document).off("ready");
      }
    }
  });
  function completed() {
    document.removeEventListener("DOMContentLoaded", completed);
    window.removeEventListener("load", completed);
    jQuery.ready();
  }
  jQuery.ready.promise = function(obj) {
    if (!readyList) {
      readyList = jQuery.Deferred();
      if (document.readyState === "complete" || (document.readyState !== "loading" && !document.documentElement.doScroll)) {
        window.setTimeout(jQuery.ready);
      } else {
        document.addEventListener("DOMContentLoaded", completed);
        window.addEventListener("load", completed);
      }
    }
    return readyList.promise(obj);
  };
  jQuery.ready.promise();
  var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
    var i = 0,
        len = elems.length,
        bulk = key == null;
    if (jQuery.type(key) === "object") {
      chainable = true;
      for (i in key) {
        access(elems, fn, i, key[i], true, emptyGet, raw);
      }
    } else if (value !== undefined) {
      chainable = true;
      if (!jQuery.isFunction(value)) {
        raw = true;
      }
      if (bulk) {
        if (raw) {
          fn.call(elems, value);
          fn = null;
        } else {
          bulk = fn;
          fn = function(elem, key, value) {
            return bulk.call(jQuery(elem), value);
          };
        }
      }
      if (fn) {
        for (; i < len; i++) {
          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        }
      }
    }
    return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;
  };
  var acceptData = function(owner) {
    return owner.nodeType === 1 || owner.nodeType === 9 || !(+owner.nodeType);
  };
  function Data() {
    this.expando = jQuery.expando + Data.uid++;
  }
  Data.uid = 1;
  Data.prototype = {
    register: function(owner, initial) {
      var value = initial || {};
      if (owner.nodeType) {
        owner[this.expando] = value;
      } else {
        Object.defineProperty(owner, this.expando, {
          value: value,
          writable: true,
          configurable: true
        });
      }
      return owner[this.expando];
    },
    cache: function(owner) {
      if (!acceptData(owner)) {
        return {};
      }
      var value = owner[this.expando];
      if (!value) {
        value = {};
        if (acceptData(owner)) {
          if (owner.nodeType) {
            owner[this.expando] = value;
          } else {
            Object.defineProperty(owner, this.expando, {
              value: value,
              configurable: true
            });
          }
        }
      }
      return value;
    },
    set: function(owner, data, value) {
      var prop,
          cache = this.cache(owner);
      if (typeof data === "string") {
        cache[data] = value;
      } else {
        for (prop in data) {
          cache[prop] = data[prop];
        }
      }
      return cache;
    },
    get: function(owner, key) {
      return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][key];
    },
    access: function(owner, key, value) {
      var stored;
      if (key === undefined || ((key && typeof key === "string") && value === undefined)) {
        stored = this.get(owner, key);
        return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));
      }
      this.set(owner, key, value);
      return value !== undefined ? value : key;
    },
    remove: function(owner, key) {
      var i,
          name,
          camel,
          cache = owner[this.expando];
      if (cache === undefined) {
        return;
      }
      if (key === undefined) {
        this.register(owner);
      } else {
        if (jQuery.isArray(key)) {
          name = key.concat(key.map(jQuery.camelCase));
        } else {
          camel = jQuery.camelCase(key);
          if (key in cache) {
            name = [key, camel];
          } else {
            name = camel;
            name = name in cache ? [name] : (name.match(rnotwhite) || []);
          }
        }
        i = name.length;
        while (i--) {
          delete cache[name[i]];
        }
      }
      if (key === undefined || jQuery.isEmptyObject(cache)) {
        if (owner.nodeType) {
          owner[this.expando] = undefined;
        } else {
          delete owner[this.expando];
        }
      }
    },
    hasData: function(owner) {
      var cache = owner[this.expando];
      return cache !== undefined && !jQuery.isEmptyObject(cache);
    }
  };
  var dataPriv = new Data();
  var dataUser = new Data();
  var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      rmultiDash = /[A-Z]/g;
  function dataAttr(elem, key, data) {
    var name;
    if (data === undefined && elem.nodeType === 1) {
      name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
      data = elem.getAttribute(name);
      if (typeof data === "string") {
        try {
          data = data === "true" ? true : data === "false" ? false : data === "null" ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;
        } catch (e) {}
        dataUser.set(elem, key, data);
      } else {
        data = undefined;
      }
    }
    return data;
  }
  jQuery.extend({
    hasData: function(elem) {
      return dataUser.hasData(elem) || dataPriv.hasData(elem);
    },
    data: function(elem, name, data) {
      return dataUser.access(elem, name, data);
    },
    removeData: function(elem, name) {
      dataUser.remove(elem, name);
    },
    _data: function(elem, name, data) {
      return dataPriv.access(elem, name, data);
    },
    _removeData: function(elem, name) {
      dataPriv.remove(elem, name);
    }
  });
  jQuery.fn.extend({
    data: function(key, value) {
      var i,
          name,
          data,
          elem = this[0],
          attrs = elem && elem.attributes;
      if (key === undefined) {
        if (this.length) {
          data = dataUser.get(elem);
          if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
            i = attrs.length;
            while (i--) {
              if (attrs[i]) {
                name = attrs[i].name;
                if (name.indexOf("data-") === 0) {
                  name = jQuery.camelCase(name.slice(5));
                  dataAttr(elem, name, data[name]);
                }
              }
            }
            dataPriv.set(elem, "hasDataAttrs", true);
          }
        }
        return data;
      }
      if (typeof key === "object") {
        return this.each(function() {
          dataUser.set(this, key);
        });
      }
      return access(this, function(value) {
        var data,
            camelKey;
        if (elem && value === undefined) {
          data = dataUser.get(elem, key) || dataUser.get(elem, key.replace(rmultiDash, "-$&").toLowerCase());
          if (data !== undefined) {
            return data;
          }
          camelKey = jQuery.camelCase(key);
          data = dataUser.get(elem, camelKey);
          if (data !== undefined) {
            return data;
          }
          data = dataAttr(elem, camelKey, undefined);
          if (data !== undefined) {
            return data;
          }
          return;
        }
        camelKey = jQuery.camelCase(key);
        this.each(function() {
          var data = dataUser.get(this, camelKey);
          dataUser.set(this, camelKey, value);
          if (key.indexOf("-") > -1 && data !== undefined) {
            dataUser.set(this, key, value);
          }
        });
      }, null, value, arguments.length > 1, null, true);
    },
    removeData: function(key) {
      return this.each(function() {
        dataUser.remove(this, key);
      });
    }
  });
  jQuery.extend({
    queue: function(elem, type, data) {
      var queue;
      if (elem) {
        type = (type || "fx") + "queue";
        queue = dataPriv.get(elem, type);
        if (data) {
          if (!queue || jQuery.isArray(data)) {
            queue = dataPriv.access(elem, type, jQuery.makeArray(data));
          } else {
            queue.push(data);
          }
        }
        return queue || [];
      }
    },
    dequeue: function(elem, type) {
      type = type || "fx";
      var queue = jQuery.queue(elem, type),
          startLength = queue.length,
          fn = queue.shift(),
          hooks = jQuery._queueHooks(elem, type),
          next = function() {
            jQuery.dequeue(elem, type);
          };
      if (fn === "inprogress") {
        fn = queue.shift();
        startLength--;
      }
      if (fn) {
        if (type === "fx") {
          queue.unshift("inprogress");
        }
        delete hooks.stop;
        fn.call(elem, next, hooks);
      }
      if (!startLength && hooks) {
        hooks.empty.fire();
      }
    },
    _queueHooks: function(elem, type) {
      var key = type + "queueHooks";
      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {empty: jQuery.Callbacks("once memory").add(function() {
          dataPriv.remove(elem, [type + "queue", key]);
        })});
    }
  });
  jQuery.fn.extend({
    queue: function(type, data) {
      var setter = 2;
      if (typeof type !== "string") {
        data = type;
        type = "fx";
        setter--;
      }
      if (arguments.length < setter) {
        return jQuery.queue(this[0], type);
      }
      return data === undefined ? this : this.each(function() {
        var queue = jQuery.queue(this, type, data);
        jQuery._queueHooks(this, type);
        if (type === "fx" && queue[0] !== "inprogress") {
          jQuery.dequeue(this, type);
        }
      });
    },
    dequeue: function(type) {
      return this.each(function() {
        jQuery.dequeue(this, type);
      });
    },
    clearQueue: function(type) {
      return this.queue(type || "fx", []);
    },
    promise: function(type, obj) {
      var tmp,
          count = 1,
          defer = jQuery.Deferred(),
          elements = this,
          i = this.length,
          resolve = function() {
            if (!(--count)) {
              defer.resolveWith(elements, [elements]);
            }
          };
      if (typeof type !== "string") {
        obj = type;
        type = undefined;
      }
      type = type || "fx";
      while (i--) {
        tmp = dataPriv.get(elements[i], type + "queueHooks");
        if (tmp && tmp.empty) {
          count++;
          tmp.empty.add(resolve);
        }
      }
      resolve();
      return defer.promise(obj);
    }
  });
  var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;
  var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
  var cssExpand = ["Top", "Right", "Bottom", "Left"];
  var isHidden = function(elem, el) {
    elem = el || elem;
    return jQuery.css(elem, "display") === "none" || !jQuery.contains(elem.ownerDocument, elem);
  };
  function adjustCSS(elem, prop, valueParts, tween) {
    var adjusted,
        scale = 1,
        maxIterations = 20,
        currentValue = tween ? function() {
          return tween.cur();
        } : function() {
          return jQuery.css(elem, prop, "");
        },
        initial = currentValue(),
        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
        initialInUnit = (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));
    if (initialInUnit && initialInUnit[3] !== unit) {
      unit = unit || initialInUnit[3];
      valueParts = valueParts || [];
      initialInUnit = +initial || 1;
      do {
        scale = scale || ".5";
        initialInUnit = initialInUnit / scale;
        jQuery.style(elem, prop, initialInUnit + unit);
      } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);
    }
    if (valueParts) {
      initialInUnit = +initialInUnit || +initial || 0;
      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
      if (tween) {
        tween.unit = unit;
        tween.start = initialInUnit;
        tween.end = adjusted;
      }
    }
    return adjusted;
  }
  var rcheckableType = (/^(?:checkbox|radio)$/i);
  var rtagName = (/<([\w:-]+)/);
  var rscriptType = (/^$|\/(?:java|ecma)script/i);
  var wrapMap = {
    option: [1, "<select multiple='multiple'>", "</select>"],
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""]
  };
  wrapMap.optgroup = wrapMap.option;
  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
  wrapMap.th = wrapMap.td;
  function getAll(context, tag) {
    var ret = typeof context.getElementsByTagName !== "undefined" ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== "undefined" ? context.querySelectorAll(tag || "*") : [];
    return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;
  }
  function setGlobalEval(elems, refElements) {
    var i = 0,
        l = elems.length;
    for (; i < l; i++) {
      dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
    }
  }
  var rhtml = /<|&#?\w+;/;
  function buildFragment(elems, context, scripts, selection, ignored) {
    var elem,
        tmp,
        tag,
        wrap,
        contains,
        j,
        fragment = context.createDocumentFragment(),
        nodes = [],
        i = 0,
        l = elems.length;
    for (; i < l; i++) {
      elem = elems[i];
      if (elem || elem === 0) {
        if (jQuery.type(elem) === "object") {
          jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
        } else if (!rhtml.test(elem)) {
          nodes.push(context.createTextNode(elem));
        } else {
          tmp = tmp || fragment.appendChild(context.createElement("div"));
          tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
          wrap = wrapMap[tag] || wrapMap._default;
          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
          j = wrap[0];
          while (j--) {
            tmp = tmp.lastChild;
          }
          jQuery.merge(nodes, tmp.childNodes);
          tmp = fragment.firstChild;
          tmp.textContent = "";
        }
      }
    }
    fragment.textContent = "";
    i = 0;
    while ((elem = nodes[i++])) {
      if (selection && jQuery.inArray(elem, selection) > -1) {
        if (ignored) {
          ignored.push(elem);
        }
        continue;
      }
      contains = jQuery.contains(elem.ownerDocument, elem);
      tmp = getAll(fragment.appendChild(elem), "script");
      if (contains) {
        setGlobalEval(tmp);
      }
      if (scripts) {
        j = 0;
        while ((elem = tmp[j++])) {
          if (rscriptType.test(elem.type || "")) {
            scripts.push(elem);
          }
        }
      }
    }
    return fragment;
  }
  (function() {
    var fragment = document.createDocumentFragment(),
        div = fragment.appendChild(document.createElement("div")),
        input = document.createElement("input");
    input.setAttribute("type", "radio");
    input.setAttribute("checked", "checked");
    input.setAttribute("name", "t");
    div.appendChild(input);
    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
    div.innerHTML = "<textarea>x</textarea>";
    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
  })();
  var rkeyEvent = /^key/,
      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
      rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
  function returnTrue() {
    return true;
  }
  function returnFalse() {
    return false;
  }
  function safeActiveElement() {
    try {
      return document.activeElement;
    } catch (err) {}
  }
  function on(elem, types, selector, data, fn, one) {
    var origFn,
        type;
    if (typeof types === "object") {
      if (typeof selector !== "string") {
        data = data || selector;
        selector = undefined;
      }
      for (type in types) {
        on(elem, type, selector, data, types[type], one);
      }
      return elem;
    }
    if (data == null && fn == null) {
      fn = selector;
      data = selector = undefined;
    } else if (fn == null) {
      if (typeof selector === "string") {
        fn = data;
        data = undefined;
      } else {
        fn = data;
        data = selector;
        selector = undefined;
      }
    }
    if (fn === false) {
      fn = returnFalse;
    } else if (!fn) {
      return elem;
    }
    if (one === 1) {
      origFn = fn;
      fn = function(event) {
        jQuery().off(event);
        return origFn.apply(this, arguments);
      };
      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
    }
    return elem.each(function() {
      jQuery.event.add(this, types, fn, data, selector);
    });
  }
  jQuery.event = {
    global: {},
    add: function(elem, types, handler, data, selector) {
      var handleObjIn,
          eventHandle,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.get(elem);
      if (!elemData) {
        return;
      }
      if (handler.handler) {
        handleObjIn = handler;
        handler = handleObjIn.handler;
        selector = handleObjIn.selector;
      }
      if (!handler.guid) {
        handler.guid = jQuery.guid++;
      }
      if (!(events = elemData.events)) {
        events = elemData.events = {};
      }
      if (!(eventHandle = elemData.handle)) {
        eventHandle = elemData.handle = function(e) {
          return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
        };
      }
      types = (types || "").match(rnotwhite) || [""];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort();
        if (!type) {
          continue;
        }
        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        special = jQuery.event.special[type] || {};
        handleObj = jQuery.extend({
          type: type,
          origType: origType,
          data: data,
          handler: handler,
          guid: handler.guid,
          selector: selector,
          needsContext: selector && jQuery.expr.match.needsContext.test(selector),
          namespace: namespaces.join(".")
        }, handleObjIn);
        if (!(handlers = events[type])) {
          handlers = events[type] = [];
          handlers.delegateCount = 0;
          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
            if (elem.addEventListener) {
              elem.addEventListener(type, eventHandle);
            }
          }
        }
        if (special.add) {
          special.add.call(elem, handleObj);
          if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
          }
        }
        if (selector) {
          handlers.splice(handlers.delegateCount++, 0, handleObj);
        } else {
          handlers.push(handleObj);
        }
        jQuery.event.global[type] = true;
      }
    },
    remove: function(elem, types, handler, selector, mappedTypes) {
      var j,
          origCount,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
      if (!elemData || !(events = elemData.events)) {
        return;
      }
      types = (types || "").match(rnotwhite) || [""];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort();
        if (!type) {
          for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
          }
          continue;
        }
        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        handlers = events[type] || [];
        tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
        origCount = j = handlers.length;
        while (j--) {
          handleObj = handlers[j];
          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
            handlers.splice(j, 1);
            if (handleObj.selector) {
              handlers.delegateCount--;
            }
            if (special.remove) {
              special.remove.call(elem, handleObj);
            }
          }
        }
        if (origCount && !handlers.length) {
          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
            jQuery.removeEvent(elem, type, elemData.handle);
          }
          delete events[type];
        }
      }
      if (jQuery.isEmptyObject(events)) {
        dataPriv.remove(elem, "handle events");
      }
    },
    dispatch: function(event) {
      event = jQuery.event.fix(event);
      var i,
          j,
          ret,
          matched,
          handleObj,
          handlerQueue = [],
          args = slice.call(arguments),
          handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
          special = jQuery.event.special[event.type] || {};
      args[0] = event;
      event.delegateTarget = this;
      if (special.preDispatch && special.preDispatch.call(this, event) === false) {
        return;
      }
      handlerQueue = jQuery.event.handlers.call(this, event, handlers);
      i = 0;
      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
        event.currentTarget = matched.elem;
        j = 0;
        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
          if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
            event.handleObj = handleObj;
            event.data = handleObj.data;
            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
            if (ret !== undefined) {
              if ((event.result = ret) === false) {
                event.preventDefault();
                event.stopPropagation();
              }
            }
          }
        }
      }
      if (special.postDispatch) {
        special.postDispatch.call(this, event);
      }
      return event.result;
    },
    handlers: function(event, handlers) {
      var i,
          matches,
          sel,
          handleObj,
          handlerQueue = [],
          delegateCount = handlers.delegateCount,
          cur = event.target;
      if (delegateCount && cur.nodeType && (event.type !== "click" || isNaN(event.button) || event.button < 1)) {
        for (; cur !== this; cur = cur.parentNode || this) {
          if (cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click")) {
            matches = [];
            for (i = 0; i < delegateCount; i++) {
              handleObj = handlers[i];
              sel = handleObj.selector + " ";
              if (matches[sel] === undefined) {
                matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
              }
              if (matches[sel]) {
                matches.push(handleObj);
              }
            }
            if (matches.length) {
              handlerQueue.push({
                elem: cur,
                handlers: matches
              });
            }
          }
        }
      }
      if (delegateCount < handlers.length) {
        handlerQueue.push({
          elem: this,
          handlers: handlers.slice(delegateCount)
        });
      }
      return handlerQueue;
    },
    props: ("altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " + "metaKey relatedTarget shiftKey target timeStamp view which").split(" "),
    fixHooks: {},
    keyHooks: {
      props: "char charCode key keyCode".split(" "),
      filter: function(event, original) {
        if (event.which == null) {
          event.which = original.charCode != null ? original.charCode : original.keyCode;
        }
        return event;
      }
    },
    mouseHooks: {
      props: ("button buttons clientX clientY offsetX offsetY pageX pageY " + "screenX screenY toElement").split(" "),
      filter: function(event, original) {
        var eventDoc,
            doc,
            body,
            button = original.button;
        if (event.pageX == null && original.clientX != null) {
          eventDoc = event.target.ownerDocument || document;
          doc = eventDoc.documentElement;
          body = eventDoc.body;
          event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
          event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
        }
        if (!event.which && button !== undefined) {
          event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));
        }
        return event;
      }
    },
    fix: function(event) {
      if (event[jQuery.expando]) {
        return event;
      }
      var i,
          prop,
          copy,
          type = event.type,
          originalEvent = event,
          fixHook = this.fixHooks[type];
      if (!fixHook) {
        this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};
      }
      copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
      event = new jQuery.Event(originalEvent);
      i = copy.length;
      while (i--) {
        prop = copy[i];
        event[prop] = originalEvent[prop];
      }
      if (!event.target) {
        event.target = document;
      }
      if (event.target.nodeType === 3) {
        event.target = event.target.parentNode;
      }
      return fixHook.filter ? fixHook.filter(event, originalEvent) : event;
    },
    special: {
      load: {noBubble: true},
      focus: {
        trigger: function() {
          if (this !== safeActiveElement() && this.focus) {
            this.focus();
            return false;
          }
        },
        delegateType: "focusin"
      },
      blur: {
        trigger: function() {
          if (this === safeActiveElement() && this.blur) {
            this.blur();
            return false;
          }
        },
        delegateType: "focusout"
      },
      click: {
        trigger: function() {
          if (this.type === "checkbox" && this.click && jQuery.nodeName(this, "input")) {
            this.click();
            return false;
          }
        },
        _default: function(event) {
          return jQuery.nodeName(event.target, "a");
        }
      },
      beforeunload: {postDispatch: function(event) {
          if (event.result !== undefined && event.originalEvent) {
            event.originalEvent.returnValue = event.result;
          }
        }}
    }
  };
  jQuery.removeEvent = function(elem, type, handle) {
    if (elem.removeEventListener) {
      elem.removeEventListener(type, handle);
    }
  };
  jQuery.Event = function(src, props) {
    if (!(this instanceof jQuery.Event)) {
      return new jQuery.Event(src, props);
    }
    if (src && src.type) {
      this.originalEvent = src;
      this.type = src.type;
      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;
    } else {
      this.type = src;
    }
    if (props) {
      jQuery.extend(this, props);
    }
    this.timeStamp = src && src.timeStamp || jQuery.now();
    this[jQuery.expando] = true;
  };
  jQuery.Event.prototype = {
    constructor: jQuery.Event,
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    isSimulated: false,
    preventDefault: function() {
      var e = this.originalEvent;
      this.isDefaultPrevented = returnTrue;
      if (e && !this.isSimulated) {
        e.preventDefault();
      }
    },
    stopPropagation: function() {
      var e = this.originalEvent;
      this.isPropagationStopped = returnTrue;
      if (e && !this.isSimulated) {
        e.stopPropagation();
      }
    },
    stopImmediatePropagation: function() {
      var e = this.originalEvent;
      this.isImmediatePropagationStopped = returnTrue;
      if (e && !this.isSimulated) {
        e.stopImmediatePropagation();
      }
      this.stopPropagation();
    }
  };
  jQuery.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function(orig, fix) {
    jQuery.event.special[orig] = {
      delegateType: fix,
      bindType: fix,
      handle: function(event) {
        var ret,
            target = this,
            related = event.relatedTarget,
            handleObj = event.handleObj;
        if (!related || (related !== target && !jQuery.contains(target, related))) {
          event.type = handleObj.origType;
          ret = handleObj.handler.apply(this, arguments);
          event.type = fix;
        }
        return ret;
      }
    };
  });
  jQuery.fn.extend({
    on: function(types, selector, data, fn) {
      return on(this, types, selector, data, fn);
    },
    one: function(types, selector, data, fn) {
      return on(this, types, selector, data, fn, 1);
    },
    off: function(types, selector, fn) {
      var handleObj,
          type;
      if (types && types.preventDefault && types.handleObj) {
        handleObj = types.handleObj;
        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
        return this;
      }
      if (typeof types === "object") {
        for (type in types) {
          this.off(type, selector, types[type]);
        }
        return this;
      }
      if (selector === false || typeof selector === "function") {
        fn = selector;
        selector = undefined;
      }
      if (fn === false) {
        fn = returnFalse;
      }
      return this.each(function() {
        jQuery.event.remove(this, types, fn, selector);
      });
    }
  });
  var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
      rnoInnerhtml = /<script|<style|<link/i,
      rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
      rscriptTypeMasked = /^true\/(.*)/,
      rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
  function manipulationTarget(elem, content) {
    return jQuery.nodeName(elem, "table") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem;
  }
  function disableScript(elem) {
    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
    return elem;
  }
  function restoreScript(elem) {
    var match = rscriptTypeMasked.exec(elem.type);
    if (match) {
      elem.type = match[1];
    } else {
      elem.removeAttribute("type");
    }
    return elem;
  }
  function cloneCopyEvent(src, dest) {
    var i,
        l,
        type,
        pdataOld,
        pdataCur,
        udataOld,
        udataCur,
        events;
    if (dest.nodeType !== 1) {
      return;
    }
    if (dataPriv.hasData(src)) {
      pdataOld = dataPriv.access(src);
      pdataCur = dataPriv.set(dest, pdataOld);
      events = pdataOld.events;
      if (events) {
        delete pdataCur.handle;
        pdataCur.events = {};
        for (type in events) {
          for (i = 0, l = events[type].length; i < l; i++) {
            jQuery.event.add(dest, type, events[type][i]);
          }
        }
      }
    }
    if (dataUser.hasData(src)) {
      udataOld = dataUser.access(src);
      udataCur = jQuery.extend({}, udataOld);
      dataUser.set(dest, udataCur);
    }
  }
  function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase();
    if (nodeName === "input" && rcheckableType.test(src.type)) {
      dest.checked = src.checked;
    } else if (nodeName === "input" || nodeName === "textarea") {
      dest.defaultValue = src.defaultValue;
    }
  }
  function domManip(collection, args, callback, ignored) {
    args = concat.apply([], args);
    var fragment,
        first,
        scripts,
        hasScripts,
        node,
        doc,
        i = 0,
        l = collection.length,
        iNoClone = l - 1,
        value = args[0],
        isFunction = jQuery.isFunction(value);
    if (isFunction || (l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value))) {
      return collection.each(function(index) {
        var self = collection.eq(index);
        if (isFunction) {
          args[0] = value.call(this, index, self.html());
        }
        domManip(self, args, callback, ignored);
      });
    }
    if (l) {
      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
      first = fragment.firstChild;
      if (fragment.childNodes.length === 1) {
        fragment = first;
      }
      if (first || ignored) {
        scripts = jQuery.map(getAll(fragment, "script"), disableScript);
        hasScripts = scripts.length;
        for (; i < l; i++) {
          node = fragment;
          if (i !== iNoClone) {
            node = jQuery.clone(node, true, true);
            if (hasScripts) {
              jQuery.merge(scripts, getAll(node, "script"));
            }
          }
          callback.call(collection[i], node, i);
        }
        if (hasScripts) {
          doc = scripts[scripts.length - 1].ownerDocument;
          jQuery.map(scripts, restoreScript);
          for (i = 0; i < hasScripts; i++) {
            node = scripts[i];
            if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {
              if (node.src) {
                if (jQuery._evalUrl) {
                  jQuery._evalUrl(node.src);
                }
              } else {
                jQuery.globalEval(node.textContent.replace(rcleanScript, ""));
              }
            }
          }
        }
      }
    }
    return collection;
  }
  function remove(elem, selector, keepData) {
    var node,
        nodes = selector ? jQuery.filter(selector, elem) : elem,
        i = 0;
    for (; (node = nodes[i]) != null; i++) {
      if (!keepData && node.nodeType === 1) {
        jQuery.cleanData(getAll(node));
      }
      if (node.parentNode) {
        if (keepData && jQuery.contains(node.ownerDocument, node)) {
          setGlobalEval(getAll(node, "script"));
        }
        node.parentNode.removeChild(node);
      }
    }
    return elem;
  }
  jQuery.extend({
    htmlPrefilter: function(html) {
      return html.replace(rxhtmlTag, "<$1></$2>");
    },
    clone: function(elem, dataAndEvents, deepDataAndEvents) {
      var i,
          l,
          srcElements,
          destElements,
          clone = elem.cloneNode(true),
          inPage = jQuery.contains(elem.ownerDocument, elem);
      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
        destElements = getAll(clone);
        srcElements = getAll(elem);
        for (i = 0, l = srcElements.length; i < l; i++) {
          fixInput(srcElements[i], destElements[i]);
        }
      }
      if (dataAndEvents) {
        if (deepDataAndEvents) {
          srcElements = srcElements || getAll(elem);
          destElements = destElements || getAll(clone);
          for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
          }
        } else {
          cloneCopyEvent(elem, clone);
        }
      }
      destElements = getAll(clone, "script");
      if (destElements.length > 0) {
        setGlobalEval(destElements, !inPage && getAll(elem, "script"));
      }
      return clone;
    },
    cleanData: function(elems) {
      var data,
          elem,
          type,
          special = jQuery.event.special,
          i = 0;
      for (; (elem = elems[i]) !== undefined; i++) {
        if (acceptData(elem)) {
          if ((data = elem[dataPriv.expando])) {
            if (data.events) {
              for (type in data.events) {
                if (special[type]) {
                  jQuery.event.remove(elem, type);
                } else {
                  jQuery.removeEvent(elem, type, data.handle);
                }
              }
            }
            elem[dataPriv.expando] = undefined;
          }
          if (elem[dataUser.expando]) {
            elem[dataUser.expando] = undefined;
          }
        }
      }
    }
  });
  jQuery.fn.extend({
    domManip: domManip,
    detach: function(selector) {
      return remove(this, selector, true);
    },
    remove: function(selector) {
      return remove(this, selector);
    },
    text: function(value) {
      return access(this, function(value) {
        return value === undefined ? jQuery.text(this) : this.empty().each(function() {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            this.textContent = value;
          }
        });
      }, null, value, arguments.length);
    },
    append: function() {
      return domManip(this, arguments, function(elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.appendChild(elem);
        }
      });
    },
    prepend: function() {
      return domManip(this, arguments, function(elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.insertBefore(elem, target.firstChild);
        }
      });
    },
    before: function() {
      return domManip(this, arguments, function(elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this);
        }
      });
    },
    after: function() {
      return domManip(this, arguments, function(elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this.nextSibling);
        }
      });
    },
    empty: function() {
      var elem,
          i = 0;
      for (; (elem = this[i]) != null; i++) {
        if (elem.nodeType === 1) {
          jQuery.cleanData(getAll(elem, false));
          elem.textContent = "";
        }
      }
      return this;
    },
    clone: function(dataAndEvents, deepDataAndEvents) {
      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
      return this.map(function() {
        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
      });
    },
    html: function(value) {
      return access(this, function(value) {
        var elem = this[0] || {},
            i = 0,
            l = this.length;
        if (value === undefined && elem.nodeType === 1) {
          return elem.innerHTML;
        }
        if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
          value = jQuery.htmlPrefilter(value);
          try {
            for (; i < l; i++) {
              elem = this[i] || {};
              if (elem.nodeType === 1) {
                jQuery.cleanData(getAll(elem, false));
                elem.innerHTML = value;
              }
            }
            elem = 0;
          } catch (e) {}
        }
        if (elem) {
          this.empty().append(value);
        }
      }, null, value, arguments.length);
    },
    replaceWith: function() {
      var ignored = [];
      return domManip(this, arguments, function(elem) {
        var parent = this.parentNode;
        if (jQuery.inArray(this, ignored) < 0) {
          jQuery.cleanData(getAll(this));
          if (parent) {
            parent.replaceChild(elem, this);
          }
        }
      }, ignored);
    }
  });
  jQuery.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function(name, original) {
    jQuery.fn[name] = function(selector) {
      var elems,
          ret = [],
          insert = jQuery(selector),
          last = insert.length - 1,
          i = 0;
      for (; i <= last; i++) {
        elems = i === last ? this : this.clone(true);
        jQuery(insert[i])[original](elems);
        push.apply(ret, elems.get());
      }
      return this.pushStack(ret);
    };
  });
  var iframe,
      elemdisplay = {
        HTML: "block",
        BODY: "block"
      };
  function actualDisplay(name, doc) {
    var elem = jQuery(doc.createElement(name)).appendTo(doc.body),
        display = jQuery.css(elem[0], "display");
    elem.detach();
    return display;
  }
  function defaultDisplay(nodeName) {
    var doc = document,
        display = elemdisplay[nodeName];
    if (!display) {
      display = actualDisplay(nodeName, doc);
      if (display === "none" || !display) {
        iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement);
        doc = iframe[0].contentDocument;
        doc.write();
        doc.close();
        display = actualDisplay(nodeName, doc);
        iframe.detach();
      }
      elemdisplay[nodeName] = display;
    }
    return display;
  }
  var rmargin = (/^margin/);
  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
  var getStyles = function(elem) {
    var view = elem.ownerDocument.defaultView;
    if (!view || !view.opener) {
      view = window;
    }
    return view.getComputedStyle(elem);
  };
  var swap = function(elem, options, callback, args) {
    var ret,
        name,
        old = {};
    for (name in options) {
      old[name] = elem.style[name];
      elem.style[name] = options[name];
    }
    ret = callback.apply(elem, args || []);
    for (name in options) {
      elem.style[name] = old[name];
    }
    return ret;
  };
  var documentElement = document.documentElement;
  (function() {
    var pixelPositionVal,
        boxSizingReliableVal,
        pixelMarginRightVal,
        reliableMarginLeftVal,
        container = document.createElement("div"),
        div = document.createElement("div");
    if (!div.style) {
      return;
    }
    div.style.backgroundClip = "content-box";
    div.cloneNode(true).style.backgroundClip = "";
    support.clearCloneStyle = div.style.backgroundClip === "content-box";
    container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" + "padding:0;margin-top:1px;position:absolute";
    container.appendChild(div);
    function computeStyleTests() {
      div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" + "position:relative;display:block;" + "margin:auto;border:1px;padding:1px;" + "top:1%;width:50%";
      div.innerHTML = "";
      documentElement.appendChild(container);
      var divStyle = window.getComputedStyle(div);
      pixelPositionVal = divStyle.top !== "1%";
      reliableMarginLeftVal = divStyle.marginLeft === "2px";
      boxSizingReliableVal = divStyle.width === "4px";
      div.style.marginRight = "50%";
      pixelMarginRightVal = divStyle.marginRight === "4px";
      documentElement.removeChild(container);
    }
    jQuery.extend(support, {
      pixelPosition: function() {
        computeStyleTests();
        return pixelPositionVal;
      },
      boxSizingReliable: function() {
        if (boxSizingReliableVal == null) {
          computeStyleTests();
        }
        return boxSizingReliableVal;
      },
      pixelMarginRight: function() {
        if (boxSizingReliableVal == null) {
          computeStyleTests();
        }
        return pixelMarginRightVal;
      },
      reliableMarginLeft: function() {
        if (boxSizingReliableVal == null) {
          computeStyleTests();
        }
        return reliableMarginLeftVal;
      },
      reliableMarginRight: function() {
        var ret,
            marginDiv = div.appendChild(document.createElement("div"));
        marginDiv.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;box-sizing:content-box;" + "display:block;margin:0;border:0;padding:0";
        marginDiv.style.marginRight = marginDiv.style.width = "0";
        div.style.width = "1px";
        documentElement.appendChild(container);
        ret = !parseFloat(window.getComputedStyle(marginDiv).marginRight);
        documentElement.removeChild(container);
        div.removeChild(marginDiv);
        return ret;
      }
    });
  })();
  function curCSS(elem, name, computed) {
    var width,
        minWidth,
        maxWidth,
        ret,
        style = elem.style;
    computed = computed || getStyles(elem);
    ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined;
    if ((ret === "" || ret === undefined) && !jQuery.contains(elem.ownerDocument, elem)) {
      ret = jQuery.style(elem, name);
    }
    if (computed) {
      if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth;
        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width;
        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
      }
    }
    return ret !== undefined ? ret + "" : ret;
  }
  function addGetHookIf(conditionFn, hookFn) {
    return {get: function() {
        if (conditionFn()) {
          delete this.get;
          return;
        }
        return (this.get = hookFn).apply(this, arguments);
      }};
  }
  var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
      cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
      cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
      },
      cssPrefixes = ["Webkit", "O", "Moz", "ms"],
      emptyStyle = document.createElement("div").style;
  function vendorPropName(name) {
    if (name in emptyStyle) {
      return name;
    }
    var capName = name[0].toUpperCase() + name.slice(1),
        i = cssPrefixes.length;
    while (i--) {
      name = cssPrefixes[i] + capName;
      if (name in emptyStyle) {
        return name;
      }
    }
  }
  function setPositiveNumber(elem, value, subtract) {
    var matches = rcssNum.exec(value);
    return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
  }
  function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
    var i = extra === (isBorderBox ? "border" : "content") ? 4 : name === "width" ? 1 : 0,
        val = 0;
    for (; i < 4; i += 2) {
      if (extra === "margin") {
        val += jQuery.css(elem, extra + cssExpand[i], true, styles);
      }
      if (isBorderBox) {
        if (extra === "content") {
          val -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        }
        if (extra !== "margin") {
          val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      } else {
        val += jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        if (extra !== "padding") {
          val += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      }
    }
    return val;
  }
  function getWidthOrHeight(elem, name, extra) {
    var valueIsBorderBox = true,
        val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
        styles = getStyles(elem),
        isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";
    if (val <= 0 || val == null) {
      val = curCSS(elem, name, styles);
      if (val < 0 || val == null) {
        val = elem.style[name];
      }
      if (rnumnonpx.test(val)) {
        return val;
      }
      valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
      val = parseFloat(val) || 0;
    }
    return (val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles)) + "px";
  }
  function showHide(elements, show) {
    var display,
        elem,
        hidden,
        values = [],
        index = 0,
        length = elements.length;
    for (; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      values[index] = dataPriv.get(elem, "olddisplay");
      display = elem.style.display;
      if (show) {
        if (!values[index] && display === "none") {
          elem.style.display = "";
        }
        if (elem.style.display === "" && isHidden(elem)) {
          values[index] = dataPriv.access(elem, "olddisplay", defaultDisplay(elem.nodeName));
        }
      } else {
        hidden = isHidden(elem);
        if (display !== "none" || !hidden) {
          dataPriv.set(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"));
        }
      }
    }
    for (index = 0; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      if (!show || elem.style.display === "none" || elem.style.display === "") {
        elem.style.display = show ? values[index] || "" : "none";
      }
    }
    return elements;
  }
  jQuery.extend({
    cssHooks: {opacity: {get: function(elem, computed) {
          if (computed) {
            var ret = curCSS(elem, "opacity");
            return ret === "" ? "1" : ret;
          }
        }}},
    cssNumber: {
      "animationIterationCount": true,
      "columnCount": true,
      "fillOpacity": true,
      "flexGrow": true,
      "flexShrink": true,
      "fontWeight": true,
      "lineHeight": true,
      "opacity": true,
      "order": true,
      "orphans": true,
      "widows": true,
      "zIndex": true,
      "zoom": true
    },
    cssProps: {"float": "cssFloat"},
    style: function(elem, name, value, extra) {
      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
        return;
      }
      var ret,
          type,
          hooks,
          origName = jQuery.camelCase(name),
          style = elem.style;
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      if (value !== undefined) {
        type = typeof value;
        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
          value = adjustCSS(elem, name, ret);
          type = "number";
        }
        if (value == null || value !== value) {
          return;
        }
        if (type === "number") {
          value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
        }
        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
          style[name] = "inherit";
        }
        if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
          style[name] = value;
        }
      } else {
        if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
          return ret;
        }
        return style[name];
      }
    },
    css: function(elem, name, extra, styles) {
      var val,
          num,
          hooks,
          origName = jQuery.camelCase(name);
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      if (hooks && "get" in hooks) {
        val = hooks.get(elem, true, extra);
      }
      if (val === undefined) {
        val = curCSS(elem, name, styles);
      }
      if (val === "normal" && name in cssNormalTransform) {
        val = cssNormalTransform[name];
      }
      if (extra === "" || extra) {
        num = parseFloat(val);
        return extra === true || isFinite(num) ? num || 0 : val;
      }
      return val;
    }
  });
  jQuery.each(["height", "width"], function(i, name) {
    jQuery.cssHooks[name] = {
      get: function(elem, computed, extra) {
        if (computed) {
          return rdisplayswap.test(jQuery.css(elem, "display")) && elem.offsetWidth === 0 ? swap(elem, cssShow, function() {
            return getWidthOrHeight(elem, name, extra);
          }) : getWidthOrHeight(elem, name, extra);
        }
      },
      set: function(elem, value, extra) {
        var matches,
            styles = extra && getStyles(elem),
            subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, "boxSizing", false, styles) === "border-box", styles);
        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
          elem.style[name] = value;
          value = jQuery.css(elem, name);
        }
        return setPositiveNumber(elem, value, subtract);
      }
    };
  });
  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
    if (computed) {
      return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {marginLeft: 0}, function() {
        return elem.getBoundingClientRect().left;
      })) + "px";
    }
  });
  jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {
    if (computed) {
      return swap(elem, {"display": "inline-block"}, curCSS, [elem, "marginRight"]);
    }
  });
  jQuery.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function(prefix, suffix) {
    jQuery.cssHooks[prefix + suffix] = {expand: function(value) {
        var i = 0,
            expanded = {},
            parts = typeof value === "string" ? value.split(" ") : [value];
        for (; i < 4; i++) {
          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
        }
        return expanded;
      }};
    if (!rmargin.test(prefix)) {
      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    }
  });
  jQuery.fn.extend({
    css: function(name, value) {
      return access(this, function(elem, name, value) {
        var styles,
            len,
            map = {},
            i = 0;
        if (jQuery.isArray(name)) {
          styles = getStyles(elem);
          len = name.length;
          for (; i < len; i++) {
            map[name[i]] = jQuery.css(elem, name[i], false, styles);
          }
          return map;
        }
        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
      }, name, value, arguments.length > 1);
    },
    show: function() {
      return showHide(this, true);
    },
    hide: function() {
      return showHide(this);
    },
    toggle: function(state) {
      if (typeof state === "boolean") {
        return state ? this.show() : this.hide();
      }
      return this.each(function() {
        if (isHidden(this)) {
          jQuery(this).show();
        } else {
          jQuery(this).hide();
        }
      });
    }
  });
  function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
  }
  jQuery.Tween = Tween;
  Tween.prototype = {
    constructor: Tween,
    init: function(elem, options, prop, end, easing, unit) {
      this.elem = elem;
      this.prop = prop;
      this.easing = easing || jQuery.easing._default;
      this.options = options;
      this.start = this.now = this.cur();
      this.end = end;
      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
    },
    cur: function() {
      var hooks = Tween.propHooks[this.prop];
      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
    },
    run: function(percent) {
      var eased,
          hooks = Tween.propHooks[this.prop];
      if (this.options.duration) {
        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
      } else {
        this.pos = eased = percent;
      }
      this.now = (this.end - this.start) * eased + this.start;
      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }
      if (hooks && hooks.set) {
        hooks.set(this);
      } else {
        Tween.propHooks._default.set(this);
      }
      return this;
    }
  };
  Tween.prototype.init.prototype = Tween.prototype;
  Tween.propHooks = {_default: {
      get: function(tween) {
        var result;
        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
          return tween.elem[tween.prop];
        }
        result = jQuery.css(tween.elem, tween.prop, "");
        return !result || result === "auto" ? 0 : result;
      },
      set: function(tween) {
        if (jQuery.fx.step[tween.prop]) {
          jQuery.fx.step[tween.prop](tween);
        } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
        } else {
          tween.elem[tween.prop] = tween.now;
        }
      }
    }};
  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {set: function(tween) {
      if (tween.elem.nodeType && tween.elem.parentNode) {
        tween.elem[tween.prop] = tween.now;
      }
    }};
  jQuery.easing = {
    linear: function(p) {
      return p;
    },
    swing: function(p) {
      return 0.5 - Math.cos(p * Math.PI) / 2;
    },
    _default: "swing"
  };
  jQuery.fx = Tween.prototype.init;
  jQuery.fx.step = {};
  var fxNow,
      timerId,
      rfxtypes = /^(?:toggle|show|hide)$/,
      rrun = /queueHooks$/;
  function createFxNow() {
    window.setTimeout(function() {
      fxNow = undefined;
    });
    return (fxNow = jQuery.now());
  }
  function genFx(type, includeWidth) {
    var which,
        i = 0,
        attrs = {height: type};
    includeWidth = includeWidth ? 1 : 0;
    for (; i < 4; i += 2 - includeWidth) {
      which = cssExpand[i];
      attrs["margin" + which] = attrs["padding" + which] = type;
    }
    if (includeWidth) {
      attrs.opacity = attrs.width = type;
    }
    return attrs;
  }
  function createTween(value, prop, animation) {
    var tween,
        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
        index = 0,
        length = collection.length;
    for (; index < length; index++) {
      if ((tween = collection[index].call(animation, prop, value))) {
        return tween;
      }
    }
  }
  function defaultPrefilter(elem, props, opts) {
    var prop,
        value,
        toggle,
        tween,
        hooks,
        oldfire,
        display,
        checkDisplay,
        anim = this,
        orig = {},
        style = elem.style,
        hidden = elem.nodeType && isHidden(elem),
        dataShow = dataPriv.get(elem, "fxshow");
    if (!opts.queue) {
      hooks = jQuery._queueHooks(elem, "fx");
      if (hooks.unqueued == null) {
        hooks.unqueued = 0;
        oldfire = hooks.empty.fire;
        hooks.empty.fire = function() {
          if (!hooks.unqueued) {
            oldfire();
          }
        };
      }
      hooks.unqueued++;
      anim.always(function() {
        anim.always(function() {
          hooks.unqueued--;
          if (!jQuery.queue(elem, "fx").length) {
            hooks.empty.fire();
          }
        });
      });
    }
    if (elem.nodeType === 1 && ("height" in props || "width" in props)) {
      opts.overflow = [style.overflow, style.overflowX, style.overflowY];
      display = jQuery.css(elem, "display");
      checkDisplay = display === "none" ? dataPriv.get(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display;
      if (checkDisplay === "inline" && jQuery.css(elem, "float") === "none") {
        style.display = "inline-block";
      }
    }
    if (opts.overflow) {
      style.overflow = "hidden";
      anim.always(function() {
        style.overflow = opts.overflow[0];
        style.overflowX = opts.overflow[1];
        style.overflowY = opts.overflow[2];
      });
    }
    for (prop in props) {
      value = props[prop];
      if (rfxtypes.exec(value)) {
        delete props[prop];
        toggle = toggle || value === "toggle";
        if (value === (hidden ? "hide" : "show")) {
          if (value === "show" && dataShow && dataShow[prop] !== undefined) {
            hidden = true;
          } else {
            continue;
          }
        }
        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
      } else {
        display = undefined;
      }
    }
    if (!jQuery.isEmptyObject(orig)) {
      if (dataShow) {
        if ("hidden" in dataShow) {
          hidden = dataShow.hidden;
        }
      } else {
        dataShow = dataPriv.access(elem, "fxshow", {});
      }
      if (toggle) {
        dataShow.hidden = !hidden;
      }
      if (hidden) {
        jQuery(elem).show();
      } else {
        anim.done(function() {
          jQuery(elem).hide();
        });
      }
      anim.done(function() {
        var prop;
        dataPriv.remove(elem, "fxshow");
        for (prop in orig) {
          jQuery.style(elem, prop, orig[prop]);
        }
      });
      for (prop in orig) {
        tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
        if (!(prop in dataShow)) {
          dataShow[prop] = tween.start;
          if (hidden) {
            tween.end = tween.start;
            tween.start = prop === "width" || prop === "height" ? 1 : 0;
          }
        }
      }
    } else if ((display === "none" ? defaultDisplay(elem.nodeName) : display) === "inline") {
      style.display = display;
    }
  }
  function propFilter(props, specialEasing) {
    var index,
        name,
        easing,
        value,
        hooks;
    for (index in props) {
      name = jQuery.camelCase(index);
      easing = specialEasing[name];
      value = props[index];
      if (jQuery.isArray(value)) {
        easing = value[1];
        value = props[index] = value[0];
      }
      if (index !== name) {
        props[name] = value;
        delete props[index];
      }
      hooks = jQuery.cssHooks[name];
      if (hooks && "expand" in hooks) {
        value = hooks.expand(value);
        delete props[name];
        for (index in value) {
          if (!(index in props)) {
            props[index] = value[index];
            specialEasing[index] = easing;
          }
        }
      } else {
        specialEasing[name] = easing;
      }
    }
  }
  function Animation(elem, properties, options) {
    var result,
        stopped,
        index = 0,
        length = Animation.prefilters.length,
        deferred = jQuery.Deferred().always(function() {
          delete tick.elem;
        }),
        tick = function() {
          if (stopped) {
            return false;
          }
          var currentTime = fxNow || createFxNow(),
              remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
              temp = remaining / animation.duration || 0,
              percent = 1 - temp,
              index = 0,
              length = animation.tweens.length;
          for (; index < length; index++) {
            animation.tweens[index].run(percent);
          }
          deferred.notifyWith(elem, [animation, percent, remaining]);
          if (percent < 1 && length) {
            return remaining;
          } else {
            deferred.resolveWith(elem, [animation]);
            return false;
          }
        },
        animation = deferred.promise({
          elem: elem,
          props: jQuery.extend({}, properties),
          opts: jQuery.extend(true, {
            specialEasing: {},
            easing: jQuery.easing._default
          }, options),
          originalProperties: properties,
          originalOptions: options,
          startTime: fxNow || createFxNow(),
          duration: options.duration,
          tweens: [],
          createTween: function(prop, end) {
            var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
            animation.tweens.push(tween);
            return tween;
          },
          stop: function(gotoEnd) {
            var index = 0,
                length = gotoEnd ? animation.tweens.length : 0;
            if (stopped) {
              return this;
            }
            stopped = true;
            for (; index < length; index++) {
              animation.tweens[index].run(1);
            }
            if (gotoEnd) {
              deferred.notifyWith(elem, [animation, 1, 0]);
              deferred.resolveWith(elem, [animation, gotoEnd]);
            } else {
              deferred.rejectWith(elem, [animation, gotoEnd]);
            }
            return this;
          }
        }),
        props = animation.props;
    propFilter(props, animation.opts.specialEasing);
    for (; index < length; index++) {
      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
      if (result) {
        if (jQuery.isFunction(result.stop)) {
          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);
        }
        return result;
      }
    }
    jQuery.map(props, createTween, animation);
    if (jQuery.isFunction(animation.opts.start)) {
      animation.opts.start.call(elem, animation);
    }
    jQuery.fx.timer(jQuery.extend(tick, {
      elem: elem,
      anim: animation,
      queue: animation.opts.queue
    }));
    return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
  }
  jQuery.Animation = jQuery.extend(Animation, {
    tweeners: {"*": [function(prop, value) {
        var tween = this.createTween(prop, value);
        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
        return tween;
      }]},
    tweener: function(props, callback) {
      if (jQuery.isFunction(props)) {
        callback = props;
        props = ["*"];
      } else {
        props = props.match(rnotwhite);
      }
      var prop,
          index = 0,
          length = props.length;
      for (; index < length; index++) {
        prop = props[index];
        Animation.tweeners[prop] = Animation.tweeners[prop] || [];
        Animation.tweeners[prop].unshift(callback);
      }
    },
    prefilters: [defaultPrefilter],
    prefilter: function(callback, prepend) {
      if (prepend) {
        Animation.prefilters.unshift(callback);
      } else {
        Animation.prefilters.push(callback);
      }
    }
  });
  jQuery.speed = function(speed, easing, fn) {
    var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
      complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
      duration: speed,
      easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
    };
    opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
    if (opt.queue == null || opt.queue === true) {
      opt.queue = "fx";
    }
    opt.old = opt.complete;
    opt.complete = function() {
      if (jQuery.isFunction(opt.old)) {
        opt.old.call(this);
      }
      if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
      }
    };
    return opt;
  };
  jQuery.fn.extend({
    fadeTo: function(speed, to, easing, callback) {
      return this.filter(isHidden).css("opacity", 0).show().end().animate({opacity: to}, speed, easing, callback);
    },
    animate: function(prop, speed, easing, callback) {
      var empty = jQuery.isEmptyObject(prop),
          optall = jQuery.speed(speed, easing, callback),
          doAnimation = function() {
            var anim = Animation(this, jQuery.extend({}, prop), optall);
            if (empty || dataPriv.get(this, "finish")) {
              anim.stop(true);
            }
          };
      doAnimation.finish = doAnimation;
      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
    },
    stop: function(type, clearQueue, gotoEnd) {
      var stopQueue = function(hooks) {
        var stop = hooks.stop;
        delete hooks.stop;
        stop(gotoEnd);
      };
      if (typeof type !== "string") {
        gotoEnd = clearQueue;
        clearQueue = type;
        type = undefined;
      }
      if (clearQueue && type !== false) {
        this.queue(type || "fx", []);
      }
      return this.each(function() {
        var dequeue = true,
            index = type != null && type + "queueHooks",
            timers = jQuery.timers,
            data = dataPriv.get(this);
        if (index) {
          if (data[index] && data[index].stop) {
            stopQueue(data[index]);
          }
        } else {
          for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
              stopQueue(data[index]);
            }
          }
        }
        for (index = timers.length; index--; ) {
          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
            timers[index].anim.stop(gotoEnd);
            dequeue = false;
            timers.splice(index, 1);
          }
        }
        if (dequeue || !gotoEnd) {
          jQuery.dequeue(this, type);
        }
      });
    },
    finish: function(type) {
      if (type !== false) {
        type = type || "fx";
      }
      return this.each(function() {
        var index,
            data = dataPriv.get(this),
            queue = data[type + "queue"],
            hooks = data[type + "queueHooks"],
            timers = jQuery.timers,
            length = queue ? queue.length : 0;
        data.finish = true;
        jQuery.queue(this, type, []);
        if (hooks && hooks.stop) {
          hooks.stop.call(this, true);
        }
        for (index = timers.length; index--; ) {
          if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);
            timers.splice(index, 1);
          }
        }
        for (index = 0; index < length; index++) {
          if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
          }
        }
        delete data.finish;
      });
    }
  });
  jQuery.each(["toggle", "show", "hide"], function(i, name) {
    var cssFn = jQuery.fn[name];
    jQuery.fn[name] = function(speed, easing, callback) {
      return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
    };
  });
  jQuery.each({
    slideDown: genFx("show"),
    slideUp: genFx("hide"),
    slideToggle: genFx("toggle"),
    fadeIn: {opacity: "show"},
    fadeOut: {opacity: "hide"},
    fadeToggle: {opacity: "toggle"}
  }, function(name, props) {
    jQuery.fn[name] = function(speed, easing, callback) {
      return this.animate(props, speed, easing, callback);
    };
  });
  jQuery.timers = [];
  jQuery.fx.tick = function() {
    var timer,
        i = 0,
        timers = jQuery.timers;
    fxNow = jQuery.now();
    for (; i < timers.length; i++) {
      timer = timers[i];
      if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
      }
    }
    if (!timers.length) {
      jQuery.fx.stop();
    }
    fxNow = undefined;
  };
  jQuery.fx.timer = function(timer) {
    jQuery.timers.push(timer);
    if (timer()) {
      jQuery.fx.start();
    } else {
      jQuery.timers.pop();
    }
  };
  jQuery.fx.interval = 13;
  jQuery.fx.start = function() {
    if (!timerId) {
      timerId = window.setInterval(jQuery.fx.tick, jQuery.fx.interval);
    }
  };
  jQuery.fx.stop = function() {
    window.clearInterval(timerId);
    timerId = null;
  };
  jQuery.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
  };
  jQuery.fn.delay = function(time, type) {
    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
    type = type || "fx";
    return this.queue(type, function(next, hooks) {
      var timeout = window.setTimeout(next, time);
      hooks.stop = function() {
        window.clearTimeout(timeout);
      };
    });
  };
  (function() {
    var input = document.createElement("input"),
        select = document.createElement("select"),
        opt = select.appendChild(document.createElement("option"));
    input.type = "checkbox";
    support.checkOn = input.value !== "";
    support.optSelected = opt.selected;
    select.disabled = true;
    support.optDisabled = !opt.disabled;
    input = document.createElement("input");
    input.value = "t";
    input.type = "radio";
    support.radioValue = input.value === "t";
  })();
  var boolHook,
      attrHandle = jQuery.expr.attrHandle;
  jQuery.fn.extend({
    attr: function(name, value) {
      return access(this, jQuery.attr, name, value, arguments.length > 1);
    },
    removeAttr: function(name) {
      return this.each(function() {
        jQuery.removeAttr(this, name);
      });
    }
  });
  jQuery.extend({
    attr: function(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType;
      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      if (typeof elem.getAttribute === "undefined") {
        return jQuery.prop(elem, name, value);
      }
      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        name = name.toLowerCase();
        hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
      }
      if (value !== undefined) {
        if (value === null) {
          jQuery.removeAttr(elem, name);
          return;
        }
        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }
        elem.setAttribute(name, value + "");
        return value;
      }
      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }
      ret = jQuery.find.attr(elem, name);
      return ret == null ? undefined : ret;
    },
    attrHooks: {type: {set: function(elem, value) {
          if (!support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
            var val = elem.value;
            elem.setAttribute("type", value);
            if (val) {
              elem.value = val;
            }
            return value;
          }
        }}},
    removeAttr: function(elem, value) {
      var name,
          propName,
          i = 0,
          attrNames = value && value.match(rnotwhite);
      if (attrNames && elem.nodeType === 1) {
        while ((name = attrNames[i++])) {
          propName = jQuery.propFix[name] || name;
          if (jQuery.expr.match.bool.test(name)) {
            elem[propName] = false;
          }
          elem.removeAttribute(name);
        }
      }
    }
  });
  boolHook = {set: function(elem, value, name) {
      if (value === false) {
        jQuery.removeAttr(elem, name);
      } else {
        elem.setAttribute(name, name);
      }
      return name;
    }};
  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
    var getter = attrHandle[name] || jQuery.find.attr;
    attrHandle[name] = function(elem, name, isXML) {
      var ret,
          handle;
      if (!isXML) {
        handle = attrHandle[name];
        attrHandle[name] = ret;
        ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;
        attrHandle[name] = handle;
      }
      return ret;
    };
  });
  var rfocusable = /^(?:input|select|textarea|button)$/i,
      rclickable = /^(?:a|area)$/i;
  jQuery.fn.extend({
    prop: function(name, value) {
      return access(this, jQuery.prop, name, value, arguments.length > 1);
    },
    removeProp: function(name) {
      return this.each(function() {
        delete this[jQuery.propFix[name] || name];
      });
    }
  });
  jQuery.extend({
    prop: function(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType;
      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        name = jQuery.propFix[name] || name;
        hooks = jQuery.propHooks[name];
      }
      if (value !== undefined) {
        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }
        return (elem[name] = value);
      }
      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }
      return elem[name];
    },
    propHooks: {tabIndex: {get: function(elem) {
          var tabindex = jQuery.find.attr(elem, "tabindex");
          return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1;
        }}},
    propFix: {
      "for": "htmlFor",
      "class": "className"
    }
  });
  if (!support.optSelected) {
    jQuery.propHooks.selected = {
      get: function(elem) {
        var parent = elem.parentNode;
        if (parent && parent.parentNode) {
          parent.parentNode.selectedIndex;
        }
        return null;
      },
      set: function(elem) {
        var parent = elem.parentNode;
        if (parent) {
          parent.selectedIndex;
          if (parent.parentNode) {
            parent.parentNode.selectedIndex;
          }
        }
      }
    };
  }
  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
    jQuery.propFix[this.toLowerCase()] = this;
  });
  var rclass = /[\t\r\n\f]/g;
  function getClass(elem) {
    return elem.getAttribute && elem.getAttribute("class") || "";
  }
  jQuery.fn.extend({
    addClass: function(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;
      if (jQuery.isFunction(value)) {
        return this.each(function(j) {
          jQuery(this).addClass(value.call(this, j, getClass(this)));
        });
      }
      if (typeof value === "string" && value) {
        classes = value.match(rnotwhite) || [];
        while ((elem = this[i++])) {
          curValue = getClass(elem);
          cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
          if (cur) {
            j = 0;
            while ((clazz = classes[j++])) {
              if (cur.indexOf(" " + clazz + " ") < 0) {
                cur += clazz + " ";
              }
            }
            finalValue = jQuery.trim(cur);
            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }
      return this;
    },
    removeClass: function(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;
      if (jQuery.isFunction(value)) {
        return this.each(function(j) {
          jQuery(this).removeClass(value.call(this, j, getClass(this)));
        });
      }
      if (!arguments.length) {
        return this.attr("class", "");
      }
      if (typeof value === "string" && value) {
        classes = value.match(rnotwhite) || [];
        while ((elem = this[i++])) {
          curValue = getClass(elem);
          cur = elem.nodeType === 1 && (" " + curValue + " ").replace(rclass, " ");
          if (cur) {
            j = 0;
            while ((clazz = classes[j++])) {
              while (cur.indexOf(" " + clazz + " ") > -1) {
                cur = cur.replace(" " + clazz + " ", " ");
              }
            }
            finalValue = jQuery.trim(cur);
            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }
      return this;
    },
    toggleClass: function(value, stateVal) {
      var type = typeof value;
      if (typeof stateVal === "boolean" && type === "string") {
        return stateVal ? this.addClass(value) : this.removeClass(value);
      }
      if (jQuery.isFunction(value)) {
        return this.each(function(i) {
          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
        });
      }
      return this.each(function() {
        var className,
            i,
            self,
            classNames;
        if (type === "string") {
          i = 0;
          self = jQuery(this);
          classNames = value.match(rnotwhite) || [];
          while ((className = classNames[i++])) {
            if (self.hasClass(className)) {
              self.removeClass(className);
            } else {
              self.addClass(className);
            }
          }
        } else if (value === undefined || type === "boolean") {
          className = getClass(this);
          if (className) {
            dataPriv.set(this, "__className__", className);
          }
          if (this.setAttribute) {
            this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
          }
        }
      });
    },
    hasClass: function(selector) {
      var className,
          elem,
          i = 0;
      className = " " + selector + " ";
      while ((elem = this[i++])) {
        if (elem.nodeType === 1 && (" " + getClass(elem) + " ").replace(rclass, " ").indexOf(className) > -1) {
          return true;
        }
      }
      return false;
    }
  });
  var rreturn = /\r/g,
      rspaces = /[\x20\t\r\n\f]+/g;
  jQuery.fn.extend({val: function(value) {
      var hooks,
          ret,
          isFunction,
          elem = this[0];
      if (!arguments.length) {
        if (elem) {
          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
          if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
            return ret;
          }
          ret = elem.value;
          return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret;
        }
        return;
      }
      isFunction = jQuery.isFunction(value);
      return this.each(function(i) {
        var val;
        if (this.nodeType !== 1) {
          return;
        }
        if (isFunction) {
          val = value.call(this, i, jQuery(this).val());
        } else {
          val = value;
        }
        if (val == null) {
          val = "";
        } else if (typeof val === "number") {
          val += "";
        } else if (jQuery.isArray(val)) {
          val = jQuery.map(val, function(value) {
            return value == null ? "" : value + "";
          });
        }
        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
          this.value = val;
        }
      });
    }});
  jQuery.extend({valHooks: {
      option: {get: function(elem) {
          var val = jQuery.find.attr(elem, "value");
          return val != null ? val : jQuery.trim(jQuery.text(elem)).replace(rspaces, " ");
        }},
      select: {
        get: function(elem) {
          var value,
              option,
              options = elem.options,
              index = elem.selectedIndex,
              one = elem.type === "select-one" || index < 0,
              values = one ? null : [],
              max = one ? index + 1 : options.length,
              i = index < 0 ? max : one ? index : 0;
          for (; i < max; i++) {
            option = options[i];
            if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
              value = jQuery(option).val();
              if (one) {
                return value;
              }
              values.push(value);
            }
          }
          return values;
        },
        set: function(elem, value) {
          var optionSet,
              option,
              options = elem.options,
              values = jQuery.makeArray(value),
              i = options.length;
          while (i--) {
            option = options[i];
            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
              optionSet = true;
            }
          }
          if (!optionSet) {
            elem.selectedIndex = -1;
          }
          return values;
        }
      }
    }});
  jQuery.each(["radio", "checkbox"], function() {
    jQuery.valHooks[this] = {set: function(elem, value) {
        if (jQuery.isArray(value)) {
          return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1);
        }
      }};
    if (!support.checkOn) {
      jQuery.valHooks[this].get = function(elem) {
        return elem.getAttribute("value") === null ? "on" : elem.value;
      };
    }
  });
  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
  jQuery.extend(jQuery.event, {
    trigger: function(event, data, elem, onlyHandlers) {
      var i,
          cur,
          tmp,
          bubbleType,
          ontype,
          handle,
          special,
          eventPath = [elem || document],
          type = hasOwn.call(event, "type") ? event.type : event,
          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
      cur = tmp = elem = elem || document;
      if (elem.nodeType === 3 || elem.nodeType === 8) {
        return;
      }
      if (rfocusMorph.test(type + jQuery.event.triggered)) {
        return;
      }
      if (type.indexOf(".") > -1) {
        namespaces = type.split(".");
        type = namespaces.shift();
        namespaces.sort();
      }
      ontype = type.indexOf(":") < 0 && "on" + type;
      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
      event.isTrigger = onlyHandlers ? 2 : 3;
      event.namespace = namespaces.join(".");
      event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
      event.result = undefined;
      if (!event.target) {
        event.target = elem;
      }
      data = data == null ? [event] : jQuery.makeArray(data, [event]);
      special = jQuery.event.special[type] || {};
      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
        return;
      }
      if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
        bubbleType = special.delegateType || type;
        if (!rfocusMorph.test(bubbleType + type)) {
          cur = cur.parentNode;
        }
        for (; cur; cur = cur.parentNode) {
          eventPath.push(cur);
          tmp = cur;
        }
        if (tmp === (elem.ownerDocument || document)) {
          eventPath.push(tmp.defaultView || tmp.parentWindow || window);
        }
      }
      i = 0;
      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
        event.type = i > 1 ? bubbleType : special.bindType || type;
        handle = (dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle");
        if (handle) {
          handle.apply(cur, data);
        }
        handle = ontype && cur[ontype];
        if (handle && handle.apply && acceptData(cur)) {
          event.result = handle.apply(cur, data);
          if (event.result === false) {
            event.preventDefault();
          }
        }
      }
      event.type = type;
      if (!onlyHandlers && !event.isDefaultPrevented()) {
        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
          if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
            tmp = elem[ontype];
            if (tmp) {
              elem[ontype] = null;
            }
            jQuery.event.triggered = type;
            elem[type]();
            jQuery.event.triggered = undefined;
            if (tmp) {
              elem[ontype] = tmp;
            }
          }
        }
      }
      return event.result;
    },
    simulate: function(type, elem, event) {
      var e = jQuery.extend(new jQuery.Event(), event, {
        type: type,
        isSimulated: true
      });
      jQuery.event.trigger(e, null, elem);
    }
  });
  jQuery.fn.extend({
    trigger: function(type, data) {
      return this.each(function() {
        jQuery.event.trigger(type, data, this);
      });
    },
    triggerHandler: function(type, data) {
      var elem = this[0];
      if (elem) {
        return jQuery.event.trigger(type, data, elem, true);
      }
    }
  });
  jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function(i, name) {
    jQuery.fn[name] = function(data, fn) {
      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
    };
  });
  jQuery.fn.extend({hover: function(fnOver, fnOut) {
      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    }});
  support.focusin = "onfocusin" in window;
  if (!support.focusin) {
    jQuery.each({
      focus: "focusin",
      blur: "focusout"
    }, function(orig, fix) {
      var handler = function(event) {
        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
      };
      jQuery.event.special[fix] = {
        setup: function() {
          var doc = this.ownerDocument || this,
              attaches = dataPriv.access(doc, fix);
          if (!attaches) {
            doc.addEventListener(orig, handler, true);
          }
          dataPriv.access(doc, fix, (attaches || 0) + 1);
        },
        teardown: function() {
          var doc = this.ownerDocument || this,
              attaches = dataPriv.access(doc, fix) - 1;
          if (!attaches) {
            doc.removeEventListener(orig, handler, true);
            dataPriv.remove(doc, fix);
          } else {
            dataPriv.access(doc, fix, attaches);
          }
        }
      };
    });
  }
  var location = window.location;
  var nonce = jQuery.now();
  var rquery = (/\?/);
  jQuery.parseJSON = function(data) {
    return JSON.parse(data + "");
  };
  jQuery.parseXML = function(data) {
    var xml;
    if (!data || typeof data !== "string") {
      return null;
    }
    try {
      xml = (new window.DOMParser()).parseFromString(data, "text/xml");
    } catch (e) {
      xml = undefined;
    }
    if (!xml || xml.getElementsByTagName("parsererror").length) {
      jQuery.error("Invalid XML: " + data);
    }
    return xml;
  };
  var rhash = /#.*$/,
      rts = /([?&])_=[^&]*/,
      rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
      rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      rnoContent = /^(?:GET|HEAD)$/,
      rprotocol = /^\/\//,
      prefilters = {},
      transports = {},
      allTypes = "*/".concat("*"),
      originAnchor = document.createElement("a");
  originAnchor.href = location.href;
  function addToPrefiltersOrTransports(structure) {
    return function(dataTypeExpression, func) {
      if (typeof dataTypeExpression !== "string") {
        func = dataTypeExpression;
        dataTypeExpression = "*";
      }
      var dataType,
          i = 0,
          dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
      if (jQuery.isFunction(func)) {
        while ((dataType = dataTypes[i++])) {
          if (dataType[0] === "+") {
            dataType = dataType.slice(1) || "*";
            (structure[dataType] = structure[dataType] || []).unshift(func);
          } else {
            (structure[dataType] = structure[dataType] || []).push(func);
          }
        }
      }
    };
  }
  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    var inspected = {},
        seekingTransport = (structure === transports);
    function inspect(dataType) {
      var selected;
      inspected[dataType] = true;
      jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
        if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
          options.dataTypes.unshift(dataTypeOrTransport);
          inspect(dataTypeOrTransport);
          return false;
        } else if (seekingTransport) {
          return !(selected = dataTypeOrTransport);
        }
      });
      return selected;
    }
    return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
  }
  function ajaxExtend(target, src) {
    var key,
        deep,
        flatOptions = jQuery.ajaxSettings.flatOptions || {};
    for (key in src) {
      if (src[key] !== undefined) {
        (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];
      }
    }
    if (deep) {
      jQuery.extend(true, target, deep);
    }
    return target;
  }
  function ajaxHandleResponses(s, jqXHR, responses) {
    var ct,
        type,
        finalDataType,
        firstDataType,
        contents = s.contents,
        dataTypes = s.dataTypes;
    while (dataTypes[0] === "*") {
      dataTypes.shift();
      if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
      }
    }
    if (ct) {
      for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
          dataTypes.unshift(type);
          break;
        }
      }
    }
    if (dataTypes[0] in responses) {
      finalDataType = dataTypes[0];
    } else {
      for (type in responses) {
        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
          finalDataType = type;
          break;
        }
        if (!firstDataType) {
          firstDataType = type;
        }
      }
      finalDataType = finalDataType || firstDataType;
    }
    if (finalDataType) {
      if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
      }
      return responses[finalDataType];
    }
  }
  function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2,
        current,
        conv,
        tmp,
        prev,
        converters = {},
        dataTypes = s.dataTypes.slice();
    if (dataTypes[1]) {
      for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
      }
    }
    current = dataTypes.shift();
    while (current) {
      if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
      }
      if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
      }
      prev = current;
      current = dataTypes.shift();
      if (current) {
        if (current === "*") {
          current = prev;
        } else if (prev !== "*" && prev !== current) {
          conv = converters[prev + " " + current] || converters["* " + current];
          if (!conv) {
            for (conv2 in converters) {
              tmp = conv2.split(" ");
              if (tmp[1] === current) {
                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                if (conv) {
                  if (conv === true) {
                    conv = converters[conv2];
                  } else if (converters[conv2] !== true) {
                    current = tmp[0];
                    dataTypes.unshift(tmp[1]);
                  }
                  break;
                }
              }
            }
          }
          if (conv !== true) {
            if (conv && s.throws) {
              response = conv(response);
            } else {
              try {
                response = conv(response);
              } catch (e) {
                return {
                  state: "parsererror",
                  error: conv ? e : "No conversion from " + prev + " to " + current
                };
              }
            }
          }
        }
      }
    }
    return {
      state: "success",
      data: response
    };
  }
  jQuery.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: location.href,
      type: "GET",
      isLocal: rlocalProtocol.test(location.protocol),
      global: true,
      processData: true,
      async: true,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": allTypes,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /\bxml\b/,
        html: /\bhtml/,
        json: /\bjson\b/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      converters: {
        "* text": String,
        "text html": true,
        "text json": jQuery.parseJSON,
        "text xml": jQuery.parseXML
      },
      flatOptions: {
        url: true,
        context: true
      }
    },
    ajaxSetup: function(target, settings) {
      return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
    },
    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
    ajaxTransport: addToPrefiltersOrTransports(transports),
    ajax: function(url, options) {
      if (typeof url === "object") {
        options = url;
        url = undefined;
      }
      options = options || {};
      var transport,
          cacheURL,
          responseHeadersString,
          responseHeaders,
          timeoutTimer,
          urlAnchor,
          fireGlobals,
          i,
          s = jQuery.ajaxSetup({}, options),
          callbackContext = s.context || s,
          globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
          deferred = jQuery.Deferred(),
          completeDeferred = jQuery.Callbacks("once memory"),
          statusCode = s.statusCode || {},
          requestHeaders = {},
          requestHeadersNames = {},
          state = 0,
          strAbort = "canceled",
          jqXHR = {
            readyState: 0,
            getResponseHeader: function(key) {
              var match;
              if (state === 2) {
                if (!responseHeaders) {
                  responseHeaders = {};
                  while ((match = rheaders.exec(responseHeadersString))) {
                    responseHeaders[match[1].toLowerCase()] = match[2];
                  }
                }
                match = responseHeaders[key.toLowerCase()];
              }
              return match == null ? null : match;
            },
            getAllResponseHeaders: function() {
              return state === 2 ? responseHeadersString : null;
            },
            setRequestHeader: function(name, value) {
              var lname = name.toLowerCase();
              if (!state) {
                name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                requestHeaders[name] = value;
              }
              return this;
            },
            overrideMimeType: function(type) {
              if (!state) {
                s.mimeType = type;
              }
              return this;
            },
            statusCode: function(map) {
              var code;
              if (map) {
                if (state < 2) {
                  for (code in map) {
                    statusCode[code] = [statusCode[code], map[code]];
                  }
                } else {
                  jqXHR.always(map[jqXHR.status]);
                }
              }
              return this;
            },
            abort: function(statusText) {
              var finalText = statusText || strAbort;
              if (transport) {
                transport.abort(finalText);
              }
              done(0, finalText);
              return this;
            }
          };
      deferred.promise(jqXHR).complete = completeDeferred.add;
      jqXHR.success = jqXHR.done;
      jqXHR.error = jqXHR.fail;
      s.url = ((url || s.url || location.href) + "").replace(rhash, "").replace(rprotocol, location.protocol + "//");
      s.type = options.method || options.type || s.method || s.type;
      s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""];
      if (s.crossDomain == null) {
        urlAnchor = document.createElement("a");
        try {
          urlAnchor.href = s.url;
          urlAnchor.href = urlAnchor.href;
          s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
        } catch (e) {
          s.crossDomain = true;
        }
      }
      if (s.data && s.processData && typeof s.data !== "string") {
        s.data = jQuery.param(s.data, s.traditional);
      }
      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
      if (state === 2) {
        return jqXHR;
      }
      fireGlobals = jQuery.event && s.global;
      if (fireGlobals && jQuery.active++ === 0) {
        jQuery.event.trigger("ajaxStart");
      }
      s.type = s.type.toUpperCase();
      s.hasContent = !rnoContent.test(s.type);
      cacheURL = s.url;
      if (!s.hasContent) {
        if (s.data) {
          cacheURL = (s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data);
          delete s.data;
        }
        if (s.cache === false) {
          s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++;
        }
      }
      if (s.ifModified) {
        if (jQuery.lastModified[cacheURL]) {
          jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
        }
        if (jQuery.etag[cacheURL]) {
          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
        }
      }
      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
        jqXHR.setRequestHeader("Content-Type", s.contentType);
      }
      jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
      for (i in s.headers) {
        jqXHR.setRequestHeader(i, s.headers[i]);
      }
      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
        return jqXHR.abort();
      }
      strAbort = "abort";
      for (i in {
        success: 1,
        error: 1,
        complete: 1
      }) {
        jqXHR[i](s[i]);
      }
      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
      if (!transport) {
        done(-1, "No Transport");
      } else {
        jqXHR.readyState = 1;
        if (fireGlobals) {
          globalEventContext.trigger("ajaxSend", [jqXHR, s]);
        }
        if (state === 2) {
          return jqXHR;
        }
        if (s.async && s.timeout > 0) {
          timeoutTimer = window.setTimeout(function() {
            jqXHR.abort("timeout");
          }, s.timeout);
        }
        try {
          state = 1;
          transport.send(requestHeaders, done);
        } catch (e) {
          if (state < 2) {
            done(-1, e);
          } else {
            throw e;
          }
        }
      }
      function done(status, nativeStatusText, responses, headers) {
        var isSuccess,
            success,
            error,
            response,
            modified,
            statusText = nativeStatusText;
        if (state === 2) {
          return;
        }
        state = 2;
        if (timeoutTimer) {
          window.clearTimeout(timeoutTimer);
        }
        transport = undefined;
        responseHeadersString = headers || "";
        jqXHR.readyState = status > 0 ? 4 : 0;
        isSuccess = status >= 200 && status < 300 || status === 304;
        if (responses) {
          response = ajaxHandleResponses(s, jqXHR, responses);
        }
        response = ajaxConvert(s, response, jqXHR, isSuccess);
        if (isSuccess) {
          if (s.ifModified) {
            modified = jqXHR.getResponseHeader("Last-Modified");
            if (modified) {
              jQuery.lastModified[cacheURL] = modified;
            }
            modified = jqXHR.getResponseHeader("etag");
            if (modified) {
              jQuery.etag[cacheURL] = modified;
            }
          }
          if (status === 204 || s.type === "HEAD") {
            statusText = "nocontent";
          } else if (status === 304) {
            statusText = "notmodified";
          } else {
            statusText = response.state;
            success = response.data;
            error = response.error;
            isSuccess = !error;
          }
        } else {
          error = statusText;
          if (status || !statusText) {
            statusText = "error";
            if (status < 0) {
              status = 0;
            }
          }
        }
        jqXHR.status = status;
        jqXHR.statusText = (nativeStatusText || statusText) + "";
        if (isSuccess) {
          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
        } else {
          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
        }
        jqXHR.statusCode(statusCode);
        statusCode = undefined;
        if (fireGlobals) {
          globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
        }
        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
        if (fireGlobals) {
          globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
          if (!(--jQuery.active)) {
            jQuery.event.trigger("ajaxStop");
          }
        }
      }
      return jqXHR;
    },
    getJSON: function(url, data, callback) {
      return jQuery.get(url, data, callback, "json");
    },
    getScript: function(url, callback) {
      return jQuery.get(url, undefined, callback, "script");
    }
  });
  jQuery.each(["get", "post"], function(i, method) {
    jQuery[method] = function(url, data, callback, type) {
      if (jQuery.isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
      }
      return jQuery.ajax(jQuery.extend({
        url: url,
        type: method,
        dataType: type,
        data: data,
        success: callback
      }, jQuery.isPlainObject(url) && url));
    };
  });
  jQuery._evalUrl = function(url) {
    return jQuery.ajax({
      url: url,
      type: "GET",
      dataType: "script",
      async: false,
      global: false,
      "throws": true
    });
  };
  jQuery.fn.extend({
    wrapAll: function(html) {
      var wrap;
      if (jQuery.isFunction(html)) {
        return this.each(function(i) {
          jQuery(this).wrapAll(html.call(this, i));
        });
      }
      if (this[0]) {
        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
        if (this[0].parentNode) {
          wrap.insertBefore(this[0]);
        }
        wrap.map(function() {
          var elem = this;
          while (elem.firstElementChild) {
            elem = elem.firstElementChild;
          }
          return elem;
        }).append(this);
      }
      return this;
    },
    wrapInner: function(html) {
      if (jQuery.isFunction(html)) {
        return this.each(function(i) {
          jQuery(this).wrapInner(html.call(this, i));
        });
      }
      return this.each(function() {
        var self = jQuery(this),
            contents = self.contents();
        if (contents.length) {
          contents.wrapAll(html);
        } else {
          self.append(html);
        }
      });
    },
    wrap: function(html) {
      var isFunction = jQuery.isFunction(html);
      return this.each(function(i) {
        jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
      });
    },
    unwrap: function() {
      return this.parent().each(function() {
        if (!jQuery.nodeName(this, "body")) {
          jQuery(this).replaceWith(this.childNodes);
        }
      }).end();
    }
  });
  jQuery.expr.filters.hidden = function(elem) {
    return !jQuery.expr.filters.visible(elem);
  };
  jQuery.expr.filters.visible = function(elem) {
    return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;
  };
  var r20 = /%20/g,
      rbracket = /\[\]$/,
      rCRLF = /\r?\n/g,
      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
      rsubmittable = /^(?:input|select|textarea|keygen)/i;
  function buildParams(prefix, obj, traditional, add) {
    var name;
    if (jQuery.isArray(obj)) {
      jQuery.each(obj, function(i, v) {
        if (traditional || rbracket.test(prefix)) {
          add(prefix, v);
        } else {
          buildParams(prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]", v, traditional, add);
        }
      });
    } else if (!traditional && jQuery.type(obj) === "object") {
      for (name in obj) {
        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
      }
    } else {
      add(prefix, obj);
    }
  }
  jQuery.param = function(a, traditional) {
    var prefix,
        s = [],
        add = function(key, value) {
          value = jQuery.isFunction(value) ? value() : (value == null ? "" : value);
          s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
        };
    if (traditional === undefined) {
      traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
    }
    if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
      jQuery.each(a, function() {
        add(this.name, this.value);
      });
    } else {
      for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
      }
    }
    return s.join("&").replace(r20, "+");
  };
  jQuery.fn.extend({
    serialize: function() {
      return jQuery.param(this.serializeArray());
    },
    serializeArray: function() {
      return this.map(function() {
        var elements = jQuery.prop(this, "elements");
        return elements ? jQuery.makeArray(elements) : this;
      }).filter(function() {
        var type = this.type;
        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
      }).map(function(i, elem) {
        var val = jQuery(this).val();
        return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
          return {
            name: elem.name,
            value: val.replace(rCRLF, "\r\n")
          };
        }) : {
          name: elem.name,
          value: val.replace(rCRLF, "\r\n")
        };
      }).get();
    }
  });
  jQuery.ajaxSettings.xhr = function() {
    try {
      return new window.XMLHttpRequest();
    } catch (e) {}
  };
  var xhrSuccessStatus = {
    0: 200,
    1223: 204
  },
      xhrSupported = jQuery.ajaxSettings.xhr();
  support.cors = !!xhrSupported && ("withCredentials" in xhrSupported);
  support.ajax = xhrSupported = !!xhrSupported;
  jQuery.ajaxTransport(function(options) {
    var callback,
        errorCallback;
    if (support.cors || xhrSupported && !options.crossDomain) {
      return {
        send: function(headers, complete) {
          var i,
              xhr = options.xhr();
          xhr.open(options.type, options.url, options.async, options.username, options.password);
          if (options.xhrFields) {
            for (i in options.xhrFields) {
              xhr[i] = options.xhrFields[i];
            }
          }
          if (options.mimeType && xhr.overrideMimeType) {
            xhr.overrideMimeType(options.mimeType);
          }
          if (!options.crossDomain && !headers["X-Requested-With"]) {
            headers["X-Requested-With"] = "XMLHttpRequest";
          }
          for (i in headers) {
            xhr.setRequestHeader(i, headers[i]);
          }
          callback = function(type) {
            return function() {
              if (callback) {
                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;
                if (type === "abort") {
                  xhr.abort();
                } else if (type === "error") {
                  if (typeof xhr.status !== "number") {
                    complete(0, "error");
                  } else {
                    complete(xhr.status, xhr.statusText);
                  }
                } else {
                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {binary: xhr.response} : {text: xhr.responseText}, xhr.getAllResponseHeaders());
                }
              }
            };
          };
          xhr.onload = callback();
          errorCallback = xhr.onerror = callback("error");
          if (xhr.onabort !== undefined) {
            xhr.onabort = errorCallback;
          } else {
            xhr.onreadystatechange = function() {
              if (xhr.readyState === 4) {
                window.setTimeout(function() {
                  if (callback) {
                    errorCallback();
                  }
                });
              }
            };
          }
          callback = callback("abort");
          try {
            xhr.send(options.hasContent && options.data || null);
          } catch (e) {
            if (callback) {
              throw e;
            }
          }
        },
        abort: function() {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  jQuery.ajaxSetup({
    accepts: {script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"},
    contents: {script: /\b(?:java|ecma)script\b/},
    converters: {"text script": function(text) {
        jQuery.globalEval(text);
        return text;
      }}
  });
  jQuery.ajaxPrefilter("script", function(s) {
    if (s.cache === undefined) {
      s.cache = false;
    }
    if (s.crossDomain) {
      s.type = "GET";
    }
  });
  jQuery.ajaxTransport("script", function(s) {
    if (s.crossDomain) {
      var script,
          callback;
      return {
        send: function(_, complete) {
          script = jQuery("<script>").prop({
            charset: s.scriptCharset,
            src: s.url
          }).on("load error", callback = function(evt) {
            script.remove();
            callback = null;
            if (evt) {
              complete(evt.type === "error" ? 404 : 200, evt.type);
            }
          });
          document.head.appendChild(script[0]);
        },
        abort: function() {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  var oldCallbacks = [],
      rjsonp = /(=)\?(?=&|$)|\?\?/;
  jQuery.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function() {
      var callback = oldCallbacks.pop() || (jQuery.expando + "_" + (nonce++));
      this[callback] = true;
      return callback;
    }
  });
  jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
    var callbackName,
        overwritten,
        responseContainer,
        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");
    if (jsonProp || s.dataTypes[0] === "jsonp") {
      callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
      if (jsonProp) {
        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
      } else if (s.jsonp !== false) {
        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
      }
      s.converters["script json"] = function() {
        if (!responseContainer) {
          jQuery.error(callbackName + " was not called");
        }
        return responseContainer[0];
      };
      s.dataTypes[0] = "json";
      overwritten = window[callbackName];
      window[callbackName] = function() {
        responseContainer = arguments;
      };
      jqXHR.always(function() {
        if (overwritten === undefined) {
          jQuery(window).removeProp(callbackName);
        } else {
          window[callbackName] = overwritten;
        }
        if (s[callbackName]) {
          s.jsonpCallback = originalSettings.jsonpCallback;
          oldCallbacks.push(callbackName);
        }
        if (responseContainer && jQuery.isFunction(overwritten)) {
          overwritten(responseContainer[0]);
        }
        responseContainer = overwritten = undefined;
      });
      return "script";
    }
  });
  jQuery.parseHTML = function(data, context, keepScripts) {
    if (!data || typeof data !== "string") {
      return null;
    }
    if (typeof context === "boolean") {
      keepScripts = context;
      context = false;
    }
    context = context || document;
    var parsed = rsingleTag.exec(data),
        scripts = !keepScripts && [];
    if (parsed) {
      return [context.createElement(parsed[1])];
    }
    parsed = buildFragment([data], context, scripts);
    if (scripts && scripts.length) {
      jQuery(scripts).remove();
    }
    return jQuery.merge([], parsed.childNodes);
  };
  var _load = jQuery.fn.load;
  jQuery.fn.load = function(url, params, callback) {
    if (typeof url !== "string" && _load) {
      return _load.apply(this, arguments);
    }
    var selector,
        type,
        response,
        self = this,
        off = url.indexOf(" ");
    if (off > -1) {
      selector = jQuery.trim(url.slice(off));
      url = url.slice(0, off);
    }
    if (jQuery.isFunction(params)) {
      callback = params;
      params = undefined;
    } else if (params && typeof params === "object") {
      type = "POST";
    }
    if (self.length > 0) {
      jQuery.ajax({
        url: url,
        type: type || "GET",
        dataType: "html",
        data: params
      }).done(function(responseText) {
        response = arguments;
        self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
      }).always(callback && function(jqXHR, status) {
        self.each(function() {
          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
        });
      });
    }
    return this;
  };
  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(i, type) {
    jQuery.fn[type] = function(fn) {
      return this.on(type, fn);
    };
  });
  jQuery.expr.filters.animated = function(elem) {
    return jQuery.grep(jQuery.timers, function(fn) {
      return elem === fn.elem;
    }).length;
  };
  function getWindow(elem) {
    return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;
  }
  jQuery.offset = {setOffset: function(elem, options, i) {
      var curPosition,
          curLeft,
          curCSSTop,
          curTop,
          curOffset,
          curCSSLeft,
          calculatePosition,
          position = jQuery.css(elem, "position"),
          curElem = jQuery(elem),
          props = {};
      if (position === "static") {
        elem.style.position = "relative";
      }
      curOffset = curElem.offset();
      curCSSTop = jQuery.css(elem, "top");
      curCSSLeft = jQuery.css(elem, "left");
      calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
      if (calculatePosition) {
        curPosition = curElem.position();
        curTop = curPosition.top;
        curLeft = curPosition.left;
      } else {
        curTop = parseFloat(curCSSTop) || 0;
        curLeft = parseFloat(curCSSLeft) || 0;
      }
      if (jQuery.isFunction(options)) {
        options = options.call(elem, i, jQuery.extend({}, curOffset));
      }
      if (options.top != null) {
        props.top = (options.top - curOffset.top) + curTop;
      }
      if (options.left != null) {
        props.left = (options.left - curOffset.left) + curLeft;
      }
      if ("using" in options) {
        options.using.call(elem, props);
      } else {
        curElem.css(props);
      }
    }};
  jQuery.fn.extend({
    offset: function(options) {
      if (arguments.length) {
        return options === undefined ? this : this.each(function(i) {
          jQuery.offset.setOffset(this, options, i);
        });
      }
      var docElem,
          win,
          elem = this[0],
          box = {
            top: 0,
            left: 0
          },
          doc = elem && elem.ownerDocument;
      if (!doc) {
        return;
      }
      docElem = doc.documentElement;
      if (!jQuery.contains(docElem, elem)) {
        return box;
      }
      box = elem.getBoundingClientRect();
      win = getWindow(doc);
      return {
        top: box.top + win.pageYOffset - docElem.clientTop,
        left: box.left + win.pageXOffset - docElem.clientLeft
      };
    },
    position: function() {
      if (!this[0]) {
        return;
      }
      var offsetParent,
          offset,
          elem = this[0],
          parentOffset = {
            top: 0,
            left: 0
          };
      if (jQuery.css(elem, "position") === "fixed") {
        offset = elem.getBoundingClientRect();
      } else {
        offsetParent = this.offsetParent();
        offset = this.offset();
        if (!jQuery.nodeName(offsetParent[0], "html")) {
          parentOffset = offsetParent.offset();
        }
        parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", true);
        parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", true);
      }
      return {
        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
      };
    },
    offsetParent: function() {
      return this.map(function() {
        var offsetParent = this.offsetParent;
        while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
          offsetParent = offsetParent.offsetParent;
        }
        return offsetParent || documentElement;
      });
    }
  });
  jQuery.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function(method, prop) {
    var top = "pageYOffset" === prop;
    jQuery.fn[method] = function(val) {
      return access(this, function(elem, method, val) {
        var win = getWindow(elem);
        if (val === undefined) {
          return win ? win[prop] : elem[method];
        }
        if (win) {
          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
        } else {
          elem[method] = val;
        }
      }, method, val, arguments.length);
    };
  });
  jQuery.each(["top", "left"], function(i, prop) {
    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
      if (computed) {
        computed = curCSS(elem, prop);
        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
      }
    });
  });
  jQuery.each({
    Height: "height",
    Width: "width"
  }, function(name, type) {
    jQuery.each({
      padding: "inner" + name,
      content: type,
      "": "outer" + name
    }, function(defaultExtra, funcName) {
      jQuery.fn[funcName] = function(margin, value) {
        var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
        return access(this, function(elem, type, value) {
          var doc;
          if (jQuery.isWindow(elem)) {
            return elem.document.documentElement["client" + name];
          }
          if (elem.nodeType === 9) {
            doc = elem.documentElement;
            return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
          }
          return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
        }, type, chainable ? margin : undefined, chainable, null);
      };
    });
  });
  jQuery.fn.extend({
    bind: function(types, data, fn) {
      return this.on(types, null, data, fn);
    },
    unbind: function(types, fn) {
      return this.off(types, null, fn);
    },
    delegate: function(selector, types, data, fn) {
      return this.on(types, selector, data, fn);
    },
    undelegate: function(selector, types, fn) {
      return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
    },
    size: function() {
      return this.length;
    }
  });
  jQuery.fn.andSelf = jQuery.fn.addBack;
  if (typeof define === "function" && define.amd) {
    define("npm:jquery@2.2.4/dist/jquery.js", [], function() {
      return jQuery;
    }) && define("jquery", ["npm:jquery@2.2.4/dist/jquery.js"], function(m) {
      return m;
    });
  }
  var _jQuery = window.jQuery,
      _$ = window.$;
  jQuery.noConflict = function(deep) {
    if (window.$ === jQuery) {
      window.$ = _$;
    }
    if (deep && window.jQuery === jQuery) {
      window.jQuery = _jQuery;
    }
    return jQuery;
  };
  if (!noGlobal) {
    window.jQuery = window.$ = jQuery;
  }
  return jQuery;
}));

})();
(function() {
var define = System.amdDefine;
define("npm:jquery@2.2.4.js", ["npm:jquery@2.2.4/dist/jquery.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
;
(function() {
  var undefined;
  var VERSION = '3.10.1';
  var BIND_FLAG = 1,
      BIND_KEY_FLAG = 2,
      CURRY_BOUND_FLAG = 4,
      CURRY_FLAG = 8,
      CURRY_RIGHT_FLAG = 16,
      PARTIAL_FLAG = 32,
      PARTIAL_RIGHT_FLAG = 64,
      ARY_FLAG = 128,
      REARG_FLAG = 256;
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';
  var HOT_COUNT = 150,
      HOT_SPAN = 16;
  var LARGE_ARRAY_SIZE = 200;
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2;
  var FUNC_ERROR_TEXT = 'Expected a function';
  var PLACEHOLDER = '__lodash_placeholder__';
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';
  var arrayBufferTag = '[object ArrayBuffer]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
      reUnescapedHtml = /[&<>"'`]/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;
  var reRegExpChars = /^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,
      reHasRegExpChars = RegExp(reRegExpChars.source);
  var reComboMark = /[\u0300-\u036f\ufe20-\ufe23]/g;
  var reEscapeChar = /\\(\\)?/g;
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
  var reFlags = /\w*$/;
  var reHasHexPrefix = /^0[xX]/;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^\d+$/;
  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;
  var reNoMatch = /($^)/;
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
  var reWords = (function() {
    var upper = '[A-Z\\xc0-\\xd6\\xd8-\\xde]',
        lower = '[a-z\\xdf-\\xf6\\xf8-\\xff]+';
    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');
  }());
  var contextProps = ['Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number', 'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'];
  var shadowProps = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];
  var templateCounter = -1;
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[stringTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[mapTag] = cloneableTags[setTag] = cloneableTags[weakMapTag] = false;
  var deburredLetters = {
    '\xc0': 'A',
    '\xc1': 'A',
    '\xc2': 'A',
    '\xc3': 'A',
    '\xc4': 'A',
    '\xc5': 'A',
    '\xe0': 'a',
    '\xe1': 'a',
    '\xe2': 'a',
    '\xe3': 'a',
    '\xe4': 'a',
    '\xe5': 'a',
    '\xc7': 'C',
    '\xe7': 'c',
    '\xd0': 'D',
    '\xf0': 'd',
    '\xc8': 'E',
    '\xc9': 'E',
    '\xca': 'E',
    '\xcb': 'E',
    '\xe8': 'e',
    '\xe9': 'e',
    '\xea': 'e',
    '\xeb': 'e',
    '\xcC': 'I',
    '\xcd': 'I',
    '\xce': 'I',
    '\xcf': 'I',
    '\xeC': 'i',
    '\xed': 'i',
    '\xee': 'i',
    '\xef': 'i',
    '\xd1': 'N',
    '\xf1': 'n',
    '\xd2': 'O',
    '\xd3': 'O',
    '\xd4': 'O',
    '\xd5': 'O',
    '\xd6': 'O',
    '\xd8': 'O',
    '\xf2': 'o',
    '\xf3': 'o',
    '\xf4': 'o',
    '\xf5': 'o',
    '\xf6': 'o',
    '\xf8': 'o',
    '\xd9': 'U',
    '\xda': 'U',
    '\xdb': 'U',
    '\xdc': 'U',
    '\xf9': 'u',
    '\xfa': 'u',
    '\xfb': 'u',
    '\xfc': 'u',
    '\xdd': 'Y',
    '\xfd': 'y',
    '\xff': 'y',
    '\xc6': 'Ae',
    '\xe6': 'ae',
    '\xde': 'Th',
    '\xfe': 'th',
    '\xdf': 'ss'
  };
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '`': '&#96;'
  };
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'",
    '&#96;': '`'
  };
  var objectTypes = {
    'function': true,
    'object': true
  };
  var regexpEscapes = {
    '0': 'x30',
    '1': 'x31',
    '2': 'x32',
    '3': 'x33',
    '4': 'x34',
    '5': 'x35',
    '6': 'x36',
    '7': 'x37',
    '8': 'x38',
    '9': 'x39',
    'A': 'x41',
    'B': 'x42',
    'C': 'x43',
    'D': 'x44',
    'E': 'x45',
    'F': 'x46',
    'a': 'x61',
    'b': 'x62',
    'c': 'x63',
    'd': 'x64',
    'e': 'x65',
    'f': 'x66',
    'n': 'x6e',
    'r': 'x72',
    't': 'x74',
    'u': 'x75',
    'v': 'x76',
    'x': 'x78'
  };
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;
  var freeSelf = objectTypes[typeof self] && self && self.Object && self;
  var freeWindow = objectTypes[typeof window] && window && window.Object && window;
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;
  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;
  function baseCompareAscending(value, other) {
    if (value !== other) {
      var valIsNull = value === null,
          valIsUndef = value === undefined,
          valIsReflexive = value === value;
      var othIsNull = other === null,
          othIsUndef = other === undefined,
          othIsReflexive = other === other;
      if ((value > other && !othIsNull) || !valIsReflexive || (valIsNull && !othIsUndef && othIsReflexive) || (valIsUndef && othIsReflexive)) {
        return 1;
      }
      if ((value < other && !valIsNull) || !othIsReflexive || (othIsNull && !valIsUndef && valIsReflexive) || (othIsUndef && valIsReflexive)) {
        return -1;
      }
    }
    return 0;
  }
  function baseFindIndex(array, predicate, fromRight) {
    var length = array.length,
        index = fromRight ? length : -1;
    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }
  function baseIndexOf(array, value, fromIndex) {
    if (value !== value) {
      return indexOfNaN(array, fromIndex);
    }
    var index = fromIndex - 1,
        length = array.length;
    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }
  function baseIsFunction(value) {
    return typeof value == 'function' || false;
  }
  function baseToString(value) {
    return value == null ? '' : (value + '');
  }
  function charsLeftIndex(string, chars) {
    var index = -1,
        length = string.length;
    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}
    return index;
  }
  function charsRightIndex(string, chars) {
    var index = string.length;
    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}
    return index;
  }
  function compareAscending(object, other) {
    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);
  }
  function compareMultiple(object, other, orders) {
    var index = -1,
        objCriteria = object.criteria,
        othCriteria = other.criteria,
        length = objCriteria.length,
        ordersLength = orders.length;
    while (++index < length) {
      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);
      if (result) {
        if (index >= ordersLength) {
          return result;
        }
        var order = orders[index];
        return result * ((order === 'asc' || order === true) ? 1 : -1);
      }
    }
    return object.index - other.index;
  }
  function deburrLetter(letter) {
    return deburredLetters[letter];
  }
  function escapeHtmlChar(chr) {
    return htmlEscapes[chr];
  }
  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {
    if (leadingChar) {
      chr = regexpEscapes[chr];
    } else if (whitespaceChar) {
      chr = stringEscapes[chr];
    }
    return '\\' + chr;
  }
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }
  function indexOfNaN(array, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 0 : -1);
    while ((fromRight ? index-- : ++index < length)) {
      var other = array[index];
      if (other !== other) {
        return index;
      }
    }
    return -1;
  }
  var isHostObject = (function() {
    try {
      Object({'toString': 0} + '');
    } catch (e) {
      return function() {
        return false;
      };
    }
    return function(value) {
      return typeof value.toString != 'function' && typeof(value + '') == 'string';
    };
  }());
  function isObjectLike(value) {
    return !!value && typeof value == 'object';
  }
  function isSpace(charCode) {
    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 || (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));
  }
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = -1,
        result = [];
    while (++index < length) {
      if (array[index] === placeholder) {
        array[index] = PLACEHOLDER;
        result[++resIndex] = index;
      }
    }
    return result;
  }
  function sortedUniq(array, iteratee) {
    var seen,
        index = -1,
        length = array.length,
        resIndex = -1,
        result = [];
    while (++index < length) {
      var value = array[index],
          computed = iteratee ? iteratee(value, index, array) : value;
      if (!index || seen !== computed) {
        seen = computed;
        result[++resIndex] = value;
      }
    }
    return result;
  }
  function trimmedLeftIndex(string) {
    var index = -1,
        length = string.length;
    while (++index < length && isSpace(string.charCodeAt(index))) {}
    return index;
  }
  function trimmedRightIndex(string) {
    var index = string.length;
    while (index-- && isSpace(string.charCodeAt(index))) {}
    return index;
  }
  function unescapeHtmlChar(chr) {
    return htmlUnescapes[chr];
  }
  function runInContext(context) {
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;
    var arrayProto = Array.prototype,
        errorProto = Error.prototype,
        objectProto = Object.prototype,
        stringProto = String.prototype;
    var fnToString = Function.prototype.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var idCounter = 0;
    var objToString = objectProto.toString;
    var oldDash = root._;
    var reIsNative = RegExp('^' + fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
    var ArrayBuffer = context.ArrayBuffer,
        clearTimeout = context.clearTimeout,
        parseFloat = context.parseFloat,
        pow = Math.pow,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        Set = getNative(context, 'Set'),
        setTimeout = context.setTimeout,
        splice = arrayProto.splice,
        Uint8Array = context.Uint8Array,
        WeakMap = getNative(context, 'WeakMap');
    var nativeCeil = Math.ceil,
        nativeCreate = getNative(Object, 'create'),
        nativeFloor = Math.floor,
        nativeIsArray = getNative(Array, 'isArray'),
        nativeIsFinite = context.isFinite,
        nativeKeys = getNative(Object, 'keys'),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = getNative(Date, 'now'),
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;
    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,
        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;
    var MAX_ARRAY_LENGTH = 4294967295,
        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var metaMap = WeakMap && new WeakMap;
    var realNames = {};
    var ctorByTag = {};
    ctorByTag[float32Tag] = context.Float32Array;
    ctorByTag[float64Tag] = context.Float64Array;
    ctorByTag[int8Tag] = context.Int8Array;
    ctorByTag[int16Tag] = context.Int16Array;
    ctorByTag[int32Tag] = context.Int32Array;
    ctorByTag[uint8Tag] = Uint8Array;
    ctorByTag[uint8ClampedTag] = context.Uint8ClampedArray;
    ctorByTag[uint16Tag] = context.Uint16Array;
    ctorByTag[uint32Tag] = context.Uint32Array;
    var nonEnumProps = {};
    nonEnumProps[arrayTag] = nonEnumProps[dateTag] = nonEnumProps[numberTag] = {
      'constructor': true,
      'toLocaleString': true,
      'toString': true,
      'valueOf': true
    };
    nonEnumProps[boolTag] = nonEnumProps[stringTag] = {
      'constructor': true,
      'toString': true,
      'valueOf': true
    };
    nonEnumProps[errorTag] = nonEnumProps[funcTag] = nonEnumProps[regexpTag] = {
      'constructor': true,
      'toString': true
    };
    nonEnumProps[objectTag] = {'constructor': true};
    arrayEach(shadowProps, function(key) {
      for (var tag in nonEnumProps) {
        if (hasOwnProperty.call(nonEnumProps, tag)) {
          var props = nonEnumProps[tag];
          props[key] = hasOwnProperty.call(props, key);
        }
      }
    });
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }
    function baseLodash() {}
    function LodashWrapper(value, chainAll, actions) {
      this.__wrapped__ = value;
      this.__actions__ = actions || [];
      this.__chain__ = !!chainAll;
    }
    var support = lodash.support = {};
    (function(x) {
      var Ctor = function() {
        this.x = x;
      },
          object = {
            '0': x,
            'length': x
          },
          props = [];
      Ctor.prototype = {
        'valueOf': x,
        'y': x
      };
      for (var key in new Ctor) {
        props.push(key);
      }
      support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');
      support.enumPrototypes = propertyIsEnumerable.call(Ctor, 'prototype');
      support.nonEnumShadows = !/valueOf/.test(props);
      support.ownLast = props[0] != 'x';
      support.spliceObjects = (splice.call(object, 0, 1), !object[0]);
      support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';
    }(1, 0));
    lodash.templateSettings = {
      'escape': reEscape,
      'evaluate': reEvaluate,
      'interpolate': reInterpolate,
      'variable': '',
      'imports': {'_': lodash}
    };
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = POSITIVE_INFINITY;
      this.__views__ = [];
    }
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = arrayCopy(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = arrayCopy(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = arrayCopy(this.__views__);
      return result;
    }
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);
      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];
      outer: while (length-- && resIndex < takeCount) {
        index += dir;
        var iterIndex = -1,
            value = array[index];
        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);
          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }
    function MapCache() {
      this.__data__ = {};
    }
    function mapDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }
    function mapGet(key) {
      return key == '__proto__' ? undefined : this.__data__[key];
    }
    function mapHas(key) {
      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);
    }
    function mapSet(key, value) {
      if (key != '__proto__') {
        this.__data__[key] = value;
      }
      return this;
    }
    function SetCache(values) {
      var length = values ? values.length : 0;
      this.data = {
        'hash': nativeCreate(null),
        'set': new Set
      };
      while (length--) {
        this.push(values[length]);
      }
    }
    function cacheIndexOf(cache, value) {
      var data = cache.data,
          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];
      return result ? 0 : -1;
    }
    function cachePush(value) {
      var data = this.data;
      if (typeof value == 'string' || isObject(value)) {
        data.set.add(value);
      } else {
        data.hash[value] = true;
      }
    }
    function arrayConcat(array, other) {
      var index = -1,
          length = array.length,
          othIndex = -1,
          othLength = other.length,
          result = Array(length + othLength);
      while (++index < length) {
        result[index] = array[index];
      }
      while (++othIndex < othLength) {
        result[index++] = other[othIndex];
      }
      return result;
    }
    function arrayCopy(source, array) {
      var index = -1,
          length = source.length;
      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }
    function arrayEach(array, iteratee) {
      var index = -1,
          length = array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    function arrayEachRight(array, iteratee) {
      var length = array.length;
      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }
      return array;
    }
    function arrayEvery(array, predicate) {
      var index = -1,
          length = array.length;
      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }
      return true;
    }
    function arrayExtremum(array, iteratee, comparator, exValue) {
      var index = -1,
          length = array.length,
          computed = exValue,
          result = computed;
      while (++index < length) {
        var value = array[index],
            current = +iteratee(value);
        if (comparator(current, computed)) {
          computed = current;
          result = value;
        }
      }
      return result;
    }
    function arrayFilter(array, predicate) {
      var index = -1,
          length = array.length,
          resIndex = -1,
          result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[++resIndex] = value;
        }
      }
      return result;
    }
    function arrayMap(array, iteratee) {
      var index = -1,
          length = array.length,
          result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1,
          length = values.length,
          offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arrayReduce(array, iteratee, accumulator, initFromArray) {
      var index = -1,
          length = array.length;
      if (initFromArray && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }
    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {
      var length = array.length;
      if (initFromArray && length) {
        accumulator = array[--length];
      }
      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }
      return accumulator;
    }
    function arraySome(array, predicate) {
      var index = -1,
          length = array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function arraySum(array, iteratee) {
      var length = array.length,
          result = 0;
      while (length--) {
        result += +iteratee(array[length]) || 0;
      }
      return result;
    }
    function assignDefaults(objectValue, sourceValue) {
      return objectValue === undefined ? sourceValue : objectValue;
    }
    function assignOwnDefaults(objectValue, sourceValue, key, object) {
      return (objectValue === undefined || !hasOwnProperty.call(object, key)) ? sourceValue : objectValue;
    }
    function assignWith(object, source, customizer) {
      var index = -1,
          props = keys(source),
          length = props.length;
      while (++index < length) {
        var key = props[index],
            value = object[key],
            result = customizer(value, source[key], key, object, source);
        if ((result === result ? (result !== value) : (value === value)) || (value === undefined && !(key in object))) {
          object[key] = result;
        }
      }
      return object;
    }
    function baseAssign(object, source) {
      return source == null ? object : baseCopy(source, keys(source), object);
    }
    function baseAt(collection, props) {
      var index = -1,
          isNil = collection == null,
          isArr = !isNil && isArrayLike(collection),
          length = isArr ? collection.length : 0,
          propsLength = props.length,
          result = Array(propsLength);
      while (++index < propsLength) {
        var key = props[index];
        if (isArr) {
          result[index] = isIndex(key, length) ? collection[key] : undefined;
        } else {
          result[index] = isNil ? undefined : collection[key];
        }
      }
      return result;
    }
    function baseCopy(source, props, object) {
      object || (object = {});
      var index = -1,
          length = props.length;
      while (++index < length) {
        var key = props[index];
        object[key] = source[key];
      }
      return object;
    }
    function baseCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (type == 'function') {
        return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);
      }
      if (func == null) {
        return identity;
      }
      if (type == 'object') {
        return baseMatches(func);
      }
      return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);
    }
    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {
      var result;
      if (customizer) {
        result = object ? customizer(value, key, object) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return arrayCopy(value, result);
        }
      } else {
        var tag = objToString.call(value),
            isFunc = tag == funcTag;
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          if (isHostObject(value)) {
            return object ? value : {};
          }
          result = initCloneObject(isFunc ? {} : value);
          if (!isDeep) {
            return baseAssign(result, value);
          }
        } else {
          return cloneableTags[tag] ? initCloneByTag(value, tag, isDeep) : (object ? value : {});
        }
      }
      stackA || (stackA = []);
      stackB || (stackB = []);
      var length = stackA.length;
      while (length--) {
        if (stackA[length] == value) {
          return stackB[length];
        }
      }
      stackA.push(value);
      stackB.push(result);
      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {
        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);
      });
      return result;
    }
    var baseCreate = (function() {
      function object() {}
      return function(prototype) {
        if (isObject(prototype)) {
          object.prototype = prototype;
          var result = new object;
          object.prototype = undefined;
        }
        return result || {};
      };
    }());
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() {
        func.apply(undefined, args);
      }, wait);
    }
    function baseDifference(array, values) {
      var length = array ? array.length : 0,
          result = [];
      if (!length) {
        return result;
      }
      var index = -1,
          indexOf = getIndexOf(),
          isCommon = indexOf === baseIndexOf,
          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,
          valuesLength = values.length;
      if (cache) {
        indexOf = cacheIndexOf;
        isCommon = false;
        values = cache;
      }
      outer: while (++index < length) {
        var value = array[index];
        if (isCommon && value === value) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === value) {
              continue outer;
            }
          }
          result.push(value);
        } else if (indexOf(values, value, 0) < 0) {
          result.push(value);
        }
      }
      return result;
    }
    var baseEach = createBaseEach(baseForOwn);
    var baseEachRight = createBaseEach(baseForOwnRight, true);
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }
    function baseExtremum(collection, iteratee, comparator, exValue) {
      var computed = exValue,
          result = computed;
      baseEach(collection, function(value, index, collection) {
        var current = +iteratee(value, index, collection);
        if (comparator(current, computed) || (current === exValue && current === result)) {
          computed = current;
          result = value;
        }
      });
      return result;
    }
    function baseFill(array, value, start, end) {
      var length = array.length;
      start = start == null ? 0 : (+start || 0);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : (+end || 0);
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : (end >>> 0);
      start >>>= 0;
      while (start < length) {
        array[start++] = value;
      }
      return array;
    }
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }
    function baseFind(collection, predicate, eachFunc, retKey) {
      var result;
      eachFunc(collection, function(value, key, collection) {
        if (predicate(value, key, collection)) {
          result = retKey ? key : value;
          return false;
        }
      });
      return result;
    }
    function baseFlatten(array, isDeep, isStrict, result) {
      result || (result = []);
      var index = -1,
          length = array.length;
      while (++index < length) {
        var value = array[index];
        if (isObjectLike(value) && isArrayLike(value) && (isStrict || isArray(value) || isArguments(value))) {
          if (isDeep) {
            baseFlatten(value, isDeep, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    var baseFor = createBaseFor();
    var baseForRight = createBaseFor(true);
    function baseForIn(object, iteratee) {
      return baseFor(object, iteratee, keysIn);
    }
    function baseForOwn(object, iteratee) {
      return baseFor(object, iteratee, keys);
    }
    function baseForOwnRight(object, iteratee) {
      return baseForRight(object, iteratee, keys);
    }
    function baseFunctions(object, props) {
      var index = -1,
          length = props.length,
          resIndex = -1,
          result = [];
      while (++index < length) {
        var key = props[index];
        if (isFunction(object[key])) {
          result[++resIndex] = key;
        }
      }
      return result;
    }
    function baseGet(object, path, pathKey) {
      if (object == null) {
        return;
      }
      object = toObject(object);
      if (pathKey !== undefined && pathKey in object) {
        path = [pathKey];
      }
      var index = 0,
          length = path.length;
      while (object != null && index < length) {
        object = toObject(object)[path[index++]];
      }
      return (index && index == length) ? object : undefined;
    }
    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);
    }
    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = arrayTag,
          othTag = arrayTag;
      if (!objIsArr) {
        objTag = objToString.call(object);
        if (objTag == argsTag) {
          objTag = objectTag;
        } else if (objTag != objectTag) {
          objIsArr = isTypedArray(object);
        }
      }
      if (!othIsArr) {
        othTag = objToString.call(other);
        if (othTag == argsTag) {
          othTag = objectTag;
        } else if (othTag != objectTag) {
          othIsArr = isTypedArray(other);
        }
      }
      var objIsObj = objTag == objectTag && !isHostObject(object),
          othIsObj = othTag == objectTag && !isHostObject(other),
          isSameTag = objTag == othTag;
      if (isSameTag && !(objIsArr || objIsObj)) {
        return equalByTag(object, other, objTag);
      }
      if (!isLoose) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
        if (objIsWrapped || othIsWrapped) {
          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stackA || (stackA = []);
      stackB || (stackB = []);
      var length = stackA.length;
      while (length--) {
        if (stackA[length] == object) {
          return stackB[length] == other;
        }
      }
      stackA.push(object);
      stackB.push(other);
      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);
      stackA.pop();
      stackB.pop();
      return result;
    }
    function baseIsMatch(object, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = toObject(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2]) ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var result = customizer ? customizer(objValue, srcValue, key) : undefined;
          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        var key = matchData[0][0],
            value = matchData[0][1];
        return function(object) {
          if (object == null) {
            return false;
          }
          object = toObject(object);
          return object[key] === value && (value !== undefined || (key in object));
        };
      }
      return function(object) {
        return baseIsMatch(object, matchData);
      };
    }
    function baseMatchesProperty(path, srcValue) {
      var isArr = isArray(path),
          isCommon = isKey(path) && isStrictComparable(srcValue),
          pathKey = (path + '');
      path = toPath(path);
      return function(object) {
        if (object == null) {
          return false;
        }
        var key = pathKey;
        object = toObject(object);
        if ((isArr || !isCommon) && !(key in object)) {
          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
          if (object == null) {
            return false;
          }
          key = last(path);
          object = toObject(object);
        }
        return object[key] === srcValue ? (srcValue !== undefined || (key in object)) : baseIsEqual(srcValue, object[key], undefined, true);
      };
    }
    function baseMerge(object, source, customizer, stackA, stackB) {
      if (!isObject(object)) {
        return object;
      }
      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),
          props = isSrcArr ? undefined : keys(source);
      arrayEach(props || source, function(srcValue, key) {
        if (props) {
          key = srcValue;
          srcValue = source[key];
        }
        if (isObjectLike(srcValue)) {
          stackA || (stackA = []);
          stackB || (stackB = []);
          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);
        } else {
          var value = object[key],
              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
              isCommon = result === undefined;
          if (isCommon) {
            result = srcValue;
          }
          if ((result !== undefined || (isSrcArr && !(key in object))) && (isCommon || (result === result ? (result !== value) : (value === value)))) {
            object[key] = result;
          }
        }
      });
      return object;
    }
    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {
      var length = stackA.length,
          srcValue = source[key];
      while (length--) {
        if (stackA[length] == srcValue) {
          object[key] = stackB[length];
          return;
        }
      }
      var value = object[key],
          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
          isCommon = result === undefined;
      if (isCommon) {
        result = srcValue;
        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {
          result = isArray(value) ? value : (isArrayLike(value) ? arrayCopy(value) : []);
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          result = isArguments(value) ? toPlainObject(value) : (isPlainObject(value) ? value : {});
        } else {
          isCommon = false;
        }
      }
      stackA.push(srcValue);
      stackB.push(result);
      if (isCommon) {
        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);
      } else if (result === result ? (result !== value) : (value === value)) {
        object[key] = result;
      }
    }
    function baseProperty(key) {
      return function(object) {
        return object == null ? undefined : toObject(object)[key];
      };
    }
    function basePropertyDeep(path) {
      var pathKey = (path + '');
      path = toPath(path);
      return function(object) {
        return baseGet(object, path, pathKey);
      };
    }
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0;
      while (length--) {
        var index = indexes[length];
        if (index != previous && isIndex(index)) {
          var previous = index;
          splice.call(array, index, 1);
        }
      }
      return array;
    }
    function baseRandom(min, max) {
      return min + nativeFloor(nativeRandom() * (max - min + 1));
    }
    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {
      eachFunc(collection, function(value, index, collection) {
        accumulator = initFromCollection ? (initFromCollection = false, value) : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;
      start = start == null ? 0 : (+start || 0);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : (+end || 0);
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    function baseSome(collection, predicate) {
      var result;
      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }
    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }
    function baseSortByOrder(collection, iteratees, orders) {
      var callback = getCallback(),
          index = -1;
      iteratees = arrayMap(iteratees, function(iteratee) {
        return callback(iteratee);
      });
      var result = baseMap(collection, function(value) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return {
          'criteria': criteria,
          'index': ++index,
          'value': value
        };
      });
      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }
    function baseSum(collection, iteratee) {
      var result = 0;
      baseEach(collection, function(value, index, collection) {
        result += +iteratee(value, index, collection) || 0;
      });
      return result;
    }
    function baseUniq(array, iteratee) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array.length,
          isCommon = indexOf === baseIndexOf,
          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,
          seen = isLarge ? createCache() : null,
          result = [];
      if (seen) {
        indexOf = cacheIndexOf;
        isCommon = false;
      } else {
        isLarge = false;
        seen = iteratee ? [] : result;
      }
      outer: while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value, index, array) : value;
        if (isCommon && value === value) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        } else if (indexOf(seen, computed, 0) < 0) {
          if (iteratee || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }
    function baseValues(object, props) {
      var index = -1,
          length = props.length,
          result = Array(length);
      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;
      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}
      return isDrop ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length)) : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      var index = -1,
          length = actions.length;
      while (++index < length) {
        var action = actions[index];
        result = action.func.apply(action.thisArg, arrayPush([result], action.args));
      }
      return result;
    }
    function binaryIndex(array, value, retHighest) {
      var low = 0,
          high = array ? array.length : low;
      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];
          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return binaryIndexBy(array, value, identity, retHighest);
    }
    function binaryIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);
      var low = 0,
          high = array ? array.length : 0,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsUndef = value === undefined;
      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            isDef = computed !== undefined,
            isReflexive = computed === computed;
        if (valIsNaN) {
          var setLow = isReflexive || retHighest;
        } else if (valIsNull) {
          setLow = isReflexive && isDef && (retHighest || computed != null);
        } else if (valIsUndef) {
          setLow = isReflexive && (retHighest || isDef);
        } else if (computed == null) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }
    function bindCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      if (thisArg === undefined) {
        return func;
      }
      switch (argCount) {
        case 1:
          return function(value) {
            return func.call(thisArg, value);
          };
        case 3:
          return function(value, index, collection) {
            return func.call(thisArg, value, index, collection);
          };
        case 4:
          return function(accumulator, value, index, collection) {
            return func.call(thisArg, accumulator, value, index, collection);
          };
        case 5:
          return function(value, other, key, object, source) {
            return func.call(thisArg, value, other, key, object, source);
          };
      }
      return function() {
        return func.apply(thisArg, arguments);
      };
    }
    function bufferClone(buffer) {
      var result = new ArrayBuffer(buffer.byteLength),
          view = new Uint8Array(result);
      view.set(new Uint8Array(buffer));
      return result;
    }
    function composeArgs(args, partials, holders) {
      var holdersLength = holders.length,
          argsIndex = -1,
          argsLength = nativeMax(args.length - holdersLength, 0),
          leftIndex = -1,
          leftLength = partials.length,
          result = Array(leftLength + argsLength);
      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        result[holders[argsIndex]] = args[argsIndex];
      }
      while (argsLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }
    function composeArgsRight(args, partials, holders) {
      var holdersIndex = -1,
          holdersLength = holders.length,
          argsIndex = -1,
          argsLength = nativeMax(args.length - holdersLength, 0),
          rightIndex = -1,
          rightLength = partials.length,
          result = Array(argsLength + rightLength);
      while (++argsIndex < argsLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        result[offset + holders[holdersIndex]] = args[argsIndex++];
      }
      return result;
    }
    function createAggregator(setter, initializer) {
      return function(collection, iteratee, thisArg) {
        var result = initializer ? initializer() : {};
        iteratee = getCallback(iteratee, thisArg, 3);
        if (isArray(collection)) {
          var index = -1,
              length = collection.length;
          while (++index < length) {
            var value = collection[index];
            setter(result, value, iteratee(value, index, collection), collection);
          }
        } else {
          baseEach(collection, function(value, key, collection) {
            setter(result, value, iteratee(value, key, collection), collection);
          });
        }
        return result;
      };
    }
    function createAssigner(assigner) {
      return restParam(function(object, sources) {
        var index = -1,
            length = object == null ? 0 : sources.length,
            customizer = length > 2 ? sources[length - 2] : undefined,
            guard = length > 2 ? sources[2] : undefined,
            thisArg = length > 1 ? sources[length - 1] : undefined;
        if (typeof customizer == 'function') {
          customizer = bindCallback(customizer, thisArg, 5);
          length -= 2;
        } else {
          customizer = typeof thisArg == 'function' ? thisArg : undefined;
          length -= (customizer ? 1 : 0);
        }
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, customizer);
          }
        }
        return object;
      });
    }
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        var length = collection ? getLength(collection) : 0;
        if (!isLength(length)) {
          return eachFunc(collection, iteratee);
        }
        var index = fromRight ? length : -1,
            iterable = toObject(collection);
        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var iterable = toObject(object),
            props = keysFunc(object),
            length = props.length,
            index = fromRight ? length : -1;
        while ((fromRight ? index-- : ++index < length)) {
          var key = props[index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    function createBindWrapper(func, thisArg) {
      var Ctor = createCtorWrapper(func);
      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(thisArg, arguments);
      }
      return wrapper;
    }
    function createCache(values) {
      return (nativeCreate && Set) ? new SetCache(values) : null;
    }
    function createCompounder(callback) {
      return function(string) {
        var index = -1,
            array = words(deburr(string)),
            length = array.length,
            result = '';
        while (++index < length) {
          result = callback(result, array[index], index);
        }
        return result;
      };
    }
    function createCtorWrapper(Ctor) {
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0:
            return new Ctor;
          case 1:
            return new Ctor(args[0]);
          case 2:
            return new Ctor(args[0], args[1]);
          case 3:
            return new Ctor(args[0], args[1], args[2]);
          case 4:
            return new Ctor(args[0], args[1], args[2], args[3]);
          case 5:
            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);
        return isObject(result) ? result : thisBinding;
      };
    }
    function createCurry(flag) {
      function curryFunc(func, arity, guard) {
        if (guard && isIterateeCall(func, arity, guard)) {
          arity = undefined;
        }
        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);
        result.placeholder = curryFunc.placeholder;
        return result;
      }
      return curryFunc;
    }
    function createDefaults(assigner, customizer) {
      return restParam(function(args) {
        var object = args[0];
        if (object == null) {
          return object;
        }
        args.push(customizer);
        return assigner.apply(undefined, args);
      });
    }
    function createExtremum(comparator, exValue) {
      return function(collection, iteratee, thisArg) {
        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
          iteratee = undefined;
        }
        iteratee = getCallback(iteratee, thisArg, 3);
        if (iteratee.length == 1) {
          collection = isArray(collection) ? collection : toIterable(collection);
          var result = arrayExtremum(collection, iteratee, comparator, exValue);
          if (!(collection.length && result === exValue)) {
            return result;
          }
        }
        return baseExtremum(collection, iteratee, comparator, exValue);
      };
    }
    function createFind(eachFunc, fromRight) {
      return function(collection, predicate, thisArg) {
        predicate = getCallback(predicate, thisArg, 3);
        if (isArray(collection)) {
          var index = baseFindIndex(collection, predicate, fromRight);
          return index > -1 ? collection[index] : undefined;
        }
        return baseFind(collection, predicate, eachFunc);
      };
    }
    function createFindIndex(fromRight) {
      return function(array, predicate, thisArg) {
        if (!(array && array.length)) {
          return -1;
        }
        predicate = getCallback(predicate, thisArg, 3);
        return baseFindIndex(array, predicate, fromRight);
      };
    }
    function createFindKey(objectFunc) {
      return function(object, predicate, thisArg) {
        predicate = getCallback(predicate, thisArg, 3);
        return baseFind(object, predicate, objectFunc, true);
      };
    }
    function createFlow(fromRight) {
      return function() {
        var wrapper,
            length = arguments.length,
            index = fromRight ? length : -1,
            leftIndex = 0,
            funcs = Array(length);
        while ((fromRight ? index-- : ++index < length)) {
          var func = funcs[leftIndex++] = arguments[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {
            wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? -1 : length;
        while (++index < length) {
          func = funcs[index];
          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;
          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];
          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;
          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      };
    }
    function createForEach(arrayFunc, eachFunc) {
      return function(collection, iteratee, thisArg) {
        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection)) ? arrayFunc(collection, iteratee) : eachFunc(collection, bindCallback(iteratee, thisArg, 3));
      };
    }
    function createForIn(objectFunc) {
      return function(object, iteratee, thisArg) {
        if (typeof iteratee != 'function' || thisArg !== undefined) {
          iteratee = bindCallback(iteratee, thisArg, 3);
        }
        return objectFunc(object, iteratee, keysIn);
      };
    }
    function createForOwn(objectFunc) {
      return function(object, iteratee, thisArg) {
        if (typeof iteratee != 'function' || thisArg !== undefined) {
          iteratee = bindCallback(iteratee, thisArg, 3);
        }
        return objectFunc(object, iteratee);
      };
    }
    function createObjectMapper(isMapKeys) {
      return function(object, iteratee, thisArg) {
        var result = {};
        iteratee = getCallback(iteratee, thisArg, 3);
        baseForOwn(object, function(value, key, object) {
          var mapped = iteratee(value, key, object);
          key = isMapKeys ? mapped : key;
          value = isMapKeys ? value : mapped;
          result[key] = value;
        });
        return result;
      };
    }
    function createPadDir(fromRight) {
      return function(string, length, chars) {
        string = baseToString(string);
        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);
      };
    }
    function createPartial(flag) {
      var partialFunc = restParam(function(func, partials) {
        var holders = replaceHolders(partials, partialFunc.placeholder);
        return createWrapper(func, flag, undefined, partials, holders);
      });
      return partialFunc;
    }
    function createReduce(arrayFunc, eachFunc) {
      return function(collection, iteratee, accumulator, thisArg) {
        var initFromArray = arguments.length < 3;
        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection)) ? arrayFunc(collection, iteratee, accumulator, initFromArray) : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);
      };
    }
    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & ARY_FLAG,
          isBind = bitmask & BIND_FLAG,
          isBindKey = bitmask & BIND_KEY_FLAG,
          isCurry = bitmask & CURRY_FLAG,
          isCurryBound = bitmask & CURRY_BOUND_FLAG,
          isCurryRight = bitmask & CURRY_RIGHT_FLAG,
          Ctor = isBindKey ? undefined : createCtorWrapper(func);
      function wrapper() {
        var length = arguments.length,
            index = length,
            args = Array(length);
        while (index--) {
          args[index] = arguments[index];
        }
        if (partials) {
          args = composeArgs(args, partials, holders);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight);
        }
        if (isCurry || isCurryRight) {
          var placeholder = wrapper.placeholder,
              argsHolders = replaceHolders(args, placeholder);
          length -= argsHolders.length;
          if (length < arity) {
            var newArgPos = argPos ? arrayCopy(argPos) : undefined,
                newArity = nativeMax(arity - length, 0),
                newsHolders = isCurry ? argsHolders : undefined,
                newHoldersRight = isCurry ? undefined : argsHolders,
                newPartials = isCurry ? args : undefined,
                newPartialsRight = isCurry ? undefined : args;
            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);
            if (!isCurryBound) {
              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
            }
            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],
                result = createHybridWrapper.apply(undefined, newData);
            if (isLaziable(func)) {
              setData(result, newData);
            }
            result.placeholder = placeholder;
            return result;
          }
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;
        if (argPos) {
          args = reorder(args, argPos);
        }
        if (isAry && ary < args.length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtorWrapper(func);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }
    function createPadding(string, length, chars) {
      var strLength = string.length;
      length = +length;
      if (strLength >= length || !nativeIsFinite(length)) {
        return '';
      }
      var padLength = length - strLength;
      chars = chars == null ? ' ' : (chars + '');
      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);
    }
    function createPartialWrapper(func, bitmask, thisArg, partials) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtorWrapper(func);
      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength);
        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, args);
      }
      return wrapper;
    }
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        precision = precision === undefined ? 0 : (+precision || 0);
        if (precision) {
          precision = pow(10, precision);
          return func(number * precision) / precision;
        }
        return func(number);
      };
    }
    function createSortedIndex(retHighest) {
      return function(array, value, iteratee, thisArg) {
        var callback = getCallback(iteratee);
        return (iteratee == null && callback === baseCallback) ? binaryIndex(array, value, retHighest) : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);
      };
    }
    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      length -= (holders ? holders.length : 0);
      if (bitmask & PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;
        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func),
          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];
      if (data) {
        mergeData(newData, data);
        bitmask = newData[1];
        arity = newData[9];
      }
      newData[9] = arity == null ? (isBindKey ? 0 : func.length) : (nativeMax(arity - length, 0) || 0);
      if (bitmask == BIND_FLAG) {
        var result = createBindWrapper(newData[0], newData[2]);
      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {
        result = createPartialWrapper.apply(undefined, newData);
      } else {
        result = createHybridWrapper.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setter(result, newData);
    }
    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {
      var index = -1,
          arrLength = array.length,
          othLength = other.length;
      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {
        return false;
      }
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index],
            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;
        if (result !== undefined) {
          if (result) {
            continue;
          }
          return false;
        }
        if (isLoose) {
          if (!arraySome(other, function(othValue) {
            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);
          })) {
            return false;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {
          return false;
        }
      }
      return true;
    }
    function equalByTag(object, other, tag) {
      switch (tag) {
        case boolTag:
        case dateTag:
          return +object == +other;
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case numberTag:
          return (object != +object) ? other != +other : object == +other;
        case regexpTag:
        case stringTag:
          return object == (other + '');
      }
      return false;
    }
    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
      var objProps = keys(object),
          objLength = objProps.length,
          othProps = keys(other),
          othLength = othProps.length;
      if (objLength != othLength && !isLoose) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var skipCtor = isLoose;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key],
            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined;
        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {
          return false;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (!skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;
        if (objCtor != othCtor && ('constructor' in object && 'constructor' in other) && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          return false;
        }
      }
      return true;
    }
    function getCallback(func, thisArg, argCount) {
      var result = lodash.callback || callback;
      result = result === callback ? baseCallback : result;
      return argCount ? result(func, thisArg, argCount) : result;
    }
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = array ? array.length : 0;
      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }
    function getIndexOf(collection, target, fromIndex) {
      var result = lodash.indexOf || indexOf;
      result = result === indexOf ? baseIndexOf : result;
      return collection ? result(collection, target, fromIndex) : result;
    }
    var getLength = baseProperty('length');
    function getMatchData(object) {
      var result = pairs(object),
          length = result.length;
      while (length--) {
        result[length][2] = isStrictComparable(result[length][1]);
      }
      return result;
    }
    function getNative(object, key) {
      var value = object == null ? undefined : object[key];
      return isNative(value) ? value : undefined;
    }
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;
      while (++index < length) {
        var data = transforms[index],
            size = data.size;
        switch (data.type) {
          case 'drop':
            start += size;
            break;
          case 'dropRight':
            end -= size;
            break;
          case 'take':
            end = nativeMin(end, start + size);
            break;
          case 'takeRight':
            start = nativeMax(start, end - size);
            break;
        }
      }
      return {
        'start': start,
        'end': end
      };
    }
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    function initCloneObject(object) {
      var Ctor = object.constructor;
      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {
        Ctor = Object;
      }
      return new Ctor;
    }
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return bufferClone(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          if (Ctor instanceof Ctor) {
            Ctor = ctorByTag[tag];
          }
          var buffer = object.buffer;
          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          var result = new Ctor(object.source, reFlags.exec(object));
          result.lastIndex = object.lastIndex;
      }
      return result;
    }
    function invokePath(object, path, args) {
      if (object != null && !isKey(path, object)) {
        path = toPath(path);
        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
        path = last(path);
      }
      var func = object == null ? object : object[path];
      return func == null ? undefined : func.apply(object, args);
    }
    function isArrayLike(value) {
      return value != null && isLength(getLength(value));
    }
    function isIndex(value, length) {
      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return value > -1 && value % 1 == 0 && value < length;
    }
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number' ? (isArrayLike(object) && isIndex(index, object.length)) : (type == 'string' && index in object)) {
        var other = object[index];
        return value === value ? (value === other) : (other !== other);
      }
      return false;
    }
    function isKey(value, object) {
      var type = typeof value;
      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {
        return true;
      }
      if (isArray(value)) {
        return false;
      }
      var result = !reIsDeepProp.test(value);
      return result || (object != null && value in toObject(object));
    }
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];
      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }
    function isLength(value) {
      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < ARY_FLAG;
      var isCombo = (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) || (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) || (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);
      if (!(isCommon || isCombo)) {
        return data;
      }
      if (srcBitmask & BIND_FLAG) {
        data[2] = source[2];
        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;
      }
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);
      }
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);
      }
      value = source[7];
      if (value) {
        data[7] = arrayCopy(value);
      }
      if (srcBitmask & ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      if (data[9] == null) {
        data[9] = source[9];
      }
      data[0] = source[0];
      data[1] = newBitmask;
      return data;
    }
    function mergeDefaults(objectValue, sourceValue) {
      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);
    }
    function pickByArray(object, props) {
      object = toObject(object);
      var index = -1,
          length = props.length,
          result = {};
      while (++index < length) {
        var key = props[index];
        if (key in object) {
          result[key] = object[key];
        }
      }
      return result;
    }
    function pickByCallback(object, predicate) {
      var result = {};
      baseForIn(object, function(value, key, object) {
        if (predicate(value, key, object)) {
          result[key] = value;
        }
      });
      return result;
    }
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = arrayCopy(array);
      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }
    var setData = (function() {
      var count = 0,
          lastCalled = 0;
      return function(key, value) {
        var stamp = now(),
            remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return key;
          }
        } else {
          count = 0;
        }
        return baseSetData(key, value);
      };
    }());
    function shimKeys(object) {
      var props = keysIn(object),
          propsLength = props.length,
          length = propsLength && object.length;
      var allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object) || isString(object));
      var index = -1,
          result = [];
      while (++index < propsLength) {
        var key = props[index];
        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
          result.push(key);
        }
      }
      return result;
    }
    function toIterable(value) {
      if (value == null) {
        return [];
      }
      if (!isArrayLike(value)) {
        return values(value);
      }
      if (lodash.support.unindexedChars && isString(value)) {
        return value.split('');
      }
      return isObject(value) ? value : Object(value);
    }
    function toObject(value) {
      if (lodash.support.unindexedChars && isString(value)) {
        var index = -1,
            length = value.length,
            result = Object(value);
        while (++index < length) {
          result[index] = value.charAt(index);
        }
        return result;
      }
      return isObject(value) ? value : Object(value);
    }
    function toPath(value) {
      if (isArray(value)) {
        return value;
      }
      var result = [];
      baseToString(value).replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    }
    function wrapperClone(wrapper) {
      return wrapper instanceof LazyWrapper ? wrapper.clone() : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));
    }
    function chunk(array, size, guard) {
      if (guard ? isIterateeCall(array, size, guard) : size == null) {
        size = 1;
      } else {
        size = nativeMax(nativeFloor(size) || 1, 1);
      }
      var index = 0,
          length = array ? array.length : 0,
          resIndex = -1,
          result = Array(nativeCeil(length / size));
      while (index < length) {
        result[++resIndex] = baseSlice(array, index, (index += size));
      }
      return result;
    }
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          resIndex = -1,
          result = [];
      while (++index < length) {
        var value = array[index];
        if (value) {
          result[++resIndex] = value;
        }
      }
      return result;
    }
    var difference = restParam(function(array, values) {
      return (isObjectLike(array) && isArrayLike(array)) ? baseDifference(array, baseFlatten(values, false, true)) : [];
    });
    function drop(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      return baseSlice(array, n < 0 ? 0 : n);
    }
    function dropRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      n = length - (+n || 0);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }
    function dropRightWhile(array, predicate, thisArg) {
      return (array && array.length) ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true) : [];
    }
    function dropWhile(array, predicate, thisArg) {
      return (array && array.length) ? baseWhile(array, getCallback(predicate, thisArg, 3), true) : [];
    }
    function fill(array, value, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }
    var findIndex = createFindIndex();
    var findLastIndex = createFindIndex(true);
    function first(array) {
      return array ? array[0] : undefined;
    }
    function flatten(array, isDeep, guard) {
      var length = array ? array.length : 0;
      if (guard && isIterateeCall(array, isDeep, guard)) {
        isDeep = false;
      }
      return length ? baseFlatten(array, isDeep) : [];
    }
    function flattenDeep(array) {
      var length = array ? array.length : 0;
      return length ? baseFlatten(array, true) : [];
    }
    function indexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      if (typeof fromIndex == 'number') {
        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;
      } else if (fromIndex) {
        var index = binaryIndex(array, value);
        if (index < length && (value === value ? (value === array[index]) : (array[index] !== array[index]))) {
          return index;
        }
        return -1;
      }
      return baseIndexOf(array, value, fromIndex || 0);
    }
    function initial(array) {
      return dropRight(array, 1);
    }
    var intersection = restParam(function(arrays) {
      var othLength = arrays.length,
          othIndex = othLength,
          caches = Array(length),
          indexOf = getIndexOf(),
          isCommon = indexOf === baseIndexOf,
          result = [];
      while (othIndex--) {
        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];
        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;
      }
      var array = arrays[0],
          index = -1,
          length = array ? array.length : 0,
          seen = caches[0];
      outer: while (++index < length) {
        value = array[index];
        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {
          var othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(value);
          }
          result.push(value);
        }
      }
      return result;
    });
    function last(array) {
      var length = array ? array.length : 0;
      return length ? array[length - 1] : undefined;
    }
    function lastIndexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      var index = length;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;
      } else if (fromIndex) {
        index = binaryIndex(array, value, true) - 1;
        var other = array[index];
        if (value === value ? (value === other) : (other !== other)) {
          return index;
        }
        return -1;
      }
      if (value !== value) {
        return indexOfNaN(array, index, true);
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    function pull() {
      var args = arguments,
          array = args[0];
      if (!(array && array.length)) {
        return array;
      }
      var index = 0,
          indexOf = getIndexOf(),
          length = args.length;
      while (++index < length) {
        var fromIndex = 0,
            value = args[index];
        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }
    var pullAt = restParam(function(array, indexes) {
      indexes = baseFlatten(indexes);
      var result = baseAt(array, indexes);
      basePullAt(array, indexes.sort(baseCompareAscending));
      return result;
    });
    function remove(array, predicate, thisArg) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;
      predicate = getCallback(predicate, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }
    function rest(array) {
      return drop(array, 1);
    }
    function slice(array, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      return baseSlice(array, start, end);
    }
    var sortedIndex = createSortedIndex();
    var sortedLastIndex = createSortedIndex(true);
    function take(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }
    function takeRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      n = length - (+n || 0);
      return baseSlice(array, n < 0 ? 0 : n);
    }
    function takeRightWhile(array, predicate, thisArg) {
      return (array && array.length) ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true) : [];
    }
    function takeWhile(array, predicate, thisArg) {
      return (array && array.length) ? baseWhile(array, getCallback(predicate, thisArg, 3)) : [];
    }
    var union = restParam(function(arrays) {
      return baseUniq(baseFlatten(arrays, false, true));
    });
    function uniq(array, isSorted, iteratee, thisArg) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (isSorted != null && typeof isSorted != 'boolean') {
        thisArg = iteratee;
        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;
        isSorted = false;
      }
      var callback = getCallback();
      if (!(iteratee == null && callback === baseCallback)) {
        iteratee = callback(iteratee, thisArg, 3);
      }
      return (isSorted && getIndexOf() === baseIndexOf) ? sortedUniq(array, iteratee) : baseUniq(array, iteratee);
    }
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var index = -1,
          length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLike(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      var result = Array(length);
      while (++index < length) {
        result[index] = arrayMap(array, baseProperty(index));
      }
      return result;
    }
    function unzipWith(array, iteratee, thisArg) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      iteratee = bindCallback(iteratee, thisArg, 4);
      return arrayMap(result, function(group) {
        return arrayReduce(group, iteratee, undefined, true);
      });
    }
    var without = restParam(function(array, values) {
      return isArrayLike(array) ? baseDifference(array, values) : [];
    });
    function xor() {
      var index = -1,
          length = arguments.length;
      while (++index < length) {
        var array = arguments[index];
        if (isArrayLike(array)) {
          var result = result ? arrayPush(baseDifference(result, array), baseDifference(array, result)) : array;
        }
      }
      return result ? baseUniq(result) : [];
    }
    var zip = restParam(unzip);
    function zipObject(props, values) {
      var index = -1,
          length = props ? props.length : 0,
          result = {};
      if (length && !values && !isArray(props[0])) {
        values = [];
      }
      while (++index < length) {
        var key = props[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }
    var zipWith = restParam(function(arrays) {
      var length = arrays.length,
          iteratee = length > 2 ? arrays[length - 2] : undefined,
          thisArg = length > 1 ? arrays[length - 1] : undefined;
      if (length > 2 && typeof iteratee == 'function') {
        length -= 2;
      } else {
        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;
        thisArg = undefined;
      }
      arrays.length = length;
      return unzipWith(arrays, iteratee, thisArg);
    });
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }
    function tap(value, interceptor, thisArg) {
      interceptor.call(thisArg, value);
      return value;
    }
    function thru(value, interceptor, thisArg) {
      return interceptor.call(thisArg, value);
    }
    function wrapperChain() {
      return chain(this);
    }
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }
    var wrapperConcat = restParam(function(values) {
      values = baseFlatten(values);
      return this.thru(function(array) {
        return arrayConcat(isArray(array) ? array : [toObject(array)], values);
      });
    });
    function wrapperPlant(value) {
      var result,
          parent = this;
      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }
    function wrapperReverse() {
      var value = this.__wrapped__;
      var interceptor = function(value) {
        return value.reverse();
      };
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [interceptor],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(interceptor);
    }
    function wrapperToString() {
      return (this.value() + '');
    }
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }
    var at = restParam(function(collection, props) {
      if (isArrayLike(collection)) {
        collection = toIterable(collection);
      }
      return baseAt(collection, baseFlatten(props));
    });
    var countBy = createAggregator(function(result, value, key) {
      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
    });
    function every(collection, predicate, thisArg) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {
        predicate = undefined;
      }
      if (typeof predicate != 'function' || thisArg !== undefined) {
        predicate = getCallback(predicate, thisArg, 3);
      }
      return func(collection, predicate);
    }
    function filter(collection, predicate, thisArg) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      predicate = getCallback(predicate, thisArg, 3);
      return func(collection, predicate);
    }
    var find = createFind(baseEach);
    var findLast = createFind(baseEachRight, true);
    function findWhere(collection, source) {
      return find(collection, baseMatches(source));
    }
    var forEach = createForEach(arrayEach, baseEach);
    var forEachRight = createForEach(arrayEachRight, baseEachRight);
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        result[key] = [value];
      }
    });
    function includes(collection, target, fromIndex, guard) {
      var length = collection ? getLength(collection) : 0;
      if (!isLength(length)) {
        collection = values(collection);
        length = collection.length;
      }
      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {
        fromIndex = 0;
      } else {
        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);
      }
      return (typeof collection == 'string' || !isArray(collection) && isString(collection)) ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1) : (!!length && getIndexOf(collection, target, fromIndex) > -1);
    }
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });
    var invoke = restParam(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          isProp = isKey(path),
          result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value) {
        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);
      });
      return result;
    });
    function map(collection, iteratee, thisArg) {
      var func = isArray(collection) ? arrayMap : baseMap;
      iteratee = getCallback(iteratee, thisArg, 3);
      return func(collection, iteratee);
    }
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() {
      return [[], []];
    });
    function pluck(collection, path) {
      return map(collection, property(path));
    }
    var reduce = createReduce(arrayReduce, baseEach);
    var reduceRight = createReduce(arrayReduceRight, baseEachRight);
    function reject(collection, predicate, thisArg) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      predicate = getCallback(predicate, thisArg, 3);
      return func(collection, function(value, index, collection) {
        return !predicate(value, index, collection);
      });
    }
    function sample(collection, n, guard) {
      if (guard ? isIterateeCall(collection, n, guard) : n == null) {
        collection = toIterable(collection);
        var length = collection.length;
        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;
      }
      var index = -1,
          result = toArray(collection),
          length = result.length,
          lastIndex = length - 1;
      n = nativeMin(n < 0 ? 0 : (+n || 0), length);
      while (++index < n) {
        var rand = baseRandom(index, lastIndex),
            value = result[rand];
        result[rand] = result[index];
        result[index] = value;
      }
      result.length = n;
      return result;
    }
    function shuffle(collection) {
      return sample(collection, POSITIVE_INFINITY);
    }
    function size(collection) {
      var length = collection ? getLength(collection) : 0;
      return isLength(length) ? length : keys(collection).length;
    }
    function some(collection, predicate, thisArg) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {
        predicate = undefined;
      }
      if (typeof predicate != 'function' || thisArg !== undefined) {
        predicate = getCallback(predicate, thisArg, 3);
      }
      return func(collection, predicate);
    }
    function sortBy(collection, iteratee, thisArg) {
      if (collection == null) {
        return [];
      }
      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
        iteratee = undefined;
      }
      var index = -1;
      iteratee = getCallback(iteratee, thisArg, 3);
      var result = baseMap(collection, function(value, key, collection) {
        return {
          'criteria': iteratee(value, key, collection),
          'index': ++index,
          'value': value
        };
      });
      return baseSortBy(result, compareAscending);
    }
    var sortByAll = restParam(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var guard = iteratees[2];
      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {
        iteratees.length = 1;
      }
      return baseSortByOrder(collection, baseFlatten(iteratees), []);
    });
    function sortByOrder(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (guard && isIterateeCall(iteratees, orders, guard)) {
        orders = undefined;
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseSortByOrder(collection, iteratees, orders);
    }
    function where(collection, source) {
      return filter(collection, baseMatches(source));
    }
    var now = nativeNow || function() {
      return new Date().getTime();
    };
    function after(n, func) {
      if (typeof func != 'function') {
        if (typeof n == 'function') {
          var temp = n;
          n = func;
          func = temp;
        } else {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
      }
      n = nativeIsFinite(n = +n) ? n : 0;
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }
    function ary(func, n, guard) {
      if (guard && isIterateeCall(func, n, guard)) {
        n = undefined;
      }
      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);
      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        if (typeof n == 'function') {
          var temp = n;
          n = func;
          func = temp;
        } else {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
      }
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }
    var bind = restParam(function(func, thisArg, partials) {
      var bitmask = BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, bind.placeholder);
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(func, bitmask, thisArg, partials, holders);
    });
    var bindAll = restParam(function(object, methodNames) {
      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);
      var index = -1,
          length = methodNames.length;
      while (++index < length) {
        var key = methodNames[index];
        object[key] = createWrapper(object[key], BIND_FLAG, object);
      }
      return object;
    });
    var bindKey = restParam(function(object, key, partials) {
      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, bindKey.placeholder);
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(key, bitmask, object, partials, holders);
    });
    var curry = createCurry(CURRY_FLAG);
    var curryRight = createCurry(CURRY_RIGHT_FLAG);
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = wait < 0 ? 0 : (+wait || 0);
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = !!options.leading;
        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      function cancel() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        if (maxTimeoutId) {
          clearTimeout(maxTimeoutId);
        }
        lastCalled = 0;
        maxTimeoutId = timeoutId = trailingCall = undefined;
      }
      function complete(isCalled, id) {
        if (id) {
          clearTimeout(id);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (isCalled) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = undefined;
          }
        }
      }
      function delayed() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0 || remaining > wait) {
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
      function maxDelayed() {
        complete(trailing, timeoutId);
      }
      function debounced() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);
        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0 || remaining > maxWait;
          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          } else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        } else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = undefined;
        }
        return result;
      }
      debounced.cancel = cancel;
      return debounced;
    }
    var defer = restParam(function(func, args) {
      return baseDelay(func, 1, args);
    });
    var delay = restParam(function(func, wait, args) {
      return baseDelay(func, wait, args);
    });
    var flow = createFlow();
    var flowRight = createFlow(true);
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result);
        return result;
      };
      memoized.cache = new memoize.Cache;
      return memoized;
    }
    var modArgs = restParam(function(func, transforms) {
      transforms = baseFlatten(transforms);
      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = transforms.length;
      return restParam(function(args) {
        var index = nativeMin(args.length, length);
        while (index--) {
          args[index] = transforms[index](args[index]);
        }
        return func.apply(this, args);
      });
    });
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        return !predicate.apply(this, arguments);
      };
    }
    function once(func) {
      return before(2, func);
    }
    var partial = createPartial(PARTIAL_FLAG);
    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);
    var rearg = restParam(function(func, indexes) {
      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));
    });
    function restParam(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            rest = Array(length);
        while (++index < length) {
          rest[index] = args[start + index];
        }
        switch (start) {
          case 0:
            return func.call(this, rest);
          case 1:
            return func.call(this, args[0], rest);
          case 2:
            return func.call(this, args[0], args[1], rest);
        }
        var otherArgs = Array(start + 1);
        index = -1;
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = rest;
        return func.apply(this, otherArgs);
      };
    }
    function spread(func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function(array) {
        return func.apply(this, array);
      };
    }
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': +wait,
        'trailing': trailing
      });
    }
    function wrap(value, wrapper) {
      wrapper = wrapper == null ? identity : wrapper;
      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);
    }
    function clone(value, isDeep, customizer, thisArg) {
      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {
        isDeep = false;
      } else if (typeof isDeep == 'function') {
        thisArg = customizer;
        customizer = isDeep;
        isDeep = false;
      }
      return typeof customizer == 'function' ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 3)) : baseClone(value, isDeep);
    }
    function cloneDeep(value, customizer, thisArg) {
      return typeof customizer == 'function' ? baseClone(value, true, bindCallback(customizer, thisArg, 3)) : baseClone(value, true);
    }
    function gt(value, other) {
      return value > other;
    }
    function gte(value, other) {
      return value >= other;
    }
    function isArguments(value) {
      return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
    }
    var isArray = nativeIsArray || function(value) {
      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
    };
    function isBoolean(value) {
      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);
    }
    function isDate(value) {
      return isObjectLike(value) && objToString.call(value) == dateTag;
    }
    function isElement(value) {
      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
    }
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || (isObjectLike(value) && isFunction(value.splice)))) {
        return !value.length;
      }
      return !keys(value).length;
    }
    function isEqual(value, other, customizer, thisArg) {
      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
    }
    function isError(value) {
      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;
    }
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }
    function isFunction(value) {
      return isObject(value) && objToString.call(value) == funcTag;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == 'object' || type == 'function');
    }
    function isMatch(object, source, customizer, thisArg) {
      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;
      return baseIsMatch(object, getMatchData(source), customizer);
    }
    function isNaN(value) {
      return isNumber(value) && value != +value;
    }
    function isNative(value) {
      if (value == null) {
        return false;
      }
      if (isFunction(value)) {
        return reIsNative.test(fnToString.call(value));
      }
      return isObjectLike(value) && (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);
    }
    function isNull(value) {
      return value === null;
    }
    function isNumber(value) {
      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);
    }
    function isPlainObject(value) {
      var Ctor;
      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isHostObject(value) && !isArguments(value)) || (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {
        return false;
      }
      var result;
      if (lodash.support.ownLast) {
        baseForIn(value, function(subValue, key, object) {
          result = hasOwnProperty.call(object, key);
          return false;
        });
        return result !== false;
      }
      baseForIn(value, function(subValue, key) {
        result = key;
      });
      return result === undefined || hasOwnProperty.call(value, result);
    }
    function isRegExp(value) {
      return isObject(value) && objToString.call(value) == regexpTag;
    }
    function isString(value) {
      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);
    }
    function isTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
    }
    function isUndefined(value) {
      return value === undefined;
    }
    function lt(value, other) {
      return value < other;
    }
    function lte(value, other) {
      return value <= other;
    }
    function toArray(value) {
      var length = value ? getLength(value) : 0;
      if (!isLength(length)) {
        return values(value);
      }
      if (!length) {
        return [];
      }
      return (lodash.support.unindexedChars && isString(value)) ? value.split('') : arrayCopy(value);
    }
    function toPlainObject(value) {
      return baseCopy(value, keysIn(value));
    }
    var merge = createAssigner(baseMerge);
    var assign = createAssigner(function(object, source, customizer) {
      return customizer ? assignWith(object, source, customizer) : baseAssign(object, source);
    });
    function create(prototype, properties, guard) {
      var result = baseCreate(prototype);
      if (guard && isIterateeCall(prototype, properties, guard)) {
        properties = undefined;
      }
      return properties ? baseAssign(result, properties) : result;
    }
    var defaults = createDefaults(assign, assignDefaults);
    var defaultsDeep = createDefaults(merge, mergeDefaults);
    var findKey = createFindKey(baseForOwn);
    var findLastKey = createFindKey(baseForOwnRight);
    var forIn = createForIn(baseFor);
    var forInRight = createForIn(baseForRight);
    var forOwn = createForOwn(baseForOwn);
    var forOwnRight = createForOwn(baseForOwnRight);
    function functions(object) {
      return baseFunctions(object, keysIn(object));
    }
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, toPath(path), (path + ''));
      return result === undefined ? defaultValue : result;
    }
    function has(object, path) {
      if (object == null) {
        return false;
      }
      var result = hasOwnProperty.call(object, path);
      if (!result && !isKey(path)) {
        path = toPath(path);
        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
        if (object == null) {
          return false;
        }
        path = last(path);
        result = hasOwnProperty.call(object, path);
      }
      return result || (isLength(object.length) && isIndex(path, object.length) && (isArray(object) || isArguments(object) || isString(object)));
    }
    function invert(object, multiValue, guard) {
      if (guard && isIterateeCall(object, multiValue, guard)) {
        multiValue = undefined;
      }
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};
      while (++index < length) {
        var key = props[index],
            value = object[key];
        if (multiValue) {
          if (hasOwnProperty.call(result, value)) {
            result[value].push(key);
          } else {
            result[value] = [key];
          }
        } else {
          result[value] = key;
        }
      }
      return result;
    }
    var keys = !nativeKeys ? shimKeys : function(object) {
      var Ctor = object == null ? undefined : object.constructor;
      if ((typeof Ctor == 'function' && Ctor.prototype === object) || (typeof object == 'function' ? lodash.support.enumPrototypes : isArrayLike(object))) {
        return shimKeys(object);
      }
      return isObject(object) ? nativeKeys(object) : [];
    };
    function keysIn(object) {
      if (object == null) {
        return [];
      }
      if (!isObject(object)) {
        object = Object(object);
      }
      var length = object.length,
          support = lodash.support;
      length = (length && isLength(length) && (isArray(object) || isArguments(object) || isString(object)) && length) || 0;
      var Ctor = object.constructor,
          index = -1,
          proto = (isFunction(Ctor) && Ctor.prototype) || objectProto,
          isProto = proto === object,
          result = Array(length),
          skipIndexes = length > 0,
          skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error),
          skipProto = support.enumPrototypes && isFunction(object);
      while (++index < length) {
        result[index] = (index + '');
      }
      for (var key in object) {
        if (!(skipProto && key == 'prototype') && !(skipErrorProps && (key == 'message' || key == 'name')) && !(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      if (support.nonEnumShadows && object !== objectProto) {
        var tag = object === stringProto ? stringTag : (object === errorProto ? errorTag : objToString.call(object)),
            nonEnums = nonEnumProps[tag] || nonEnumProps[objectTag];
        if (tag == objectTag) {
          proto = objectProto;
        }
        length = shadowProps.length;
        while (length--) {
          key = shadowProps[length];
          var nonEnum = nonEnums[key];
          if (!(isProto && nonEnum) && (nonEnum ? hasOwnProperty.call(object, key) : object[key] !== proto[key])) {
            result.push(key);
          }
        }
      }
      return result;
    }
    var mapKeys = createObjectMapper(true);
    var mapValues = createObjectMapper();
    var omit = restParam(function(object, props) {
      if (object == null) {
        return {};
      }
      if (typeof props[0] != 'function') {
        var props = arrayMap(baseFlatten(props), String);
        return pickByArray(object, baseDifference(keysIn(object), props));
      }
      var predicate = bindCallback(props[0], props[1], 3);
      return pickByCallback(object, function(value, key, object) {
        return !predicate(value, key, object);
      });
    });
    function pairs(object) {
      object = toObject(object);
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);
      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }
    var pick = restParam(function(object, props) {
      if (object == null) {
        return {};
      }
      return typeof props[0] == 'function' ? pickByCallback(object, bindCallback(props[0], props[1], 3)) : pickByArray(object, baseFlatten(props));
    });
    function result(object, path, defaultValue) {
      var result = object == null ? undefined : toObject(object)[path];
      if (result === undefined) {
        if (object != null && !isKey(path, object)) {
          path = toPath(path);
          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
          result = object == null ? undefined : toObject(object)[last(path)];
        }
        result = result === undefined ? defaultValue : result;
      }
      return isFunction(result) ? result.call(object) : result;
    }
    function set(object, path, value) {
      if (object == null) {
        return object;
      }
      var pathKey = (path + '');
      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);
      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;
      while (nested != null && ++index < length) {
        var key = path[index];
        if (isObject(nested)) {
          if (index == lastIndex) {
            nested[key] = value;
          } else if (nested[key] == null) {
            nested[key] = isIndex(path[index + 1]) ? [] : {};
          }
        }
        nested = nested[key];
      }
      return object;
    }
    function transform(object, iteratee, accumulator, thisArg) {
      var isArr = isArray(object) || isTypedArray(object);
      iteratee = getCallback(iteratee, thisArg, 4);
      if (accumulator == null) {
        if (isArr || isObject(object)) {
          var Ctor = object.constructor;
          if (isArr) {
            accumulator = isArray(object) ? new Ctor : [];
          } else {
            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);
          }
        } else {
          accumulator = {};
        }
      }
      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }
    function values(object) {
      return baseValues(object, keys(object));
    }
    function valuesIn(object) {
      return baseValues(object, keysIn(object));
    }
    function inRange(value, start, end) {
      start = +start || 0;
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = +end || 0;
      }
      return value >= nativeMin(start, end) && value < nativeMax(start, end);
    }
    function random(min, max, floating) {
      if (floating && isIterateeCall(min, max, floating)) {
        max = floating = undefined;
      }
      var noMin = min == null,
          noMax = max == null;
      if (floating == null) {
        if (noMax && typeof min == 'boolean') {
          floating = min;
          min = 1;
        } else if (typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
        noMax = false;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);
      }
      return baseRandom(min, max);
    }
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);
    });
    function capitalize(string) {
      string = baseToString(string);
      return string && (string.charAt(0).toUpperCase() + string.slice(1));
    }
    function deburr(string) {
      string = baseToString(string);
      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
    }
    function endsWith(string, target, position) {
      string = baseToString(string);
      target = (target + '');
      var length = string.length;
      position = position === undefined ? length : nativeMin(position < 0 ? 0 : (+position || 0), length);
      position -= target.length;
      return position >= 0 && string.indexOf(target, position) == position;
    }
    function escape(string) {
      string = baseToString(string);
      return (string && reHasUnescapedHtml.test(string)) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
    }
    function escapeRegExp(string) {
      string = baseToString(string);
      return (string && reHasRegExpChars.test(string)) ? string.replace(reRegExpChars, escapeRegExpChar) : (string || '(?:)');
    }
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });
    function pad(string, length, chars) {
      string = baseToString(string);
      length = +length;
      var strLength = string.length;
      if (strLength >= length || !nativeIsFinite(length)) {
        return string;
      }
      var mid = (length - strLength) / 2,
          leftLength = nativeFloor(mid),
          rightLength = nativeCeil(mid);
      chars = createPadding('', rightLength, chars);
      return chars.slice(0, leftLength) + string + chars;
    }
    var padLeft = createPadDir();
    var padRight = createPadDir(true);
    function parseInt(string, radix, guard) {
      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      string = trim(string);
      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
    }
    function repeat(string, n) {
      var result = '';
      string = baseToString(string);
      n = +n;
      if (n < 1 || !string || !nativeIsFinite(n)) {
        return result;
      }
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        string += string;
      } while (n);
      return result;
    }
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));
    });
    function startsWith(string, target, position) {
      string = baseToString(string);
      position = position == null ? 0 : nativeMin(position < 0 ? 0 : (+position || 0), string.length);
      return string.lastIndexOf(target, position) == position;
    }
    function template(string, options, otherOptions) {
      var settings = lodash.templateSettings;
      if (otherOptions && isIterateeCall(string, options, otherOptions)) {
        options = otherOptions = undefined;
      }
      string = baseToString(string);
      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);
      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);
      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";
      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
      var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : ('lodash.templateSources[' + (++templateCounter) + ']')) + '\n';
      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;
        return match;
      });
      source += "';\n";
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
      source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
      });
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }
    function trim(string, chars, guard) {
      var value = string;
      string = baseToString(string);
      if (!string) {
        return string;
      }
      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);
      }
      chars = (chars + '');
      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);
    }
    function trimLeft(string, chars, guard) {
      var value = string;
      string = baseToString(string);
      if (!string) {
        return string;
      }
      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
        return string.slice(trimmedLeftIndex(string));
      }
      return string.slice(charsLeftIndex(string, (chars + '')));
    }
    function trimRight(string, chars, guard) {
      var value = string;
      string = baseToString(string);
      if (!string) {
        return string;
      }
      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
        return string.slice(0, trimmedRightIndex(string) + 1);
      }
      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);
    }
    function trunc(string, options, guard) {
      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;
      if (options != null) {
        if (isObject(options)) {
          var separator = 'separator' in options ? options.separator : separator;
          length = 'length' in options ? (+options.length || 0) : length;
          omission = 'omission' in options ? baseToString(options.omission) : omission;
        } else {
          length = +options || 0;
        }
      }
      string = baseToString(string);
      if (length >= string.length) {
        return string;
      }
      var end = length - omission.length;
      if (end < 1) {
        return omission;
      }
      var result = string.slice(0, end);
      if (separator == null) {
        return result + omission;
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              newEnd,
              substring = string.slice(0, end);
          if (!separator.global) {
            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            newEnd = match.index;
          }
          result = result.slice(0, newEnd == null ? end : newEnd);
        }
      } else if (string.indexOf(separator, end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }
    function unescape(string) {
      string = baseToString(string);
      return (string && reHasEscapedHtml.test(string)) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
    }
    function words(string, pattern, guard) {
      if (guard && isIterateeCall(string, pattern, guard)) {
        pattern = undefined;
      }
      string = baseToString(string);
      return string.match(pattern || reWords) || [];
    }
    var attempt = restParam(function(func, args) {
      try {
        return func.apply(undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });
    function callback(func, thisArg, guard) {
      if (guard && isIterateeCall(func, thisArg, guard)) {
        thisArg = undefined;
      }
      return isObjectLike(func) ? matches(func) : baseCallback(func, thisArg);
    }
    function constant(value) {
      return function() {
        return value;
      };
    }
    function identity(value) {
      return value;
    }
    function matches(source) {
      return baseMatches(baseClone(source, true));
    }
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, true));
    }
    var method = restParam(function(path, args) {
      return function(object) {
        return invokePath(object, path, args);
      };
    });
    var methodOf = restParam(function(object, args) {
      return function(path) {
        return invokePath(object, path, args);
      };
    });
    function mixin(object, source, options) {
      if (options == null) {
        var isObj = isObject(source),
            props = isObj ? keys(source) : undefined,
            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;
        if (!(methodNames ? methodNames.length : isObj)) {
          methodNames = false;
          options = source;
          source = object;
          object = this;
        }
      }
      if (!methodNames) {
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = true,
          index = -1,
          isFunc = isFunction(object),
          length = methodNames.length;
      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      while (++index < length) {
        var methodName = methodNames[index],
            func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = (function(func) {
            return function() {
              var chainAll = this.__chain__;
              if (chain || chainAll) {
                var result = object(this.__wrapped__),
                    actions = result.__actions__ = arrayCopy(this.__actions__);
                actions.push({
                  'func': func,
                  'args': arguments,
                  'thisArg': object
                });
                result.__chain__ = chainAll;
                return result;
              }
              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }(func));
        }
      }
      return object;
    }
    function noConflict() {
      root._ = oldDash;
      return this;
    }
    function noop() {}
    function property(path) {
      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
    }
    function propertyOf(object) {
      return function(path) {
        return baseGet(object, toPath(path), (path + ''));
      };
    }
    function range(start, end, step) {
      if (step && isIterateeCall(start, end, step)) {
        end = step = undefined;
      }
      start = +start || 0;
      step = step == null ? 1 : (+step || 0);
      if (end == null) {
        end = start;
        start = 0;
      } else {
        end = +end || 0;
      }
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);
      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }
    function times(n, iteratee, thisArg) {
      n = nativeFloor(n);
      if (n < 1 || !nativeIsFinite(n)) {
        return [];
      }
      var index = -1,
          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));
      iteratee = bindCallback(iteratee, thisArg, 1);
      while (++index < n) {
        if (index < MAX_ARRAY_LENGTH) {
          result[index] = iteratee(index);
        } else {
          iteratee(index);
        }
      }
      return result;
    }
    function uniqueId(prefix) {
      var id = ++idCounter;
      return baseToString(prefix) + id;
    }
    function add(augend, addend) {
      return (+augend || 0) + (+addend || 0);
    }
    var ceil = createRound('ceil');
    var floor = createRound('floor');
    var max = createExtremum(gt, NEGATIVE_INFINITY);
    var min = createExtremum(lt, POSITIVE_INFINITY);
    var round = createRound('round');
    function sum(collection, iteratee, thisArg) {
      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
        iteratee = undefined;
      }
      iteratee = getCallback(iteratee, thisArg, 3);
      return iteratee.length == 1 ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee) : baseSum(collection, iteratee);
    }
    lodash.prototype = baseLodash.prototype;
    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;
    MapCache.prototype['delete'] = mapDelete;
    MapCache.prototype.get = mapGet;
    MapCache.prototype.has = mapHas;
    MapCache.prototype.set = mapSet;
    SetCache.prototype.push = cachePush;
    memoize.Cache = MapCache;
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.callback = callback;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.modArgs = modArgs;
    lodash.negate = negate;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.restParam = restParam;
    lodash.set = set;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortByAll = sortByAll;
    lodash.sortByOrder = sortByOrder;
    lodash.spread = spread;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipWith = zipWith;
    lodash.backflow = flowRight;
    lodash.collect = map;
    lodash.compose = flowRight;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.iteratee = callback;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;
    mixin(lodash, lodash);
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.deburr = deburr;
    lodash.endsWith = endsWith;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.findWhere = findWhere;
    lodash.first = first;
    lodash.floor = floor;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isMatch = isMatch;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.min = min;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padLeft = padLeft;
    lodash.padRight = padRight;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.sum = sum;
    lodash.template = template;
    lodash.trim = trim;
    lodash.trimLeft = trimLeft;
    lodash.trimRight = trimRight;
    lodash.trunc = trunc;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.words = words;
    lodash.all = every;
    lodash.any = some;
    lodash.contains = includes;
    lodash.eq = isEqual;
    lodash.detect = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.head = first;
    lodash.include = includes;
    lodash.inject = reduce;
    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }()), false);
    lodash.sample = sample;
    lodash.prototype.sample = function(n) {
      if (!this.__chain__ && n == null) {
        return sample(this.value());
      }
      return this.thru(function(value) {
        return sample(value, n);
      });
    };
    lodash.VERSION = VERSION;
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        var filtered = this.__filtered__;
        if (filtered && !index) {
          return new LazyWrapper(this);
        }
        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);
        var result = this.clone();
        if (filtered) {
          result.__takeCount__ = nativeMin(result.__takeCount__, n);
        } else {
          result.__views__.push({
            'size': n,
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };
      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type != LAZY_MAP_FLAG;
      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getCallback(iteratee, thisArg, 1),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });
    arrayEach(['first', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');
      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });
    arrayEach(['initial', 'rest'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');
      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });
    arrayEach(['pluck', 'where'], function(methodName, index) {
      var operationName = index ? 'filter' : 'map',
          createCallback = index ? baseMatches : property;
      LazyWrapper.prototype[methodName] = function(value) {
        return this[operationName](createCallback(value));
      };
    });
    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };
    LazyWrapper.prototype.reject = function(predicate, thisArg) {
      predicate = getCallback(predicate, thisArg, 1);
      return this.filter(function(value) {
        return !predicate(value);
      });
    };
    LazyWrapper.prototype.slice = function(start, end) {
      start = start == null ? 0 : (+start || 0);
      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = (+end || 0);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };
    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {
      return this.reverse().takeWhile(predicate, thisArg).reverse();
    };
    LazyWrapper.prototype.toArray = function() {
      return this.take(POSITIVE_INFINITY);
    };
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),
          retUnwrapped = /^(?:first|last)$/.test(methodName),
          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];
      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var args = retUnwrapped ? [1] : arguments,
            chainAll = this.__chain__,
            value = this.__wrapped__,
            isHybrid = !!this.__actions__.length,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);
        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          isLazy = useLazy = false;
        }
        var interceptor = function(value) {
          return (retUnwrapped && chainAll) ? lodashFunc(value, 1)[0] : lodashFunc.apply(undefined, arrayPush([value], args));
        };
        var action = {
          'func': thru,
          'args': [interceptor],
          'thisArg': undefined
        },
            onlyLazy = isLazy && !isHybrid;
        if (retUnwrapped && !chainAll) {
          if (onlyLazy) {
            value = value.clone();
            value.__actions__.push(action);
            return func.call(value);
          }
          return lodashFunc.call(undefined, this.value())[0];
        }
        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push(action);
          return new LodashWrapper(result, chainAll);
        }
        return this.thru(interceptor);
      };
    });
    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {
      var protoFunc = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          fixObjects = !support.spliceObjects && /^(?:pop|shift|splice)$/.test(methodName),
          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);
      var func = !fixObjects ? protoFunc : function() {
        var result = protoFunc.apply(this, arguments);
        if (this.length === 0) {
          delete this[0];
        }
        return result;
      };
      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          return func.apply(this.value(), args);
        }
        return this[chainName](function(value) {
          return func.apply(value, args);
        });
      };
    });
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);
        names.push({
          'name': methodName,
          'func': lodashFunc
        });
      }
    });
    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.concat = wrapperConcat;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
    lodash.prototype.collect = lodash.prototype.map;
    lodash.prototype.head = lodash.prototype.first;
    lodash.prototype.select = lodash.prototype.filter;
    lodash.prototype.tail = lodash.prototype.rest;
    return lodash;
  }
  var _ = runInContext();
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    root._ = _;
    define("github:lodash/lodash@3.10.1/lodash.src.js", [], function() {
      return _;
    });
  } else if (freeExports && freeModule) {
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    } else {
      freeExports._ = _;
    }
  } else {
    root._ = _;
  }
}.call(this));

})();
(function() {
var define = System.amdDefine;
define("github:lodash/lodash@3.10.1.js", ["github:lodash/lodash@3.10.1/lodash.src.js"], function(main) {
  return main;
});

})();
System.register('commons/sfdc/method-endpoints.js', [], function (_export) {
  'use strict';

  var MethodEndpoints;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [],
    execute: function () {
      MethodEndpoints = function MethodEndpoints() {
        var _this = this;

        _classCallCheck(this, MethodEndpoints);

        this.event_name = $.urlParam('eventName');
        this.base_account_id = $.urlParam('accid');
        this.base_opportunity_id = $.urlParam('oppid');

        this.formatString = function (str) {
          if (typeof str !== "string") str = JSON.stringify(str);

          str = str.replace(/%5C/g, "%5C%5C").replace(/%22/g, "%5C%22").replace(/\+/g, " ");
          str = _.unescape(unescape(str));

          return JSON.parse(str);
        };

        this.get_nav_header = {
          params: function params(options) {
            return {
              eventName: _this.event_name,
              accountId: _this.base_account_id,
              opportunityId: _this.base_opportunity_id
            };
          },
          callback: function callback(response) {
            _.forEach(response.data.links, function (link) {
              link.url = unescape(link.url);
            });
            return response;
          },
          method: 'getMenuList'
        };
        this.fetch_account = {
          params: function params(request) {
            var reqParams = {
              accountName: request.data.accountName,
              accountId: request.data.accountId
            };
            return reqParams;
          },
          callback: function callback(response) {
            return _this.formatString(response);
          },
          method: 'getSFAccounts'
        };
        this.create_attendee = {
          params: function params(request) {
            var reqParams = {
              queryStr: JSON.stringify({ api_params: request.data })
            };
            return reqParams;
          },
          callback: function callback(response) {
            return _this.formatString(response);
          },
          method: 'createAttendee'
        };
        this.create_briefing = {
          params: function params(request) {
            var oppIds = request.data.oppIds;
            delete request.data["oppIds"];
            var reqParams = {
              accountId: request.data.custom_fields.briefing_account_id,
              opportunityIds: oppIds,
              queryStr: JSON.stringify({ api_params: request.data })
            };
            return reqParams;
          },
          method: 'createBriefing'
        };
        this.update_briefing = {
          params: function params(request) {
            var oppIds = request.data.oppIds;
            delete request.data["oppIds"];
            var reqParams = {
              accountId: request.data.custom_fields.briefing_account_id,
              opportunityIds: oppIds,
              queryStr: JSON.stringify({ api_params: request.data })
            };
            return reqParams;
          },
          method: 'updateBriefing'
        };
        this.fetch_attendee = {
          params: function params(request) {
            var reqParams = {
              accountId: request.data.accountId,
              listSize: request.data.listSize,
              pgNo: request.data.pageNo,
              queryStr: request.data.queryStr
            };
            return reqParams;
          },
          callback: function callback(response) {
            return _this.formatString(response);
          },
          method: 'getSFDCContacts'
        };
        this.fetch_opportunity = {
          params: function params(request) {
            var reqParams = {
              accountId: request.data.accountId,
              opportunityId: request.data.opportunityId,
              opportunityName: request.data.opportunityName
            };
            return reqParams;
          },
          callback: function callback(response) {
            return _this.formatString(response);
          },
          method: 'getSFOpportunities'
        };
        this.fetch_sf_activity_fields = {
          method: 'parseCustFields'
        };
        this.fetch_external_user_form_fields = {
          method: 'getConVals',
          params: function params(request) {
            var reqParams = {
              queryStr: JSON.stringify(request.data)
            };
            return reqParams;
          }
        };
        this.sync_att_to_sfdc = {
          params: function params(options) {
            var optionData = JSON.parse(options['data'])['api_params'];

            var reqParams = {
              accountId: optionData.account_id || '',
              custom_fields: optionData.customFields,
              meetingSource: optionData.meeting_source
            };
            return reqParams;
          },
          method: 'syncAttToSFDC'
        };
      };

      _export('MethodEndpoints', MethodEndpoints);
    }
  };
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-event-aggregator@1.0.0-beta.1/aurelia-event-aggregator.js", ["exports", "npm:aurelia-logging@1.0.0-beta.1.js"], function(exports, _aureliaLogging) {
  'use strict';
  exports.__esModule = true;
  exports.includeEventsIn = includeEventsIn;
  exports.configure = configure;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var logger = _aureliaLogging.getLogger('event-aggregator');
  var Handler = (function() {
    function Handler(messageType, callback) {
      _classCallCheck(this, Handler);
      this.messageType = messageType;
      this.callback = callback;
    }
    Handler.prototype.handle = function handle(message) {
      if (message instanceof this.messageType) {
        this.callback.call(null, message);
      }
    };
    return Handler;
  })();
  var EventAggregator = (function() {
    function EventAggregator() {
      _classCallCheck(this, EventAggregator);
      this.eventLookup = {};
      this.messageHandlers = [];
    }
    EventAggregator.prototype.publish = function publish(event, data) {
      var subscribers = undefined;
      var i = undefined;
      if (typeof event === 'string') {
        subscribers = this.eventLookup[event];
        if (subscribers) {
          subscribers = subscribers.slice();
          i = subscribers.length;
          try {
            while (i--) {
              subscribers[i](data, event);
            }
          } catch (e) {
            logger.error(e);
          }
        }
      } else {
        subscribers = this.messageHandlers.slice();
        i = subscribers.length;
        try {
          while (i--) {
            subscribers[i].handle(event);
          }
        } catch (e) {
          logger.error(e);
        }
      }
    };
    EventAggregator.prototype.subscribe = function subscribe(event, callback) {
      var handler = undefined;
      var subscribers = undefined;
      if (typeof event === 'string') {
        handler = callback;
        subscribers = this.eventLookup[event] || (this.eventLookup[event] = []);
      } else {
        handler = new Handler(event, callback);
        subscribers = this.messageHandlers;
      }
      subscribers.push(handler);
      return {dispose: function dispose() {
          var idx = subscribers.indexOf(handler);
          if (idx !== -1) {
            subscribers.splice(idx, 1);
          }
        }};
    };
    EventAggregator.prototype.subscribeOnce = function subscribeOnce(event, callback) {
      var sub = this.subscribe(event, function(a, b) {
        sub.dispose();
        return callback(a, b);
      });
      return sub;
    };
    return EventAggregator;
  })();
  exports.EventAggregator = EventAggregator;
  function includeEventsIn(obj) {
    var ea = new EventAggregator();
    obj.subscribeOnce = function(event, callback) {
      return ea.subscribeOnce(event, callback);
    };
    obj.subscribe = function(event, callback) {
      return ea.subscribe(event, callback);
    };
    obj.publish = function(event, data) {
      ea.publish(event, data);
    };
    return ea;
  }
  function configure(config) {
    config.instance(EventAggregator, includeEventsIn(config.aurelia));
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-event-aggregator@1.0.0-beta.1.js", ["npm:aurelia-event-aggregator@1.0.0-beta.1/aurelia-event-aggregator.js"], function(main) {
  return main;
});

})();
System.register('commons/sfdc/remote.js', ['github:lodash/lodash@3.10.1.js', 'commons/sfdc/method-endpoints.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js'], function (_export) {
	'use strict';

	var _, MethodEndpoints, inject, EventAggregator, SfdcRemote;

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	return {
		setters: [function (_lodashLodash) {
			_ = _lodashLodash['default'];
		}, function (_methodEndpoints) {
			MethodEndpoints = _methodEndpoints.MethodEndpoints;
		}, function (_aureliaFramework) {
			inject = _aureliaFramework.inject;
		}, function (_aureliaEventAggregator) {
			EventAggregator = _aureliaEventAggregator.EventAggregator;
		}],
		execute: function () {
			SfdcRemote = function () {
				function SfdcRemote(MethodEndpoints, ea) {
					_classCallCheck(this, _SfdcRemote);

					this.pendingRequest = 0;

					this.methodEndpoints = MethodEndpoints;
					this.ea = ea;
				}

				_createClass(SfdcRemote, [{
					key: 'hasSessionExpired',
					value: function hasSessionExpired(event) {
						return event.type === "exception" && event.message && event.message.indexOf("Logged in?") != -1;
					}
				}, {
					key: 'handleSessionExpiry',
					value: function handleSessionExpiry(event) {
						var reloadPage = function reloadPage() {
							return window.location.reload();
						};
						if (this.hasSessionExpired(event)) {
							setTimeout(reloadPage, 3000);
							this.ea.publish("show:notification", {
								title: "Information",
								message: "You have been logged out",
								'class': 'red',
								done: reloadPage
							});
						}
					}
				}, {
					key: 'makeRemoteCall',
					value: function makeRemoteCall(request) {
						var _this = this;

						var sfdcMethodKey = this.methodEndpoints[request.method_key] || {};
						var callback = sfdcMethodKey.callback;
						var methodParams = sfdcMethodKey.params ? sfdcMethodKey.params(request) : {};
						var methodName = sfdcMethodKey.method || 'callJNMethod';

						_.assign(methodParams, {
							url: request.url,
							methodType: request.methodType,
							eventName: $.urlParam('eventName')
						});
						if (methodParams.queryStr == undefined) {
							if (methodName === "parseCustFields" || methodName === "getConVals" || methodName === "syncAttToSFDC") {
								methodParams["queryStr"] = request.data;
							} else {
								methodParams["queryStr"] = "";
								if (request.data && _.isEmpty(sfdcMethodKey)) {
									methodParams.queryStr = request.methodType === "GET" ? $.param({ api_params: request.data }) : JSON.stringify({ api_params: request.data });
								}
							}
						}
						var params = methodParams;

						if (/^https?/.test(request.url)) {
							if (request.methodType !== "GET") {
								var requestUrl = request.url;
								var index = requestUrl.indexOf("?");
								if (index > -1) {
									var queryParams = requestUrl.substring(index + 1);
									var queryParamsObj = JSON.parse('{"' + decodeURI(queryParams).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g, '":"') + '"}');

									var paramsQueryStr = params.queryStr;
									if (typeof paramsQueryStr == 'string') {
										paramsQueryStr = JSON.parse(paramsQueryStr);
									}
									var apiParams = paramsQueryStr.api_params;
									if (apiParams) {
										paramsQueryStr.api_params = _.merge(apiParams, queryParamsObj);
									}
									params.queryStr = JSON.stringify(paramsQueryStr);
								}
							}
							if (methodName !== 'createBriefing' && methodName !== "updateBriefing") {
								methodName = "directJNCall";
							}
						}

						var promise = new Promise(function (resolve, reject) {
							_this.pendingRequests++;
							$("#cover").fadeIn();
							window.jiffle[window.jiffleSFObj][methodName](params, function (result, event) {
								_this.handleSessionExpiry(event);

								var response = typeof result == "string" ? JSON.parse(_.unescape(result)) : result;
								if (event.statusCode === 200) {
									if (typeof callback !== 'undefined') {
										response = callback(response);
									}
									if (response.status || response.success) {
										if (response.status === 200 || response.success) {
											resolve(response);
										} else {
											reject(response);
										}
									} else {
										resolve(response);
									}
								} else {
									reject(response);
								}
							});
						});

						promise.then(function (apiResponse, config) {
							_this.pendingRequests--;
							if (!_this.pendingRequests) {
								$("#cover").fadeOut();
							}
						});

						promise['catch'](function (apiResponse) {
							_this.pendingRequests--;
							if (!_this.pendingRequests) {
								$("#cover").fadeOut();
							}
						});

						return promise;
					}
				}]);

				var _SfdcRemote = SfdcRemote;
				SfdcRemote = inject(MethodEndpoints, EventAggregator)(SfdcRemote) || SfdcRemote;
				return SfdcRemote;
			}();

			_export('SfdcRemote', SfdcRemote);

			;
		}
	};
});
System.register('utils/request.js', ['npm:aurelia-http-client@1.0.0-beta.1.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:jquery@2.2.4.js', 'commons/sfdc/remote.js'], function (_export) {
  'use strict';

  var HttpClient, inject, $, SfdcRemote, HttpRequest;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_aureliaHttpClient) {
      HttpClient = _aureliaHttpClient.HttpClient;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
    }, function (_jquery) {
      $ = _jquery['default'];
    }, function (_commonsSfdcRemote) {
      SfdcRemote = _commonsSfdcRemote.SfdcRemote;
    }],
    execute: function () {
      HttpRequest = function () {
        function HttpRequest(SfdcRemote) {
          _classCallCheck(this, _HttpRequest);

          this.http = new HttpClient();
          this.remote = SfdcRemote;
          this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
        }

        _createClass(HttpRequest, [{
          key: 'sfdcRemoteCall',
          value: function sfdcRemoteCall(url, data, methodType, sfdcMethod) {
            var request = {
              url: url,
              data: data,
              method_key: sfdcMethod,
              methodType: methodType
            };

            return this.remote.makeRemoteCall(request);
          }
        }, {
          key: 'createGetRequest',
          value: function createGetRequest(url, data, methodName) {
            var params = data || {};
            var methodKey = methodName || "";
            params = _.merge(params, { current_location_uuid: window.envDetails.current_location_uuid });
            if (this.isSFDC) {
              return this.sfdcRemoteCall(url, params, 'GET', methodKey);
            }
            var http = this.http;
            var queryString = $.param(params);

            return http.createRequest(url + '?' + queryString).asGet().send();
          }
        }, {
          key: 'createPostRequest',
          value: function createPostRequest(url, content, methodName) {
            var params = content || {};
            var methodKey = methodName || "";
            params = _.merge(params, { current_location_uuid: window.envDetails.current_location_uuid });
            if (this.isSFDC) {
              return this.sfdcRemoteCall(url, params, 'POST', methodKey);
            }
            var http = this.http;
            var token = $('meta[name="csrf-token"]').attr('content');
            return http.createRequest(url).asPost().withHeader('Content-Type', 'application/json').withHeader('Accept', 'application/json').withHeader('X-CSRF-Token', token).withContent(params).send();
          }
        }, {
          key: 'createPutRequest',
          value: function createPutRequest(url, content, methodName) {
            var params = content || {};
            var methodKey = methodName || "";
            params = _.merge(params, { current_location_uuid: window.envDetails.current_location_uuid });
            if (this.isSFDC) {
              return this.sfdcRemoteCall(url, params, 'PUT', methodKey);
            }
            var http = this.http;
            var token = $('meta[name="csrf-token"]').attr('content');
            return http.createRequest(url).asPut().withHeader('Content-Type', 'application/json').withHeader('Accept', 'application/json').withHeader('X-CSRF-Token', token).withContent(params).send();
          }
        }, {
          key: 'createDeleteRequest',
          value: function createDeleteRequest(url) {
            if (this.isSFDC) {
              return this.sfdcRemoteCall(url, {}, 'DELETE');
            }
            var http = this.http;
            var token = $('meta[name="csrf-token"]').attr('content');
            return http.createRequest(url).withHeader('X-CSRF-Token', token).asDelete().send();
          }
        }]);

        var _HttpRequest = HttpRequest;
        HttpRequest = inject(SfdcRemote)(HttpRequest) || HttpRequest;
        return HttpRequest;
      }();

      _export('HttpRequest', HttpRequest);
    }
  };
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-logging@1.0.0-beta.1/aurelia-logging.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  exports.getLogger = getLogger;
  exports.addAppender = addAppender;
  exports.setLevel = setLevel;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var logLevel = {
    none: 0,
    error: 1,
    warn: 2,
    info: 3,
    debug: 4
  };
  exports.logLevel = logLevel;
  var loggers = {};
  var currentLevel = logLevel.none;
  var appenders = [];
  var slice = Array.prototype.slice;
  var loggerConstructionKey = {};
  function log(logger, level, args) {
    var i = appenders.length;
    var current = undefined;
    args = slice.call(args);
    args.unshift(logger);
    while (i--) {
      current = appenders[i];
      current[level].apply(current, args);
    }
  }
  function debug() {
    if (currentLevel < 4) {
      return;
    }
    log(this, 'debug', arguments);
  }
  function info() {
    if (currentLevel < 3) {
      return;
    }
    log(this, 'info', arguments);
  }
  function warn() {
    if (currentLevel < 2) {
      return;
    }
    log(this, 'warn', arguments);
  }
  function error() {
    if (currentLevel < 1) {
      return;
    }
    log(this, 'error', arguments);
  }
  function connectLogger(logger) {
    logger.debug = debug;
    logger.info = info;
    logger.warn = warn;
    logger.error = error;
  }
  function createLogger(id) {
    var logger = new Logger(id, loggerConstructionKey);
    if (appenders.length) {
      connectLogger(logger);
    }
    return logger;
  }
  function getLogger(id) {
    return loggers[id] || (loggers[id] = createLogger(id));
  }
  function addAppender(appender) {
    appenders.push(appender);
    if (appenders.length === 1) {
      for (var key in loggers) {
        connectLogger(loggers[key]);
      }
    }
  }
  function setLevel(level) {
    currentLevel = level;
  }
  var Logger = (function() {
    function Logger(id, key) {
      _classCallCheck(this, Logger);
      if (key !== loggerConstructionKey) {
        throw new Error('You cannot instantiate "Logger". Use the "getLogger" API instead.');
      }
      this.id = id;
    }
    Logger.prototype.debug = function debug(message) {};
    Logger.prototype.info = function info(message) {};
    Logger.prototype.warn = function warn(message) {};
    Logger.prototype.error = function error(message) {};
    return Logger;
  })();
  exports.Logger = Logger;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-logging@1.0.0-beta.1.js", ["npm:aurelia-logging@1.0.0-beta.1/aurelia-logging.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating@1.0.0-beta.1.0.1/aurelia-templating.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-logging@1.0.0-beta.1.js", "npm:aurelia-metadata@1.0.0-beta.1.js", "npm:aurelia-path@1.0.0-beta.1.js", "npm:aurelia-loader@1.0.0-beta.1.js", "npm:aurelia-pal@1.0.0-beta.1.js", "npm:aurelia-binding@1.0.0-beta.1.0.2.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-task-queue@1.0.0-beta.1.0.1.js"], function(exports, _coreJs, _aureliaLogging, _aureliaMetadata, _aureliaPath, _aureliaLoader, _aureliaPal, _aureliaBinding, _aureliaDependencyInjection, _aureliaTaskQueue) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports._hyphenate = _hyphenate;
  exports.children = children;
  exports.child = child;
  exports.resource = resource;
  exports.behavior = behavior;
  exports.customElement = customElement;
  exports.customAttribute = customAttribute;
  exports.templateController = templateController;
  exports.bindable = bindable;
  exports.dynamicOptions = dynamicOptions;
  exports.useShadowDOM = useShadowDOM;
  exports.processContent = processContent;
  exports.containerless = containerless;
  exports.useViewStrategy = useViewStrategy;
  exports.useView = useView;
  exports.inlineView = inlineView;
  exports.noView = noView;
  exports.elementConfig = elementConfig;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var animationEvent = {
    enterBegin: 'animation:enter:begin',
    enterActive: 'animation:enter:active',
    enterDone: 'animation:enter:done',
    enterTimeout: 'animation:enter:timeout',
    leaveBegin: 'animation:leave:begin',
    leaveActive: 'animation:leave:active',
    leaveDone: 'animation:leave:done',
    leaveTimeout: 'animation:leave:timeout',
    staggerNext: 'animation:stagger:next',
    removeClassBegin: 'animation:remove-class:begin',
    removeClassActive: 'animation:remove-class:active',
    removeClassDone: 'animation:remove-class:done',
    removeClassTimeout: 'animation:remove-class:timeout',
    addClassBegin: 'animation:add-class:begin',
    addClassActive: 'animation:add-class:active',
    addClassDone: 'animation:add-class:done',
    addClassTimeout: 'animation:add-class:timeout',
    animateBegin: 'animation:animate:begin',
    animateActive: 'animation:animate:active',
    animateDone: 'animation:animate:done',
    animateTimeout: 'animation:animate:timeout',
    sequenceBegin: 'animation:sequence:begin',
    sequenceDone: 'animation:sequence:done'
  };
  exports.animationEvent = animationEvent;
  var Animator = (function() {
    function Animator() {
      _classCallCheck(this, Animator);
    }
    Animator.prototype.enter = function enter(element) {
      return Promise.resolve(false);
    };
    Animator.prototype.leave = function leave(element) {
      return Promise.resolve(false);
    };
    Animator.prototype.removeClass = function removeClass(element, className) {
      element.classList.remove(className);
      return Promise.resolve(false);
    };
    Animator.prototype.addClass = function addClass(element, className) {
      element.classList.add(className);
      return Promise.resolve(false);
    };
    Animator.prototype.animate = function animate(element, className) {
      return Promise.resolve(false);
    };
    Animator.prototype.runSequence = function runSequence(animations) {};
    Animator.prototype.registerEffect = function registerEffect(effectName, properties) {};
    Animator.prototype.unregisterEffect = function unregisterEffect(effectName) {};
    return Animator;
  })();
  exports.Animator = Animator;
  var capitalMatcher = /([A-Z])/g;
  function addHyphenAndLower(char) {
    return '-' + char.toLowerCase();
  }
  function _hyphenate(name) {
    return (name.charAt(0).toLowerCase() + name.slice(1)).replace(capitalMatcher, addHyphenAndLower);
  }
  var ResourceLoadContext = (function() {
    function ResourceLoadContext() {
      _classCallCheck(this, ResourceLoadContext);
      this.dependencies = {};
    }
    ResourceLoadContext.prototype.addDependency = function addDependency(url) {
      this.dependencies[url] = true;
    };
    ResourceLoadContext.prototype.hasDependency = function hasDependency(url) {
      return url in this.dependencies;
    };
    return ResourceLoadContext;
  })();
  exports.ResourceLoadContext = ResourceLoadContext;
  var ViewCompileInstruction = (function() {
    _createClass(ViewCompileInstruction, null, [{
      key: 'normal',
      value: new ViewCompileInstruction(),
      enumerable: true
    }]);
    function ViewCompileInstruction() {
      var targetShadowDOM = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
      var compileSurrogate = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
      _classCallCheck(this, ViewCompileInstruction);
      this.targetShadowDOM = targetShadowDOM;
      this.compileSurrogate = compileSurrogate;
      this.associatedModuleId = null;
    }
    return ViewCompileInstruction;
  })();
  exports.ViewCompileInstruction = ViewCompileInstruction;
  var BehaviorInstruction = (function() {
    BehaviorInstruction.enhance = function enhance() {
      var instruction = new BehaviorInstruction();
      instruction.enhance = true;
      return instruction;
    };
    BehaviorInstruction.unitTest = function unitTest(type, attributes) {
      var instruction = new BehaviorInstruction();
      instruction.type = type;
      instruction.attributes = attributes || {};
      return instruction;
    };
    BehaviorInstruction.element = function element(node, type) {
      var instruction = new BehaviorInstruction();
      instruction.type = type;
      instruction.attributes = {};
      instruction.anchorIsContainer = !(node.hasAttribute('containerless') || type.containerless);
      instruction.initiatedByBehavior = true;
      return instruction;
    };
    BehaviorInstruction.attribute = function attribute(attrName, type) {
      var instruction = new BehaviorInstruction();
      instruction.attrName = attrName;
      instruction.type = type || null;
      instruction.attributes = {};
      return instruction;
    };
    BehaviorInstruction.dynamic = function dynamic(host, viewModel, viewFactory) {
      var instruction = new BehaviorInstruction();
      instruction.host = host;
      instruction.viewModel = viewModel;
      instruction.viewFactory = viewFactory;
      return instruction;
    };
    _createClass(BehaviorInstruction, null, [{
      key: 'normal',
      value: new BehaviorInstruction(),
      enumerable: true
    }]);
    function BehaviorInstruction() {
      _classCallCheck(this, BehaviorInstruction);
      this.initiatedByBehavior = false;
      this.enhance = false;
      this.partReplacements = null;
      this.viewFactory = null;
      this.originalAttrName = null;
      this.skipContentProcessing = false;
      this.contentFactory = null;
      this.viewModel = null;
      this.anchorIsContainer = false;
      this.host = null;
      this.attributes = null;
      this.type = null;
      this.attrName = null;
    }
    return BehaviorInstruction;
  })();
  exports.BehaviorInstruction = BehaviorInstruction;
  var TargetInstruction = (function() {
    TargetInstruction.contentSelector = function contentSelector(node, parentInjectorId) {
      var instruction = new TargetInstruction();
      instruction.parentInjectorId = parentInjectorId;
      instruction.contentSelector = true;
      instruction.selector = node.getAttribute('select');
      return instruction;
    };
    TargetInstruction.contentExpression = function contentExpression(expression) {
      var instruction = new TargetInstruction();
      instruction.contentExpression = expression;
      return instruction;
    };
    TargetInstruction.lifting = function lifting(parentInjectorId, liftingInstruction) {
      var instruction = new TargetInstruction();
      instruction.parentInjectorId = parentInjectorId;
      instruction.expressions = TargetInstruction.noExpressions;
      instruction.behaviorInstructions = [liftingInstruction];
      instruction.viewFactory = liftingInstruction.viewFactory;
      instruction.providers = [liftingInstruction.type.target];
      return instruction;
    };
    TargetInstruction.normal = function normal(injectorId, parentInjectorId, providers, behaviorInstructions, expressions, elementInstruction) {
      var instruction = new TargetInstruction();
      instruction.injectorId = injectorId;
      instruction.parentInjectorId = parentInjectorId;
      instruction.providers = providers;
      instruction.behaviorInstructions = behaviorInstructions;
      instruction.expressions = expressions;
      instruction.anchorIsContainer = elementInstruction ? elementInstruction.anchorIsContainer : true;
      instruction.elementInstruction = elementInstruction;
      return instruction;
    };
    TargetInstruction.surrogate = function surrogate(providers, behaviorInstructions, expressions, values) {
      var instruction = new TargetInstruction();
      instruction.expressions = expressions;
      instruction.behaviorInstructions = behaviorInstructions;
      instruction.providers = providers;
      instruction.values = values;
      return instruction;
    };
    _createClass(TargetInstruction, null, [{
      key: 'noExpressions',
      value: Object.freeze([]),
      enumerable: true
    }]);
    function TargetInstruction() {
      _classCallCheck(this, TargetInstruction);
      this.injectorId = null;
      this.parentInjectorId = null;
      this.contentSelector = false;
      this.selector = null;
      this.contentExpression = null;
      this.expressions = null;
      this.behaviorInstructions = null;
      this.providers = null;
      this.viewFactory = null;
      this.anchorIsContainer = false;
      this.elementInstruction = null;
      this.values = null;
    }
    return TargetInstruction;
  })();
  exports.TargetInstruction = TargetInstruction;
  var viewStrategy = _aureliaMetadata.protocol.create('aurelia:view-strategy', {
    validate: function validate(target) {
      if (!(typeof target.loadViewFactory === 'function')) {
        return 'View strategies must implement: loadViewFactory(viewEngine: ViewEngine, compileInstruction: ViewCompileInstruction, loadContext?: ResourceLoadContext): Promise<ViewFactory>';
      }
      return true;
    },
    compose: function compose(target) {
      if (!(typeof target.makeRelativeTo === 'function')) {
        target.makeRelativeTo = _aureliaPal.PLATFORM.noop;
      }
    }
  });
  exports.viewStrategy = viewStrategy;
  var RelativeViewStrategy = (function() {
    function RelativeViewStrategy(path) {
      _classCallCheck(this, _RelativeViewStrategy);
      this.path = path;
      this.absolutePath = null;
    }
    RelativeViewStrategy.prototype.loadViewFactory = function loadViewFactory(viewEngine, compileInstruction, loadContext) {
      if (this.absolutePath === null && this.moduleId) {
        this.absolutePath = _aureliaPath.relativeToFile(this.path, this.moduleId);
      }
      compileInstruction.associatedModuleId = this.moduleId;
      return viewEngine.loadViewFactory(this.absolutePath || this.path, compileInstruction, loadContext);
    };
    RelativeViewStrategy.prototype.makeRelativeTo = function makeRelativeTo(file) {
      if (this.absolutePath === null) {
        this.absolutePath = _aureliaPath.relativeToFile(this.path, file);
      }
    };
    var _RelativeViewStrategy = RelativeViewStrategy;
    RelativeViewStrategy = viewStrategy()(RelativeViewStrategy) || RelativeViewStrategy;
    return RelativeViewStrategy;
  })();
  exports.RelativeViewStrategy = RelativeViewStrategy;
  var ConventionalViewStrategy = (function() {
    function ConventionalViewStrategy(viewLocator, origin) {
      _classCallCheck(this, _ConventionalViewStrategy);
      this.moduleId = origin.moduleId;
      this.viewUrl = viewLocator.convertOriginToViewUrl(origin);
    }
    ConventionalViewStrategy.prototype.loadViewFactory = function loadViewFactory(viewEngine, compileInstruction, loadContext) {
      compileInstruction.associatedModuleId = this.moduleId;
      return viewEngine.loadViewFactory(this.viewUrl, compileInstruction, loadContext);
    };
    var _ConventionalViewStrategy = ConventionalViewStrategy;
    ConventionalViewStrategy = viewStrategy()(ConventionalViewStrategy) || ConventionalViewStrategy;
    return ConventionalViewStrategy;
  })();
  exports.ConventionalViewStrategy = ConventionalViewStrategy;
  var NoViewStrategy = (function() {
    function NoViewStrategy() {
      _classCallCheck(this, _NoViewStrategy);
    }
    NoViewStrategy.prototype.loadViewFactory = function loadViewFactory(viewEngine, compileInstruction, loadContext) {
      return Promise.resolve(null);
    };
    var _NoViewStrategy = NoViewStrategy;
    NoViewStrategy = viewStrategy()(NoViewStrategy) || NoViewStrategy;
    return NoViewStrategy;
  })();
  exports.NoViewStrategy = NoViewStrategy;
  var TemplateRegistryViewStrategy = (function() {
    function TemplateRegistryViewStrategy(moduleId, entry) {
      _classCallCheck(this, _TemplateRegistryViewStrategy);
      this.moduleId = moduleId;
      this.entry = entry;
    }
    TemplateRegistryViewStrategy.prototype.loadViewFactory = function loadViewFactory(viewEngine, compileInstruction, loadContext) {
      var entry = this.entry;
      if (entry.factoryIsReady) {
        return Promise.resolve(entry.factory);
      }
      compileInstruction.associatedModuleId = this.moduleId;
      return viewEngine.loadViewFactory(entry, compileInstruction, loadContext);
    };
    var _TemplateRegistryViewStrategy = TemplateRegistryViewStrategy;
    TemplateRegistryViewStrategy = viewStrategy()(TemplateRegistryViewStrategy) || TemplateRegistryViewStrategy;
    return TemplateRegistryViewStrategy;
  })();
  exports.TemplateRegistryViewStrategy = TemplateRegistryViewStrategy;
  var InlineViewStrategy = (function() {
    function InlineViewStrategy(markup, dependencies, dependencyBaseUrl) {
      _classCallCheck(this, _InlineViewStrategy);
      this.markup = markup;
      this.dependencies = dependencies || null;
      this.dependencyBaseUrl = dependencyBaseUrl || '';
    }
    InlineViewStrategy.prototype.loadViewFactory = function loadViewFactory(viewEngine, compileInstruction, loadContext) {
      var entry = this.entry;
      var dependencies = this.dependencies;
      if (entry && entry.factoryIsReady) {
        return Promise.resolve(entry.factory);
      }
      this.entry = entry = new _aureliaLoader.TemplateRegistryEntry(this.moduleId || this.dependencyBaseUrl);
      entry.template = _aureliaPal.DOM.createTemplateFromMarkup(this.markup);
      if (dependencies !== null) {
        for (var i = 0,
            ii = dependencies.length; i < ii; ++i) {
          var current = dependencies[i];
          if (typeof current === 'string' || typeof current === 'function') {
            entry.addDependency(current);
          } else {
            entry.addDependency(current.from, current.as);
          }
        }
      }
      compileInstruction.associatedModuleId = this.moduleId;
      return viewEngine.loadViewFactory(entry, compileInstruction, loadContext);
    };
    var _InlineViewStrategy = InlineViewStrategy;
    InlineViewStrategy = viewStrategy()(InlineViewStrategy) || InlineViewStrategy;
    return InlineViewStrategy;
  })();
  exports.InlineViewStrategy = InlineViewStrategy;
  var ViewLocator = (function() {
    function ViewLocator() {
      _classCallCheck(this, ViewLocator);
    }
    ViewLocator.prototype.getViewStrategy = function getViewStrategy(value) {
      if (!value) {
        return null;
      }
      if (typeof value === 'object' && 'getViewStrategy' in value) {
        var _origin = _aureliaMetadata.Origin.get(value.constructor);
        value = value.getViewStrategy();
        if (typeof value === 'string') {
          value = new RelativeViewStrategy(value);
        }
        viewStrategy.assert(value);
        if (_origin) {
          value.makeRelativeTo(_origin.moduleId);
        }
        return value;
      }
      if (typeof value === 'string') {
        value = new RelativeViewStrategy(value);
      }
      if (viewStrategy.validate(value)) {
        return value;
      }
      if (typeof value !== 'function') {
        value = value.constructor;
      }
      var origin = _aureliaMetadata.Origin.get(value);
      var strategy = _aureliaMetadata.metadata.get(ViewLocator.viewStrategyMetadataKey, value);
      if (!strategy) {
        if (!origin) {
          throw new Error('Cannot determinte default view strategy for object.', value);
        }
        strategy = this.createFallbackViewStrategy(origin);
      } else if (origin) {
        strategy.moduleId = origin.moduleId;
      }
      return strategy;
    };
    ViewLocator.prototype.createFallbackViewStrategy = function createFallbackViewStrategy(origin) {
      return new ConventionalViewStrategy(this, origin);
    };
    ViewLocator.prototype.convertOriginToViewUrl = function convertOriginToViewUrl(origin) {
      var moduleId = origin.moduleId;
      var id = moduleId.endsWith('.js') || moduleId.endsWith('.ts') ? moduleId.substring(0, moduleId.length - 3) : moduleId;
      return id + '.html';
    };
    _createClass(ViewLocator, null, [{
      key: 'viewStrategyMetadataKey',
      value: 'aurelia:view-strategy',
      enumerable: true
    }]);
    return ViewLocator;
  })();
  exports.ViewLocator = ViewLocator;
  var BindingLanguage = (function() {
    function BindingLanguage() {
      _classCallCheck(this, BindingLanguage);
    }
    BindingLanguage.prototype.inspectAttribute = function inspectAttribute(resources, attrName, attrValue) {
      throw new Error('A BindingLanguage must implement inspectAttribute(...)');
    };
    BindingLanguage.prototype.createAttributeInstruction = function createAttributeInstruction(resources, element, info, existingInstruction) {
      throw new Error('A BindingLanguage must implement createAttributeInstruction(...)');
    };
    BindingLanguage.prototype.parseText = function parseText(resources, value) {
      throw new Error('A BindingLanguage must implement parseText(...)');
    };
    return BindingLanguage;
  })();
  exports.BindingLanguage = BindingLanguage;
  function register(lookup, name, resource, type) {
    if (!name) {
      return;
    }
    var existing = lookup[name];
    if (existing) {
      if (existing !== resource) {
        throw new Error('Attempted to register ' + type + ' when one with the same name already exists. Name: ' + name + '.');
      }
      return;
    }
    lookup[name] = resource;
  }
  var ViewResources = (function() {
    function ViewResources(parent, viewUrl) {
      _classCallCheck(this, ViewResources);
      this.bindingLanguage = null;
      this.parent = parent || null;
      this.hasParent = this.parent !== null;
      this.viewUrl = viewUrl || '';
      this.lookupFunctions = {
        valueConverters: this.getValueConverter.bind(this),
        bindingBehaviors: this.getBindingBehavior.bind(this)
      };
      this.attributes = {};
      this.elements = {};
      this.valueConverters = {};
      this.bindingBehaviors = {};
      this.attributeMap = {};
      this.hook1 = null;
      this.hook2 = null;
      this.hook3 = null;
      this.additionalHooks = null;
    }
    ViewResources.prototype._onBeforeCompile = function _onBeforeCompile(content, resources, instruction) {
      if (this.hasParent) {
        this.parent._onBeforeCompile(content, resources, instruction);
      }
      if (this.hook1 !== null) {
        this.hook1.beforeCompile(content, resources, instruction);
        if (this.hook2 !== null) {
          this.hook2.beforeCompile(content, resources, instruction);
          if (this.hook3 !== null) {
            this.hook3.beforeCompile(content, resources, instruction);
            if (this.additionalHooks !== null) {
              var hooks = this.additionalHooks;
              for (var i = 0,
                  _length = hooks.length; i < _length; ++i) {
                hooks[i].beforeCompile(content, resources, instruction);
              }
            }
          }
        }
      }
    };
    ViewResources.prototype._onAfterCompile = function _onAfterCompile(viewFactory) {
      if (this.hasParent) {
        this.parent._onAfterCompile(viewFactory);
      }
      if (this.hook1 !== null) {
        this.hook1.afterCompile(viewFactory);
        if (this.hook2 !== null) {
          this.hook2.afterCompile(viewFactory);
          if (this.hook3 !== null) {
            this.hook3.afterCompile(viewFactory);
            if (this.additionalHooks !== null) {
              var hooks = this.additionalHooks;
              for (var i = 0,
                  _length2 = hooks.length; i < _length2; ++i) {
                hooks[i].afterCompile(viewFactory);
              }
            }
          }
        }
      }
    };
    ViewResources.prototype._onBeforeCreate = function _onBeforeCreate(viewFactory, container, content, instruction, bindingContext) {
      if (this.hasParent) {
        this.parent._onBeforeCreate(viewFactory, container, content, instruction, bindingContext);
      }
      if (this.hook1 !== null) {
        this.hook1.beforeCreate(viewFactory, container, content, instruction, bindingContext);
        if (this.hook2 !== null) {
          this.hook2.beforeCreate(viewFactory, container, content, instruction, bindingContext);
          if (this.hook3 !== null) {
            this.hook3.beforeCreate(viewFactory, container, content, instruction, bindingContext);
            if (this.additionalHooks !== null) {
              var hooks = this.additionalHooks;
              for (var i = 0,
                  _length3 = hooks.length; i < _length3; ++i) {
                hooks[i].beforeCreate(viewFactory, container, content, instruction, bindingContext);
              }
            }
          }
        }
      }
    };
    ViewResources.prototype._onAfterCreate = function _onAfterCreate(view) {
      if (this.hasParent) {
        this.parent._onAfterCreate(view);
      }
      if (this.hook1 !== null) {
        this.hook1.afterCreate(view);
        if (this.hook2 !== null) {
          this.hook2.afterCreate(view);
          if (this.hook3 !== null) {
            this.hook3.afterCreate(view);
            if (this.additionalHooks !== null) {
              var hooks = this.additionalHooks;
              for (var i = 0,
                  _length4 = hooks.length; i < _length4; ++i) {
                hooks[i].afterCreate(view);
              }
            }
          }
        }
      }
    };
    ViewResources.prototype.registerViewEngineHooks = function registerViewEngineHooks(hooks) {
      if (hooks.beforeCompile === undefined)
        hooks.beforeCompile = _aureliaPal.PLATFORM.noop;
      if (hooks.afterCompile === undefined)
        hooks.afterCompile = _aureliaPal.PLATFORM.noop;
      if (hooks.beforeCreate === undefined)
        hooks.beforeCreate = _aureliaPal.PLATFORM.noop;
      if (hooks.afterCreate === undefined)
        hooks.afterCreate = _aureliaPal.PLATFORM.noop;
      if (this.hook1 === null)
        this.hook1 = hooks;
      else if (this.hook2 === null)
        this.hook2 = hooks;
      else if (this.hook3 === null)
        this.hook3 = hooks;
      else {
        if (this.additionalHooks === null) {
          this.additionalHooks = [];
        }
        this.additionalHooks.push(hooks);
      }
    };
    ViewResources.prototype.getBindingLanguage = function getBindingLanguage(bindingLanguageFallback) {
      return this.bindingLanguage || (this.bindingLanguage = bindingLanguageFallback);
    };
    ViewResources.prototype.patchInParent = function patchInParent(newParent) {
      var originalParent = this.parent;
      this.parent = newParent || null;
      this.hasParent = this.parent !== null;
      if (newParent.parent === null) {
        newParent.parent = originalParent;
        newParent.hasParent = originalParent !== null;
      }
    };
    ViewResources.prototype.relativeToView = function relativeToView(path) {
      return _aureliaPath.relativeToFile(path, this.viewUrl);
    };
    ViewResources.prototype.registerElement = function registerElement(tagName, behavior) {
      register(this.elements, tagName, behavior, 'an Element');
    };
    ViewResources.prototype.getElement = function getElement(tagName) {
      return this.elements[tagName] || (this.hasParent ? this.parent.getElement(tagName) : null);
    };
    ViewResources.prototype.mapAttribute = function mapAttribute(attribute) {
      return this.attributeMap[attribute] || (this.hasParent ? this.parent.mapAttribute(attribute) : null);
    };
    ViewResources.prototype.registerAttribute = function registerAttribute(attribute, behavior, knownAttribute) {
      this.attributeMap[attribute] = knownAttribute;
      register(this.attributes, attribute, behavior, 'an Attribute');
    };
    ViewResources.prototype.getAttribute = function getAttribute(attribute) {
      return this.attributes[attribute] || (this.hasParent ? this.parent.getAttribute(attribute) : null);
    };
    ViewResources.prototype.registerValueConverter = function registerValueConverter(name, valueConverter) {
      register(this.valueConverters, name, valueConverter, 'a ValueConverter');
    };
    ViewResources.prototype.getValueConverter = function getValueConverter(name) {
      return this.valueConverters[name] || (this.hasParent ? this.parent.getValueConverter(name) : null);
    };
    ViewResources.prototype.registerBindingBehavior = function registerBindingBehavior(name, bindingBehavior) {
      register(this.bindingBehaviors, name, bindingBehavior, 'a BindingBehavior');
    };
    ViewResources.prototype.getBindingBehavior = function getBindingBehavior(name) {
      return this.bindingBehaviors[name] || (this.hasParent ? this.parent.getBindingBehavior(name) : null);
    };
    return ViewResources;
  })();
  exports.ViewResources = ViewResources;
  var View = (function() {
    function View(viewFactory, fragment, controllers, bindings, children, contentSelectors) {
      _classCallCheck(this, View);
      this.viewFactory = viewFactory;
      this.fragment = fragment;
      this.controllers = controllers;
      this.bindings = bindings;
      this.children = children;
      this.contentSelectors = contentSelectors;
      this.firstChild = fragment.firstChild;
      this.lastChild = fragment.lastChild;
      this.fromCache = false;
      this.isBound = false;
      this.isAttached = false;
      this.fromCache = false;
      this.bindingContext = null;
      this.overrideContext = null;
      this.controller = null;
      this.viewModelScope = null;
      this._isUserControlled = false;
    }
    View.prototype.returnToCache = function returnToCache() {
      this.viewFactory.returnViewToCache(this);
    };
    View.prototype.created = function created() {
      var i = undefined;
      var ii = undefined;
      var controllers = this.controllers;
      for (i = 0, ii = controllers.length; i < ii; ++i) {
        controllers[i].created(this);
      }
    };
    View.prototype.bind = function bind(bindingContext, overrideContext, _systemUpdate) {
      var controllers = undefined;
      var bindings = undefined;
      var children = undefined;
      var i = undefined;
      var ii = undefined;
      if (_systemUpdate && this._isUserControlled) {
        return;
      }
      if (this.isBound) {
        if (this.bindingContext === bindingContext) {
          return;
        }
        this.unbind();
      }
      this.isBound = true;
      this.bindingContext = bindingContext;
      this.overrideContext = overrideContext || _aureliaBinding.createOverrideContext(bindingContext);
      bindings = this.bindings;
      for (i = 0, ii = bindings.length; i < ii; ++i) {
        bindings[i].bind(this);
      }
      if (this.viewModelScope !== null) {
        bindingContext.bind(this.viewModelScope.bindingContext, this.viewModelScope.overrideContext);
        this.viewModelScope = null;
      }
      controllers = this.controllers;
      for (i = 0, ii = controllers.length; i < ii; ++i) {
        controllers[i].bind(this);
      }
      children = this.children;
      for (i = 0, ii = children.length; i < ii; ++i) {
        children[i].bind(bindingContext, overrideContext, true);
      }
    };
    View.prototype.addBinding = function addBinding(binding) {
      this.bindings.push(binding);
      if (this.isBound) {
        binding.bind(this.bindingContext);
      }
    };
    View.prototype.unbind = function unbind() {
      var controllers = undefined;
      var bindings = undefined;
      var children = undefined;
      var i = undefined;
      var ii = undefined;
      if (this.isBound) {
        this.isBound = false;
        this.bindingContext = null;
        this.overrideContext = null;
        if (this.controller !== null) {
          this.controller.unbind();
        }
        bindings = this.bindings;
        for (i = 0, ii = bindings.length; i < ii; ++i) {
          bindings[i].unbind();
        }
        controllers = this.controllers;
        for (i = 0, ii = controllers.length; i < ii; ++i) {
          controllers[i].unbind();
        }
        children = this.children;
        for (i = 0, ii = children.length; i < ii; ++i) {
          children[i].unbind();
        }
      }
    };
    View.prototype.insertNodesBefore = function insertNodesBefore(refNode) {
      var parent = refNode.parentNode;
      parent.insertBefore(this.fragment, refNode);
    };
    View.prototype.appendNodesTo = function appendNodesTo(parent) {
      parent.appendChild(this.fragment);
    };
    View.prototype.removeNodes = function removeNodes() {
      var start = this.firstChild;
      var end = this.lastChild;
      var fragment = this.fragment;
      var next = undefined;
      var current = start;
      var loop = true;
      while (loop) {
        if (current === end) {
          loop = false;
        }
        next = current.nextSibling;
        fragment.appendChild(current);
        current = next;
      }
    };
    View.prototype.attached = function attached() {
      var controllers = undefined;
      var children = undefined;
      var i = undefined;
      var ii = undefined;
      if (this.isAttached) {
        return;
      }
      this.isAttached = true;
      if (this.controller !== null) {
        this.controller.attached();
      }
      controllers = this.controllers;
      for (i = 0, ii = controllers.length; i < ii; ++i) {
        controllers[i].attached();
      }
      children = this.children;
      for (i = 0, ii = children.length; i < ii; ++i) {
        children[i].attached();
      }
    };
    View.prototype.detached = function detached() {
      var controllers = undefined;
      var children = undefined;
      var i = undefined;
      var ii = undefined;
      if (this.isAttached) {
        this.isAttached = false;
        if (this.controller !== null) {
          this.controller.detached();
        }
        controllers = this.controllers;
        for (i = 0, ii = controllers.length; i < ii; ++i) {
          controllers[i].detached();
        }
        children = this.children;
        for (i = 0, ii = children.length; i < ii; ++i) {
          children[i].detached();
        }
      }
    };
    return View;
  })();
  exports.View = View;
  var placeholder = [];
  function findInsertionPoint(groups, index) {
    var insertionPoint = undefined;
    while (!insertionPoint && index >= 0) {
      insertionPoint = groups[index][0];
      index--;
    }
    return insertionPoint;
  }
  var _ContentSelector = (function() {
    _ContentSelector.applySelectors = function applySelectors(view, contentSelectors, callback) {
      var currentChild = view.fragment.firstChild;
      var contentMap = new Map();
      var nextSibling = undefined;
      var i = undefined;
      var ii = undefined;
      var contentSelector = undefined;
      while (currentChild) {
        nextSibling = currentChild.nextSibling;
        if (currentChild.viewSlot) {
          var viewSlotSelectors = contentSelectors.map(function(x) {
            return x.copyForViewSlot();
          });
          currentChild.viewSlot._installContentSelectors(viewSlotSelectors);
        } else {
          for (i = 0, ii = contentSelectors.length; i < ii; i++) {
            contentSelector = contentSelectors[i];
            if (contentSelector.matches(currentChild)) {
              var elements = contentMap.get(contentSelector);
              if (!elements) {
                elements = [];
                contentMap.set(contentSelector, elements);
              }
              elements.push(currentChild);
              break;
            }
          }
        }
        currentChild = nextSibling;
      }
      for (i = 0, ii = contentSelectors.length; i < ii; ++i) {
        contentSelector = contentSelectors[i];
        callback(contentSelector, contentMap.get(contentSelector) || placeholder);
      }
    };
    function _ContentSelector(anchor, selector) {
      _classCallCheck(this, _ContentSelector);
      this.anchor = anchor;
      this.selector = selector;
      this.all = !this.selector;
      this.groups = [];
    }
    _ContentSelector.prototype.copyForViewSlot = function copyForViewSlot() {
      return new _ContentSelector(this.anchor, this.selector);
    };
    _ContentSelector.prototype.matches = function matches(node) {
      return this.all || node.nodeType === 1 && node.matches(this.selector);
    };
    _ContentSelector.prototype.add = function add(group) {
      var anchor = this.anchor;
      var parent = anchor.parentNode;
      var i = undefined;
      var ii = undefined;
      for (i = 0, ii = group.length; i < ii; ++i) {
        parent.insertBefore(group[i], anchor);
      }
      this.groups.push(group);
    };
    _ContentSelector.prototype.insert = function insert(index, group) {
      if (group.length) {
        var anchor = findInsertionPoint(this.groups, index) || this.anchor;
        var _parent = anchor.parentNode;
        var i = undefined;
        var ii = undefined;
        for (i = 0, ii = group.length; i < ii; ++i) {
          _parent.insertBefore(group[i], anchor);
        }
      }
      this.groups.splice(index, 0, group);
    };
    _ContentSelector.prototype.removeAt = function removeAt(index, fragment) {
      var group = this.groups[index];
      var i = undefined;
      var ii = undefined;
      for (i = 0, ii = group.length; i < ii; ++i) {
        fragment.appendChild(group[i]);
      }
      this.groups.splice(index, 1);
    };
    return _ContentSelector;
  })();
  exports._ContentSelector = _ContentSelector;
  function getAnimatableElement(view) {
    var firstChild = view.firstChild;
    if (firstChild !== null && firstChild !== undefined && firstChild.nodeType === 8) {
      var _element = _aureliaPal.DOM.nextElementSibling(firstChild);
      if (_element !== null && _element !== undefined && _element.nodeType === 1 && _element.classList.contains('au-animate')) {
        return _element;
      }
    }
    return null;
  }
  var ViewSlot = (function() {
    function ViewSlot(anchor, anchorIsContainer) {
      var animator = arguments.length <= 2 || arguments[2] === undefined ? Animator.instance : arguments[2];
      _classCallCheck(this, ViewSlot);
      this.anchor = anchor;
      this.viewAddMethod = anchorIsContainer ? 'appendNodesTo' : 'insertNodesBefore';
      this.bindingContext = null;
      this.animator = animator;
      this.children = [];
      this.isBound = false;
      this.isAttached = false;
      this.contentSelectors = null;
      anchor.viewSlot = this;
    }
    ViewSlot.prototype.transformChildNodesIntoView = function transformChildNodesIntoView() {
      var parent = this.anchor;
      this.children.push({
        fragment: parent,
        firstChild: parent.firstChild,
        lastChild: parent.lastChild,
        returnToCache: function returnToCache() {},
        removeNodes: function removeNodes() {
          var last = undefined;
          while (last = parent.lastChild) {
            parent.removeChild(last);
          }
        },
        created: function created() {},
        bind: function bind() {},
        unbind: function unbind() {},
        attached: function attached() {},
        detached: function detached() {}
      });
    };
    ViewSlot.prototype.bind = function bind(bindingContext, overrideContext) {
      var i = undefined;
      var ii = undefined;
      var children = undefined;
      if (this.isBound) {
        if (this.bindingContext === bindingContext) {
          return;
        }
        this.unbind();
      }
      this.isBound = true;
      this.bindingContext = bindingContext = bindingContext || this.bindingContext;
      children = this.children;
      for (i = 0, ii = children.length; i < ii; ++i) {
        children[i].bind(bindingContext, overrideContext, true);
      }
    };
    ViewSlot.prototype.unbind = function unbind() {
      if (this.isBound) {
        var i = undefined;
        var ii = undefined;
        var _children = this.children;
        this.isBound = false;
        this.bindingContext = null;
        for (i = 0, ii = _children.length; i < ii; ++i) {
          _children[i].unbind();
        }
      }
    };
    ViewSlot.prototype.add = function add(view) {
      view[this.viewAddMethod](this.anchor);
      this.children.push(view);
      if (this.isAttached) {
        view.attached();
        var animatableElement = getAnimatableElement(view);
        if (animatableElement !== null) {
          return this.animator.enter(animatableElement);
        }
      }
    };
    ViewSlot.prototype.insert = function insert(index, view) {
      var children = this.children;
      var length = children.length;
      if (index === 0 && length === 0 || index >= length) {
        return this.add(view);
      }
      view.insertNodesBefore(children[index].firstChild);
      children.splice(index, 0, view);
      if (this.isAttached) {
        view.attached();
        var animatableElement = getAnimatableElement(view);
        if (animatableElement !== null) {
          return this.animator.enter(animatableElement);
        }
      }
    };
    ViewSlot.prototype.remove = function remove(view, returnToCache, skipAnimation) {
      return this.removeAt(this.children.indexOf(view), returnToCache, skipAnimation);
    };
    ViewSlot.prototype.removeAt = function removeAt(index, returnToCache, skipAnimation) {
      var _this = this;
      var view = this.children[index];
      var removeAction = function removeAction() {
        index = _this.children.indexOf(view);
        view.removeNodes();
        _this.children.splice(index, 1);
        if (_this.isAttached) {
          view.detached();
        }
        if (returnToCache) {
          view.returnToCache();
        }
        return view;
      };
      if (!skipAnimation) {
        var animatableElement = getAnimatableElement(view);
        if (animatableElement !== null) {
          return this.animator.leave(animatableElement).then(function() {
            return removeAction();
          });
        }
      }
      return removeAction();
    };
    ViewSlot.prototype.removeAll = function removeAll(returnToCache, skipAnimation) {
      var _this2 = this;
      var children = this.children;
      var ii = children.length;
      var i = undefined;
      var rmPromises = [];
      children.forEach(function(child) {
        if (skipAnimation) {
          child.removeNodes();
          return;
        }
        var animatableElement = getAnimatableElement(child);
        if (animatableElement !== null) {
          rmPromises.push(_this2.animator.leave(animatableElement).then(function() {
            return child.removeNodes();
          }));
        } else {
          child.removeNodes();
        }
      });
      var removeAction = function removeAction() {
        if (_this2.isAttached) {
          for (i = 0; i < ii; ++i) {
            children[i].detached();
          }
        }
        if (returnToCache) {
          for (i = 0; i < ii; ++i) {
            children[i].returnToCache();
          }
        }
        _this2.children = [];
      };
      if (rmPromises.length > 0) {
        return Promise.all(rmPromises).then(function() {
          return removeAction();
        });
      }
      removeAction();
    };
    ViewSlot.prototype.attached = function attached() {
      var i = undefined;
      var ii = undefined;
      var children = undefined;
      var child = undefined;
      if (this.isAttached) {
        return;
      }
      this.isAttached = true;
      children = this.children;
      for (i = 0, ii = children.length; i < ii; ++i) {
        child = children[i];
        child.attached();
        var _element2 = child.firstChild ? _aureliaPal.DOM.nextElementSibling(child.firstChild) : null;
        if (child.firstChild && child.firstChild.nodeType === 8 && _element2 && _element2.nodeType === 1 && _element2.classList.contains('au-animate')) {
          this.animator.enter(_element2);
        }
      }
    };
    ViewSlot.prototype.detached = function detached() {
      var i = undefined;
      var ii = undefined;
      var children = undefined;
      if (this.isAttached) {
        this.isAttached = false;
        children = this.children;
        for (i = 0, ii = children.length; i < ii; ++i) {
          children[i].detached();
        }
      }
    };
    ViewSlot.prototype._installContentSelectors = function _installContentSelectors(contentSelectors) {
      this.contentSelectors = contentSelectors;
      this.add = this._contentSelectorAdd;
      this.insert = this._contentSelectorInsert;
      this.remove = this._contentSelectorRemove;
      this.removeAt = this._contentSelectorRemoveAt;
      this.removeAll = this._contentSelectorRemoveAll;
    };
    ViewSlot.prototype._contentSelectorAdd = function _contentSelectorAdd(view) {
      _ContentSelector.applySelectors(view, this.contentSelectors, function(contentSelector, group) {
        return contentSelector.add(group);
      });
      this.children.push(view);
      if (this.isAttached) {
        view.attached();
      }
    };
    ViewSlot.prototype._contentSelectorInsert = function _contentSelectorInsert(index, view) {
      if (index === 0 && !this.children.length || index >= this.children.length) {
        this.add(view);
      } else {
        _ContentSelector.applySelectors(view, this.contentSelectors, function(contentSelector, group) {
          return contentSelector.insert(index, group);
        });
        this.children.splice(index, 0, view);
        if (this.isAttached) {
          view.attached();
        }
      }
    };
    ViewSlot.prototype._contentSelectorRemove = function _contentSelectorRemove(view) {
      var index = this.children.indexOf(view);
      var contentSelectors = this.contentSelectors;
      var i = undefined;
      var ii = undefined;
      for (i = 0, ii = contentSelectors.length; i < ii; ++i) {
        contentSelectors[i].removeAt(index, view.fragment);
      }
      this.children.splice(index, 1);
      if (this.isAttached) {
        view.detached();
      }
    };
    ViewSlot.prototype._contentSelectorRemoveAt = function _contentSelectorRemoveAt(index) {
      var view = this.children[index];
      var contentSelectors = this.contentSelectors;
      var i = undefined;
      var ii = undefined;
      for (i = 0, ii = contentSelectors.length; i < ii; ++i) {
        contentSelectors[i].removeAt(index, view.fragment);
      }
      this.children.splice(index, 1);
      if (this.isAttached) {
        view.detached();
      }
      return view;
    };
    ViewSlot.prototype._contentSelectorRemoveAll = function _contentSelectorRemoveAll() {
      var children = this.children;
      var contentSelectors = this.contentSelectors;
      var ii = children.length;
      var jj = contentSelectors.length;
      var i = undefined;
      var j = undefined;
      var view = undefined;
      for (i = 0; i < ii; ++i) {
        view = children[i];
        for (j = 0; j < jj; ++j) {
          contentSelectors[j].removeAt(0, view.fragment);
        }
      }
      if (this.isAttached) {
        for (i = 0; i < ii; ++i) {
          children[i].detached();
        }
      }
      this.children = [];
    };
    return ViewSlot;
  })();
  exports.ViewSlot = ViewSlot;
  var ProviderResolver = (function() {
    function ProviderResolver() {
      _classCallCheck(this, _ProviderResolver);
    }
    ProviderResolver.prototype.get = function get(container, key) {
      var id = key.__providerId__;
      return id in container ? container[id] : container[id] = container.invoke(key);
    };
    var _ProviderResolver = ProviderResolver;
    ProviderResolver = _aureliaDependencyInjection.resolver(ProviderResolver) || ProviderResolver;
    return ProviderResolver;
  })();
  var providerResolverInstance = new ProviderResolver();
  function elementContainerGet(key) {
    if (key === _aureliaPal.DOM.Element) {
      return this.element;
    }
    if (key === BoundViewFactory) {
      if (this.boundViewFactory) {
        return this.boundViewFactory;
      }
      var factory = this.instruction.viewFactory;
      var _partReplacements = this.partReplacements;
      if (_partReplacements) {
        factory = _partReplacements[factory.part] || factory;
      }
      this.boundViewFactory = new BoundViewFactory(this, factory, _partReplacements);
      return this.boundViewFactory;
    }
    if (key === ViewSlot) {
      if (this.viewSlot === undefined) {
        this.viewSlot = new ViewSlot(this.element, this.instruction.anchorIsContainer);
        this.children.push(this.viewSlot);
      }
      return this.viewSlot;
    }
    if (key === ViewResources) {
      return this.viewResources;
    }
    if (key === TargetInstruction) {
      return this.instruction;
    }
    return this.superGet(key);
  }
  function createElementContainer(parent, element, instruction, children, partReplacements, resources) {
    var container = parent.createChild();
    var providers = undefined;
    var i = undefined;
    container.element = element;
    container.instruction = instruction;
    container.children = children;
    container.viewResources = resources;
    container.partReplacements = partReplacements;
    providers = instruction.providers;
    i = providers.length;
    while (i--) {
      container._resolvers.set(providers[i], providerResolverInstance);
    }
    container.superGet = container.get;
    container.get = elementContainerGet;
    return container;
  }
  function makeElementIntoAnchor(element, elementInstruction) {
    var anchor = _aureliaPal.DOM.createComment('anchor');
    if (elementInstruction) {
      anchor.hasAttribute = function(name) {
        return element.hasAttribute(name);
      };
      anchor.getAttribute = function(name) {
        return element.getAttribute(name);
      };
      anchor.setAttribute = function(name, value) {
        element.setAttribute(name, value);
      };
    }
    _aureliaPal.DOM.replaceNode(anchor, element);
    return anchor;
  }
  function applyInstructions(containers, element, instruction, controllers, bindings, children, contentSelectors, partReplacements, resources) {
    var behaviorInstructions = instruction.behaviorInstructions;
    var expressions = instruction.expressions;
    var elementContainer = undefined;
    var i = undefined;
    var ii = undefined;
    var current = undefined;
    var instance = undefined;
    if (instruction.contentExpression) {
      bindings.push(instruction.contentExpression.createBinding(element.nextSibling));
      element.parentNode.removeChild(element);
      return;
    }
    if (instruction.contentSelector) {
      var commentAnchor = _aureliaPal.DOM.createComment('anchor');
      _aureliaPal.DOM.replaceNode(commentAnchor, element);
      contentSelectors.push(new _ContentSelector(commentAnchor, instruction.selector));
      return;
    }
    if (behaviorInstructions.length) {
      if (!instruction.anchorIsContainer) {
        element = makeElementIntoAnchor(element, instruction.elementInstruction);
      }
      containers[instruction.injectorId] = elementContainer = createElementContainer(containers[instruction.parentInjectorId], element, instruction, children, partReplacements, resources);
      for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {
        current = behaviorInstructions[i];
        instance = current.type.create(elementContainer, current, element, bindings);
        if (instance.contentView) {
          children.push(instance.contentView);
        }
        controllers.push(instance);
      }
    }
    for (i = 0, ii = expressions.length; i < ii; ++i) {
      bindings.push(expressions[i].createBinding(element));
    }
  }
  function styleStringToObject(style, target) {
    var attributes = style.split(';');
    var firstIndexOfColon = undefined;
    var i = undefined;
    var current = undefined;
    var key = undefined;
    var value = undefined;
    target = target || {};
    for (i = 0; i < attributes.length; i++) {
      current = attributes[i];
      firstIndexOfColon = current.indexOf(':');
      key = current.substring(0, firstIndexOfColon).trim();
      value = current.substring(firstIndexOfColon + 1).trim();
      target[key] = value;
    }
    return target;
  }
  function styleObjectToString(obj) {
    var result = '';
    for (var key in obj) {
      result += key + ':' + obj[key] + ';';
    }
    return result;
  }
  function applySurrogateInstruction(container, element, instruction, controllers, bindings, children) {
    var behaviorInstructions = instruction.behaviorInstructions;
    var expressions = instruction.expressions;
    var providers = instruction.providers;
    var values = instruction.values;
    var i = undefined;
    var ii = undefined;
    var current = undefined;
    var instance = undefined;
    var currentAttributeValue = undefined;
    i = providers.length;
    while (i--) {
      container._resolvers.set(providers[i], providerResolverInstance);
    }
    for (var key in values) {
      currentAttributeValue = element.getAttribute(key);
      if (currentAttributeValue) {
        if (key === 'class') {
          element.setAttribute('class', currentAttributeValue + ' ' + values[key]);
        } else if (key === 'style') {
          var styleObject = styleStringToObject(values[key]);
          styleStringToObject(currentAttributeValue, styleObject);
          element.setAttribute('style', styleObjectToString(styleObject));
        }
      } else {
        element.setAttribute(key, values[key]);
      }
    }
    if (behaviorInstructions.length) {
      for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {
        current = behaviorInstructions[i];
        instance = current.type.create(container, current, element, bindings);
        if (instance.contentView) {
          children.push(instance.contentView);
        }
        controllers.push(instance);
      }
    }
    for (i = 0, ii = expressions.length; i < ii; ++i) {
      bindings.push(expressions[i].createBinding(element));
    }
  }
  var BoundViewFactory = (function() {
    function BoundViewFactory(parentContainer, viewFactory, partReplacements) {
      _classCallCheck(this, BoundViewFactory);
      this.parentContainer = parentContainer;
      this.viewFactory = viewFactory;
      this.factoryCreateInstruction = {partReplacements: partReplacements};
    }
    BoundViewFactory.prototype.create = function create() {
      var view = this.viewFactory.create(this.parentContainer.createChild(), this.factoryCreateInstruction);
      view._isUserControlled = true;
      return view;
    };
    BoundViewFactory.prototype.setCacheSize = function setCacheSize(size, doNotOverrideIfAlreadySet) {
      this.viewFactory.setCacheSize(size, doNotOverrideIfAlreadySet);
    };
    BoundViewFactory.prototype.getCachedView = function getCachedView() {
      return this.viewFactory.getCachedView();
    };
    BoundViewFactory.prototype.returnViewToCache = function returnViewToCache(view) {
      this.viewFactory.returnViewToCache(view);
    };
    _createClass(BoundViewFactory, [{
      key: 'isCaching',
      get: function get() {
        return this.viewFactory.isCaching;
      }
    }]);
    return BoundViewFactory;
  })();
  exports.BoundViewFactory = BoundViewFactory;
  var ViewFactory = (function() {
    function ViewFactory(template, instructions, resources) {
      _classCallCheck(this, ViewFactory);
      this.isCaching = false;
      this.template = template;
      this.instructions = instructions;
      this.resources = resources;
      this.cacheSize = -1;
      this.cache = null;
    }
    ViewFactory.prototype.setCacheSize = function setCacheSize(size, doNotOverrideIfAlreadySet) {
      if (size) {
        if (size === '*') {
          size = Number.MAX_VALUE;
        } else if (typeof size === 'string') {
          size = parseInt(size, 10);
        }
      }
      if (this.cacheSize === -1 || !doNotOverrideIfAlreadySet) {
        this.cacheSize = size;
      }
      if (this.cacheSize > 0) {
        this.cache = [];
      } else {
        this.cache = null;
      }
      this.isCaching = this.cacheSize > 0;
    };
    ViewFactory.prototype.getCachedView = function getCachedView() {
      return this.cache !== null ? this.cache.pop() || null : null;
    };
    ViewFactory.prototype.returnViewToCache = function returnViewToCache(view) {
      if (view.isAttached) {
        view.detached();
      }
      if (view.isBound) {
        view.unbind();
      }
      if (this.cache !== null && this.cache.length < this.cacheSize) {
        view.fromCache = true;
        this.cache.push(view);
      }
    };
    ViewFactory.prototype.create = function create(container, createInstruction, element) {
      createInstruction = createInstruction || BehaviorInstruction.normal;
      element = element || null;
      var cachedView = this.getCachedView();
      if (cachedView !== null) {
        return cachedView;
      }
      var fragment = createInstruction.enhance ? this.template : this.template.cloneNode(true);
      var instructables = fragment.querySelectorAll('.au-target');
      var instructions = this.instructions;
      var resources = this.resources;
      var controllers = [];
      var bindings = [];
      var children = [];
      var contentSelectors = [];
      var containers = {root: container};
      var partReplacements = createInstruction.partReplacements;
      var i = undefined;
      var ii = undefined;
      var view = undefined;
      var instructable = undefined;
      var instruction = undefined;
      this.resources._onBeforeCreate(this, container, fragment, createInstruction);
      if (element !== null && this.surrogateInstruction !== null) {
        applySurrogateInstruction(container, element, this.surrogateInstruction, controllers, bindings, children);
      }
      for (i = 0, ii = instructables.length; i < ii; ++i) {
        instructable = instructables[i];
        instruction = instructions[instructable.getAttribute('au-target-id')];
        applyInstructions(containers, instructable, instruction, controllers, bindings, children, contentSelectors, partReplacements, resources);
      }
      view = new View(this, fragment, controllers, bindings, children, contentSelectors);
      if (!createInstruction.initiatedByBehavior) {
        view.created();
      }
      this.resources._onAfterCreate(view);
      return view;
    };
    return ViewFactory;
  })();
  exports.ViewFactory = ViewFactory;
  var nextInjectorId = 0;
  function getNextInjectorId() {
    return ++nextInjectorId;
  }
  function configureProperties(instruction, resources) {
    var type = instruction.type;
    var attrName = instruction.attrName;
    var attributes = instruction.attributes;
    var property = undefined;
    var key = undefined;
    var value = undefined;
    var knownAttribute = resources.mapAttribute(attrName);
    if (knownAttribute && attrName in attributes && knownAttribute !== attrName) {
      attributes[knownAttribute] = attributes[attrName];
      delete attributes[attrName];
    }
    for (key in attributes) {
      value = attributes[key];
      if (value !== null && typeof value === 'object') {
        property = type.attributes[key];
        if (property !== undefined) {
          value.targetProperty = property.name;
        } else {
          value.targetProperty = key;
        }
      }
    }
  }
  var lastAUTargetID = 0;
  function getNextAUTargetID() {
    return (++lastAUTargetID).toString();
  }
  function makeIntoInstructionTarget(element) {
    var value = element.getAttribute('class');
    var auTargetID = getNextAUTargetID();
    element.setAttribute('class', value ? value += ' au-target' : 'au-target');
    element.setAttribute('au-target-id', auTargetID);
    return auTargetID;
  }
  var ViewCompiler = (function() {
    function ViewCompiler(bindingLanguage, resources) {
      _classCallCheck(this, _ViewCompiler);
      this.bindingLanguage = bindingLanguage;
      this.resources = resources;
    }
    ViewCompiler.prototype.compile = function compile(source, resources, compileInstruction) {
      resources = resources || this.resources;
      compileInstruction = compileInstruction || ViewCompileInstruction.normal;
      source = typeof source === 'string' ? _aureliaPal.DOM.createTemplateFromMarkup(source) : source;
      var content = undefined;
      var part = undefined;
      var cacheSize = undefined;
      if (source.content) {
        part = source.getAttribute('part');
        cacheSize = source.getAttribute('view-cache');
        content = _aureliaPal.DOM.adoptNode(source.content);
      } else {
        content = source;
      }
      compileInstruction.targetShadowDOM = compileInstruction.targetShadowDOM && _aureliaPal.FEATURE.shadowDOM;
      resources._onBeforeCompile(content, resources, compileInstruction);
      var instructions = {};
      this._compileNode(content, resources, instructions, source, 'root', !compileInstruction.targetShadowDOM);
      content.insertBefore(_aureliaPal.DOM.createComment('<view>'), content.firstChild);
      content.appendChild(_aureliaPal.DOM.createComment('</view>'));
      var factory = new ViewFactory(content, instructions, resources);
      factory.surrogateInstruction = compileInstruction.compileSurrogate ? this._compileSurrogate(source, resources) : null;
      factory.part = part;
      if (cacheSize) {
        factory.setCacheSize(cacheSize);
      }
      resources._onAfterCompile(factory);
      return factory;
    };
    ViewCompiler.prototype._compileNode = function _compileNode(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM) {
      switch (node.nodeType) {
        case 1:
          return this._compileElement(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM);
        case 3:
          var expression = resources.getBindingLanguage(this.bindingLanguage).parseText(resources, node.wholeText);
          if (expression) {
            var marker = _aureliaPal.DOM.createElement('au-marker');
            var auTargetID = makeIntoInstructionTarget(marker);
            (node.parentNode || parentNode).insertBefore(marker, node);
            node.textContent = ' ';
            instructions[auTargetID] = TargetInstruction.contentExpression(expression);
            while (node.nextSibling && node.nextSibling.nodeType === 3) {
              (node.parentNode || parentNode).removeChild(node.nextSibling);
            }
          } else {
            while (node.nextSibling && node.nextSibling.nodeType === 3) {
              node = node.nextSibling;
            }
          }
          return node.nextSibling;
        case 11:
          var currentChild = node.firstChild;
          while (currentChild) {
            currentChild = this._compileNode(currentChild, resources, instructions, node, parentInjectorId, targetLightDOM);
          }
          break;
        default:
          break;
      }
      return node.nextSibling;
    };
    ViewCompiler.prototype._compileSurrogate = function _compileSurrogate(node, resources) {
      var attributes = node.attributes;
      var bindingLanguage = resources.getBindingLanguage(this.bindingLanguage);
      var knownAttribute = undefined;
      var property = undefined;
      var instruction = undefined;
      var i = undefined;
      var ii = undefined;
      var attr = undefined;
      var attrName = undefined;
      var attrValue = undefined;
      var info = undefined;
      var type = undefined;
      var expressions = [];
      var expression = undefined;
      var behaviorInstructions = [];
      var values = {};
      var hasValues = false;
      var providers = [];
      for (i = 0, ii = attributes.length; i < ii; ++i) {
        attr = attributes[i];
        attrName = attr.name;
        attrValue = attr.value;
        info = bindingLanguage.inspectAttribute(resources, attrName, attrValue);
        type = resources.getAttribute(info.attrName);
        if (type) {
          knownAttribute = resources.mapAttribute(info.attrName);
          if (knownAttribute) {
            property = type.attributes[knownAttribute];
            if (property) {
              info.defaultBindingMode = property.defaultBindingMode;
              if (!info.command && !info.expression) {
                info.command = property.hasOptions ? 'options' : null;
              }
            }
          }
        }
        instruction = bindingLanguage.createAttributeInstruction(resources, node, info, undefined, type);
        if (instruction) {
          if (instruction.alteredAttr) {
            type = resources.getAttribute(instruction.attrName);
          }
          if (instruction.discrete) {
            expressions.push(instruction);
          } else {
            if (type) {
              instruction.type = type;
              configureProperties(instruction, resources);
              if (type.liftsContent) {
                throw new Error('You cannot place a template controller on a surrogate element.');
              } else {
                behaviorInstructions.push(instruction);
              }
            } else {
              expressions.push(instruction.attributes[instruction.attrName]);
            }
          }
        } else {
          if (type) {
            instruction = BehaviorInstruction.attribute(attrName, type);
            instruction.attributes[resources.mapAttribute(attrName)] = attrValue;
            if (type.liftsContent) {
              throw new Error('You cannot place a template controller on a surrogate element.');
            } else {
              behaviorInstructions.push(instruction);
            }
          } else if (attrName !== 'id' && attrName !== 'part' && attrName !== 'replace-part') {
            hasValues = true;
            values[attrName] = attrValue;
          }
        }
      }
      if (expressions.length || behaviorInstructions.length || hasValues) {
        for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {
          instruction = behaviorInstructions[i];
          instruction.type.compile(this, resources, node, instruction);
          providers.push(instruction.type.target);
        }
        for (i = 0, ii = expressions.length; i < ii; ++i) {
          expression = expressions[i];
          if (expression.attrToRemove !== undefined) {
            node.removeAttribute(expression.attrToRemove);
          }
        }
        return TargetInstruction.surrogate(providers, behaviorInstructions, expressions, values);
      }
      return null;
    };
    ViewCompiler.prototype._compileElement = function _compileElement(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM) {
      var tagName = node.tagName.toLowerCase();
      var attributes = node.attributes;
      var expressions = [];
      var expression = undefined;
      var behaviorInstructions = [];
      var providers = [];
      var bindingLanguage = resources.getBindingLanguage(this.bindingLanguage);
      var liftingInstruction = undefined;
      var viewFactory = undefined;
      var type = undefined;
      var elementInstruction = undefined;
      var elementProperty = undefined;
      var i = undefined;
      var ii = undefined;
      var attr = undefined;
      var attrName = undefined;
      var attrValue = undefined;
      var instruction = undefined;
      var info = undefined;
      var property = undefined;
      var knownAttribute = undefined;
      var auTargetID = undefined;
      var injectorId = undefined;
      if (tagName === 'content') {
        if (targetLightDOM) {
          auTargetID = makeIntoInstructionTarget(node);
          instructions[auTargetID] = TargetInstruction.contentSelector(node, parentInjectorId);
        }
        return node.nextSibling;
      } else if (tagName === 'template') {
        viewFactory = this.compile(node, resources);
        viewFactory.part = node.getAttribute('part');
      } else {
        type = resources.getElement(tagName);
        if (type) {
          elementInstruction = BehaviorInstruction.element(node, type);
          behaviorInstructions.push(elementInstruction);
        }
      }
      for (i = 0, ii = attributes.length; i < ii; ++i) {
        attr = attributes[i];
        attrName = attr.name;
        attrValue = attr.value;
        info = bindingLanguage.inspectAttribute(resources, attrName, attrValue);
        type = resources.getAttribute(info.attrName);
        elementProperty = null;
        if (type) {
          knownAttribute = resources.mapAttribute(info.attrName);
          if (knownAttribute) {
            property = type.attributes[knownAttribute];
            if (property) {
              info.defaultBindingMode = property.defaultBindingMode;
              if (!info.command && !info.expression) {
                info.command = property.hasOptions ? 'options' : null;
              }
            }
          }
        } else if (elementInstruction) {
          elementProperty = elementInstruction.type.attributes[info.attrName];
          if (elementProperty) {
            info.defaultBindingMode = elementProperty.defaultBindingMode;
          }
        }
        if (elementProperty) {
          instruction = bindingLanguage.createAttributeInstruction(resources, node, info, elementInstruction);
        } else {
          instruction = bindingLanguage.createAttributeInstruction(resources, node, info, undefined, type);
        }
        if (instruction) {
          if (instruction.alteredAttr) {
            type = resources.getAttribute(instruction.attrName);
          }
          if (instruction.discrete) {
            expressions.push(instruction);
          } else {
            if (type) {
              instruction.type = type;
              configureProperties(instruction, resources);
              if (type.liftsContent) {
                instruction.originalAttrName = attrName;
                liftingInstruction = instruction;
                break;
              } else {
                behaviorInstructions.push(instruction);
              }
            } else if (elementProperty) {
              elementInstruction.attributes[info.attrName].targetProperty = elementProperty.name;
            } else {
              expressions.push(instruction.attributes[instruction.attrName]);
            }
          }
        } else {
          if (type) {
            instruction = BehaviorInstruction.attribute(attrName, type);
            instruction.attributes[resources.mapAttribute(attrName)] = attrValue;
            if (type.liftsContent) {
              instruction.originalAttrName = attrName;
              liftingInstruction = instruction;
              break;
            } else {
              behaviorInstructions.push(instruction);
            }
          } else if (elementProperty) {
            elementInstruction.attributes[attrName] = attrValue;
          }
        }
      }
      if (liftingInstruction) {
        liftingInstruction.viewFactory = viewFactory;
        node = liftingInstruction.type.compile(this, resources, node, liftingInstruction, parentNode);
        auTargetID = makeIntoInstructionTarget(node);
        instructions[auTargetID] = TargetInstruction.lifting(parentInjectorId, liftingInstruction);
      } else {
        if (expressions.length || behaviorInstructions.length) {
          injectorId = behaviorInstructions.length ? getNextInjectorId() : false;
          for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {
            instruction = behaviorInstructions[i];
            instruction.type.compile(this, resources, node, instruction, parentNode);
            providers.push(instruction.type.target);
          }
          for (i = 0, ii = expressions.length; i < ii; ++i) {
            expression = expressions[i];
            if (expression.attrToRemove !== undefined) {
              node.removeAttribute(expression.attrToRemove);
            }
          }
          auTargetID = makeIntoInstructionTarget(node);
          instructions[auTargetID] = TargetInstruction.normal(injectorId, parentInjectorId, providers, behaviorInstructions, expressions, elementInstruction);
        }
        if (elementInstruction && elementInstruction.skipContentProcessing) {
          return node.nextSibling;
        }
        var currentChild = node.firstChild;
        while (currentChild) {
          currentChild = this._compileNode(currentChild, resources, instructions, node, injectorId || parentInjectorId, targetLightDOM);
        }
      }
      return node.nextSibling;
    };
    var _ViewCompiler = ViewCompiler;
    ViewCompiler = _aureliaDependencyInjection.inject(BindingLanguage, ViewResources)(ViewCompiler) || ViewCompiler;
    return ViewCompiler;
  })();
  exports.ViewCompiler = ViewCompiler;
  var ResourceModule = (function() {
    function ResourceModule(moduleId) {
      _classCallCheck(this, ResourceModule);
      this.id = moduleId;
      this.moduleInstance = null;
      this.mainResource = null;
      this.resources = null;
      this.viewStrategy = null;
      this.isInitialized = false;
      this.onLoaded = null;
    }
    ResourceModule.prototype.initialize = function initialize(container) {
      var current = this.mainResource;
      var resources = this.resources;
      var vs = this.viewStrategy;
      if (this.isInitialized) {
        return;
      }
      this.isInitialized = true;
      if (current !== undefined) {
        current.metadata.viewStrategy = vs;
        current.initialize(container);
      }
      for (var i = 0,
          ii = resources.length; i < ii; ++i) {
        current = resources[i];
        current.metadata.viewStrategy = vs;
        current.initialize(container);
      }
    };
    ResourceModule.prototype.register = function register(registry, name) {
      var main = this.mainResource;
      var resources = this.resources;
      if (main !== undefined) {
        main.register(registry, name);
        name = null;
      }
      for (var i = 0,
          ii = resources.length; i < ii; ++i) {
        resources[i].register(registry, name);
        name = null;
      }
    };
    ResourceModule.prototype.load = function load(container, loadContext) {
      if (this.onLoaded !== null) {
        return this.onLoaded;
      }
      var main = this.mainResource;
      var resources = this.resources;
      var loads = undefined;
      if (main !== undefined) {
        loads = new Array(resources.length + 1);
        loads[0] = main.load(container, loadContext);
        for (var i = 0,
            ii = resources.length; i < ii; ++i) {
          loads[i + 1] = resources[i].load(container, loadContext);
        }
      } else {
        loads = new Array(resources.length);
        for (var i = 0,
            ii = resources.length; i < ii; ++i) {
          loads[i] = resources[i].load(container, loadContext);
        }
      }
      this.onLoaded = Promise.all(loads);
      return this.onLoaded;
    };
    return ResourceModule;
  })();
  exports.ResourceModule = ResourceModule;
  var ResourceDescription = (function() {
    function ResourceDescription(key, exportedValue, resourceTypeMeta) {
      _classCallCheck(this, ResourceDescription);
      if (!resourceTypeMeta) {
        resourceTypeMeta = _aureliaMetadata.metadata.get(_aureliaMetadata.metadata.resource, exportedValue);
        if (!resourceTypeMeta) {
          resourceTypeMeta = new HtmlBehaviorResource();
          resourceTypeMeta.elementName = _hyphenate(key);
          _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, resourceTypeMeta, exportedValue);
        }
      }
      if (resourceTypeMeta instanceof HtmlBehaviorResource) {
        if (resourceTypeMeta.elementName === undefined) {
          resourceTypeMeta.elementName = _hyphenate(key);
        } else if (resourceTypeMeta.attributeName === undefined) {
          resourceTypeMeta.attributeName = _hyphenate(key);
        } else if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {
          HtmlBehaviorResource.convention(key, resourceTypeMeta);
        }
      } else if (!resourceTypeMeta.name) {
        resourceTypeMeta.name = _hyphenate(key);
      }
      this.metadata = resourceTypeMeta;
      this.value = exportedValue;
    }
    ResourceDescription.prototype.initialize = function initialize(container) {
      this.metadata.initialize(container, this.value);
    };
    ResourceDescription.prototype.register = function register(registry, name) {
      this.metadata.register(registry, name);
    };
    ResourceDescription.prototype.load = function load(container, loadContext) {
      return this.metadata.load(container, this.value, loadContext);
    };
    return ResourceDescription;
  })();
  exports.ResourceDescription = ResourceDescription;
  var ModuleAnalyzer = (function() {
    function ModuleAnalyzer() {
      _classCallCheck(this, ModuleAnalyzer);
      this.cache = {};
    }
    ModuleAnalyzer.prototype.getAnalysis = function getAnalysis(moduleId) {
      return this.cache[moduleId];
    };
    ModuleAnalyzer.prototype.analyze = function analyze(moduleId, moduleInstance, mainResourceKey) {
      var mainResource = undefined;
      var fallbackValue = undefined;
      var fallbackKey = undefined;
      var resourceTypeMeta = undefined;
      var key = undefined;
      var exportedValue = undefined;
      var resources = [];
      var conventional = undefined;
      var vs = undefined;
      var resourceModule = undefined;
      resourceModule = this.cache[moduleId];
      if (resourceModule) {
        return resourceModule;
      }
      resourceModule = new ResourceModule(moduleId);
      this.cache[moduleId] = resourceModule;
      if (typeof moduleInstance === 'function') {
        moduleInstance = {'default': moduleInstance};
      }
      if (mainResourceKey) {
        mainResource = new ResourceDescription(mainResourceKey, moduleInstance[mainResourceKey]);
      }
      for (key in moduleInstance) {
        exportedValue = moduleInstance[key];
        if (key === mainResourceKey || typeof exportedValue !== 'function') {
          continue;
        }
        resourceTypeMeta = _aureliaMetadata.metadata.get(_aureliaMetadata.metadata.resource, exportedValue);
        if (resourceTypeMeta) {
          if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {
            HtmlBehaviorResource.convention(key, resourceTypeMeta);
          }
          if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {
            resourceTypeMeta.elementName = _hyphenate(key);
          }
          if (!mainResource && resourceTypeMeta instanceof HtmlBehaviorResource && resourceTypeMeta.elementName !== null) {
            mainResource = new ResourceDescription(key, exportedValue, resourceTypeMeta);
          } else {
            resources.push(new ResourceDescription(key, exportedValue, resourceTypeMeta));
          }
        } else if (viewStrategy.decorates(exportedValue)) {
          vs = exportedValue;
        } else if (exportedValue instanceof _aureliaLoader.TemplateRegistryEntry) {
          vs = new TemplateRegistryViewStrategy(moduleId, exportedValue);
        } else {
          if (conventional = HtmlBehaviorResource.convention(key)) {
            if (conventional.elementName !== null && !mainResource) {
              mainResource = new ResourceDescription(key, exportedValue, conventional);
            } else {
              resources.push(new ResourceDescription(key, exportedValue, conventional));
            }
            _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, conventional, exportedValue);
          } else if (conventional = _aureliaBinding.ValueConverterResource.convention(key)) {
            resources.push(new ResourceDescription(key, exportedValue, conventional));
            _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, conventional, exportedValue);
          } else if (conventional = _aureliaBinding.BindingBehaviorResource.convention(key)) {
            resources.push(new ResourceDescription(key, exportedValue, conventional));
            _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, conventional, exportedValue);
          } else if (!fallbackValue) {
            fallbackValue = exportedValue;
            fallbackKey = key;
          }
        }
      }
      if (!mainResource && fallbackValue) {
        mainResource = new ResourceDescription(fallbackKey, fallbackValue);
      }
      resourceModule.moduleInstance = moduleInstance;
      resourceModule.mainResource = mainResource;
      resourceModule.resources = resources;
      resourceModule.viewStrategy = vs;
      return resourceModule;
    };
    return ModuleAnalyzer;
  })();
  exports.ModuleAnalyzer = ModuleAnalyzer;
  var logger = _aureliaLogging.getLogger('templating');
  function ensureRegistryEntry(loader, urlOrRegistryEntry) {
    if (urlOrRegistryEntry instanceof _aureliaLoader.TemplateRegistryEntry) {
      return Promise.resolve(urlOrRegistryEntry);
    }
    return loader.loadTemplate(urlOrRegistryEntry);
  }
  var ProxyViewFactory = (function() {
    function ProxyViewFactory(promise) {
      var _this3 = this;
      _classCallCheck(this, ProxyViewFactory);
      promise.then(function(x) {
        return _this3.viewFactory = x;
      });
    }
    ProxyViewFactory.prototype.create = function create(container, bindingContext, createInstruction, element) {
      return this.viewFactory.create(container, bindingContext, createInstruction, element);
    };
    ProxyViewFactory.prototype.setCacheSize = function setCacheSize(size, doNotOverrideIfAlreadySet) {
      this.viewFactory.setCacheSize(size, doNotOverrideIfAlreadySet);
    };
    ProxyViewFactory.prototype.getCachedView = function getCachedView() {
      return this.viewFactory.getCachedView();
    };
    ProxyViewFactory.prototype.returnViewToCache = function returnViewToCache(view) {
      this.viewFactory.returnViewToCache(view);
    };
    _createClass(ProxyViewFactory, [{
      key: 'isCaching',
      get: function get() {
        return this.viewFactory.isCaching;
      }
    }]);
    return ProxyViewFactory;
  })();
  var ViewEngine = (function() {
    function ViewEngine(loader, container, viewCompiler, moduleAnalyzer, appResources) {
      _classCallCheck(this, _ViewEngine);
      this.loader = loader;
      this.container = container;
      this.viewCompiler = viewCompiler;
      this.moduleAnalyzer = moduleAnalyzer;
      this.appResources = appResources;
      this._pluginMap = {};
    }
    ViewEngine.prototype.addResourcePlugin = function addResourcePlugin(extension, implementation) {
      var name = extension.replace('.', '') + '-resource-plugin';
      this._pluginMap[extension] = name;
      this.loader.addPlugin(name, implementation);
    };
    ViewEngine.prototype.loadViewFactory = function loadViewFactory(urlOrRegistryEntry, compileInstruction, loadContext) {
      var _this4 = this;
      loadContext = loadContext || new ResourceLoadContext();
      return ensureRegistryEntry(this.loader, urlOrRegistryEntry).then(function(registryEntry) {
        if (registryEntry.onReady) {
          if (!loadContext.hasDependency(urlOrRegistryEntry)) {
            loadContext.addDependency(urlOrRegistryEntry);
            return registryEntry.onReady;
          }
          return Promise.resolve(new ProxyViewFactory(registryEntry.onReady));
        }
        loadContext.addDependency(urlOrRegistryEntry);
        registryEntry.onReady = _this4.loadTemplateResources(registryEntry, compileInstruction, loadContext).then(function(resources) {
          registryEntry.resources = resources;
          var viewFactory = _this4.viewCompiler.compile(registryEntry.template, resources, compileInstruction);
          registryEntry.factory = viewFactory;
          return viewFactory;
        });
        return registryEntry.onReady;
      });
    };
    ViewEngine.prototype.loadTemplateResources = function loadTemplateResources(registryEntry, compileInstruction, loadContext) {
      var resources = new ViewResources(this.appResources, registryEntry.address);
      var dependencies = registryEntry.dependencies;
      var importIds = undefined;
      var names = undefined;
      compileInstruction = compileInstruction || ViewCompileInstruction.normal;
      if (dependencies.length === 0 && !compileInstruction.associatedModuleId) {
        return Promise.resolve(resources);
      }
      importIds = dependencies.map(function(x) {
        return x.src;
      });
      names = dependencies.map(function(x) {
        return x.name;
      });
      logger.debug('importing resources for ' + registryEntry.address, importIds);
      return this.importViewResources(importIds, names, resources, compileInstruction, loadContext);
    };
    ViewEngine.prototype.importViewModelResource = function importViewModelResource(moduleImport, moduleMember) {
      var _this5 = this;
      return this.loader.loadModule(moduleImport).then(function(viewModelModule) {
        var normalizedId = _aureliaMetadata.Origin.get(viewModelModule).moduleId;
        var resourceModule = _this5.moduleAnalyzer.analyze(normalizedId, viewModelModule, moduleMember);
        if (!resourceModule.mainResource) {
          throw new Error('No view model found in module "' + moduleImport + '".');
        }
        resourceModule.initialize(_this5.container);
        return resourceModule.mainResource;
      });
    };
    ViewEngine.prototype.importViewResources = function importViewResources(moduleIds, names, resources, compileInstruction, loadContext) {
      var _this6 = this;
      loadContext = loadContext || new ResourceLoadContext();
      compileInstruction = compileInstruction || ViewCompileInstruction.normal;
      moduleIds = moduleIds.map(function(x) {
        return _this6._applyLoaderPlugin(x);
      });
      return this.loader.loadAllModules(moduleIds).then(function(imports) {
        var i = undefined;
        var ii = undefined;
        var analysis = undefined;
        var normalizedId = undefined;
        var current = undefined;
        var associatedModule = undefined;
        var container = _this6.container;
        var moduleAnalyzer = _this6.moduleAnalyzer;
        var allAnalysis = new Array(imports.length);
        for (i = 0, ii = imports.length; i < ii; ++i) {
          current = imports[i];
          normalizedId = _aureliaMetadata.Origin.get(current).moduleId;
          analysis = moduleAnalyzer.analyze(normalizedId, current);
          analysis.initialize(container);
          analysis.register(resources, names[i]);
          allAnalysis[i] = analysis;
        }
        if (compileInstruction.associatedModuleId) {
          associatedModule = moduleAnalyzer.getAnalysis(compileInstruction.associatedModuleId);
          if (associatedModule) {
            associatedModule.register(resources);
          }
        }
        for (i = 0, ii = allAnalysis.length; i < ii; ++i) {
          allAnalysis[i] = allAnalysis[i].load(container, loadContext);
        }
        return Promise.all(allAnalysis).then(function() {
          return resources;
        });
      });
    };
    ViewEngine.prototype._applyLoaderPlugin = function _applyLoaderPlugin(id) {
      var index = id.lastIndexOf('.');
      if (index !== -1) {
        var ext = id.substring(index);
        var pluginName = this._pluginMap[ext];
        if (pluginName === undefined) {
          return id;
        }
        return this.loader.applyPluginToUrl(id, pluginName);
      }
      return id;
    };
    var _ViewEngine = ViewEngine;
    ViewEngine = _aureliaDependencyInjection.inject(_aureliaLoader.Loader, _aureliaDependencyInjection.Container, ViewCompiler, ModuleAnalyzer, ViewResources)(ViewEngine) || ViewEngine;
    return ViewEngine;
  })();
  exports.ViewEngine = ViewEngine;
  var Controller = (function() {
    function Controller(behavior, instruction, viewModel) {
      _classCallCheck(this, Controller);
      this.behavior = behavior;
      this.instruction = instruction;
      this.viewModel = viewModel;
      this.isAttached = false;
      this.view = null;
      this.isBound = false;
      this.bindingContext = null;
      var observerLookup = behavior.observerLocator.getOrCreateObserversLookup(viewModel);
      var handlesBind = behavior.handlesBind;
      var attributes = instruction.attributes;
      var boundProperties = this.boundProperties = [];
      var properties = behavior.properties;
      var i = undefined;
      var ii = undefined;
      behavior._ensurePropertiesDefined(viewModel, observerLookup);
      for (i = 0, ii = properties.length; i < ii; ++i) {
        properties[i]._initialize(viewModel, observerLookup, attributes, handlesBind, boundProperties);
      }
    }
    Controller.prototype.created = function created(owningView) {
      if (this.behavior.handlesCreated) {
        this.viewModel.created(owningView, this.view);
      }
    };
    Controller.prototype.automate = function automate(overrideContext) {
      this.view.bindingContext = this.viewModel;
      this.view.overrideContext = overrideContext || _aureliaBinding.createOverrideContext(this.viewModel);
      this.view._isUserControlled = true;
      this.bind(this.view);
    };
    Controller.prototype.bind = function bind(scope) {
      var skipSelfSubscriber = this.behavior.handlesBind;
      var boundProperties = this.boundProperties;
      var i = undefined;
      var ii = undefined;
      var x = undefined;
      var observer = undefined;
      var selfSubscriber = undefined;
      var context = scope.bindingContext;
      if (this.isBound) {
        if (this.bindingContext === context) {
          return;
        }
        this.unbind();
      }
      this.isBound = true;
      this.bindingContext = context;
      for (i = 0, ii = boundProperties.length; i < ii; ++i) {
        x = boundProperties[i];
        observer = x.observer;
        selfSubscriber = observer.selfSubscriber;
        observer.publishing = false;
        if (skipSelfSubscriber) {
          observer.selfSubscriber = null;
        }
        x.binding.bind(scope);
        observer.call();
        observer.publishing = true;
        observer.selfSubscriber = selfSubscriber;
      }
      if (this.view !== null) {
        if (skipSelfSubscriber) {
          this.view.viewModelScope = scope;
        }
        this.view.bind(this.viewModel, _aureliaBinding.createOverrideContext(this.viewModel, scope.overrideContext));
      } else if (skipSelfSubscriber) {
        this.viewModel.bind(context, scope.overrideContext);
      }
    };
    Controller.prototype.unbind = function unbind() {
      if (this.isBound) {
        var boundProperties = this.boundProperties;
        var i = undefined;
        var ii = undefined;
        this.isBound = false;
        this.scope = null;
        if (this.view !== null) {
          this.view.unbind();
        }
        if (this.behavior.handlesUnbind) {
          this.viewModel.unbind();
        }
        for (i = 0, ii = boundProperties.length; i < ii; ++i) {
          boundProperties[i].binding.unbind();
        }
      }
    };
    Controller.prototype.attached = function attached() {
      if (this.isAttached) {
        return;
      }
      this.isAttached = true;
      if (this.behavior.handlesAttached) {
        this.viewModel.attached();
      }
      if (this.view !== null) {
        this.view.attached();
      }
    };
    Controller.prototype.detached = function detached() {
      if (this.isAttached) {
        this.isAttached = false;
        if (this.view !== null) {
          this.view.detached();
        }
        if (this.behavior.handlesDetached) {
          this.viewModel.detached();
        }
      }
    };
    return Controller;
  })();
  exports.Controller = Controller;
  var BehaviorPropertyObserver = (function() {
    function BehaviorPropertyObserver(taskQueue, obj, propertyName, selfSubscriber, initialValue) {
      _classCallCheck(this, _BehaviorPropertyObserver);
      this.taskQueue = taskQueue;
      this.obj = obj;
      this.propertyName = propertyName;
      this.notqueued = true;
      this.publishing = false;
      this.selfSubscriber = selfSubscriber;
      this.currentValue = this.oldValue = initialValue;
    }
    BehaviorPropertyObserver.prototype.getValue = function getValue() {
      return this.currentValue;
    };
    BehaviorPropertyObserver.prototype.setValue = function setValue(newValue) {
      var oldValue = this.currentValue;
      if (oldValue !== newValue) {
        if (this.publishing && this.notqueued) {
          this.notqueued = false;
          this.taskQueue.queueMicroTask(this);
        }
        this.oldValue = oldValue;
        this.currentValue = newValue;
      }
    };
    BehaviorPropertyObserver.prototype.call = function call() {
      var oldValue = this.oldValue;
      var newValue = this.currentValue;
      this.notqueued = true;
      if (newValue === oldValue) {
        return;
      }
      if (this.selfSubscriber) {
        this.selfSubscriber(newValue, oldValue);
      }
      this.callSubscribers(newValue, oldValue);
      this.oldValue = newValue;
    };
    BehaviorPropertyObserver.prototype.subscribe = function subscribe(context, callable) {
      this.addSubscriber(context, callable);
    };
    BehaviorPropertyObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      this.removeSubscriber(context, callable);
    };
    var _BehaviorPropertyObserver = BehaviorPropertyObserver;
    BehaviorPropertyObserver = _aureliaBinding.subscriberCollection()(BehaviorPropertyObserver) || BehaviorPropertyObserver;
    return BehaviorPropertyObserver;
  })();
  exports.BehaviorPropertyObserver = BehaviorPropertyObserver;
  function getObserver(behavior, instance, name) {
    var lookup = instance.__observers__;
    if (lookup === undefined) {
      if (!behavior.isInitialized) {
        behavior.initialize(_aureliaDependencyInjection.Container.instance || new _aureliaDependencyInjection.Container(), instance.constructor);
      }
      lookup = behavior.observerLocator.getOrCreateObserversLookup(instance);
      behavior._ensurePropertiesDefined(instance, lookup);
    }
    return lookup[name];
  }
  var BindableProperty = (function() {
    function BindableProperty(nameOrConfig) {
      _classCallCheck(this, BindableProperty);
      if (typeof nameOrConfig === 'string') {
        this.name = nameOrConfig;
      } else {
        Object.assign(this, nameOrConfig);
      }
      this.attribute = this.attribute || _hyphenate(this.name);
      this.defaultBindingMode = this.defaultBindingMode || _aureliaBinding.bindingMode.oneWay;
      this.changeHandler = this.changeHandler || null;
      this.owner = null;
      this.descriptor = null;
    }
    BindableProperty.prototype.registerWith = function registerWith(target, behavior, descriptor) {
      behavior.properties.push(this);
      behavior.attributes[this.attribute] = this;
      this.owner = behavior;
      if (descriptor) {
        this.descriptor = descriptor;
        return this._configureDescriptor(behavior, descriptor);
      }
    };
    BindableProperty.prototype._configureDescriptor = function _configureDescriptor(behavior, descriptor) {
      var name = this.name;
      descriptor.configurable = true;
      descriptor.enumerable = true;
      if ('initializer' in descriptor) {
        this.defaultValue = descriptor.initializer;
        delete descriptor.initializer;
        delete descriptor.writable;
      }
      if ('value' in descriptor) {
        this.defaultValue = descriptor.value;
        delete descriptor.value;
        delete descriptor.writable;
      }
      descriptor.get = function() {
        return getObserver(behavior, this, name).getValue();
      };
      descriptor.set = function(value) {
        getObserver(behavior, this, name).setValue(value);
      };
      descriptor.get.getObserver = function(obj) {
        return getObserver(behavior, obj, name);
      };
      return descriptor;
    };
    BindableProperty.prototype.defineOn = function defineOn(target, behavior) {
      var name = this.name;
      var handlerName = undefined;
      if (this.changeHandler === null) {
        handlerName = name + 'Changed';
        if (handlerName in target.prototype) {
          this.changeHandler = handlerName;
        }
      }
      if (this.descriptor === null) {
        Object.defineProperty(target.prototype, name, this._configureDescriptor(behavior, {}));
      }
    };
    BindableProperty.prototype.createObserver = function createObserver(viewModel) {
      var selfSubscriber = null;
      var defaultValue = this.defaultValue;
      var changeHandlerName = this.changeHandler;
      var name = this.name;
      var initialValue = undefined;
      if (this.hasOptions) {
        return undefined;
      }
      if (changeHandlerName in viewModel) {
        if ('propertyChanged' in viewModel) {
          selfSubscriber = function(newValue, oldValue) {
            viewModel[changeHandlerName](newValue, oldValue);
            viewModel.propertyChanged(name, newValue, oldValue);
          };
        } else {
          selfSubscriber = function(newValue, oldValue) {
            return viewModel[changeHandlerName](newValue, oldValue);
          };
        }
      } else if ('propertyChanged' in viewModel) {
        selfSubscriber = function(newValue, oldValue) {
          return viewModel.propertyChanged(name, newValue, oldValue);
        };
      } else if (changeHandlerName !== null) {
        throw new Error('Change handler ' + changeHandlerName + ' was specified but not delcared on the class.');
      }
      if (defaultValue !== undefined) {
        initialValue = typeof defaultValue === 'function' ? defaultValue.call(viewModel) : defaultValue;
      }
      return new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, this.name, selfSubscriber, initialValue);
    };
    BindableProperty.prototype._initialize = function _initialize(viewModel, observerLookup, attributes, behaviorHandlesBind, boundProperties) {
      var selfSubscriber = undefined;
      var observer = undefined;
      var attribute = undefined;
      var defaultValue = this.defaultValue;
      if (this.isDynamic) {
        for (var key in attributes) {
          this._createDynamicProperty(viewModel, observerLookup, behaviorHandlesBind, key, attributes[key], boundProperties);
        }
      } else if (!this.hasOptions) {
        observer = observerLookup[this.name];
        if (attributes !== null) {
          selfSubscriber = observer.selfSubscriber;
          attribute = attributes[this.attribute];
          if (behaviorHandlesBind) {
            observer.selfSubscriber = null;
          }
          if (typeof attribute === 'string') {
            viewModel[this.name] = attribute;
            observer.call();
          } else if (attribute) {
            boundProperties.push({
              observer: observer,
              binding: attribute.createBinding(viewModel)
            });
          } else if (defaultValue !== undefined) {
            observer.call();
          }
          observer.selfSubscriber = selfSubscriber;
        }
        observer.publishing = true;
      }
    };
    BindableProperty.prototype._createDynamicProperty = function _createDynamicProperty(viewModel, observerLookup, behaviorHandlesBind, name, attribute, boundProperties) {
      var changeHandlerName = name + 'Changed';
      var selfSubscriber = null;
      var observer = undefined;
      var info = undefined;
      if (changeHandlerName in viewModel) {
        if ('propertyChanged' in viewModel) {
          selfSubscriber = function(newValue, oldValue) {
            viewModel[changeHandlerName](newValue, oldValue);
            viewModel.propertyChanged(name, newValue, oldValue);
          };
        } else {
          selfSubscriber = function(newValue, oldValue) {
            return viewModel[changeHandlerName](newValue, oldValue);
          };
        }
      } else if ('propertyChanged' in viewModel) {
        selfSubscriber = function(newValue, oldValue) {
          return viewModel.propertyChanged(name, newValue, oldValue);
        };
      }
      observer = observerLookup[name] = new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, name, selfSubscriber);
      Object.defineProperty(viewModel, name, {
        configurable: true,
        enumerable: true,
        get: observer.getValue.bind(observer),
        set: observer.setValue.bind(observer)
      });
      if (behaviorHandlesBind) {
        observer.selfSubscriber = null;
      }
      if (typeof attribute === 'string') {
        viewModel[name] = attribute;
        observer.call();
      } else if (attribute) {
        info = {
          observer: observer,
          binding: attribute.createBinding(viewModel)
        };
        boundProperties.push(info);
      }
      observer.publishing = true;
      observer.selfSubscriber = selfSubscriber;
    };
    return BindableProperty;
  })();
  exports.BindableProperty = BindableProperty;
  var contentSelectorViewCreateInstruction = {enhance: false};
  var lastProviderId = 0;
  function nextProviderId() {
    return ++lastProviderId;
  }
  function doProcessContent() {
    return true;
  }
  var HtmlBehaviorResource = (function() {
    function HtmlBehaviorResource() {
      _classCallCheck(this, HtmlBehaviorResource);
      this.elementName = null;
      this.attributeName = null;
      this.attributeDefaultBindingMode = undefined;
      this.liftsContent = false;
      this.targetShadowDOM = false;
      this.processContent = doProcessContent;
      this.usesShadowDOM = false;
      this.childBindings = null;
      this.hasDynamicOptions = false;
      this.containerless = false;
      this.properties = [];
      this.attributes = {};
      this.isInitialized = false;
    }
    HtmlBehaviorResource.convention = function convention(name, existing) {
      var behavior = undefined;
      if (name.endsWith('CustomAttribute')) {
        behavior = existing || new HtmlBehaviorResource();
        behavior.attributeName = _hyphenate(name.substring(0, name.length - 15));
      }
      if (name.endsWith('CustomElement')) {
        behavior = existing || new HtmlBehaviorResource();
        behavior.elementName = _hyphenate(name.substring(0, name.length - 13));
      }
      return behavior;
    };
    HtmlBehaviorResource.prototype.addChildBinding = function addChildBinding(behavior) {
      if (this.childBindings === null) {
        this.childBindings = [];
      }
      this.childBindings.push(behavior);
    };
    HtmlBehaviorResource.prototype.initialize = function initialize(container, target) {
      var proto = target.prototype;
      var properties = this.properties;
      var attributeName = this.attributeName;
      var attributeDefaultBindingMode = this.attributeDefaultBindingMode;
      var i = undefined;
      var ii = undefined;
      var current = undefined;
      if (this.isInitialized) {
        return;
      }
      this.isInitialized = true;
      target.__providerId__ = nextProviderId();
      this.observerLocator = container.get(_aureliaBinding.ObserverLocator);
      this.taskQueue = container.get(_aureliaTaskQueue.TaskQueue);
      this.target = target;
      this.usesShadowDOM = this.targetShadowDOM && _aureliaPal.FEATURE.shadowDOM;
      this.handlesCreated = 'created' in proto;
      this.handlesBind = 'bind' in proto;
      this.handlesUnbind = 'unbind' in proto;
      this.handlesAttached = 'attached' in proto;
      this.handlesDetached = 'detached' in proto;
      this.htmlName = this.elementName || this.attributeName;
      if (attributeName !== null) {
        if (properties.length === 0) {
          new BindableProperty({
            name: 'value',
            changeHandler: 'valueChanged' in proto ? 'valueChanged' : null,
            attribute: attributeName,
            defaultBindingMode: attributeDefaultBindingMode
          }).registerWith(target, this);
        }
        current = properties[0];
        if (properties.length === 1 && current.name === 'value') {
          current.isDynamic = current.hasOptions = this.hasDynamicOptions;
          current.defineOn(target, this);
        } else {
          for (i = 0, ii = properties.length; i < ii; ++i) {
            properties[i].defineOn(target, this);
          }
          current = new BindableProperty({
            name: 'value',
            changeHandler: 'valueChanged' in proto ? 'valueChanged' : null,
            attribute: attributeName,
            defaultBindingMode: attributeDefaultBindingMode
          });
          current.hasOptions = true;
          current.registerWith(target, this);
        }
      } else {
        for (i = 0, ii = properties.length; i < ii; ++i) {
          properties[i].defineOn(target, this);
        }
      }
    };
    HtmlBehaviorResource.prototype.register = function register(registry, name) {
      if (this.attributeName !== null) {
        registry.registerAttribute(name || this.attributeName, this, this.attributeName);
      }
      if (this.elementName !== null) {
        registry.registerElement(name || this.elementName, this);
      }
    };
    HtmlBehaviorResource.prototype.load = function load(container, target, loadContext, viewStrategy, transientView) {
      var _this7 = this;
      var options = undefined;
      if (this.elementName !== null) {
        viewStrategy = container.get(ViewLocator).getViewStrategy(viewStrategy || this.viewStrategy || target);
        options = new ViewCompileInstruction(this.targetShadowDOM, true);
        if (!viewStrategy.moduleId) {
          viewStrategy.moduleId = _aureliaMetadata.Origin.get(target).moduleId;
        }
        return viewStrategy.loadViewFactory(container.get(ViewEngine), options, loadContext).then(function(viewFactory) {
          if (!transientView || !_this7.viewFactory) {
            _this7.viewFactory = viewFactory;
          }
          return viewFactory;
        });
      }
      return Promise.resolve(this);
    };
    HtmlBehaviorResource.prototype.compile = function compile(compiler, resources, node, instruction, parentNode) {
      if (this.liftsContent) {
        if (!instruction.viewFactory) {
          var template = _aureliaPal.DOM.createElement('template');
          var fragment = _aureliaPal.DOM.createDocumentFragment();
          var cacheSize = node.getAttribute('view-cache');
          var part = node.getAttribute('part');
          node.removeAttribute(instruction.originalAttrName);
          _aureliaPal.DOM.replaceNode(template, node, parentNode);
          fragment.appendChild(node);
          instruction.viewFactory = compiler.compile(fragment, resources);
          if (part) {
            instruction.viewFactory.part = part;
            node.removeAttribute('part');
          }
          if (cacheSize) {
            instruction.viewFactory.setCacheSize(cacheSize);
            node.removeAttribute('view-cache');
          }
          node = template;
        }
      } else if (this.elementName !== null) {
        var _partReplacements2 = instruction.partReplacements = {};
        if (this.processContent(compiler, resources, node, instruction) && node.hasChildNodes()) {
          if (this.usesShadowDOM) {
            var currentChild = node.firstChild;
            var nextSibling = undefined;
            var toReplace = undefined;
            while (currentChild) {
              nextSibling = currentChild.nextSibling;
              if (currentChild.tagName === 'TEMPLATE' && (toReplace = currentChild.getAttribute('replace-part'))) {
                _partReplacements2[toReplace] = compiler.compile(currentChild, resources);
                _aureliaPal.DOM.removeNode(currentChild, parentNode);
              }
              currentChild = nextSibling;
            }
            instruction.skipContentProcessing = false;
          } else {
            var fragment = _aureliaPal.DOM.createDocumentFragment();
            var currentChild = node.firstChild;
            var nextSibling = undefined;
            var toReplace = undefined;
            while (currentChild) {
              nextSibling = currentChild.nextSibling;
              if (currentChild.tagName === 'TEMPLATE' && (toReplace = currentChild.getAttribute('replace-part'))) {
                _partReplacements2[toReplace] = compiler.compile(currentChild, resources);
                _aureliaPal.DOM.removeNode(currentChild, parentNode);
              } else {
                fragment.appendChild(currentChild);
              }
              currentChild = nextSibling;
            }
            instruction.contentFactory = compiler.compile(fragment, resources);
            instruction.skipContentProcessing = true;
          }
        } else {
          instruction.skipContentProcessing = true;
        }
      }
      return node;
    };
    HtmlBehaviorResource.prototype.create = function create(container, instruction, element, bindings) {
      var host = undefined;
      var au = null;
      instruction = instruction || BehaviorInstruction.normal;
      element = element || null;
      bindings = bindings || null;
      if (this.elementName !== null && element) {
        if (this.usesShadowDOM) {
          host = element.createShadowRoot();
          container.registerInstance(_aureliaPal.DOM.boundary, host);
        } else {
          host = element;
          if (this.targetShadowDOM) {
            container.registerInstance(_aureliaPal.DOM.boundary, host);
          }
        }
      }
      if (element !== null) {
        element.au = au = element.au || {};
      }
      var viewModel = instruction.viewModel || container.get(this.target);
      var controller = new Controller(this, instruction, viewModel);
      var childBindings = this.childBindings;
      var viewFactory = undefined;
      if (this.liftsContent) {
        au.controller = controller;
      } else if (this.elementName !== null) {
        viewFactory = instruction.viewFactory || this.viewFactory;
        container.viewModel = viewModel;
        if (viewFactory) {
          controller.view = viewFactory.create(container, instruction, element);
        }
        if (element !== null) {
          au.controller = controller;
          if (controller.view) {
            if (!this.usesShadowDOM) {
              if (instruction.contentFactory) {
                var contentView = instruction.contentFactory.create(container, contentSelectorViewCreateInstruction);
                _ContentSelector.applySelectors(contentView, controller.view.contentSelectors, function(contentSelector, group) {
                  return contentSelector.add(group);
                });
                controller.contentView = contentView;
              }
            }
            if (instruction.anchorIsContainer) {
              if (childBindings !== null) {
                for (var i = 0,
                    ii = childBindings.length; i < ii; ++i) {
                  controller.view.addBinding(childBindings[i].create(element, viewModel));
                }
              }
              controller.view.appendNodesTo(host);
            } else {
              controller.view.insertNodesBefore(host);
            }
          } else if (childBindings !== null) {
            for (var i = 0,
                ii = childBindings.length; i < ii; ++i) {
              bindings.push(childBindings[i].create(element, viewModel));
            }
          }
        } else if (controller.view) {
          controller.view.controller = controller;
          if (childBindings !== null) {
            for (var i = 0,
                ii = childBindings.length; i < ii; ++i) {
              controller.view.addBinding(childBindings[i].create(instruction.host, viewModel));
            }
          }
        } else if (childBindings !== null) {
          for (var i = 0,
              ii = childBindings.length; i < ii; ++i) {
            bindings.push(childBindings[i].create(instruction.host, viewModel));
          }
        }
      } else if (childBindings !== null) {
        for (var i = 0,
            ii = childBindings.length; i < ii; ++i) {
          bindings.push(childBindings[i].create(element, viewModel));
        }
      }
      if (au !== null) {
        au[this.htmlName] = controller;
      }
      if (instruction.initiatedByBehavior && viewFactory) {
        controller.view.created();
      }
      return controller;
    };
    HtmlBehaviorResource.prototype._ensurePropertiesDefined = function _ensurePropertiesDefined(instance, lookup) {
      var properties = undefined;
      var i = undefined;
      var ii = undefined;
      var observer = undefined;
      if ('__propertiesDefined__' in lookup) {
        return;
      }
      lookup.__propertiesDefined__ = true;
      properties = this.properties;
      for (i = 0, ii = properties.length; i < ii; ++i) {
        observer = properties[i].createObserver(instance);
        if (observer !== undefined) {
          lookup[observer.propertyName] = observer;
        }
      }
    };
    return HtmlBehaviorResource;
  })();
  exports.HtmlBehaviorResource = HtmlBehaviorResource;
  function createChildObserverDecorator(selectorOrConfig, all) {
    return function(target, key, descriptor) {
      var actualTarget = typeof key === 'string' ? target.constructor : target;
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, actualTarget);
      if (typeof selectorOrConfig === 'string') {
        selectorOrConfig = {
          selector: selectorOrConfig,
          name: key
        };
      }
      if (descriptor) {
        descriptor.writable = true;
      }
      selectorOrConfig.all = all;
      r.addChildBinding(new ChildObserver(selectorOrConfig));
    };
  }
  function children(selectorOrConfig) {
    return createChildObserverDecorator(selectorOrConfig, true);
  }
  function child(selectorOrConfig) {
    return createChildObserverDecorator(selectorOrConfig, false);
  }
  var ChildObserver = (function() {
    function ChildObserver(config) {
      _classCallCheck(this, ChildObserver);
      this.name = config.name;
      this.changeHandler = config.changeHandler || this.name + 'Changed';
      this.selector = config.selector;
      this.all = config.all;
    }
    ChildObserver.prototype.create = function create(target, viewModel) {
      return new ChildObserverBinder(this.selector, target, this.name, viewModel, this.changeHandler, this.all);
    };
    return ChildObserver;
  })();
  var noMutations = [];
  function trackMutation(groupedMutations, binder, record) {
    var mutations = groupedMutations.get(binder);
    if (!mutations) {
      mutations = [];
      groupedMutations.set(binder, mutations);
    }
    mutations.push(record);
  }
  function onChildChange(mutations, observer) {
    var binders = observer.binders;
    var bindersLength = binders.length;
    var groupedMutations = new Map();
    for (var i = 0,
        ii = mutations.length; i < ii; ++i) {
      var record = mutations[i];
      var added = record.addedNodes;
      var removed = record.removedNodes;
      for (var j = 0,
          jj = removed.length; j < jj; ++j) {
        var node = removed[j];
        if (node.nodeType === 1) {
          for (var k = 0; k < bindersLength; ++k) {
            var binder = binders[k];
            if (binder.onRemove(node)) {
              trackMutation(groupedMutations, binder, record);
            }
          }
        }
      }
      for (var j = 0,
          jj = added.length; j < jj; ++j) {
        var node = added[j];
        if (node.nodeType === 1) {
          for (var k = 0; k < bindersLength; ++k) {
            var binder = binders[k];
            if (binder.onAdd(node)) {
              trackMutation(groupedMutations, binder, record);
            }
          }
        }
      }
    }
    groupedMutations.forEach(function(value, key) {
      if (key.changeHandler !== null) {
        key.viewModel[key.changeHandler](value);
      }
    });
  }
  var ChildObserverBinder = (function() {
    function ChildObserverBinder(selector, target, property, viewModel, changeHandler, all) {
      _classCallCheck(this, ChildObserverBinder);
      this.selector = selector;
      this.target = target;
      this.property = property;
      this.viewModel = viewModel;
      this.changeHandler = changeHandler in viewModel ? changeHandler : null;
      this.all = all;
    }
    ChildObserverBinder.prototype.bind = function bind(source) {
      var target = this.target;
      var viewModel = this.viewModel;
      var selector = this.selector;
      var current = target.firstElementChild;
      var observer = target.__childObserver__;
      if (!observer) {
        observer = target.__childObserver__ = _aureliaPal.DOM.createMutationObserver(onChildChange);
        observer.observe(target, {childList: true});
        observer.binders = [];
      }
      observer.binders.push(this);
      if (this.all) {
        var items = viewModel[this.property];
        if (!items) {
          items = viewModel[this.property] = [];
        } else {
          items.length = 0;
        }
        while (current) {
          if (current.matches(selector)) {
            items.push(current.au && current.au.controller ? current.au.controller.viewModel : current);
          }
          current = current.nextElementSibling;
        }
        if (this.changeHandler !== null) {
          this.viewModel[this.changeHandler](noMutations);
        }
      } else {
        while (current) {
          if (current.matches(selector)) {
            var value = current.au && current.au.controller ? current.au.controller.viewModel : current;
            this.viewModel[this.property] = value;
            if (this.changeHandler !== null) {
              this.viewModel[this.changeHandler](value);
            }
            break;
          }
          current = current.nextElementSibling;
        }
      }
    };
    ChildObserverBinder.prototype.onRemove = function onRemove(element) {
      if (element.matches(this.selector)) {
        var value = element.au && element.au.controller ? element.au.controller.viewModel : element;
        if (this.all) {
          var items = this.viewModel[this.property];
          var index = items.indexOf(value);
          if (index !== -1) {
            items.splice(index, 1);
          }
          return true;
        }
        return false;
      }
    };
    ChildObserverBinder.prototype.onAdd = function onAdd(element) {
      var selector = this.selector;
      if (element.matches(selector)) {
        var value = element.au && element.au.controller ? element.au.controller.viewModel : element;
        if (this.all) {
          var items = this.viewModel[this.property];
          var index = 0;
          var prev = element.previousElementSibling;
          while (prev) {
            if (prev.matches(selector)) {
              index++;
            }
            prev = prev.previousElementSibling;
          }
          items.splice(index, 0, value);
          return true;
        }
        this.viewModel[this.property] = value;
        if (this.changeHandler !== null) {
          this.viewModel[this.changeHandler](value);
        }
      }
      return false;
    };
    ChildObserverBinder.prototype.unbind = function unbind() {
      if (this.target.__childObserver__) {
        this.target.__childObserver__.disconnect();
        this.target.__childObserver__ = null;
      }
    };
    return ChildObserverBinder;
  })();
  function tryActivateViewModel(context) {
    if (context.skipActivation || typeof context.viewModel.activate !== 'function') {
      return Promise.resolve();
    }
    return context.viewModel.activate(context.model) || Promise.resolve();
  }
  var CompositionEngine = (function() {
    function CompositionEngine(viewEngine, viewLocator) {
      _classCallCheck(this, _CompositionEngine);
      this.viewEngine = viewEngine;
      this.viewLocator = viewLocator;
    }
    CompositionEngine.prototype._createControllerAndSwap = function _createControllerAndSwap(context) {
      var _this8 = this;
      var removeResponse = context.viewSlot.removeAll(true);
      var afterRemove = function afterRemove() {
        return _this8.createController(context).then(function(controller) {
          if (context.currentController) {
            context.currentController.unbind();
          }
          controller.automate();
          context.viewSlot.add(controller.view);
          return controller;
        });
      };
      if (removeResponse instanceof Promise) {
        return removeResponse.then(afterRemove);
      }
      return afterRemove();
    };
    CompositionEngine.prototype.createController = function createController(context) {
      var _this9 = this;
      var childContainer = undefined;
      var viewModel = undefined;
      var viewModelResource = undefined;
      var m = undefined;
      return this.ensureViewModel(context).then(tryActivateViewModel).then(function() {
        childContainer = context.childContainer;
        viewModel = context.viewModel;
        viewModelResource = context.viewModelResource;
        m = viewModelResource.metadata;
        var viewStrategy = _this9.viewLocator.getViewStrategy(context.view || viewModel);
        if (context.viewResources) {
          viewStrategy.makeRelativeTo(context.viewResources.viewUrl);
        }
        return m.load(childContainer, viewModelResource.value, null, viewStrategy, true);
      }).then(function(viewFactory) {
        return m.create(childContainer, BehaviorInstruction.dynamic(context.host, viewModel, viewFactory));
      });
    };
    CompositionEngine.prototype.ensureViewModel = function ensureViewModel(context) {
      var childContainer = context.childContainer = context.childContainer || context.container.createChild();
      if (typeof context.viewModel === 'string') {
        context.viewModel = context.viewResources ? context.viewResources.relativeToView(context.viewModel) : context.viewModel;
        return this.viewEngine.importViewModelResource(context.viewModel).then(function(viewModelResource) {
          childContainer.autoRegister(viewModelResource.value);
          if (context.host) {
            childContainer.registerInstance(_aureliaPal.DOM.Element, context.host);
          }
          context.viewModel = childContainer.viewModel = childContainer.get(viewModelResource.value);
          context.viewModelResource = viewModelResource;
          return context;
        });
      }
      var m = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, context.viewModel.constructor);
      m.elementName = m.elementName || 'dynamic-element';
      m.initialize(context.container || childContainer, context.viewModel.constructor);
      context.viewModelResource = {
        metadata: m,
        value: context.viewModel.constructor
      };
      childContainer.viewModel = context.viewModel;
      return Promise.resolve(context);
    };
    CompositionEngine.prototype.compose = function compose(context) {
      context.childContainer = context.childContainer || context.container.createChild();
      context.view = this.viewLocator.getViewStrategy(context.view);
      if (context.viewModel) {
        return this._createControllerAndSwap(context);
      } else if (context.view) {
        if (context.viewResources) {
          context.view.makeRelativeTo(context.viewResources.viewUrl);
        }
        return context.view.loadViewFactory(this.viewEngine, new ViewCompileInstruction()).then(function(viewFactory) {
          var removeResponse = context.viewSlot.removeAll(true);
          if (removeResponse instanceof Promise) {
            return removeResponse.then(function() {
              var result = viewFactory.create(context.childContainer);
              result.bind(context.bindingContext, context.overrideContext);
              context.viewSlot.add(result);
              return result;
            });
          }
          var result = viewFactory.create(context.childContainer);
          result.bind(context.bindingContext, context.overrideContext);
          context.viewSlot.add(result);
          return result;
        });
      } else if (context.viewSlot) {
        context.viewSlot.removeAll();
        return Promise.resolve(null);
      }
    };
    var _CompositionEngine = CompositionEngine;
    CompositionEngine = _aureliaDependencyInjection.inject(ViewEngine, ViewLocator)(CompositionEngine) || CompositionEngine;
    return CompositionEngine;
  })();
  exports.CompositionEngine = CompositionEngine;
  var ElementConfigResource = (function() {
    function ElementConfigResource() {
      _classCallCheck(this, ElementConfigResource);
    }
    ElementConfigResource.prototype.initialize = function initialize(container, target) {};
    ElementConfigResource.prototype.register = function register(registry, name) {};
    ElementConfigResource.prototype.load = function load(container, target) {
      var config = new Target();
      var eventManager = container.get(_aureliaBinding.EventManager);
      eventManager.registerElementConfig(config);
    };
    return ElementConfigResource;
  })();
  exports.ElementConfigResource = ElementConfigResource;
  function validateBehaviorName(name, type) {
    if (/[A-Z]/.test(name)) {
      throw new Error('\'' + name + '\' is not a valid ' + type + ' name.  Upper-case letters are not allowed because the DOM is not case-sensitive.');
    }
  }
  function resource(instance) {
    return function(target) {
      _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, instance, target);
    };
  }
  function behavior(override) {
    return function(target) {
      if (override instanceof HtmlBehaviorResource) {
        _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, override, target);
      } else {
        var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, target);
        Object.assign(r, override);
      }
    };
  }
  function customElement(name) {
    validateBehaviorName(name, 'custom element');
    return function(target) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, target);
      r.elementName = name;
    };
  }
  function customAttribute(name, defaultBindingMode) {
    validateBehaviorName(name, 'custom attribute');
    return function(target) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, target);
      r.attributeName = name;
      r.attributeDefaultBindingMode = defaultBindingMode;
    };
  }
  function templateController(target) {
    var deco = function deco(t) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, t);
      r.liftsContent = true;
    };
    return target ? deco(target) : deco;
  }
  function bindable(nameOrConfigOrTarget, key, descriptor) {
    var deco = function deco(target, key2, descriptor2) {
      var actualTarget = key2 ? target.constructor : target;
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, actualTarget);
      var prop = undefined;
      if (key2) {
        nameOrConfigOrTarget = nameOrConfigOrTarget || {};
        nameOrConfigOrTarget.name = key2;
      }
      prop = new BindableProperty(nameOrConfigOrTarget);
      return prop.registerWith(actualTarget, r, descriptor2);
    };
    if (!nameOrConfigOrTarget) {
      return deco;
    }
    if (key) {
      var target = nameOrConfigOrTarget;
      nameOrConfigOrTarget = null;
      return deco(target, key, descriptor);
    }
    return deco;
  }
  function dynamicOptions(target) {
    var deco = function deco(t) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, t);
      r.hasDynamicOptions = true;
    };
    return target ? deco(target) : deco;
  }
  function useShadowDOM(target) {
    var deco = function deco(t) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, t);
      r.targetShadowDOM = true;
    };
    return target ? deco(target) : deco;
  }
  function doNotProcessContent() {
    return false;
  }
  function processContent(processor) {
    return function(t) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, t);
      r.processContent = processor || doNotProcessContent;
    };
  }
  function containerless(target) {
    var deco = function deco(t) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, HtmlBehaviorResource, t);
      r.containerless = true;
    };
    return target ? deco(target) : deco;
  }
  function useViewStrategy(strategy) {
    return function(target) {
      _aureliaMetadata.metadata.define(ViewLocator.viewStrategyMetadataKey, strategy, target);
    };
  }
  function useView(path) {
    return useViewStrategy(new RelativeViewStrategy(path));
  }
  function inlineView(markup, dependencies, dependencyBaseUrl) {
    return useViewStrategy(new InlineViewStrategy(markup, dependencies, dependencyBaseUrl));
  }
  function noView(target) {
    var deco = function deco(t) {
      _aureliaMetadata.metadata.define(ViewLocator.viewStrategyMetadataKey, new NoViewStrategy(), t);
    };
    return target ? deco(target) : deco;
  }
  function elementConfig(target) {
    var deco = function deco(t) {
      _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, new ElementConfigResource(), t);
    };
    return target ? deco(target) : deco;
  }
  var TemplatingEngine = (function() {
    function TemplatingEngine(container, moduleAnalyzer, viewCompiler, compositionEngine) {
      _classCallCheck(this, _TemplatingEngine);
      this._container = container;
      this._moduleAnalyzer = moduleAnalyzer;
      this._viewCompiler = viewCompiler;
      this._compositionEngine = compositionEngine;
      container.registerInstance(Animator, Animator.instance = new Animator());
    }
    TemplatingEngine.prototype.configureAnimator = function configureAnimator(animator) {
      this._container.unregister(Animator);
      this._container.registerInstance(Animator, Animator.instance = animator);
    };
    TemplatingEngine.prototype.compose = function compose(context) {
      return this._compositionEngine.compose(context);
    };
    TemplatingEngine.prototype.enhance = function enhance(instruction) {
      if (instruction instanceof _aureliaPal.DOM.Element) {
        instruction = {element: instruction};
      }
      var compilerInstructions = {};
      var resources = instruction.resources || this._container.get(ViewResources);
      this._viewCompiler._compileNode(instruction.element, resources, compilerInstructions, instruction.element.parentNode, 'root', true);
      var factory = new ViewFactory(instruction.element, compilerInstructions, resources);
      var container = instruction.container || this._container.createChild();
      var view = factory.create(container, BehaviorInstruction.enhance());
      view.bind(instruction.bindingContext || {});
      return view;
    };
    TemplatingEngine.prototype.createControllerForUnitTest = function createControllerForUnitTest(viewModelType, attributesFromHTML) {
      var _moduleAnalyzer$analyze;
      var exportName = viewModelType.name;
      var resourceModule = this._moduleAnalyzer.analyze('test-module', (_moduleAnalyzer$analyze = {}, _moduleAnalyzer$analyze[exportName] = viewModelType, _moduleAnalyzer$analyze), exportName);
      var description = resourceModule.mainResource;
      description.initialize(this._container);
      var viewModel = this._container.get(viewModelType);
      var instruction = BehaviorInstruction.unitTest(description, attributesFromHTML);
      return new Controller(description.metadata, instruction, viewModel);
    };
    TemplatingEngine.prototype.createViewModelForUnitTest = function createViewModelForUnitTest(viewModelType, attributesFromHTML, bindingContext) {
      var controller = this.createControllerForUnitTest(viewModelType, attributesFromHTML);
      controller.bind(_aureliaBinding.createScopeForTest(bindingContext));
      return controller.viewModel;
    };
    var _TemplatingEngine = TemplatingEngine;
    TemplatingEngine = _aureliaDependencyInjection.inject(_aureliaDependencyInjection.Container, ModuleAnalyzer, ViewCompiler, CompositionEngine)(TemplatingEngine) || TemplatingEngine;
    return TemplatingEngine;
  })();
  exports.TemplatingEngine = TemplatingEngine;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-templating@1.0.0-beta.1.0.1.js", ["npm:aurelia-templating@1.0.0-beta.1.0.1/aurelia-templating.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-dependency-injection@1.0.0-beta.1/aurelia-dependency-injection.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-metadata@1.0.0-beta.1.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _coreJs, _aureliaMetadata, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  var _classInvokers;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports.invoker = invoker;
  exports.factory = factory;
  exports.registration = registration;
  exports.transient = transient;
  exports.singleton = singleton;
  exports.autoinject = autoinject;
  exports.inject = inject;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var resolver = _aureliaMetadata.protocol.create('aurelia:resolver', function(target) {
    if (!(typeof target.get === 'function')) {
      return 'Resolvers must implement: get(container: Container, key: any): any';
    }
    return true;
  });
  exports.resolver = resolver;
  var Lazy = (function() {
    function Lazy(key) {
      _classCallCheck(this, _Lazy);
      this._key = key;
    }
    Lazy.prototype.get = function get(container) {
      var _this = this;
      return function() {
        return container.get(_this._key);
      };
    };
    Lazy.of = function of(key) {
      return new Lazy(key);
    };
    var _Lazy = Lazy;
    Lazy = resolver()(Lazy) || Lazy;
    return Lazy;
  })();
  exports.Lazy = Lazy;
  var All = (function() {
    function All(key) {
      _classCallCheck(this, _All);
      this._key = key;
    }
    All.prototype.get = function get(container) {
      return container.getAll(this._key);
    };
    All.of = function of(key) {
      return new All(key);
    };
    var _All = All;
    All = resolver()(All) || All;
    return All;
  })();
  exports.All = All;
  var Optional = (function() {
    function Optional(key) {
      var checkParent = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
      _classCallCheck(this, _Optional);
      this._key = key;
      this._checkParent = checkParent;
    }
    Optional.prototype.get = function get(container) {
      if (container.hasResolver(this._key, this._checkParent)) {
        return container.get(this._key);
      }
      return null;
    };
    Optional.of = function of(key) {
      var checkParent = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
      return new Optional(key, checkParent);
    };
    var _Optional = Optional;
    Optional = resolver()(Optional) || Optional;
    return Optional;
  })();
  exports.Optional = Optional;
  var Parent = (function() {
    function Parent(key) {
      _classCallCheck(this, _Parent);
      this._key = key;
    }
    Parent.prototype.get = function get(container) {
      return container.parent ? container.parent.get(this._key) : null;
    };
    Parent.of = function of(key) {
      return new Parent(key);
    };
    var _Parent = Parent;
    Parent = resolver()(Parent) || Parent;
    return Parent;
  })();
  exports.Parent = Parent;
  var StrategyResolver = (function() {
    function StrategyResolver(strategy, state) {
      _classCallCheck(this, _StrategyResolver);
      this.strategy = strategy;
      this.state = state;
    }
    StrategyResolver.prototype.get = function get(container, key) {
      switch (this.strategy) {
        case 0:
          return this.state;
        case 1:
          var singleton = container.invoke(this.state);
          this.state = singleton;
          this.strategy = 0;
          return singleton;
        case 2:
          return container.invoke(this.state);
        case 3:
          return this.state(container, key, this);
        case 4:
          return this.state[0].get(container, key);
        case 5:
          return container.get(this.state);
        default:
          throw new Error('Invalid strategy: ' + this.strategy);
      }
    };
    var _StrategyResolver = StrategyResolver;
    StrategyResolver = resolver()(StrategyResolver) || StrategyResolver;
    return StrategyResolver;
  })();
  exports.StrategyResolver = StrategyResolver;
  function invoker(value) {
    return function(target) {
      _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.invoker, value, target);
    };
  }
  function factory(potentialTarget) {
    var deco = function deco(target) {
      _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.invoker, FactoryInvoker.instance, target);
    };
    return potentialTarget ? deco(potentialTarget) : deco;
  }
  var FactoryInvoker = (function() {
    function FactoryInvoker() {
      _classCallCheck(this, FactoryInvoker);
    }
    FactoryInvoker.prototype.invoke = function invoke(container, fn, dependencies) {
      var i = dependencies.length;
      var args = new Array(i);
      while (i--) {
        args[i] = container.get(dependencies[i]);
      }
      return fn.apply(undefined, args);
    };
    FactoryInvoker.prototype.invokeWithDynamicDependencies = function invokeWithDynamicDependencies(container, fn, staticDependencies, dynamicDependencies) {
      var i = staticDependencies.length;
      var args = new Array(i);
      while (i--) {
        args[i] = container.get(staticDependencies[i]);
      }
      if (dynamicDependencies !== undefined) {
        args = args.concat(dynamicDependencies);
      }
      return fn.apply(undefined, args);
    };
    _createClass(FactoryInvoker, null, [{
      key: 'instance',
      value: new FactoryInvoker(),
      enumerable: true
    }]);
    return FactoryInvoker;
  })();
  exports.FactoryInvoker = FactoryInvoker;
  function registration(value) {
    return function(target) {
      _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.registration, value, target);
    };
  }
  function transient(key) {
    return registration(new TransientRegistration(key));
  }
  function singleton(keyOrRegisterInChild) {
    var registerInChild = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
    return registration(new SingletonRegistration(keyOrRegisterInChild, registerInChild));
  }
  var TransientRegistration = (function() {
    function TransientRegistration(key) {
      _classCallCheck(this, TransientRegistration);
      this._key = key;
    }
    TransientRegistration.prototype.registerResolver = function registerResolver(container, key, fn) {
      var resolver = new StrategyResolver(2, fn);
      container.registerResolver(this._key || key, resolver);
      return resolver;
    };
    return TransientRegistration;
  })();
  exports.TransientRegistration = TransientRegistration;
  var SingletonRegistration = (function() {
    function SingletonRegistration(keyOrRegisterInChild) {
      var registerInChild = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
      _classCallCheck(this, SingletonRegistration);
      if (typeof keyOrRegisterInChild === 'boolean') {
        this._registerInChild = keyOrRegisterInChild;
      } else {
        this._key = keyOrRegisterInChild;
        this._registerInChild = registerInChild;
      }
    }
    SingletonRegistration.prototype.registerResolver = function registerResolver(container, key, fn) {
      var resolver = new StrategyResolver(1, fn);
      if (this._registerInChild) {
        container.registerResolver(this._key || key, resolver);
      } else {
        container.root.registerResolver(this._key || key, resolver);
      }
      return resolver;
    };
    return SingletonRegistration;
  })();
  exports.SingletonRegistration = SingletonRegistration;
  var badKeyError = 'key/value cannot be null or undefined. Are you trying to inject/register something that doesn\'t exist with DI?';
  var _emptyParameters = Object.freeze([]);
  exports._emptyParameters = _emptyParameters;
  _aureliaMetadata.metadata.registration = 'aurelia:registration';
  _aureliaMetadata.metadata.invoker = 'aurelia:invoker';
  var resolverDecorates = resolver.decorates;
  var InvocationHandler = (function() {
    function InvocationHandler(fn, invoker, dependencies) {
      _classCallCheck(this, InvocationHandler);
      this.fn = fn;
      this.invoker = invoker;
      this.dependencies = dependencies;
    }
    InvocationHandler.prototype.invoke = function invoke(container, dynamicDependencies) {
      return dynamicDependencies !== undefined ? this.invoker.invokeWithDynamicDependencies(container, this.fn, this.dependencies, dynamicDependencies) : this.invoker.invoke(container, this.fn, this.dependencies);
    };
    return InvocationHandler;
  })();
  exports.InvocationHandler = InvocationHandler;
  function invokeWithDynamicDependencies(container, fn, staticDependencies, dynamicDependencies) {
    var i = staticDependencies.length;
    var args = new Array(i);
    while (i--) {
      args[i] = container.get(staticDependencies[i]);
    }
    if (dynamicDependencies !== undefined) {
      args = args.concat(dynamicDependencies);
    }
    return Reflect.construct(fn, args);
  }
  var classInvokers = (_classInvokers = {}, _classInvokers[0] = {
    invoke: function invoke(container, Type) {
      return new Type();
    },
    invokeWithDynamicDependencies: invokeWithDynamicDependencies
  }, _classInvokers[1] = {
    invoke: function invoke(container, Type, deps) {
      return new Type(container.get(deps[0]));
    },
    invokeWithDynamicDependencies: invokeWithDynamicDependencies
  }, _classInvokers[2] = {
    invoke: function invoke(container, Type, deps) {
      return new Type(container.get(deps[0]), container.get(deps[1]));
    },
    invokeWithDynamicDependencies: invokeWithDynamicDependencies
  }, _classInvokers[3] = {
    invoke: function invoke(container, Type, deps) {
      return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]));
    },
    invokeWithDynamicDependencies: invokeWithDynamicDependencies
  }, _classInvokers[4] = {
    invoke: function invoke(container, Type, deps) {
      return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]), container.get(deps[3]));
    },
    invokeWithDynamicDependencies: invokeWithDynamicDependencies
  }, _classInvokers[5] = {
    invoke: function invoke(container, Type, deps) {
      return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]), container.get(deps[3]), container.get(deps[4]));
    },
    invokeWithDynamicDependencies: invokeWithDynamicDependencies
  }, _classInvokers.fallback = {
    invoke: invokeWithDynamicDependencies,
    invokeWithDynamicDependencies: invokeWithDynamicDependencies
  }, _classInvokers);
  var Container = (function() {
    function Container(configuration) {
      _classCallCheck(this, Container);
      if (!configuration) {
        configuration = {};
      }
      this._configuration = configuration;
      this._onHandlerCreated = configuration.onHandlerCreated;
      this._handlers = configuration.handlers || (configuration.handlers = new Map());
      this._resolvers = new Map();
      this.root = this;
      this.parent = null;
    }
    Container.prototype.makeGlobal = function makeGlobal() {
      Container.instance = this;
      return this;
    };
    Container.prototype.setHandlerCreatedCallback = function setHandlerCreatedCallback(onHandlerCreated) {
      this._onHandlerCreated = onHandlerCreated;
      this._configuration.onHandlerCreated = onHandlerCreated;
    };
    Container.prototype.registerInstance = function registerInstance(key, instance) {
      this.registerResolver(key, new StrategyResolver(0, instance === undefined ? key : instance));
    };
    Container.prototype.registerSingleton = function registerSingleton(key, fn) {
      this.registerResolver(key, new StrategyResolver(1, fn === undefined ? key : fn));
    };
    Container.prototype.registerTransient = function registerTransient(key, fn) {
      this.registerResolver(key, new StrategyResolver(2, fn === undefined ? key : fn));
    };
    Container.prototype.registerHandler = function registerHandler(key, handler) {
      this.registerResolver(key, new StrategyResolver(3, handler));
    };
    Container.prototype.registerAlias = function registerAlias(originalKey, aliasKey) {
      this.registerResolver(aliasKey, new StrategyResolver(5, originalKey));
    };
    Container.prototype.registerResolver = function registerResolver(key, resolver) {
      if (key === null || key === undefined) {
        throw new Error(badKeyError);
      }
      var allResolvers = this._resolvers;
      var result = allResolvers.get(key);
      if (result === undefined) {
        allResolvers.set(key, resolver);
      } else if (result.strategy === 4) {
        result.state.push(resolver);
      } else {
        allResolvers.set(key, new StrategyResolver(4, [result, resolver]));
      }
    };
    Container.prototype.autoRegister = function autoRegister(fn, key) {
      var resolver = undefined;
      if (typeof fn === 'function') {
        var _registration = _aureliaMetadata.metadata.get(_aureliaMetadata.metadata.registration, fn);
        if (_registration === undefined) {
          resolver = new StrategyResolver(1, fn);
          this.registerResolver(key === undefined ? fn : key, resolver);
        } else {
          resolver = _registration.registerResolver(this, key === undefined ? fn : key, fn);
        }
      } else {
        resolver = new StrategyResolver(0, fn);
        this.registerResolver(key === undefined ? fn : key, resolver);
      }
      return resolver;
    };
    Container.prototype.autoRegisterAll = function autoRegisterAll(fns) {
      var i = fns.length;
      while (i--) {
        this.autoRegister(fns[i]);
      }
    };
    Container.prototype.unregister = function unregister(key) {
      this._resolvers['delete'](key);
    };
    Container.prototype.hasResolver = function hasResolver(key) {
      var checkParent = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
      if (key === null || key === undefined) {
        throw new Error(badKeyError);
      }
      return this._resolvers.has(key) || checkParent && this.parent !== null && this.parent.hasResolver(key, checkParent);
    };
    Container.prototype.get = function get(key) {
      if (key === null || key === undefined) {
        throw new Error(badKeyError);
      }
      if (key === Container) {
        return this;
      }
      if (resolverDecorates(key)) {
        return key.get(this, key);
      }
      var resolver = this._resolvers.get(key);
      if (resolver === undefined) {
        if (this.parent === null) {
          return this.autoRegister(key).get(this, key);
        }
        return this.parent._get(key);
      }
      return resolver.get(this, key);
    };
    Container.prototype._get = function _get(key) {
      var resolver = this._resolvers.get(key);
      if (resolver === undefined) {
        if (this.parent === null) {
          return this.autoRegister(key).get(this, key);
        }
        return this.parent._get(key);
      }
      return resolver.get(this, key);
    };
    Container.prototype.getAll = function getAll(key) {
      if (key === null || key === undefined) {
        throw new Error(badKeyError);
      }
      var resolver = this._resolvers.get(key);
      if (resolver === undefined) {
        if (this.parent === null) {
          return _emptyParameters;
        }
        return this.parent.getAll(key);
      }
      if (resolver.strategy === 4) {
        var state = resolver.state;
        var i = state.length;
        var results = new Array(i);
        while (i--) {
          results[i] = state[i].get(this, key);
        }
        return results;
      }
      return resolver.get(this, key);
    };
    Container.prototype.createChild = function createChild() {
      var child = new Container(this._configuration);
      child.root = this.root;
      child.parent = this;
      return child;
    };
    Container.prototype.invoke = function invoke(fn, dynamicDependencies) {
      try {
        var _handler = this._handlers.get(fn);
        if (_handler === undefined) {
          _handler = this._createInvocationHandler(fn);
          this._handlers.set(fn, _handler);
        }
        return _handler.invoke(this, dynamicDependencies);
      } catch (e) {
        throw new _aureliaPal.AggregateError('Error invoking ' + fn.name + '. Check the inner error for details.', e, true);
      }
    };
    Container.prototype._createInvocationHandler = function _createInvocationHandler(fn) {
      var dependencies = undefined;
      if (typeof fn.inject === 'function') {
        dependencies = fn.inject();
      } else if (fn.inject === undefined) {
        dependencies = _aureliaMetadata.metadata.getOwn(_aureliaMetadata.metadata.paramTypes, fn) || _emptyParameters;
      } else {
        dependencies = fn.inject;
      }
      var invoker = _aureliaMetadata.metadata.getOwn(_aureliaMetadata.metadata.invoker, fn) || classInvokers[dependencies.length] || classInvokers.fallback;
      var handler = new InvocationHandler(fn, invoker, dependencies);
      return this._onHandlerCreated !== undefined ? this._onHandlerCreated(handler) : handler;
    };
    return Container;
  })();
  exports.Container = Container;
  function autoinject(potentialTarget) {
    var deco = function deco(target) {
      target.inject = _aureliaMetadata.metadata.getOwn(_aureliaMetadata.metadata.paramTypes, target) || _emptyParameters;
    };
    return potentialTarget ? deco(potentialTarget) : deco;
  }
  function inject() {
    for (var _len = arguments.length,
        rest = Array(_len),
        _key = 0; _key < _len; _key++) {
      rest[_key] = arguments[_key];
    }
    return function(target, key, descriptor) {
      if (descriptor) {
        var _fn = descriptor.value;
        _fn.inject = rest;
      } else {
        target.inject = rest;
      }
    };
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-dependency-injection@1.0.0-beta.1.js", ["npm:aurelia-dependency-injection@1.0.0-beta.1/aurelia-dependency-injection.js"], function(main) {
  return main;
});

})();
System.registerDynamic("npm:core-js@0.9.18/client/shim.min.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  /* */
  "format cjs";

  var global = this || self,
      GLOBAL = global;
  (function (process) {
    !function (a) {
      "use strict";

      var b = null,
          c = null;
      !function (c) {
        function a(d) {
          if (b[d]) return b[d].exports;
          var e = b[d] = {
            exports: {},
            id: d,
            loaded: !1
          };
          return c[d].call(e.exports, e, e.exports, a), e.loaded = !0, e.exports;
        }
        var b = {};
        return a.m = c, a.c = b, a.p = "", a(0);
      }([function (b, c, a) {
        a(10), a(20), a(24), a(26), a(28), a(30), a(31), a(32), a(33), a(34), a(35), a(36), a(37), a(38), a(39), a(43), a(44), a(45), a(46), a(48), a(49), a(52), a(53), a(54), a(1), a(56), a(57), a(58), a(59), a(60), a(64), a(67), a(68), a(70), a(71), a(73), a(74), a(75), a(77), a(78), a(79), a(80), a(81), a(83), a(84), a(85), a(86), a(88);
      }, function (f, g, b) {
        var c = b(2),
            e = b(4),
            d = c.toIndex;
        e(e.P, "Array", { copyWithin: function (k, l) {
            var f = Object(c.assertDefined(this)),
                g = c.toLength(f.length),
                b = d(k, g),
                e = d(l, g),
                j = arguments[2],
                m = j === a ? g : d(j, g),
                h = Math.min(m - e, g - b),
                i = 1;
            for (b > e && e + h > b && (i = -1, e = e + h - 1, b = b + h - 1); h-- > 0;) e in f ? f[b] = f[e] : delete f[b], b += i, e += i;
            return f;
          } }), b(7)("copyWithin");
      }, function (w, x, v) {
        function e(a) {
          return isNaN(a = +a) ? 0 : (a > 0 ? r : q)(a);
        }
        function h(a, b) {
          return {
            enumerable: !(1 & a),
            configurable: !(2 & a),
            writable: !(4 & a),
            value: b
          };
        }
        function i(a, b, c) {
          return a[b] = c, a;
        }
        function j(a) {
          return k ? function (b, c, d) {
            return g.setDesc(b, c, h(a, d));
          } : i;
        }
        function u(a) {
          return null !== a && ("object" == typeof a || "function" == typeof a);
        }
        function t(a) {
          return "function" == typeof a;
        }
        function m(b) {
          if (b == a) throw TypeError("Can't call method on  " + b);
          return b;
        }
        var d = "undefined" != typeof self ? self : Function("return this")(),
            o = {},
            n = Object.defineProperty,
            p = {}.hasOwnProperty,
            q = Math.ceil,
            r = Math.floor,
            s = Math.max,
            l = Math.min,
            k = !!function () {
          try {
            return 2 == n({}, "a", { get: function () {
                return 2;
              } }).a;
          } catch (a) {}
        }(),
            f = j(1),
            g = w.exports = v(3)({
          g: d,
          core: o,
          html: d.document && document.documentElement,
          isObject: u,
          isFunction: t,
          that: function () {
            return this;
          },
          toInteger: e,
          toLength: function (a) {
            return a > 0 ? l(e(a), 9007199254740991) : 0;
          },
          toIndex: function (a, b) {
            return a = e(a), 0 > a ? s(a + b, 0) : l(a, b);
          },
          has: function (a, b) {
            return p.call(a, b);
          },
          create: Object.create,
          getProto: Object.getPrototypeOf,
          DESC: k,
          desc: h,
          getDesc: Object.getOwnPropertyDescriptor,
          setDesc: n,
          setDescs: Object.defineProperties,
          getKeys: Object.keys,
          getNames: Object.getOwnPropertyNames,
          getSymbols: Object.getOwnPropertySymbols,
          assertDefined: m,
          ES5Object: Object,
          toObject: function (a) {
            return g.ES5Object(m(a));
          },
          hide: f,
          def: j(0),
          set: d.Symbol ? i : f,
          each: [].forEach
        });
        a !== b && (b = o), a !== c && (c = d);
      }, function (a) {
        a.exports = function (a) {
          return a.FW = !0, a.path = a.g, a;
        };
      }, function (g, j, e) {
        function f(a, b) {
          return function () {
            return a.apply(b, arguments);
          };
        }
        function a(k, l, p) {
          var g,
              m,
              e,
              q,
              o = k & a.G,
              r = k & a.P,
              j = o ? b : k & a.S ? b[l] : (b[l] || {}).prototype,
              n = o ? d : d[l] || (d[l] = {});
          o && (p = l);
          for (g in p) m = !(k & a.F) && j && g in j, e = (m ? j : p)[g], q = k & a.B && m ? f(e, b) : r && h(e) ? f(Function.call, e) : e, j && !m && i(j, g, e), n[g] != e && c.hide(n, g, q), r && ((n.prototype || (n.prototype = {}))[g] = e);
        }
        var c = e(2),
            b = c.g,
            d = c.core,
            h = c.isFunction,
            i = e(5);
        b.core = d, a.F = 1, a.G = 2, a.S = 4, a.P = 8, a.B = 16, a.W = 32, g.exports = a;
      }, function (f, h, c) {
        function d(e, c, d, h) {
          if (a.isFunction(d)) {
            var f = e[c];
            a.hide(d, b, f ? f + "" : g.replace(/hasOwnProperty/, c + "")), "name" in d || (d.name = c);
          }
          e === a.g ? e[c] = d : (h || delete e[c], a.hide(e, c, d));
        }
        var a = c(2),
            g = {}.hasOwnProperty + "",
            b = c(6).safe("src"),
            e = Function.toString;
        d(Function.prototype, "toString", function () {
          return a.has(this, b) ? this[b] : e.call(this);
        }), a.core.inspectSource = function (a) {
          return e.call(a);
        }, f.exports = d;
      }, function (c, f, d) {
        function b(b) {
          return "Symbol(".concat(b === a ? "" : b, ")_", (++e + Math.random()).toString(36));
        }
        var e = 0;
        b.safe = d(2).g.Symbol || b, c.exports = b;
      }, function (c, d, b) {
        var a = b(8)("unscopables");
        a in [] || b(2).hide(Array.prototype, a, {}), c.exports = function (b) {
          [][a][b] = !0;
        };
      }, function (d, e, a) {
        var b = a(2).g,
            c = a(9)("wks");
        d.exports = function (d) {
          return c[d] || (c[d] = b.Symbol && b.Symbol[d] || a(6).safe("Symbol." + d));
        };
      }, function (d, f, e) {
        var a = e(2),
            b = "__core-js_shared__",
            c = a.g[b] || (a.g[b] = {});
        d.exports = function (a) {
          return c[a] || (c[a] = {});
        };
      }, function (U, T, d) {
        function F(a, b) {
          return function (g) {
            var c,
                e = t(g),
                f = 0,
                d = [];
            for (c in e) c != m && l(e, c) && d.push(c);
            for (; b > f;) l(e, c = a[f++]) && (~D(d, c) || d.push(c));
            return d;
          };
        }
        function s() {}
        function C(a) {
          return function (h, d) {
            i.fn(h);
            var c = t(this),
                e = f(c.length),
                b = a ? e - 1 : 0,
                g = a ? -1 : 1;
            if (arguments.length < 2) for (;;) {
              if (b in c) {
                d = c[b], b += g;
                break;
              }
              b += g, i(a ? b >= 0 : e > b, "Reduce of empty array with no initial value");
            }
            for (; a ? b >= 0 : e > b; b += g) b in c && (d = h(d, c[b], b, this));
            return d;
          };
        }
        function e(a) {
          return a > 9 ? a : "0" + a;
        }
        var b = d(2),
            A = d(11),
            g = d(12),
            c = d(4),
            O = d(13),
            h = d(14),
            m = d(6).safe("__proto__"),
            i = d(16),
            p = i.obj,
            y = Object.prototype,
            q = b.html,
            v = [],
            j = v.slice,
            P = v.join,
            z = g.classof,
            l = b.has,
            I = b.setDesc,
            Q = b.getDesc,
            u = b.setDescs,
            x = b.isFunction,
            o = b.isObject,
            t = b.toObject,
            f = b.toLength,
            B = b.toIndex,
            r = !1,
            D = d(17)(!1),
            R = h(0),
            J = h(1),
            K = h(2),
            L = h(3),
            M = h(4);
        if (!b.DESC) {
          try {
            r = 8 == I(A("div"), "x", { get: function () {
                return 8;
              } }).x;
          } catch (S) {}
          b.setDesc = function (b, c, a) {
            if (r) try {
              return I(b, c, a);
            } catch (d) {}
            if ("get" in a || "set" in a) throw TypeError("Accessors not supported!");
            return "value" in a && (p(b)[c] = a.value), b;
          }, b.getDesc = function (c, d) {
            if (r) try {
              return Q(c, d);
            } catch (e) {}
            return l(c, d) ? b.desc(!y.propertyIsEnumerable.call(c, d), c[d]) : a;
          }, b.setDescs = u = function (a, c) {
            p(a);
            for (var d, e = b.getKeys(c), g = e.length, f = 0; g > f;) b.setDesc(a, d = e[f++], c[d]);
            return a;
          };
        }
        c(c.S + c.F * !b.DESC, "Object", {
          getOwnPropertyDescriptor: b.getDesc,
          defineProperty: b.setDesc,
          defineProperties: u
        });
        var n = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(","),
            G = n.concat("length", "prototype"),
            H = n.length,
            k = function () {
          var a,
              b = A("iframe"),
              c = H,
              d = ">";
          for (b.style.display = "none", q.appendChild(b), b.src = "javascript:", a = b.contentWindow.document, a.open(), a.write("<script>document.F=Object</script" + d), a.close(), k = a.F; c--;) delete k.prototype[n[c]];
          return k();
        };
        c(c.S, "Object", {
          getPrototypeOf: b.getProto = b.getProto || function (a) {
            return a = Object(i.def(a)), l(a, m) ? a[m] : x(a.constructor) && a instanceof a.constructor ? a.constructor.prototype : a instanceof Object ? y : null;
          },
          getOwnPropertyNames: b.getNames = b.getNames || F(G, G.length, !0),
          create: b.create = b.create || function (c, d) {
            var b;
            return null !== c ? (s.prototype = p(c), b = new s(), s.prototype = null, b[m] = c) : b = k(), d === a ? b : u(b, d);
          },
          keys: b.getKeys = b.getKeys || F(n, H, !1),
          seal: function (a) {
            return a;
          },
          freeze: function (a) {
            return a;
          },
          preventExtensions: function (a) {
            return a;
          },
          isSealed: function (a) {
            return !o(a);
          },
          isFrozen: function (a) {
            return !o(a);
          },
          isExtensible: function (a) {
            return o(a);
          }
        }), c(c.P, "Function", { bind: function (d) {
            function c() {
              var h = e.concat(j.call(arguments)),
                  f = this instanceof c,
                  g = f ? b.create(a.prototype) : d,
                  i = O(a, h, g);
              return f ? g : i;
            }
            var a = i.fn(this),
                e = j.call(arguments, 1);
            return a.prototype && (c.prototype = a.prototype), c;
          } }), 0 in Object("z") && "z" == "z"[0] || (b.ES5Object = function (a) {
          return "String" == g(a) ? a.split("") : Object(a);
        });
        var E = !0;
        try {
          q && j.call(q), E = !1;
        } catch (S) {}
        c(c.P + c.F * E, "Array", { slice: function (h, b) {
            var d = f(this.length),
                i = g(this);
            if (b = b === a ? d : b, "Array" == i) return j.call(this, h, b);
            for (var e = B(h, d), m = B(b, d), k = f(m - e), l = Array(k), c = 0; k > c; c++) l[c] = "String" == i ? this.charAt(e + c) : this[e + c];
            return l;
          } }), c(c.P + c.F * (b.ES5Object != Object), "Array", { join: function () {
            return P.apply(b.ES5Object(this), arguments);
          } }), c(c.S, "Array", { isArray: function (a) {
            return "Array" == g(a);
          } }), c(c.P, "Array", {
          forEach: b.each = b.each || function (a) {
            return R(this, a, arguments[1]);
          },
          map: function (a) {
            return J(this, a, arguments[1]);
          },
          filter: function (a) {
            return K(this, a, arguments[1]);
          },
          some: function (a) {
            return L(this, a, arguments[1]);
          },
          every: function (a) {
            return M(this, a, arguments[1]);
          },
          reduce: C(!1),
          reduceRight: C(!0),
          indexOf: function (a) {
            return D(this, a, arguments[1]);
          },
          lastIndexOf: function (e, g) {
            var c = t(this),
                d = f(c.length),
                a = d - 1;
            for (arguments.length > 1 && (a = Math.min(a, b.toInteger(g))), 0 > a && (a = f(d + a)); a >= 0; a--) if (a in c && c[a] === e) return a;
            return -1;
          }
        }), c(c.P, "String", { trim: d(18)(/^\s*([\s\S]*\S)?\s*$/, "$1") }), c(c.S, "Date", { now: function () {
            return +new Date();
          } });
        var w = new Date(-5e13 - 1),
            N = !(w.toISOString && "0385-07-25T07:06:39.999Z" == w.toISOString() && d(19)(function () {
          new Date(NaN).toISOString();
        }));
        c(c.P + c.F * N, "Date", { toISOString: function () {
            if (!isFinite(this)) throw RangeError("Invalid time value");
            var a = this,
                b = a.getUTCFullYear(),
                c = a.getUTCMilliseconds(),
                d = 0 > b ? "-" : b > 9999 ? "+" : "";
            return d + ("00000" + Math.abs(b)).slice(d ? -6 : -4) + "-" + e(a.getUTCMonth() + 1) + "-" + e(a.getUTCDate()) + "T" + e(a.getUTCHours()) + ":" + e(a.getUTCMinutes()) + ":" + e(a.getUTCSeconds()) + "." + (c > 99 ? c : "0" + e(c)) + "Z";
          } }), "Object" == z(function () {
          return arguments;
        }()) && (g.classof = function (a) {
          var b = z(a);
          return "Object" == b && x(a.callee) ? "Arguments" : b;
        });
      }, function (d, g, e) {
        var b = e(2),
            a = b.g.document,
            c = b.isObject,
            f = c(a) && c(a.createElement);
        d.exports = function (b) {
          return f ? a.createElement(b) : {};
        };
      }, function (f, h, d) {
        function b(a) {
          return g.call(a).slice(8, -1);
        }
        var e = d(2),
            c = d(8)("toStringTag"),
            g = {}.toString;
        b.classof = function (d) {
          var e, f;
          return d == a ? d === a ? "Undefined" : "Null" : "string" == typeof (f = (e = Object(d))[c]) ? f : b(e);
        }, b.set = function (a, b, d) {
          a && !e.has(a = d ? a : a.prototype, c) && e.hide(a, c, b);
        }, f.exports = b;
      }, function (b) {
        b.exports = function (c, b, d) {
          var e = d === a;
          switch (b.length) {
            case 0:
              return e ? c() : c.call(d);
            case 1:
              return e ? c(b[0]) : c.call(d, b[0]);
            case 2:
              return e ? c(b[0], b[1]) : c.call(d, b[0], b[1]);
            case 3:
              return e ? c(b[0], b[1], b[2]) : c.call(d, b[0], b[1], b[2]);
            case 4:
              return e ? c(b[0], b[1], b[2], b[3]) : c.call(d, b[0], b[1], b[2], b[3]);
            case 5:
              return e ? c(b[0], b[1], b[2], b[3], b[4]) : c.call(d, b[0], b[1], b[2], b[3], b[4]);
          }
          return c.apply(d, b);
        };
      }, function (d, f, c) {
        var b = c(2),
            e = c(15);
        d.exports = function (c) {
          var f = 1 == c,
              h = 2 == c,
              i = 3 == c,
              d = 4 == c,
              g = 6 == c,
              j = 5 == c || g;
          return function (u, s, t) {
            for (var l, n, q = Object(b.assertDefined(u)), o = b.ES5Object(q), r = e(s, t, 3), p = b.toLength(o.length), k = 0, m = f ? Array(p) : h ? [] : a; p > k; k++) if ((j || k in o) && (l = o[k], n = r(l, k, q), c)) if (f) m[k] = n;else if (n) switch (c) {
              case 3:
                return !0;
              case 5:
                return l;
              case 6:
                return k;
              case 2:
                m.push(l);
            } else if (d) return !1;
            return g ? -1 : i || d ? d : m;
          };
        };
      }, function (b, e, c) {
        var d = c(16).fn;
        b.exports = function (b, c, e) {
          if (d(b), ~e && c === a) return b;
          switch (e) {
            case 1:
              return function (a) {
                return b.call(c, a);
              };
            case 2:
              return function (a, d) {
                return b.call(c, a, d);
              };
            case 3:
              return function (a, d, e) {
                return b.call(c, a, d, e);
              };
          }
          return function () {
            return b.apply(c, arguments);
          };
        };
      }, function (c, e, d) {
        function a(c, a, b) {
          if (!c) throw TypeError(b ? a + b : a);
        }
        var b = d(2);
        a.def = b.assertDefined, a.fn = function (a) {
          if (!b.isFunction(a)) throw TypeError(a + " is not a function!");
          return a;
        }, a.obj = function (a) {
          if (!b.isObject(a)) throw TypeError(a + " is not an object!");
          return a;
        }, a.inst = function (a, b, c) {
          if (!(a instanceof b)) throw TypeError(c + ": use the 'new' operator!");
          return a;
        }, c.exports = a;
      }, function (b, d, c) {
        var a = c(2);
        b.exports = function (b) {
          return function (h, e, i) {
            var f,
                d = a.toObject(h),
                g = a.toLength(d.length),
                c = a.toIndex(i, g);
            if (b && e != e) {
              for (; g > c;) if (f = d[c++], f != f) return !0;
            } else for (; g > c; c++) if ((b || c in d) && d[c] === e) return b || c;
            return !b && -1;
          };
        };
      }, function (a) {
        a.exports = function (b, a, c) {
          var d = a === Object(a) ? function (b) {
            return a[b];
          } : a;
          return function (a) {
            return ((c ? a : this) + "").replace(b, d);
          };
        };
      }, function (a) {
        a.exports = function (a) {
          try {
            return a(), !1;
          } catch (b) {
            return !0;
          }
        };
      }, function (O, N, e) {
        function G(a) {
          var e = i[a] = b.set(k(f.prototype), H, a);
          return w && l && o(j, a, {
            configurable: !0,
            set: function (b) {
              d(this, c) && d(this[c], a) && (this[c][a] = !1), o(this, a, r(1, b));
            }
          }), e;
        }
        function t(a, b, e) {
          return e && d(i, b) ? (e.enumerable ? (d(a, c) && a[c][b] && (a[c][b] = !1), e = k(e, { enumerable: r(0, !1) })) : (d(a, c) || g(a, c, r(1, {})), a[c][b] = !0), o(a, b, e)) : g(a, b, e);
        }
        function q(a, b) {
          J(a);
          for (var c, d = K(b = n(b)), e = 0, f = d.length; f > e;) t(a, c = d[e++], b[c]);
          return a;
        }
        function v(b, c) {
          return c === a ? k(b) : q(k(b), c);
        }
        function M(a) {
          var b = I.call(this, a);
          return b || !d(this, a) || !d(i, a) || d(this, c) && this[c][a] ? b : !0;
        }
        function A(a, b) {
          var e = z(a = n(a), b);
          return !e || !d(i, b) || d(a, c) && a[c][b] || (e.enumerable = !0), e;
        }
        function E(g) {
          for (var a, b = D(n(g)), e = [], f = 0; b.length > f;) d(i, a = b[f++]) || a == c || e.push(a);
          return e;
        }
        function F(f) {
          for (var a, b = D(n(f)), c = [], e = 0; b.length > e;) d(i, a = b[e++]) && c.push(i[a]);
          return c;
        }
        var b = e(2),
            s = e(12).set,
            p = e(6),
            y = e(9),
            h = e(4),
            B = e(5),
            L = e(21),
            K = e(22),
            J = e(16).obj,
            j = Object.prototype,
            w = b.DESC,
            d = b.has,
            k = b.create,
            z = b.getDesc,
            g = b.setDesc,
            r = b.desc,
            C = e(23),
            D = C.get,
            n = b.toObject,
            f = b.g.Symbol,
            l = !1,
            H = p("tag"),
            c = p("hidden"),
            I = {}.propertyIsEnumerable,
            m = y("symbol-registry"),
            i = y("symbols"),
            u = b.isFunction(f),
            o = w ? function () {
          try {
            return k(g({}, c, { get: function () {
                return g(this, c, { value: !1 })[c];
              } }))[c] || g;
          } catch (a) {
            return function (c, a, d) {
              var b = z(j, a);
              b && delete j[a], g(c, a, d), b && c !== j && g(j, a, b);
            };
          }
        }() : g;
        u || (f = function () {
          if (this instanceof f) throw TypeError("Symbol is not a constructor");
          return G(p(arguments[0]));
        }, B(f.prototype, "toString", function () {
          return this[H];
        }), b.create = v, b.setDesc = t, b.getDesc = A, b.setDescs = q, b.getNames = C.get = E, b.getSymbols = F, b.DESC && b.FW && B(j, "propertyIsEnumerable", M, !0));
        var x = {
          "for": function (a) {
            return d(m, a += "") ? m[a] : m[a] = f(a);
          },
          keyFor: function (a) {
            return L(m, a);
          },
          useSetter: function () {
            l = !0;
          },
          useSimple: function () {
            l = !1;
          }
        };
        b.each.call("hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), function (a) {
          var b = e(8)(a);
          x[a] = u ? b : G(b);
        }), l = !0, h(h.G + h.W, { Symbol: f }), h(h.S, "Symbol", x), h(h.S + h.F * !u, "Object", {
          create: v,
          defineProperty: t,
          defineProperties: q,
          getOwnPropertyDescriptor: A,
          getOwnPropertyNames: E,
          getOwnPropertySymbols: F
        }), s(f, "Symbol"), s(Math, "Math", !0), s(b.g.JSON, "JSON", !0);
      }, function (b, d, c) {
        var a = c(2);
        b.exports = function (f, g) {
          for (var b, c = a.toObject(f), d = a.getKeys(c), h = d.length, e = 0; h > e;) if (c[b = d[e++]] === g) return b;
        };
      }, function (b, d, c) {
        var a = c(2);
        b.exports = function (b) {
          var c = a.getKeys(b),
              e = a.getDesc,
              d = a.getSymbols;
          return d && a.each.call(d(b), function (a) {
            e(b, a).enumerable && c.push(a);
          }), c;
        };
      }, function (d, h, e) {
        function f(a) {
          try {
            return b(a);
          } catch (d) {
            return c.slice();
          }
        }
        var a = e(2),
            g = {}.toString,
            b = a.getNames,
            c = "object" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
        d.exports.get = function (d) {
          return c && "[object Window]" == g.call(d) ? f(d) : b(a.toObject(d));
        };
      }, function (c, d, a) {
        var b = a(4);
        b(b.S, "Object", { assign: a(25) });
      }, function (c, e, a) {
        var b = a(2),
            d = a(22);
        c.exports = Object.assign || function (i) {
          for (var a = Object(b.assertDefined(i)), j = arguments.length, c = 1; j > c;) for (var e, f = b.ES5Object(arguments[c++]), g = d(f), k = g.length, h = 0; k > h;) a[e = g[h++]] = f[e];
          return a;
        };
      }, function (c, d, a) {
        var b = a(4);
        b(b.S, "Object", { is: a(27) });
      }, function (a) {
        a.exports = Object.is || function (a, b) {
          return a === b ? 0 !== a || 1 / a === 1 / b : a != a && b != b;
        };
      }, function (c, d, a) {
        var b = a(4);
        b(b.S, "Object", { setPrototypeOf: a(29).set });
      }, function (f, g, b) {
        function c(b, a) {
          e.obj(b), e(null === a || d.isObject(a), a, ": can't set as prototype!");
        }
        var d = b(2),
            e = b(16);
        f.exports = {
          set: Object.setPrototypeOf || ("__proto__" in {} ? function (e, a) {
            try {
              a = b(15)(Function.call, d.getDesc(Object.prototype, "__proto__").set, 2), a({}, []);
            } catch (f) {
              e = !0;
            }
            return function (b, d) {
              return c(b, d), e ? b.__proto__ = d : a(b, d), b;
            };
          }() : a),
          check: c
        };
      }, function (d, e, a) {
        var b = a(12),
            c = {};
        c[a(8)("toStringTag")] = "z", a(2).FW && "z" != b(c) && a(5)(Object.prototype, "toString", function () {
          return "[object " + b.classof(this) + "]";
        }, !0);
      }, function (f, g, c) {
        var b = c(2),
            d = c(4),
            a = b.isObject,
            e = b.toObject;
        b.each.call("freeze,seal,preventExtensions,isFrozen,isSealed,isExtensible,getOwnPropertyDescriptor,getPrototypeOf,keys,getOwnPropertyNames".split(","), function (h, g) {
          var f = (b.core.Object || {})[h] || Object[h],
              i = 0,
              j = {};
          j[h] = 0 == g ? function (b) {
            return a(b) ? f(b) : b;
          } : 1 == g ? function (b) {
            return a(b) ? f(b) : b;
          } : 2 == g ? function (b) {
            return a(b) ? f(b) : b;
          } : 3 == g ? function (b) {
            return a(b) ? f(b) : !0;
          } : 4 == g ? function (b) {
            return a(b) ? f(b) : !0;
          } : 5 == g ? function (b) {
            return a(b) ? f(b) : !1;
          } : 6 == g ? function (a, b) {
            return f(e(a), b);
          } : 7 == g ? function (a) {
            return f(Object(b.assertDefined(a)));
          } : 8 == g ? function (a) {
            return f(e(a));
          } : c(23).get;
          try {
            f("z");
          } catch (k) {
            i = 1;
          }
          d(d.S + d.F * i, "Object", j);
        });
      }, function (f, g, e) {
        var a = e(2),
            b = "name",
            c = a.setDesc,
            d = Function.prototype;
        b in d || a.FW && a.DESC && c(d, b, {
          configurable: !0,
          get: function () {
            var d = (this + "").match(/^\s*function ([^ (]*)/),
                e = d ? d[1] : "";
            return a.has(this, b) || c(this, b, a.desc(5, e)), e;
          },
          set: function (d) {
            a.has(this, b) || c(this, b, a.desc(0, d));
          }
        });
      }, function (e, f, b) {
        var a = b(2),
            c = b(8)("hasInstance"),
            d = Function.prototype;
        c in d || a.setDesc(d, c, { value: function (b) {
            if (!a.isFunction(this) || !a.isObject(b)) return !1;
            if (!a.isObject(this.prototype)) return b instanceof this;
            for (; b = a.getProto(b);) if (this.prototype === b) return !0;
            return !1;
          } });
      }, function (l, k, f) {
        function j(a) {
          var b, c;
          if (h(b = a.valueOf) && !d(c = b.call(a))) return c;
          if (h(b = a.toString) && !d(c = b.call(a))) return c;
          throw TypeError("Can't convert object to number");
        }
        function e(a) {
          if (d(a) && (a = j(a)), "string" == typeof a && a.length > 2 && 48 == a.charCodeAt(0)) {
            var b = !1;
            switch (a.charCodeAt(1)) {
              case 66:
              case 98:
                b = !0;
              case 79:
              case 111:
                return parseInt(a.slice(2), b ? 2 : 8);
            }
          }
          return +a;
        }
        var a = f(2),
            d = a.isObject,
            h = a.isFunction,
            i = "Number",
            b = a.g[i],
            c = b,
            g = b.prototype;
        !a.FW || b("0o1") && b("0b1") || (b = function (a) {
          return this instanceof b ? new c(e(a)) : e(a);
        }, a.each.call(a.DESC ? a.getNames(c) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), function (d) {
          a.has(c, d) && !a.has(b, d) && a.setDesc(b, d, a.getDesc(c, d));
        }), b.prototype = g, g.constructor = b, f(5)(a.g, i, b));
      }, function (i, j, b) {
        function c(a) {
          return !d.isObject(a) && f(a) && h(a) === a;
        }
        var d = b(2),
            e = b(4),
            g = Math.abs,
            h = Math.floor,
            f = d.g.isFinite,
            a = 9007199254740991;
        e(e.S, "Number", {
          EPSILON: Math.pow(2, -52),
          isFinite: function (a) {
            return "number" == typeof a && f(a);
          },
          isInteger: c,
          isNaN: function (a) {
            return a != a;
          },
          isSafeInteger: function (b) {
            return c(b) && g(b) <= a;
          },
          MAX_SAFE_INTEGER: a,
          MIN_SAFE_INTEGER: -a,
          parseFloat: parseFloat,
          parseInt: parseInt
        });
      }, function (u, t, r) {
        function q(a) {
          return a + 1 / k - 1 / k;
        }
        function l(a) {
          return 0 == (a = +a) || a != a ? a : 0 > a ? -1 : 1;
        }
        function n(b) {
          return isFinite(b = +b) && 0 != b ? 0 > b ? -n(-b) : a(b + g(b * b + 1)) : b;
        }
        function d(a) {
          return 0 == (a = +a) ? a : a > -1e-6 && 1e-6 > a ? a + a * a / 2 : b(a) - 1;
        }
        var e = 1 / 0,
            m = r(4),
            j = Math.E,
            c = Math.pow,
            h = Math.abs,
            b = Math.exp,
            a = Math.log,
            g = Math.sqrt,
            p = Math.ceil,
            o = Math.floor,
            k = c(2, -52),
            f = c(2, -23),
            s = c(2, 127) * (2 - f),
            i = c(2, -126);
        m(m.S, "Math", {
          acosh: function (b) {
            return (b = +b) < 1 ? NaN : isFinite(b) ? a(b / j + g(b + 1) * g(b - 1) / j) + 1 : b;
          },
          asinh: n,
          atanh: function (b) {
            return 0 == (b = +b) ? b : a((1 + b) / (1 - b)) / 2;
          },
          cbrt: function (a) {
            return l(a = +a) * c(h(a), 1 / 3);
          },
          clz32: function (b) {
            return (b >>>= 0) ? 31 - o(a(b + .5) * Math.LOG2E) : 32;
          },
          cosh: function (a) {
            return (b(a = +a) + b(-a)) / 2;
          },
          expm1: d,
          fround: function (g) {
            var c,
                a,
                b = h(g),
                d = l(g);
            return i > b ? d * q(b / i / f) * i * f : (c = (1 + f / k) * b, a = c - (c - b), a > s || a != a ? d * e : d * a);
          },
          hypot: function () {
            for (var a, b, d = 0, f = 0, i = arguments.length, c = 0; i > f;) a = h(arguments[f++]), a > c ? (b = c / a, d = d * b * b + 1, c = a) : a > 0 ? (b = a / c, d += b * b) : d += a;
            return c === e ? e : c * g(d);
          },
          imul: function (f, g) {
            var a = 65535,
                b = +f,
                c = +g,
                d = a & b,
                e = a & c;
            return 0 | d * e + ((a & b >>> 16) * e + d * (a & c >>> 16) << 16 >>> 0);
          },
          log1p: function (b) {
            return (b = +b) > -1e-8 && 1e-8 > b ? b - b * b / 2 : a(1 + b);
          },
          log10: function (b) {
            return a(b) / Math.LN10;
          },
          log2: function (b) {
            return a(b) / Math.LN2;
          },
          sign: l,
          sinh: function (a) {
            return h(a = +a) < 1 ? (d(a) - d(-a)) / 2 : (b(a - 1) - b(-a - 1)) * (j / 2);
          },
          tanh: function (a) {
            var c = d(a = +a),
                f = d(-a);
            return c == e ? 1 : f == e ? -1 : (c - f) / (b(a) + b(-a));
          },
          trunc: function (a) {
            return (a > 0 ? o : p)(a);
          }
        });
      }, function (f, g, b) {
        var a = b(4),
            e = b(2).toIndex,
            c = String.fromCharCode,
            d = String.fromCodePoint;
        a(a.S + a.F * (!!d && 1 != d.length), "String", { fromCodePoint: function () {
            for (var a, b = [], f = arguments.length, d = 0; f > d;) {
              if (a = +arguments[d++], e(a, 1114111) !== a) throw RangeError(a + " is not a valid code point");
              b.push(65536 > a ? c(a) : c(((a -= 65536) >> 10) + 55296, a % 1024 + 56320));
            }
            return b.join("");
          } });
      }, function (d, e, a) {
        var b = a(2),
            c = a(4);
        c(c.S, "String", { raw: function (e) {
            for (var d = b.toObject(e.raw), f = b.toLength(d.length), g = arguments.length, c = [], a = 0; f > a;) c.push(d[a++] + ""), g > a && c.push(arguments[a] + "");
            return c.join("");
          } });
      }, function (g, h, a) {
        var d = a(2).set,
            e = a(40)(!0),
            b = a(6).safe("iter"),
            f = a(41),
            c = f.step;
        a(42)(String, "String", function (a) {
          d(this, b, {
            o: a + "",
            i: 0
          });
        }, function () {
          var a,
              d = this[b],
              f = d.o,
              g = d.i;
          return g >= f.length ? c(1) : (a = e(f, g), d.i += a.length, c(0, a));
        });
      }, function (c, e, d) {
        var b = d(2);
        c.exports = function (c) {
          return function (i, j) {
            var e,
                g,
                f = b.assertDefined(i) + "",
                d = b.toInteger(j),
                h = f.length;
            return 0 > d || d >= h ? c ? "" : a : (e = f.charCodeAt(d), 55296 > e || e > 56319 || d + 1 === h || (g = f.charCodeAt(d + 1)) < 56320 || g > 57343 ? c ? f.charAt(d) : e : c ? f.slice(d, d + 2) : (e - 55296 << 10) + (g - 56320) + 65536);
          };
        };
      }, function (m, n, c) {
        function h(a, c) {
          b.hide(a, f, c), d in [] && b.hide(a, d, c);
        }
        var b = c(2),
            k = c(12),
            g = k.classof,
            i = c(16),
            l = i.obj,
            f = c(8)("iterator"),
            d = "@@iterator",
            e = c(9)("iterators"),
            j = {};
        h(j, b.that), m.exports = {
          BUGGY: "keys" in [] && !("next" in [].keys()),
          Iterators: e,
          step: function (a, b) {
            return {
              value: b,
              done: !!a
            };
          },
          is: function (h) {
            var a = Object(h),
                c = b.g.Symbol;
            return (c && c.iterator || d) in a || f in a || b.has(e, g(a));
          },
          get: function (c) {
            var h,
                j = b.g.Symbol;
            return c != a && (h = c[j && j.iterator || d] || c[f] || e[g(c)]), i(b.isFunction(h), c, " is not iterable!"), l(h.call(c));
          },
          set: h,
          create: function (a, c, d, e) {
            a.prototype = b.create(e || j, { next: b.desc(1, d) }), k.set(a, c + " Iterator");
          }
        };
      }, function (k, m, a) {
        var e = a(4),
            j = a(5),
            b = a(2),
            l = a(12),
            c = a(41),
            i = a(8)("iterator"),
            g = "@@iterator",
            h = "keys",
            d = "values",
            f = c.Iterators;
        k.exports = function (r, o, s, y, m, x, v) {
          function n(b) {
            function a(a) {
              return new s(a, b);
            }
            switch (b) {
              case h:
                return function () {
                  return a(this);
                };
              case d:
                return function () {
                  return a(this);
                };
            }
            return function () {
              return a(this);
            };
          }
          c.create(s, o, y);
          var p,
              q,
              u = o + " Iterator",
              a = r.prototype,
              t = a[i] || a[g] || m && a[m],
              k = t || n(m);
          if (t) {
            var w = b.getProto(k.call(new r()));
            l.set(w, u, !0), b.FW && b.has(a, g) && c.set(w, b.that);
          }
          if ((b.FW || v) && c.set(a, k), f[o] = k, f[u] = b.that, m) if (p = {
            keys: x ? k : n(h),
            values: m == d ? k : n(d),
            entries: m != d ? k : n("entries")
          }, v) for (q in p) q in a || j(a, q, p[q]);else e(e.P + e.F * c.BUGGY, o, p);
        };
      }, function (d, e, a) {
        var b = a(4),
            c = a(40)(!1);
        b(b.P, "String", { codePointAt: function (a) {
            return c(this, a);
          } });
      }, function (g, h, b) {
        var d = b(2),
            f = b(12),
            c = b(4),
            e = d.toLength;
        c(c.P + c.F * !b(19)(function () {
          "q".endsWith(/./);
        }), "String", { endsWith: function (b) {
            if ("RegExp" == f(b)) throw TypeError();
            var c = d.assertDefined(this) + "",
                g = arguments[1],
                h = e(c.length),
                i = g === a ? h : Math.min(e(g), h);
            return b += "", c.slice(i - b.length, i) === b;
          } });
      }, function (e, f, a) {
        var c = a(2),
            d = a(12),
            b = a(4);
        b(b.P, "String", { includes: function (a) {
            if ("RegExp" == d(a)) throw TypeError();
            return !!~(c.assertDefined(this) + "").indexOf(a, arguments[1]);
          } });
      }, function (c, d, a) {
        var b = a(4);
        b(b.P, "String", { repeat: a(47) });
      }, function (b, d, c) {
        var a = c(2);
        b.exports = function (e) {
          var c = a.assertDefined(this) + "",
              d = "",
              b = a.toInteger(e);
          if (0 > b || b == 1 / 0) throw RangeError("Count can't be negative");
          for (; b > 0; (b >>>= 1) && (c += c)) 1 & b && (d += c);
          return d;
        };
      }, function (e, f, a) {
        var c = a(2),
            d = a(12),
            b = a(4);
        b(b.P + b.F * !a(19)(function () {
          "q".startsWith(/./);
        }), "String", { startsWith: function (a) {
            if ("RegExp" == d(a)) throw TypeError();
            var b = c.assertDefined(this) + "",
                e = c.toLength(Math.min(arguments[1], b.length));
            return a += "", b.slice(e, e + a.length) === a;
          } });
      }, function (h, i, b) {
        var d = b(2),
            f = b(15),
            c = b(4),
            e = b(41),
            g = b(50);
        c(c.S + c.F * !b(51)(function (a) {
          Array.from(a);
        }), "Array", { from: function (o) {
            var l,
                c,
                i,
                j,
                h = Object(d.assertDefined(o)),
                m = arguments[1],
                k = m !== a,
                n = k ? f(m, arguments[2], 2) : a,
                b = 0;
            if (e.is(h)) for (j = e.get(h), c = new ("function" == typeof this ? this : Array)(); !(i = j.next()).done; b++) c[b] = k ? g(j, n, [i.value, b], !0) : i.value;else for (c = new ("function" == typeof this ? this : Array)(l = d.toLength(h.length)); l > b; b++) c[b] = k ? n(h[b], b) : h[b];
            return c.length = b, c;
          } });
      }, function (e, g, f) {
        function b(b) {
          var c = b["return"];
          c !== a && d(c.call(b));
        }
        function c(e, c, a, f) {
          try {
            return f ? c(d(a)[0], a[1]) : c(a);
          } catch (g) {
            throw b(e), g;
          }
        }
        var d = f(16).obj;
        c.close = b, e.exports = c;
      }, function (d, f, e) {
        var a = e(8)("iterator"),
            b = !1;
        try {
          var c = [7][a]();
          c["return"] = function () {
            b = !0;
          }, Array.from(c, function () {
            throw 2;
          });
        } catch (g) {}
        d.exports = function (f) {
          if (!b) return !1;
          var d = !1;
          try {
            var c = [7],
                e = c[a]();
            e.next = function () {
              d = !0;
            }, c[a] = function () {
              return e;
            }, f(c);
          } catch (g) {}
          return d;
        };
      }, function (c, d, b) {
        var a = b(4);
        a(a.S, "Array", { of: function () {
            for (var a = 0, b = arguments.length, c = new ("function" == typeof this ? this : Array)(b); b > a;) c[a] = arguments[a++];
            return c.length = b, c;
          } });
      }, function (i, j, b) {
        var e = b(2),
            d = b(7),
            f = b(6).safe("iter"),
            g = b(41),
            c = g.step,
            h = g.Iterators;
        b(42)(Array, "Array", function (a, b) {
          e.set(this, f, {
            o: e.toObject(a),
            i: 0,
            k: b
          });
        }, function () {
          var d = this[f],
              e = d.o,
              g = d.k,
              b = d.i++;
          return !e || b >= e.length ? (d.o = a, c(1)) : "keys" == g ? c(0, b) : "values" == g ? c(0, e[b]) : c(0, [b, e[b]]);
        }, "values"), h.Arguments = h.Array, d("keys"), d("values"), d("entries");
      }, function (b, c, a) {
        a(55)(Array);
      }, function (d, e, b) {
        var a = b(2),
            c = b(8)("species");
        d.exports = function (b) {
          !a.DESC || c in b || a.setDesc(b, c, {
            configurable: !0,
            get: a.that
          });
        };
      }, function (f, g, b) {
        var c = b(2),
            d = b(4),
            e = c.toIndex;
        d(d.P, "Array", { fill: function (h) {
            for (var b = Object(c.assertDefined(this)), d = c.toLength(b.length), f = e(arguments[1], d), g = arguments[2], i = g === a ? d : e(g, d); i > f;) b[f++] = h;
            return b;
          } }), b(7)("fill");
      }, function (f, g, a) {
        var b = "find",
            c = a(4),
            d = !0,
            e = a(14)(5);
        b in [] && Array(1)[b](function () {
          d = !1;
        }), c(c.P + c.F * d, "Array", { find: function (a) {
            return e(this, a, arguments[1]);
          } }), a(7)(b);
      }, function (f, g, a) {
        var b = "findIndex",
            c = a(4),
            d = !0,
            e = a(14)(6);
        b in [] && Array(1)[b](function () {
          d = !1;
        }), c(c.P + c.F * d, "Array", { findIndex: function (a) {
            return e(this, a, arguments[1]);
          } }), a(7)(b);
      }, function (l, k, d) {
        var c = d(2),
            j = d(12),
            b = c.g.RegExp,
            e = b,
            f = b.prototype,
            g = /a/g,
            h = new b(g) !== g,
            i = function () {
          try {
            return "/a/i" == b(g, "i");
          } catch (a) {}
        }();
        c.FW && c.DESC && (h && i || (b = function (c, f) {
          var d = "RegExp" == j(c),
              g = f === a;
          return this instanceof b || !d || !g ? h ? new e(d && !g ? c.source : c, f) : new e(d ? c.source : c, d && g ? c.flags : f) : c;
        }, c.each.call(c.getNames(e), function (a) {
          a in b || c.setDesc(b, a, {
            configurable: !0,
            get: function () {
              return e[a];
            },
            set: function (b) {
              e[a] = b;
            }
          });
        }), f.constructor = b, b.prototype = f, d(5)(c.g, "RegExp", b)), "g" != /./g.flags && c.setDesc(f, "flags", {
          configurable: !0,
          get: d(18)(/^.*\/(\w*)$/, "$1")
        })), d(55)(b);
      }, function (J, I, c) {
        function y(c) {
          var a = new b(function () {});
          return c && (a.constructor = Object), b.resolve(a) === a;
        }
        function H(a) {
          return D(a) && (h ? "Promise" == q.classof(a) : m in a);
        }
        function F(a, c) {
          return e.FW || a !== b || c !== z ? E(a, c) : !0;
        }
        function n(b) {
          var c = o(b)[w];
          return c != a ? c : b;
        }
        function C(b) {
          var a;
          return D(b) && (a = b.then), j(a) ? a : !1;
        }
        function p(a) {
          var b = a.c;
          b.length && r.call(g, function () {
            function f(b) {
              var e,
                  g,
                  f = d ? b.ok : b.fail;
              try {
                f ? (d || (a.h = !0), e = f === !0 ? c : f(c), e === b.P ? b.rej(TypeError("Promise-chain cycle")) : (g = C(e)) ? g.call(e, b.res, b.rej) : b.res(e)) : b.rej(c);
              } catch (h) {
                b.rej(h);
              }
            }
            for (var c = a.v, d = 1 == a.s, e = 0; b.length > e;) f(b[e++]);
            b.length = 0;
          });
        }
        function B(e) {
          var a,
              b = e[m],
              c = b.a || b.c,
              d = 0;
          if (b.h) return !1;
          for (; c.length > d;) if (a = c[d++], a.fail || !B(a.P)) return !1;
          return !0;
        }
        function i(c) {
          var d,
              b = this;
          b.d || (b.d = !0, b = b.r || b, b.v = c, b.s = 2, b.a = b.c.slice(), setTimeout(function () {
            r.call(g, function () {
              B(d = b.p) && (G ? k.emit("unhandledRejection", c, d) : g.console && console.error && console.error("Unhandled promise rejection", c)), b.a = a;
            });
          }, 1), p(b));
        }
        function A(b) {
          var c,
              a = this;
          if (!a.d) {
            a.d = !0, a = a.r || a;
            try {
              (c = C(b)) ? r.call(g, function () {
                var d = {
                  r: a,
                  d: !1
                };
                try {
                  c.call(b, l(A, d, 1), l(i, d, 1));
                } catch (e) {
                  i.call(d, e);
                }
              }) : (a.v = b, a.s = 1, p(a));
            } catch (d) {
              i.call({
                r: a,
                d: !1
              }, d);
            }
          }
        }
        var z,
            e = c(2),
            l = c(15),
            q = c(12),
            d = c(4),
            t = c(16),
            x = c(61),
            u = c(29).set,
            E = c(27),
            v = c(55),
            w = c(8)("species"),
            m = c(6).safe("record"),
            f = "Promise",
            g = e.g,
            k = g.process,
            G = "process" == q(k),
            r = k && k.nextTick || c(62).set,
            b = g[f],
            j = e.isFunction,
            D = e.isObject,
            s = t.fn,
            o = t.obj,
            h = function () {
          function a(d) {
            var c = new b(d);
            return u(c, a.prototype), c;
          }
          var c = !1;
          try {
            if (c = j(b) && j(b.resolve) && y(), u(a, b), a.prototype = e.create(b.prototype, { constructor: { value: a } }), a.resolve(5).then(function () {}) instanceof a || (c = !1), c && e.DESC) {
              var d = !1;
              b.resolve(e.setDesc({}, "then", { get: function () {
                  d = !0;
                } })), c = d;
            }
          } catch (f) {
            c = !1;
          }
          return c;
        }();
        h || (b = function (d) {
          s(d);
          var c = {
            p: t.inst(this, b, f),
            c: [],
            a: a,
            s: 0,
            d: !1,
            v: a,
            h: !1
          };
          e.hide(this, m, c);
          try {
            d(l(A, c, 1), l(i, c, 1));
          } catch (g) {
            i.call(c, g);
          }
        }, c(63)(b.prototype, {
          then: function (e, f) {
            var g = o(o(this).constructor)[w],
                c = {
              ok: j(e) ? e : !0,
              fail: j(f) ? f : !1
            },
                h = c.P = new (g != a ? g : b)(function (a, b) {
              c.res = s(a), c.rej = s(b);
            }),
                d = this[m];
            return d.c.push(c), d.a && d.a.push(c), d.s && p(d), h;
          },
          "catch": function (b) {
            return this.then(a, b);
          }
        })), d(d.G + d.W + d.F * !h, { Promise: b }), q.set(b, f), v(b), v(z = e.core[f]), d(d.S + d.F * !h, f, { reject: function (a) {
            return new (n(this))(function (c, b) {
              b(a);
            });
          } }), d(d.S + d.F * (!h || y(!0)), f, { resolve: function (a) {
            return H(a) && F(a.constructor, this) ? a : new this(function (b) {
              b(a);
            });
          } }), d(d.S + d.F * !(h && c(51)(function (a) {
          b.all(a)["catch"](function () {});
        })), f, {
          all: function (c) {
            var b = n(this),
                a = [];
            return new b(function (g, h) {
              x(c, !1, a.push, a);
              var d = a.length,
                  f = Array(d);
              d ? e.each.call(a, function (a, c) {
                b.resolve(a).then(function (a) {
                  f[c] = a, --d || g(f);
                }, h);
              }) : g(f);
            });
          },
          race: function (b) {
            var a = n(this);
            return new a(function (c, d) {
              x(b, !1, function (b) {
                a.resolve(b).then(c, d);
              });
            });
          }
        });
      }, function (c, f, a) {
        var d = a(15),
            e = a(41).get,
            b = a(50);
        c.exports = function (g, c, h, i) {
          for (var f, a = e(g), j = d(h, i, c ? 2 : 1); !(f = a.next()).done;) if (b(a, j, f.value, c) === !1) return b.close(a);
        };
      }, function (t, w, d) {
        function f() {
          var a = +this;
          if (g.has(b, a)) {
            var c = b[a];
            delete b[a], c();
          }
        }
        function q(a) {
          f.call(a.data);
        }
        var c,
            l,
            m,
            g = d(2),
            i = d(15),
            u = d(12),
            v = d(13),
            p = d(11),
            a = g.g,
            e = g.isFunction,
            n = g.html,
            o = a.process,
            k = a.setImmediate,
            h = a.clearImmediate,
            r = a.MessageChannel,
            j = 0,
            b = {},
            s = "onreadystatechange";
        e(k) && e(h) || (k = function (a) {
          for (var d = [], f = 1; arguments.length > f;) d.push(arguments[f++]);
          return b[++j] = function () {
            v(e(a) ? a : Function(a), d);
          }, c(j), j;
        }, h = function (a) {
          delete b[a];
        }, "process" == u(o) ? c = function (a) {
          o.nextTick(i(f, a, 1));
        } : a.addEventListener && e(a.postMessage) && !a.importScripts ? (c = function (b) {
          a.postMessage(b, "*");
        }, a.addEventListener("message", q, !1)) : e(r) ? (l = new r(), m = l.port2, l.port1.onmessage = q, c = i(m.postMessage, m, 1)) : c = s in p("script") ? function (a) {
          n.appendChild(p("script"))[s] = function () {
            n.removeChild(this), f.call(a);
          };
        } : function (a) {
          setTimeout(i(f, a, 1), 0);
        }), t.exports = {
          set: k,
          clear: h
        };
      }, function (a, d, b) {
        var c = b(5);
        a.exports = function (a, b) {
          for (var d in b) c(a, d, b[d]);
          return a;
        };
      }, function (c, d, b) {
        var a = b(65);
        b(66)("Map", function (a) {
          return function () {
            return a(this, arguments[0]);
          };
        }, {
          get: function (c) {
            var b = a.getEntry(this, c);
            return b && b.v;
          },
          set: function (b, c) {
            return a.def(this, 0 === b ? 0 : b, c);
          }
        }, a, !0);
      }, function (t, x, c) {
        function m(a, b) {
          if (!p(a)) return "symbol" == typeof a ? a : ("string" == typeof a ? "S" : "P") + a;
          if (!q(a, l)) {
            if (!v(a)) return "F";
            if (!b) return "E";
            u(a, l, ++w);
          }
          return "O" + a[l];
        }
        function k(c, d) {
          var a,
              e = m(d);
          if ("F" !== e) return c[h][e];
          for (a = c[b]; a; a = a.n) if (a.k == d) return a;
        }
        var d = c(2),
            r = c(15),
            e = c(6).safe,
            o = c(16),
            s = c(61),
            j = c(41).step,
            q = d.has,
            g = d.set,
            p = d.isObject,
            u = d.hide,
            v = Object.isExtensible || p,
            l = e("id"),
            h = e("O1"),
            f = e("last"),
            b = e("first"),
            n = e("iter"),
            i = d.DESC ? e("size") : "size",
            w = 0;
        t.exports = {
          getConstructor: function (j, l, m, n) {
            var e = j(function (c, j) {
              o.inst(c, e, l), g(c, h, d.create(null)), g(c, i, 0), g(c, f, a), g(c, b, a), j != a && s(j, m, c[n], c);
            });
            return c(63)(e.prototype, {
              clear: function () {
                for (var d = this, e = d[h], c = d[b]; c; c = c.n) c.r = !0, c.p && (c.p = c.p.n = a), delete e[c.i];
                d[b] = d[f] = a, d[i] = 0;
              },
              "delete": function (g) {
                var c = this,
                    a = k(c, g);
                if (a) {
                  var d = a.n,
                      e = a.p;
                  delete c[h][a.i], a.r = !0, e && (e.n = d), d && (d.p = e), c[b] == a && (c[b] = d), c[f] == a && (c[f] = e), c[i]--;
                }
                return !!a;
              },
              forEach: function (c) {
                for (var a, d = r(c, arguments[1], 3); a = a ? a.n : this[b];) for (d(a.v, a.k, this); a && a.r;) a = a.p;
              },
              has: function (a) {
                return !!k(this, a);
              }
            }), d.DESC && d.setDesc(e.prototype, "size", { get: function () {
                return o.def(this[i]);
              } }), e;
          },
          def: function (c, e, l) {
            var g,
                j,
                d = k(c, e);
            return d ? d.v = l : (c[f] = d = {
              i: j = m(e, !0),
              k: e,
              v: l,
              p: g = c[f],
              n: a,
              r: !1
            }, c[b] || (c[b] = d), g && (g.n = d), c[i]++, "F" !== j && (c[h][j] = d)), c;
          },
          getEntry: k,
          setIter: function (e, f, d) {
            c(42)(e, f, function (a, b) {
              g(this, n, {
                o: a,
                k: b
              });
            }, function () {
              for (var d = this[n], e = d.k, c = d.l; c && c.r;) c = c.p;
              return d.o && (d.l = c = c ? c.n : d.o[b]) ? "keys" == e ? j(0, c.k) : "values" == e ? j(0, c.v) : j(0, [c.k, c.v]) : (d.o = a, j(1));
            }, d ? "entries" : "values", !d, !0);
          }
        };
      }, function (f, j, b) {
        var d = b(2),
            c = b(4),
            g = b(41).BUGGY,
            h = b(61),
            e = b(55),
            i = b(16).inst;
        f.exports = function (j, s, v, u, l, m) {
          function n(a) {
            var c = k[a];
            b(5)(k, a, "delete" == a ? function (a) {
              return c.call(this, 0 === a ? 0 : a);
            } : "has" == a ? function (a) {
              return c.call(this, 0 === a ? 0 : a);
            } : "get" == a ? function (a) {
              return c.call(this, 0 === a ? 0 : a);
            } : "add" == a ? function (a) {
              return c.call(this, 0 === a ? 0 : a), this;
            } : function (a, b) {
              return c.call(this, 0 === a ? 0 : a, b), this;
            });
          }
          var p = d.g[j],
              f = p,
              o = l ? "set" : "add",
              k = f && f.prototype,
              t = {};
          if (d.isFunction(f) && (m || !g && k.forEach && k.entries)) {
            var r,
                q = new f(),
                w = q[o](m ? {} : -0, 1);
            b(51)(function (a) {
              new f(a);
            }) || (f = s(function (d, c) {
              i(d, f, j);
              var b = new p();
              return c != a && h(c, l, b[o], b), b;
            }), f.prototype = k, k.constructor = f), m || q.forEach(function (b, a) {
              r = 1 / a === -(1 / 0);
            }), r && (n("delete"), n("has"), l && n("get")), (r || w !== q) && n(o);
          } else f = u.getConstructor(s, j, l, o), b(63)(f.prototype, v);
          return b(12).set(f, j), t[j] = f, c(c.G + c.W + c.F * (f != p), t), e(f), e(d.core[j]), m || u.setIter(f, j, l), f;
        };
      }, function (c, d, a) {
        var b = a(65);
        a(66)("Set", function (a) {
          return function () {
            return a(this, arguments[0]);
          };
        }, { add: function (a) {
            return b.def(this, a = 0 === a ? 0 : a, a);
          } }, b);
      }, function (m, l, b) {
        var c = b(2),
            a = b(69),
            f = a.leakStore,
            j = a.ID,
            h = a.WEAK,
            k = c.has,
            d = c.isObject,
            i = Object.isExtensible || d,
            g = {},
            e = b(66)("WeakMap", function (a) {
          return function () {
            return a(this, arguments[0]);
          };
        }, {
          get: function (a) {
            if (d(a)) {
              if (!i(a)) return f(this).get(a);
              if (k(a, h)) return a[h][this[j]];
            }
          },
          set: function (b, c) {
            return a.def(this, b, c);
          }
        }, a, !0, !0);
        7 != new e().set((Object.freeze || Object)(g), 7).get(g) && c.each.call(["delete", "has", "get", "set"], function (a) {
          var c = e.prototype,
              g = c[a];
          b(5)(c, a, function (b, c) {
            if (d(b) && !i(b)) {
              var e = f(this)[a](b, c);
              return "set" == a ? this : e;
            }
            return g.call(this, b, c);
          });
        });
      }, function (r, u, c) {
        function j(a, b) {
          return p(a.array, function (a) {
            return a[0] === b;
          });
        }
        function f(b) {
          return b[h] || m(b, h, {
            array: [],
            get: function (c) {
              var b = j(this, c);
              return b ? b[1] : a;
            },
            has: function (a) {
              return !!j(this, a);
            },
            set: function (a, b) {
              var c = j(this, a);
              c ? c[1] = b : this.array.push([a, b]);
            },
            "delete": function (b) {
              var a = t(this.array, function (a) {
                return a[0] === b;
              });
              return ~a && this.array.splice(a, 1), !!~a;
            }
          })[h];
        }
        var g = c(2),
            l = c(6).safe,
            n = c(16),
            q = c(61),
            e = g.has,
            i = g.isObject,
            m = g.hide,
            k = Object.isExtensible || i,
            s = 0,
            d = l("id"),
            b = l("weak"),
            h = l("leak"),
            o = c(14),
            p = o(5),
            t = o(6);
        r.exports = {
          getConstructor: function (j, l, m, o) {
            var h = j(function (b, c) {
              g.set(n.inst(b, h, l), d, s++), c != a && q(c, m, b[o], b);
            });
            return c(63)(h.prototype, {
              "delete": function (a) {
                return i(a) ? k(a) ? e(a, b) && e(a[b], this[d]) && delete a[b][this[d]] : f(this)["delete"](a) : !1;
              },
              has: function (a) {
                return i(a) ? k(a) ? e(a, b) && e(a[b], this[d]) : f(this).has(a) : !1;
              }
            }), h;
          },
          def: function (c, a, g) {
            return k(n.obj(a)) ? (e(a, b) || m(a, b, {}), a[b][c[d]] = g) : f(c).set(a, g), c;
          },
          leakStore: f,
          WEAK: b,
          ID: d
        };
      }, function (c, d, a) {
        var b = a(69);
        a(66)("WeakSet", function (a) {
          return function () {
            return a(this, arguments[0]);
          };
        }, { add: function (a) {
            return b.def(this, a, !0);
          } }, b, !1, !0);
      }, function (v, u, d) {
        function l(c) {
          b.set(this, k, {
            o: c,
            k: a,
            i: 0
          });
        }
        var b = d(2),
            e = d(4),
            g = d(29),
            o = d(41),
            s = d(8)("iterator"),
            k = d(6).safe("iter"),
            j = o.step,
            m = d(16),
            f = b.isObject,
            h = b.getProto,
            i = b.g.Reflect,
            q = Function.apply,
            c = m.obj,
            r = Object.isExtensible || f,
            p = Object.preventExtensions,
            t = !(i && i.enumerate && s in i.enumerate({}));
        o.create(l, "Object", function () {
          var d,
              b = this[k],
              c = b.k;
          if (c == a) {
            b.k = c = [];
            for (d in b.o) c.push(d);
          }
          do if (b.i >= c.length) return j(1); while (!((d = c[b.i++]) in b.o));
          return j(0, d);
        });
        var n = {
          apply: function (a, b, c) {
            return q.call(a, b, c);
          },
          construct: function (a, g) {
            var c = m.fn(arguments.length < 3 ? a : arguments[2]).prototype,
                d = b.create(f(c) ? c : Object.prototype),
                e = q.call(a, d, g);
            return f(e) ? e : d;
          },
          defineProperty: function (a, d, e) {
            c(a);
            try {
              return b.setDesc(a, d, e), !0;
            } catch (f) {
              return !1;
            }
          },
          deleteProperty: function (a, d) {
            var e = b.getDesc(c(a), d);
            return e && !e.configurable ? !1 : delete a[d];
          },
          get: function w(e, g) {
            var i,
                j = arguments.length < 3 ? e : arguments[2],
                d = b.getDesc(c(e), g);
            return d ? b.has(d, "value") ? d.value : d.get === a ? a : d.get.call(j) : f(i = h(e)) ? w(i, g, j) : a;
          },
          getOwnPropertyDescriptor: function (a, d) {
            return b.getDesc(c(a), d);
          },
          getPrototypeOf: function (a) {
            return h(c(a));
          },
          has: function (a, b) {
            return b in a;
          },
          isExtensible: function (a) {
            return r(c(a));
          },
          ownKeys: d(72),
          preventExtensions: function (a) {
            c(a);
            try {
              return p && p(a), !0;
            } catch (b) {
              return !1;
            }
          },
          set: function x(i, g, j) {
            var k,
                l,
                e = arguments.length < 4 ? i : arguments[3],
                d = b.getDesc(c(i), g);
            if (!d) {
              if (f(l = h(i))) return x(l, g, j, e);
              d = b.desc(0);
            }
            return b.has(d, "value") ? d.writable !== !1 && f(e) ? (k = b.getDesc(e, g) || b.desc(0), k.value = j, b.setDesc(e, g, k), !0) : !1 : d.set === a ? !1 : (d.set.call(e, j), !0);
          }
        };
        g && (n.setPrototypeOf = function (a, b) {
          g.check(a, b);
          try {
            return g.set(a, b), !0;
          } catch (c) {
            return !1;
          }
        }), e(e.G, { Reflect: {} }), e(e.S + e.F * t, "Reflect", { enumerate: function (a) {
            return new l(c(a));
          } }), e(e.S, "Reflect", n);
      }, function (c, e, a) {
        var b = a(2),
            d = a(16).obj;
        c.exports = function (a) {
          d(a);
          var c = b.getNames(a),
              e = b.getSymbols;
          return e ? c.concat(e(a)) : c;
        };
      }, function (d, e, a) {
        var b = a(4),
            c = a(17)(!0);
        b(b.P, "Array", { includes: function (a) {
            return c(this, a, arguments[1]);
          } }), a(7)("includes");
      }, function (d, e, a) {
        var b = a(4),
            c = a(40)(!0);
        b(b.P, "String", { at: function (a) {
            return c(this, a);
          } });
      }, function (d, e, a) {
        var b = a(4),
            c = a(76);
        b(b.P, "String", { lpad: function (a) {
            return c(this, a, arguments[1], !0);
          } });
      }, function (d, f, b) {
        var c = b(2),
            e = b(47);
        d.exports = function (k, g, h, i) {
          var f = c.assertDefined(k) + "";
          if (g === a) return f;
          var l = c.toInteger(g),
              d = l - f.length;
          if (0 > d || d === 1 / 0) throw new RangeError("Cannot satisfy string length " + g + " for string: " + f);
          var j = h === a ? " " : h + "",
              b = e.call(j, Math.ceil(d / j.length));
          return b.length > d && (b = i ? b.slice(b.length - d) : b.slice(0, d)), i ? b.concat(f) : f.concat(b);
        };
      }, function (d, e, a) {
        var b = a(4),
            c = a(76);
        b(b.P, "String", { rpad: function (a) {
            return c(this, a, arguments[1], !1);
          } });
      }, function (c, d, a) {
        var b = a(4);
        b(b.S, "RegExp", { escape: a(18)(/[\\^$*+?.()|[\]{}]/g, "\\$&", !0) });
      }, function (e, f, b) {
        var a = b(2),
            c = b(4),
            d = b(72);
        c(c.S, "Object", { getOwnPropertyDescriptors: function (e) {
            var b = a.toObject(e),
                c = {};
            return a.each.call(d(b), function (d) {
              a.setDesc(c, d, a.desc(0, a.getDesc(b, d)));
            }), c;
          } });
      }, function (e, f, a) {
        function b(a) {
          return function (i) {
            var h,
                d = c.toObject(i),
                e = c.getKeys(d),
                f = e.length,
                b = 0,
                g = Array(f);
            if (a) for (; f > b;) g[b] = [h = e[b++], d[h]];else for (; f > b;) g[b] = d[e[b++]];
            return g;
          };
        }
        var c = a(2),
            d = a(4);
        d(d.S, "Object", {
          values: b(!1),
          entries: b(!0)
        });
      }, function (b, c, a) {
        a(82)("Map");
      }, function (c, e, a) {
        var b = a(4),
            d = a(61);
        c.exports = function (a) {
          b(b.P, a, { toJSON: function () {
              var a = [];
              return d(this, !1, a.push, a), a;
            } });
        };
      }, function (b, c, a) {
        a(82)("Set");
      }, function (d, e, b) {
        var a = b(4),
            c = b(62);
        a(a.G + a.B, {
          setImmediate: c.set,
          clearImmediate: c.clear
        });
      }, function (k, j, c) {
        c(53);
        var a = c(2),
            d = c(41).Iterators,
            b = c(8)("iterator"),
            e = d.Array,
            f = a.g.NodeList,
            g = a.g.HTMLCollection,
            h = f && f.prototype,
            i = g && g.prototype;
        a.FW && (!f || b in h || a.hide(h, b, e), !g || b in i || a.hide(i, b, e)), d.NodeList = d.HTMLCollection = e;
      }, function (i, j, a) {
        function d(a) {
          return f ? function (c, d) {
            return a(g(h, [].slice.call(arguments, 2), b.isFunction(c) ? c : Function(c)), d);
          } : a;
        }
        var b = a(2),
            c = a(4),
            g = a(13),
            h = a(87),
            e = b.g.navigator,
            f = !!e && /MSIE .\./.test(e.userAgent);
        c(c.G + c.B + c.F * f, {
          setTimeout: d(b.g.setTimeout),
          setInterval: d(b.g.setInterval)
        });
      }, function (c, f, a) {
        var d = a(2),
            b = a(13),
            e = a(16).fn;
        c.exports = function () {
          for (var h = e(this), a = arguments.length, c = Array(a), f = 0, i = d.path._, g = !1; a > f;) (c[f] = arguments[f++]) === i && (g = !0);
          return function () {
            var d,
                j = this,
                k = arguments.length,
                e = 0,
                f = 0;
            if (!g && !k) return b(h, c, j);
            if (d = c.slice(), g) for (; a > e; e++) d[e] === i && (d[e] = arguments[f++]);
            for (; k > f;) d.push(arguments[f++]);
            return b(h, d, j);
          };
        };
      }, function (h, i, b) {
        function c(f, c) {
          e.each.call(f.split(","), function (e) {
            c == a && e in g ? d[e] = g[e] : e in [] && (d[e] = b(15)(Function.call, [][e], c));
          });
        }
        var e = b(2),
            f = b(4),
            g = e.core.Array || Array,
            d = {};
        c("pop,reverse,shift,keys,values,entries", 1), c("indexOf,every,some,forEach,map,filter,find,findIndex,includes", 3), c("join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill,turn"), f(f.S, "Array", d);
      }]), "undefined" != typeof module && module.exports ? module.exports = b : "function" == typeof undefined && define.amd ? define(function () {
        return b;
      }) : c.core = b;
    }();
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:core-js@0.9.18.js", ["npm:core-js@0.9.18/client/shim.min.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:core-js@0.9.18/client/shim.min.js");
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-path@1.0.0-beta.1/aurelia-path.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  exports.relativeToFile = relativeToFile;
  exports.join = join;
  exports.buildQueryString = buildQueryString;
  exports.parseQueryString = parseQueryString;
  function trimDots(ary) {
    for (var i = 0; i < ary.length; ++i) {
      var part = ary[i];
      if (part === '.') {
        ary.splice(i, 1);
        i -= 1;
      } else if (part === '..') {
        if (i === 0 || i === 1 && ary[2] === '..' || ary[i - 1] === '..') {
          continue;
        } else if (i > 0) {
          ary.splice(i - 1, 2);
          i -= 2;
        }
      }
    }
  }
  function relativeToFile(name, file) {
    var fileParts = file && file.split('/');
    var nameParts = name.trim().split('/');
    if (nameParts[0].charAt(0) === '.' && fileParts) {
      var normalizedBaseParts = fileParts.slice(0, fileParts.length - 1);
      nameParts.unshift.apply(nameParts, normalizedBaseParts);
    }
    trimDots(nameParts);
    return nameParts.join('/');
  }
  function join(path1, path2) {
    if (!path1) {
      return path2;
    }
    if (!path2) {
      return path1;
    }
    var schemeMatch = path1.match(/^([^/]*?:)\//);
    var scheme = schemeMatch && schemeMatch.length > 0 ? schemeMatch[1] : '';
    path1 = path1.substr(scheme.length);
    var urlPrefix = undefined;
    if (path1.indexOf('///') === 0 && scheme === 'file:') {
      urlPrefix = '///';
    } else if (path1.indexOf('//') === 0) {
      urlPrefix = '//';
    } else if (path1.indexOf('/') === 0) {
      urlPrefix = '/';
    } else {
      urlPrefix = '';
    }
    var trailingSlash = path2.slice(-1) === '/' ? '/' : '';
    var url1 = path1.split('/');
    var url2 = path2.split('/');
    var url3 = [];
    for (var i = 0,
        ii = url1.length; i < ii; ++i) {
      if (url1[i] === '..') {
        url3.pop();
      } else if (url1[i] === '.' || url1[i] === '') {
        continue;
      } else {
        url3.push(url1[i]);
      }
    }
    for (var i = 0,
        ii = url2.length; i < ii; ++i) {
      if (url2[i] === '..') {
        url3.pop();
      } else if (url2[i] === '.' || url2[i] === '') {
        continue;
      } else {
        url3.push(url2[i]);
      }
    }
    return scheme + urlPrefix + url3.join('/') + trailingSlash;
  }
  function buildQueryString(params) {
    var pairs = [];
    var keys = Object.keys(params || {}).sort();
    var encode = encodeURIComponent;
    var encodeKey = function encodeKey(k) {
      return encode(k).replace('%24', '$');
    };
    for (var i = 0,
        len = keys.length; i < len; i++) {
      var key = keys[i];
      var value = params[key];
      if (value === null || value === undefined) {
        continue;
      }
      if (Array.isArray(value)) {
        var arrayKey = encodeKey(key) + '[]';
        for (var j = 0,
            l = value.length; j < l; j++) {
          pairs.push(arrayKey + '=' + encode(value[j]));
        }
      } else {
        pairs.push(encodeKey(key) + '=' + encode(value));
      }
    }
    if (pairs.length === 0) {
      return '';
    }
    return pairs.join('&');
  }
  function parseQueryString(queryString) {
    var queryParams = {};
    if (!queryString || typeof queryString !== 'string') {
      return queryParams;
    }
    var query = queryString;
    if (query.charAt(0) === '?') {
      query = query.substr(1);
    }
    var pairs = query.split('&');
    for (var i = 0; i < pairs.length; i++) {
      var pair = pairs[i].split('=');
      var key = decodeURIComponent(pair[0]);
      var keyLength = key.length;
      var isArray = false;
      var value = undefined;
      if (!key) {
        continue;
      } else if (pair.length === 1) {
        value = true;
      } else {
        if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {
          isArray = true;
          key = key.slice(0, keyLength - 2);
          if (!queryParams[key]) {
            queryParams[key] = [];
          }
        }
        value = pair[1] ? decodeURIComponent(pair[1]) : '';
      }
      if (isArray) {
        queryParams[key].push(value);
      } else {
        queryParams[key] = value;
      }
    }
    return queryParams;
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-path@1.0.0-beta.1.js", ["npm:aurelia-path@1.0.0-beta.1/aurelia-path.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-loader@1.0.0-beta.1/aurelia-loader.js", ["exports", "npm:core-js@0.9.18.js", "npm:aurelia-path@1.0.0-beta.1.js", "npm:aurelia-metadata@1.0.0-beta.1.js"], function(exports, _coreJs, _aureliaPath, _aureliaMetadata) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var TemplateDependency = function TemplateDependency(src, name) {
    _classCallCheck(this, TemplateDependency);
    this.src = src;
    this.name = name;
  };
  exports.TemplateDependency = TemplateDependency;
  var TemplateRegistryEntry = (function() {
    function TemplateRegistryEntry(address) {
      _classCallCheck(this, TemplateRegistryEntry);
      this.templateIsLoaded = false;
      this.factoryIsReady = false;
      this.resources = null;
      this.dependencies = null;
      this.address = address;
      this.onReady = null;
      this._template = null;
      this._factory = null;
    }
    TemplateRegistryEntry.prototype.addDependency = function addDependency(src, name) {
      var finalSrc = typeof src === 'string' ? _aureliaPath.relativeToFile(src, this.address) : _aureliaMetadata.Origin.get(src).moduleId;
      this.dependencies.push(new TemplateDependency(finalSrc, name));
    };
    _createClass(TemplateRegistryEntry, [{
      key: 'template',
      get: function get() {
        return this._template;
      },
      set: function set(value) {
        var address = this.address;
        var requires = undefined;
        var current = undefined;
        var src = undefined;
        var dependencies = undefined;
        this._template = value;
        this.templateIsLoaded = true;
        requires = value.content.querySelectorAll('require');
        dependencies = this.dependencies = new Array(requires.length);
        for (var i = 0,
            ii = requires.length; i < ii; ++i) {
          current = requires[i];
          src = current.getAttribute('from');
          if (!src) {
            throw new Error('<require> element in ' + address + ' has no "from" attribute.');
          }
          dependencies[i] = new TemplateDependency(_aureliaPath.relativeToFile(src, address), current.getAttribute('as'));
          if (current.parentNode) {
            current.parentNode.removeChild(current);
          }
        }
      }
    }, {
      key: 'factory',
      get: function get() {
        return this._factory;
      },
      set: function set(value) {
        this._factory = value;
        this.factoryIsReady = true;
      }
    }]);
    return TemplateRegistryEntry;
  })();
  exports.TemplateRegistryEntry = TemplateRegistryEntry;
  var Loader = (function() {
    function Loader() {
      _classCallCheck(this, Loader);
      this.templateRegistry = {};
    }
    Loader.prototype.map = function map(id, source) {
      throw new Error('Loaders must implement map(id, source).');
    };
    Loader.prototype.normalizeSync = function normalizeSync(moduleId, relativeTo) {
      throw new Error('Loaders must implement normalizeSync(moduleId, relativeTo).');
    };
    Loader.prototype.loadModule = function loadModule(id) {
      throw new Error('Loaders must implement loadModule(id).');
    };
    Loader.prototype.loadAllModules = function loadAllModules(ids) {
      throw new Error('Loader must implement loadAllModules(ids).');
    };
    Loader.prototype.loadTemplate = function loadTemplate(url) {
      throw new Error('Loader must implement loadTemplate(url).');
    };
    Loader.prototype.loadText = function loadText(url) {
      throw new Error('Loader must implement loadText(url).');
    };
    Loader.prototype.applyPluginToUrl = function applyPluginToUrl(url, pluginName) {
      throw new Error('Loader must implement applyPluginToUrl(url, pluginName).');
    };
    Loader.prototype.addPlugin = function addPlugin(pluginName, implementation) {
      throw new Error('Loader must implement addPlugin(pluginName, implementation).');
    };
    Loader.prototype.getOrCreateTemplateRegistryEntry = function getOrCreateTemplateRegistryEntry(address) {
      return this.templateRegistry[address] || (this.templateRegistry[address] = new TemplateRegistryEntry(address));
    };
    return Loader;
  })();
  exports.Loader = Loader;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-loader@1.0.0-beta.1.js", ["npm:aurelia-loader@1.0.0-beta.1/aurelia-loader.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-binding@1.0.0-beta.1.0.2/aurelia-binding.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-pal@1.0.0-beta.1.js", "npm:aurelia-task-queue@1.0.0-beta.1.0.1.js", "npm:aurelia-metadata@1.0.0-beta.1.js"], function(exports, _coreJs, _aureliaPal, _aureliaTaskQueue, _aureliaMetadata) {
  'use strict';
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports.camelCase = camelCase;
  exports.createOverrideContext = createOverrideContext;
  exports.getContextFor = getContextFor;
  exports.createScopeForTest = createScopeForTest;
  exports.connectable = connectable;
  exports.subscriberCollection = subscriberCollection;
  exports.calcSplices = calcSplices;
  exports.projectArraySplices = projectArraySplices;
  exports.getChangeRecords = getChangeRecords;
  exports.getArrayObserver = _getArrayObserver;
  exports.getMapObserver = _getMapObserver;
  exports.hasDeclaredDependencies = hasDeclaredDependencies;
  exports.declarePropertyDependencies = declarePropertyDependencies;
  exports.computedFrom = computedFrom;
  exports.valueConverter = valueConverter;
  exports.bindingBehavior = bindingBehavior;
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function camelCase(name) {
    return name.charAt(0).toLowerCase() + name.slice(1);
  }
  function createOverrideContext(bindingContext, parentOverrideContext) {
    return {
      bindingContext: bindingContext,
      parentOverrideContext: parentOverrideContext || null
    };
  }
  function getContextFor(name, scope, ancestor) {
    var oc = scope.overrideContext;
    if (ancestor) {
      while (ancestor && oc) {
        ancestor--;
        oc = oc.parentOverrideContext;
      }
      if (ancestor || !oc) {
        return undefined;
      }
      return name in oc ? oc : oc.bindingContext;
    }
    while (oc && !(name in oc) && !(oc.bindingContext && name in oc.bindingContext)) {
      oc = oc.parentOverrideContext;
    }
    if (oc) {
      return name in oc ? oc : oc.bindingContext;
    }
    return scope.bindingContext || scope.overrideContext;
  }
  function createScopeForTest(bindingContext, parentBindingContext) {
    if (parentBindingContext) {
      return {
        bindingContext: bindingContext,
        overrideContext: createOverrideContext(bindingContext, createOverrideContext(parentBindingContext))
      };
    }
    return {
      bindingContext: bindingContext,
      overrideContext: createOverrideContext(bindingContext)
    };
  }
  var sourceContext = 'Binding:source';
  exports.sourceContext = sourceContext;
  var slotNames = [];
  var versionSlotNames = [];
  for (var i = 0; i < 100; i++) {
    slotNames.push('_observer' + i);
    versionSlotNames.push('_observerVersion' + i);
  }
  function addObserver(observer) {
    var observerSlots = this._observerSlots === undefined ? 0 : this._observerSlots;
    var i = observerSlots;
    while (i-- && this[slotNames[i]] !== observer) {}
    if (i === -1) {
      i = 0;
      while (this[slotNames[i]]) {
        i++;
      }
      this[slotNames[i]] = observer;
      observer.subscribe(sourceContext, this);
      if (i === observerSlots) {
        this._observerSlots = i + 1;
      }
    }
    if (this._version === undefined) {
      this._version = 0;
    }
    this[versionSlotNames[i]] = this._version;
  }
  function observeProperty(obj, propertyName) {
    var observer = this.observerLocator.getObserver(obj, propertyName);
    addObserver.call(this, observer);
  }
  function observeArray(array) {
    var observer = this.observerLocator.getArrayObserver(array);
    addObserver.call(this, observer);
  }
  function unobserve(all) {
    var i = this._observerSlots;
    while (i--) {
      if (all || this[versionSlotNames[i]] !== this._version) {
        var observer = this[slotNames[i]];
        this[slotNames[i]] = null;
        if (observer) {
          observer.unsubscribe(sourceContext, this);
        }
      }
    }
  }
  function connectable() {
    return function(target) {
      target.prototype.observeProperty = observeProperty;
      target.prototype.observeArray = observeArray;
      target.prototype.unobserve = unobserve;
    };
  }
  function addSubscriber(context, callable) {
    if (this.hasSubscriber(context, callable)) {
      return false;
    }
    if (!this._context0) {
      this._context0 = context;
      this._callable0 = callable;
      return true;
    }
    if (!this._context1) {
      this._context1 = context;
      this._callable1 = callable;
      return true;
    }
    if (!this._context2) {
      this._context2 = context;
      this._callable2 = callable;
      return true;
    }
    if (!this._contextsRest) {
      this._contextsRest = [context];
      this._callablesRest = [callable];
      return true;
    }
    this._contextsRest.push(context);
    this._callablesRest.push(callable);
    return true;
  }
  function removeSubscriber(context, callable) {
    if (this._context0 === context && this._callable0 === callable) {
      this._context0 = null;
      this._callable0 = null;
      return true;
    }
    if (this._context1 === context && this._callable1 === callable) {
      this._context1 = null;
      this._callable1 = null;
      return true;
    }
    if (this._context2 === context && this._callable2 === callable) {
      this._context2 = null;
      this._callable2 = null;
      return true;
    }
    var rest = this._contextsRest;
    var index = undefined;
    if (!rest || !rest.length || (index = rest.indexOf(context)) === -1 || this._callablesRest[index] !== callable) {
      return false;
    }
    rest.splice(index, 1);
    this._callablesRest.splice(index, 1);
    return true;
  }
  var tempContextsRest = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  var tempCallablesRest = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  function callSubscribers(newValue, oldValue) {
    var context0 = this._context0;
    var callable0 = this._callable0;
    var context1 = this._context1;
    var callable1 = this._callable1;
    var context2 = this._context2;
    var callable2 = this._callable2;
    var length = !this._contextsRest ? 0 : this._contextsRest.length;
    var i = length;
    if (length) {
      while (i--) {
        tempContextsRest[i] = this._contextsRest[i];
        tempCallablesRest[i] = this._callablesRest[i];
      }
    }
    if (context0) {
      if (callable0) {
        callable0.call(context0, newValue, oldValue);
      } else {
        context0(newValue, oldValue);
      }
    }
    if (context1) {
      if (callable1) {
        callable1.call(context1, newValue, oldValue);
      } else {
        context1(newValue, oldValue);
      }
    }
    if (context2) {
      if (callable2) {
        callable2.call(context2, newValue, oldValue);
      } else {
        context2(newValue, oldValue);
      }
    }
    for (i = 0; i < length; i++) {
      var callable = tempCallablesRest[i];
      var context = tempContextsRest[i];
      if (callable) {
        callable.call(context, newValue, oldValue);
      } else {
        context(newValue, oldValue);
      }
      tempContextsRest[i] = null;
      tempCallablesRest[i] = null;
    }
  }
  function hasSubscribers() {
    return !!(this._context0 || this._context1 || this._context2 || this._contextsRest && this._contextsRest.length);
  }
  function hasSubscriber(context, callable) {
    var has = this._context0 === context && this._callable0 === callable || this._context1 === context && this._callable1 === callable || this._context2 === context && this._callable2 === callable;
    if (has) {
      return true;
    }
    var index = undefined;
    var contexts = this._contextsRest;
    if (!contexts || (index = contexts.length) === 0) {
      return false;
    }
    var callables = this._callablesRest;
    while (index--) {
      if (contexts[index] === context && callables[index] === callable) {
        return true;
      }
    }
    return false;
  }
  function subscriberCollection() {
    return function(target) {
      target.prototype.addSubscriber = addSubscriber;
      target.prototype.removeSubscriber = removeSubscriber;
      target.prototype.callSubscribers = callSubscribers;
      target.prototype.hasSubscribers = hasSubscribers;
      target.prototype.hasSubscriber = hasSubscriber;
    };
  }
  function isIndex(s) {
    return +s === s >>> 0;
  }
  function toNumber(s) {
    return +s;
  }
  function newSplice(index, removed, addedCount) {
    return {
      index: index,
      removed: removed,
      addedCount: addedCount
    };
  }
  var EDIT_LEAVE = 0;
  var EDIT_UPDATE = 1;
  var EDIT_ADD = 2;
  var EDIT_DELETE = 3;
  function ArraySplice() {}
  ArraySplice.prototype = {
    calcEditDistances: function calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {
      var rowCount = oldEnd - oldStart + 1;
      var columnCount = currentEnd - currentStart + 1;
      var distances = new Array(rowCount);
      var i,
          j,
          north,
          west;
      for (i = 0; i < rowCount; ++i) {
        distances[i] = new Array(columnCount);
        distances[i][0] = i;
      }
      for (j = 0; j < columnCount; ++j) {
        distances[0][j] = j;
      }
      for (i = 1; i < rowCount; ++i) {
        for (j = 1; j < columnCount; ++j) {
          if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))
            distances[i][j] = distances[i - 1][j - 1];
          else {
            north = distances[i - 1][j] + 1;
            west = distances[i][j - 1] + 1;
            distances[i][j] = north < west ? north : west;
          }
        }
      }
      return distances;
    },
    spliceOperationsFromEditDistances: function spliceOperationsFromEditDistances(distances) {
      var i = distances.length - 1;
      var j = distances[0].length - 1;
      var current = distances[i][j];
      var edits = [];
      while (i > 0 || j > 0) {
        if (i == 0) {
          edits.push(EDIT_ADD);
          j--;
          continue;
        }
        if (j == 0) {
          edits.push(EDIT_DELETE);
          i--;
          continue;
        }
        var northWest = distances[i - 1][j - 1];
        var west = distances[i - 1][j];
        var north = distances[i][j - 1];
        var min;
        if (west < north)
          min = west < northWest ? west : northWest;
        else
          min = north < northWest ? north : northWest;
        if (min == northWest) {
          if (northWest == current) {
            edits.push(EDIT_LEAVE);
          } else {
            edits.push(EDIT_UPDATE);
            current = northWest;
          }
          i--;
          j--;
        } else if (min == west) {
          edits.push(EDIT_DELETE);
          i--;
          current = west;
        } else {
          edits.push(EDIT_ADD);
          j--;
          current = north;
        }
      }
      edits.reverse();
      return edits;
    },
    calcSplices: function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {
      var prefixCount = 0;
      var suffixCount = 0;
      var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);
      if (currentStart == 0 && oldStart == 0)
        prefixCount = this.sharedPrefix(current, old, minLength);
      if (currentEnd == current.length && oldEnd == old.length)
        suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);
      currentStart += prefixCount;
      oldStart += prefixCount;
      currentEnd -= suffixCount;
      oldEnd -= suffixCount;
      if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)
        return [];
      if (currentStart == currentEnd) {
        var splice = newSplice(currentStart, [], 0);
        while (oldStart < oldEnd)
          splice.removed.push(old[oldStart++]);
        return [splice];
      } else if (oldStart == oldEnd)
        return [newSplice(currentStart, [], currentEnd - currentStart)];
      var ops = this.spliceOperationsFromEditDistances(this.calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));
      var splice = undefined;
      var splices = [];
      var index = currentStart;
      var oldIndex = oldStart;
      for (var i = 0; i < ops.length; ++i) {
        switch (ops[i]) {
          case EDIT_LEAVE:
            if (splice) {
              splices.push(splice);
              splice = undefined;
            }
            index++;
            oldIndex++;
            break;
          case EDIT_UPDATE:
            if (!splice)
              splice = newSplice(index, [], 0);
            splice.addedCount++;
            index++;
            splice.removed.push(old[oldIndex]);
            oldIndex++;
            break;
          case EDIT_ADD:
            if (!splice)
              splice = newSplice(index, [], 0);
            splice.addedCount++;
            index++;
            break;
          case EDIT_DELETE:
            if (!splice)
              splice = newSplice(index, [], 0);
            splice.removed.push(old[oldIndex]);
            oldIndex++;
            break;
        }
      }
      if (splice) {
        splices.push(splice);
      }
      return splices;
    },
    sharedPrefix: function sharedPrefix(current, old, searchLength) {
      for (var i = 0; i < searchLength; ++i)
        if (!this.equals(current[i], old[i]))
          return i;
      return searchLength;
    },
    sharedSuffix: function sharedSuffix(current, old, searchLength) {
      var index1 = current.length;
      var index2 = old.length;
      var count = 0;
      while (count < searchLength && this.equals(current[--index1], old[--index2]))
        count++;
      return count;
    },
    calculateSplices: function calculateSplices(current, previous) {
      return this.calcSplices(current, 0, current.length, previous, 0, previous.length);
    },
    equals: function equals(currentValue, previousValue) {
      return currentValue === previousValue;
    }
  };
  var arraySplice = new ArraySplice();
  function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {
    return arraySplice.calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd);
  }
  function intersect(start1, end1, start2, end2) {
    if (end1 < start2 || end2 < start1)
      return -1;
    if (end1 == start2 || end2 == start1)
      return 0;
    if (start1 < start2) {
      if (end1 < end2)
        return end1 - start2;
      else
        return end2 - start2;
    } else {
      if (end2 < end1)
        return end2 - start1;
      else
        return end1 - start1;
    }
  }
  function mergeSplice(splices, index, removed, addedCount) {
    var splice = newSplice(index, removed, addedCount);
    var inserted = false;
    var insertionOffset = 0;
    for (var i = 0; i < splices.length; i++) {
      var current = splices[i];
      current.index += insertionOffset;
      if (inserted)
        continue;
      var intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);
      if (intersectCount >= 0) {
        splices.splice(i, 1);
        i--;
        insertionOffset -= current.addedCount - current.removed.length;
        splice.addedCount += current.addedCount - intersectCount;
        var deleteCount = splice.removed.length + current.removed.length - intersectCount;
        if (!splice.addedCount && !deleteCount) {
          inserted = true;
        } else {
          var removed = current.removed;
          if (splice.index < current.index) {
            var prepend = splice.removed.slice(0, current.index - splice.index);
            Array.prototype.push.apply(prepend, removed);
            removed = prepend;
          }
          if (splice.index + splice.removed.length > current.index + current.addedCount) {
            var append = splice.removed.slice(current.index + current.addedCount - splice.index);
            Array.prototype.push.apply(removed, append);
          }
          splice.removed = removed;
          if (current.index < splice.index) {
            splice.index = current.index;
          }
        }
      } else if (splice.index < current.index) {
        inserted = true;
        splices.splice(i, 0, splice);
        i++;
        var offset = splice.addedCount - splice.removed.length;
        current.index += offset;
        insertionOffset += offset;
      }
    }
    if (!inserted)
      splices.push(splice);
  }
  function createInitialSplices(array, changeRecords) {
    var splices = [];
    for (var i = 0; i < changeRecords.length; i++) {
      var record = changeRecords[i];
      switch (record.type) {
        case 'splice':
          mergeSplice(splices, record.index, record.removed.slice(), record.addedCount);
          break;
        case 'add':
        case 'update':
        case 'delete':
          if (!isIndex(record.name))
            continue;
          var index = toNumber(record.name);
          if (index < 0)
            continue;
          mergeSplice(splices, index, [record.oldValue], record.type === 'delete' ? 0 : 1);
          break;
        default:
          console.error('Unexpected record type: ' + JSON.stringify(record));
          break;
      }
    }
    return splices;
  }
  function projectArraySplices(array, changeRecords) {
    var splices = [];
    createInitialSplices(array, changeRecords).forEach(function(splice) {
      if (splice.addedCount == 1 && splice.removed.length == 1) {
        if (splice.removed[0] !== array[splice.index])
          splices.push(splice);
        return;
      }
      ;
      splices = splices.concat(calcSplices(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));
    });
    return splices;
  }
  function newRecord(type, object, key, oldValue) {
    return {
      type: type,
      object: object,
      key: key,
      oldValue: oldValue
    };
  }
  function getChangeRecords(map) {
    var entries = [];
    for (var _iterator = map.keys(),
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var key = _ref;
      entries.push(newRecord('added', map, key));
    }
    return entries;
  }
  var ModifyCollectionObserver = (function() {
    function ModifyCollectionObserver(taskQueue, collection) {
      _classCallCheck(this, _ModifyCollectionObserver);
      this.taskQueue = taskQueue;
      this.queued = false;
      this.changeRecords = null;
      this.oldCollection = null;
      this.collection = collection;
      this.lengthPropertyName = collection instanceof Map ? 'size' : 'length';
    }
    ModifyCollectionObserver.prototype.subscribe = function subscribe(context, callable) {
      this.addSubscriber(context, callable);
    };
    ModifyCollectionObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      this.removeSubscriber(context, callable);
    };
    ModifyCollectionObserver.prototype.addChangeRecord = function addChangeRecord(changeRecord) {
      if (!this.hasSubscribers() && !this.lengthObserver) {
        return;
      }
      if (changeRecord.type === 'splice') {
        var index = changeRecord.index;
        var arrayLength = changeRecord.object.length;
        if (index > arrayLength) {
          index = arrayLength - changeRecord.addedCount;
        } else if (index < 0) {
          index = arrayLength + changeRecord.removed.length + index - changeRecord.addedCount;
        }
        if (index < 0) {
          index = 0;
        }
        changeRecord.index = index;
      }
      if (this.changeRecords === null) {
        this.changeRecords = [changeRecord];
      } else {
        this.changeRecords.push(changeRecord);
      }
      if (!this.queued) {
        this.queued = true;
        this.taskQueue.queueMicroTask(this);
      }
    };
    ModifyCollectionObserver.prototype.reset = function reset(oldCollection) {
      this.oldCollection = oldCollection;
      if (this.hasSubscribers() && !this.queued) {
        this.queued = true;
        this.taskQueue.queueMicroTask(this);
      }
    };
    ModifyCollectionObserver.prototype.getLengthObserver = function getLengthObserver() {
      return this.lengthObserver || (this.lengthObserver = new CollectionLengthObserver(this.collection));
    };
    ModifyCollectionObserver.prototype.call = function call() {
      var changeRecords = this.changeRecords;
      var oldCollection = this.oldCollection;
      var records = undefined;
      this.queued = false;
      this.changeRecords = [];
      this.oldCollection = null;
      if (this.hasSubscribers()) {
        if (oldCollection) {
          if (this.collection instanceof Map) {
            records = getChangeRecords(oldCollection);
          } else {
            records = calcSplices(this.collection, 0, this.collection.length, oldCollection, 0, oldCollection.length);
          }
        } else {
          if (this.collection instanceof Map) {
            records = changeRecords;
          } else {
            records = projectArraySplices(this.collection, changeRecords);
          }
        }
        this.callSubscribers(records);
      }
      if (this.lengthObserver) {
        this.lengthObserver.call(this.collection[this.lengthPropertyName]);
      }
    };
    var _ModifyCollectionObserver = ModifyCollectionObserver;
    ModifyCollectionObserver = subscriberCollection()(ModifyCollectionObserver) || ModifyCollectionObserver;
    return ModifyCollectionObserver;
  })();
  exports.ModifyCollectionObserver = ModifyCollectionObserver;
  var CollectionLengthObserver = (function() {
    function CollectionLengthObserver(collection) {
      _classCallCheck(this, _CollectionLengthObserver);
      this.collection = collection;
      this.lengthPropertyName = collection instanceof Map ? 'size' : 'length';
      this.currentValue = collection[this.lengthPropertyName];
    }
    CollectionLengthObserver.prototype.getValue = function getValue() {
      return this.collection[this.lengthPropertyName];
    };
    CollectionLengthObserver.prototype.setValue = function setValue(newValue) {
      this.collection[this.lengthPropertyName] = newValue;
    };
    CollectionLengthObserver.prototype.subscribe = function subscribe(context, callable) {
      this.addSubscriber(context, callable);
    };
    CollectionLengthObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      this.removeSubscriber(context, callable);
    };
    CollectionLengthObserver.prototype.call = function call(newValue) {
      var oldValue = this.currentValue;
      this.callSubscribers(newValue, oldValue);
      this.currentValue = newValue;
    };
    var _CollectionLengthObserver = CollectionLengthObserver;
    CollectionLengthObserver = subscriberCollection()(CollectionLengthObserver) || CollectionLengthObserver;
    return CollectionLengthObserver;
  })();
  exports.CollectionLengthObserver = CollectionLengthObserver;
  var arrayProto = Array.prototype;
  function _getArrayObserver(taskQueue, array) {
    return ModifyArrayObserver.create(taskQueue, array);
  }
  var ModifyArrayObserver = (function(_ModifyCollectionObserver2) {
    _inherits(ModifyArrayObserver, _ModifyCollectionObserver2);
    function ModifyArrayObserver(taskQueue, array) {
      _classCallCheck(this, ModifyArrayObserver);
      _ModifyCollectionObserver2.call(this, taskQueue, array);
    }
    ModifyArrayObserver.create = function create(taskQueue, array) {
      var observer = new ModifyArrayObserver(taskQueue, array);
      array['pop'] = function() {
        var methodCallResult = arrayProto['pop'].apply(array, arguments);
        observer.addChangeRecord({
          type: 'delete',
          object: array,
          name: array.length,
          oldValue: methodCallResult
        });
        return methodCallResult;
      };
      array['push'] = function() {
        var methodCallResult = arrayProto['push'].apply(array, arguments);
        observer.addChangeRecord({
          type: 'splice',
          object: array,
          index: array.length - arguments.length,
          removed: [],
          addedCount: arguments.length
        });
        return methodCallResult;
      };
      array['reverse'] = function() {
        var oldArray = array.slice();
        var methodCallResult = arrayProto['reverse'].apply(array, arguments);
        observer.reset(oldArray);
        return methodCallResult;
      };
      array['shift'] = function() {
        var methodCallResult = arrayProto['shift'].apply(array, arguments);
        observer.addChangeRecord({
          type: 'delete',
          object: array,
          name: 0,
          oldValue: methodCallResult
        });
        return methodCallResult;
      };
      array['sort'] = function() {
        var oldArray = array.slice();
        var methodCallResult = arrayProto['sort'].apply(array, arguments);
        observer.reset(oldArray);
        return methodCallResult;
      };
      array['splice'] = function() {
        var methodCallResult = arrayProto['splice'].apply(array, arguments);
        observer.addChangeRecord({
          type: 'splice',
          object: array,
          index: arguments[0],
          removed: methodCallResult,
          addedCount: arguments.length > 2 ? arguments.length - 2 : 0
        });
        return methodCallResult;
      };
      array['unshift'] = function() {
        var methodCallResult = arrayProto['unshift'].apply(array, arguments);
        observer.addChangeRecord({
          type: 'splice',
          object: array,
          index: 0,
          removed: [],
          addedCount: arguments.length
        });
        return methodCallResult;
      };
      return observer;
    };
    return ModifyArrayObserver;
  })(ModifyCollectionObserver);
  var Expression = (function() {
    function Expression() {
      _classCallCheck(this, Expression);
      this.isChain = false;
      this.isAssignable = false;
    }
    Expression.prototype.evaluate = function evaluate(scope, lookupFunctions, args) {
      throw new Error('Binding expression "' + this + '" cannot be evaluated.');
    };
    Expression.prototype.assign = function assign(scope, value, lookupFunctions) {
      throw new Error('Binding expression "' + this + '" cannot be assigned to.');
    };
    Expression.prototype.toString = function toString() {
      return Unparser.unparse(this);
    };
    return Expression;
  })();
  exports.Expression = Expression;
  var Chain = (function(_Expression) {
    _inherits(Chain, _Expression);
    function Chain(expressions) {
      _classCallCheck(this, Chain);
      _Expression.call(this);
      this.expressions = expressions;
      this.isChain = true;
    }
    Chain.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var result,
          expressions = this.expressions,
          length = expressions.length,
          i,
          last;
      for (i = 0; i < length; ++i) {
        last = expressions[i].evaluate(scope, lookupFunctions);
        if (last !== null) {
          result = last;
        }
      }
      return result;
    };
    Chain.prototype.accept = function accept(visitor) {
      visitor.visitChain(this);
    };
    return Chain;
  })(Expression);
  exports.Chain = Chain;
  var BindingBehavior = (function(_Expression2) {
    _inherits(BindingBehavior, _Expression2);
    function BindingBehavior(expression, name, args) {
      _classCallCheck(this, BindingBehavior);
      _Expression2.call(this);
      this.expression = expression;
      this.name = name;
      this.args = args;
    }
    BindingBehavior.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      return this.expression.evaluate(scope, lookupFunctions);
    };
    BindingBehavior.prototype.assign = function assign(scope, value, lookupFunctions) {
      return this.expression.assign(scope, value, lookupFunctions);
    };
    BindingBehavior.prototype.accept = function accept(visitor) {
      visitor.visitBindingBehavior(this);
    };
    BindingBehavior.prototype.connect = function connect(binding, scope) {
      this.expression.connect(binding, scope);
    };
    BindingBehavior.prototype.bind = function bind(binding, scope, lookupFunctions) {
      if (this.expression.expression && this.expression.bind) {
        this.expression.bind(binding, scope, lookupFunctions);
      }
      var behavior = lookupFunctions.bindingBehaviors(this.name);
      if (!behavior) {
        throw new Error('No BindingBehavior named "' + this.name + '" was found!');
      }
      var behaviorKey = 'behavior-' + this.name;
      if (binding[behaviorKey]) {
        throw new Error('A binding behavior named "' + this.name + '" has already been applied to "' + this.expression + '"');
      }
      binding[behaviorKey] = behavior;
      behavior.bind.apply(behavior, [binding, scope].concat(evalList(scope, this.args, binding.lookupFunctions)));
    };
    BindingBehavior.prototype.unbind = function unbind(binding, scope) {
      var behaviorKey = 'behavior-' + this.name;
      binding[behaviorKey].unbind(binding, scope);
      binding[behaviorKey] = null;
      if (this.expression.expression && this.expression.unbind) {
        this.expression.unbind(binding, scope);
      }
    };
    return BindingBehavior;
  })(Expression);
  exports.BindingBehavior = BindingBehavior;
  var ValueConverter = (function(_Expression3) {
    _inherits(ValueConverter, _Expression3);
    function ValueConverter(expression, name, args, allArgs) {
      _classCallCheck(this, ValueConverter);
      _Expression3.call(this);
      this.expression = expression;
      this.name = name;
      this.args = args;
      this.allArgs = allArgs;
    }
    ValueConverter.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var converter = lookupFunctions.valueConverters(this.name);
      if (!converter) {
        throw new Error('No ValueConverter named "' + this.name + '" was found!');
      }
      if ('toView' in converter) {
        return converter.toView.apply(converter, evalList(scope, this.allArgs, lookupFunctions));
      }
      return this.allArgs[0].evaluate(scope, lookupFunctions);
    };
    ValueConverter.prototype.assign = function assign(scope, value, lookupFunctions) {
      var converter = lookupFunctions.valueConverters(this.name);
      if (!converter) {
        throw new Error('No ValueConverter named "' + this.name + '" was found!');
      }
      if ('fromView' in converter) {
        value = converter.fromView.apply(converter, [value].concat(evalList(scope, this.args, lookupFunctions)));
      }
      return this.allArgs[0].assign(scope, value, lookupFunctions);
    };
    ValueConverter.prototype.accept = function accept(visitor) {
      visitor.visitValueConverter(this);
    };
    ValueConverter.prototype.connect = function connect(binding, scope) {
      var expressions = this.allArgs;
      var i = expressions.length;
      while (i--) {
        expressions[i].connect(binding, scope);
      }
    };
    return ValueConverter;
  })(Expression);
  exports.ValueConverter = ValueConverter;
  var Assign = (function(_Expression4) {
    _inherits(Assign, _Expression4);
    function Assign(target, value) {
      _classCallCheck(this, Assign);
      _Expression4.call(this);
      this.target = target;
      this.value = value;
    }
    Assign.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      return this.target.assign(scope, this.value.evaluate(scope, lookupFunctions));
    };
    Assign.prototype.accept = function accept(vistor) {
      vistor.visitAssign(this);
    };
    Assign.prototype.connect = function connect(binding, scope) {};
    return Assign;
  })(Expression);
  exports.Assign = Assign;
  var Conditional = (function(_Expression5) {
    _inherits(Conditional, _Expression5);
    function Conditional(condition, yes, no) {
      _classCallCheck(this, Conditional);
      _Expression5.call(this);
      this.condition = condition;
      this.yes = yes;
      this.no = no;
    }
    Conditional.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      return !!this.condition.evaluate(scope) ? this.yes.evaluate(scope) : this.no.evaluate(scope);
    };
    Conditional.prototype.accept = function accept(visitor) {
      visitor.visitConditional(this);
    };
    Conditional.prototype.connect = function connect(binding, scope) {
      this.condition.connect(binding, scope);
      if (this.condition.evaluate(scope)) {
        this.yes.connect(binding, scope);
      } else {
        this.no.connect(binding, scope);
      }
    };
    return Conditional;
  })(Expression);
  exports.Conditional = Conditional;
  var AccessThis = (function(_Expression6) {
    _inherits(AccessThis, _Expression6);
    function AccessThis(ancestor) {
      _classCallCheck(this, AccessThis);
      _Expression6.call(this);
      this.ancestor = ancestor;
    }
    AccessThis.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var oc = scope.overrideContext;
      var i = this.ancestor;
      while (i-- && oc) {
        oc = oc.parentOverrideContext;
      }
      return i < 1 && oc ? oc.bindingContext : undefined;
    };
    AccessThis.prototype.accept = function accept(visitor) {
      visitor.visitAccessThis(this);
    };
    AccessThis.prototype.connect = function connect(binding, scope) {};
    return AccessThis;
  })(Expression);
  exports.AccessThis = AccessThis;
  var AccessScope = (function(_Expression7) {
    _inherits(AccessScope, _Expression7);
    function AccessScope(name, ancestor) {
      _classCallCheck(this, AccessScope);
      _Expression7.call(this);
      this.name = name;
      this.ancestor = ancestor;
      this.isAssignable = true;
    }
    AccessScope.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var context = getContextFor(this.name, scope, this.ancestor);
      return context[this.name];
    };
    AccessScope.prototype.assign = function assign(scope, value) {
      var context = getContextFor(this.name, scope, this.ancestor);
      return context[this.name] = value;
    };
    AccessScope.prototype.accept = function accept(visitor) {
      visitor.visitAccessScope(this);
    };
    AccessScope.prototype.connect = function connect(binding, scope) {
      var context = getContextFor(this.name, scope, this.ancestor);
      binding.observeProperty(context, this.name);
    };
    return AccessScope;
  })(Expression);
  exports.AccessScope = AccessScope;
  var AccessMember = (function(_Expression8) {
    _inherits(AccessMember, _Expression8);
    function AccessMember(object, name) {
      _classCallCheck(this, AccessMember);
      _Expression8.call(this);
      this.object = object;
      this.name = name;
      this.isAssignable = true;
    }
    AccessMember.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var instance = this.object.evaluate(scope, lookupFunctions);
      return instance === null || instance === undefined ? instance : instance[this.name];
    };
    AccessMember.prototype.assign = function assign(scope, value) {
      var instance = this.object.evaluate(scope);
      if (instance === null || instance === undefined) {
        instance = {};
        this.object.assign(scope, instance);
      }
      return instance[this.name] = value;
    };
    AccessMember.prototype.accept = function accept(visitor) {
      visitor.visitAccessMember(this);
    };
    AccessMember.prototype.connect = function connect(binding, scope) {
      this.object.connect(binding, scope);
      var obj = this.object.evaluate(scope);
      if (obj) {
        binding.observeProperty(obj, this.name);
      }
    };
    return AccessMember;
  })(Expression);
  exports.AccessMember = AccessMember;
  var AccessKeyed = (function(_Expression9) {
    _inherits(AccessKeyed, _Expression9);
    function AccessKeyed(object, key) {
      _classCallCheck(this, AccessKeyed);
      _Expression9.call(this);
      this.object = object;
      this.key = key;
      this.isAssignable = true;
    }
    AccessKeyed.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var instance = this.object.evaluate(scope, lookupFunctions);
      var lookup = this.key.evaluate(scope, lookupFunctions);
      return getKeyed(instance, lookup);
    };
    AccessKeyed.prototype.assign = function assign(scope, value) {
      var instance = this.object.evaluate(scope);
      var lookup = this.key.evaluate(scope);
      return setKeyed(instance, lookup, value);
    };
    AccessKeyed.prototype.accept = function accept(visitor) {
      visitor.visitAccessKeyed(this);
    };
    AccessKeyed.prototype.connect = function connect(binding, scope) {
      this.object.connect(binding, scope);
      var obj = this.object.evaluate(scope);
      if (obj instanceof Object) {
        this.key.connect(binding, scope);
        var key = this.key.evaluate(scope);
        if (key !== null && key !== undefined) {
          binding.observeProperty(obj, key);
        }
      }
    };
    return AccessKeyed;
  })(Expression);
  exports.AccessKeyed = AccessKeyed;
  var CallScope = (function(_Expression10) {
    _inherits(CallScope, _Expression10);
    function CallScope(name, args, ancestor) {
      _classCallCheck(this, CallScope);
      _Expression10.call(this);
      this.name = name;
      this.args = args;
      this.ancestor = ancestor;
    }
    CallScope.prototype.evaluate = function evaluate(scope, lookupFunctions, mustEvaluate) {
      var args = evalList(scope, this.args, lookupFunctions);
      var context = getContextFor(this.name, scope, this.ancestor);
      var func = getFunction(context, this.name, mustEvaluate);
      if (func) {
        return func.apply(context, args);
      }
      return undefined;
    };
    CallScope.prototype.accept = function accept(visitor) {
      visitor.visitCallScope(this);
    };
    CallScope.prototype.connect = function connect(binding, scope) {
      var args = this.args;
      var i = args.length;
      while (i--) {
        args[i].connect(binding, scope);
      }
    };
    return CallScope;
  })(Expression);
  exports.CallScope = CallScope;
  var CallMember = (function(_Expression11) {
    _inherits(CallMember, _Expression11);
    function CallMember(object, name, args) {
      _classCallCheck(this, CallMember);
      _Expression11.call(this);
      this.object = object;
      this.name = name;
      this.args = args;
    }
    CallMember.prototype.evaluate = function evaluate(scope, lookupFunctions, mustEvaluate) {
      var instance = this.object.evaluate(scope, lookupFunctions);
      var args = evalList(scope, this.args, lookupFunctions);
      var func = getFunction(instance, this.name, mustEvaluate);
      if (func) {
        return func.apply(instance, args);
      }
      return undefined;
    };
    CallMember.prototype.accept = function accept(visitor) {
      visitor.visitCallMember(this);
    };
    CallMember.prototype.connect = function connect(binding, scope) {
      this.object.connect(binding, scope);
      var obj = this.object.evaluate(scope);
      if (getFunction(obj, this.name, false)) {
        var args = this.args;
        var i = args.length;
        while (i--) {
          args[i].connect(binding, scope);
        }
      }
    };
    return CallMember;
  })(Expression);
  exports.CallMember = CallMember;
  var CallFunction = (function(_Expression12) {
    _inherits(CallFunction, _Expression12);
    function CallFunction(func, args) {
      _classCallCheck(this, CallFunction);
      _Expression12.call(this);
      this.func = func;
      this.args = args;
    }
    CallFunction.prototype.evaluate = function evaluate(scope, lookupFunctions, mustEvaluate) {
      var func = this.func.evaluate(scope, lookupFunctions);
      if (typeof func === 'function') {
        return func.apply(null, evalList(scope, this.args, lookupFunctions));
      }
      if (!mustEvaluate && (func === null || func === undefined)) {
        return undefined;
      }
      throw new Error(this.func + ' is not a function');
    };
    CallFunction.prototype.accept = function accept(visitor) {
      visitor.visitCallFunction(this);
    };
    CallFunction.prototype.connect = function connect(binding, scope) {
      this.func.connect(binding, scope);
      var func = this.func.evaluate(scope);
      if (typeof func === 'function') {
        var args = this.args;
        var i = args.length;
        while (i--) {
          args[i].connect(binding, scope);
        }
      }
    };
    return CallFunction;
  })(Expression);
  exports.CallFunction = CallFunction;
  var Binary = (function(_Expression13) {
    _inherits(Binary, _Expression13);
    function Binary(operation, left, right) {
      _classCallCheck(this, Binary);
      _Expression13.call(this);
      this.operation = operation;
      this.left = left;
      this.right = right;
    }
    Binary.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var left = this.left.evaluate(scope);
      switch (this.operation) {
        case '&&':
          return left && this.right.evaluate(scope);
        case '||':
          return left || this.right.evaluate(scope);
      }
      var right = this.right.evaluate(scope);
      switch (this.operation) {
        case '==':
          return left == right;
        case '===':
          return left === right;
        case '!=':
          return left != right;
        case '!==':
          return left !== right;
      }
      if (left === null || right === null) {
        switch (this.operation) {
          case '+':
            if (left != null)
              return left;
            if (right != null)
              return right;
            return 0;
          case '-':
            if (left != null)
              return left;
            if (right != null)
              return 0 - right;
            return 0;
        }
        return null;
      }
      switch (this.operation) {
        case '+':
          return autoConvertAdd(left, right);
        case '-':
          return left - right;
        case '*':
          return left * right;
        case '/':
          return left / right;
        case '%':
          return left % right;
        case '<':
          return left < right;
        case '>':
          return left > right;
        case '<=':
          return left <= right;
        case '>=':
          return left >= right;
        case '^':
          return left ^ right;
      }
      throw new Error('Internal error [' + this.operation + '] not handled');
    };
    Binary.prototype.accept = function accept(visitor) {
      visitor.visitBinary(this);
    };
    Binary.prototype.connect = function connect(binding, scope) {
      this.left.connect(binding, scope);
      var left = this.left.evaluate(scope);
      if (this.operation === '&&' && !left || this.operation === '||' && left) {
        return;
      }
      this.right.connect(binding, scope);
    };
    return Binary;
  })(Expression);
  exports.Binary = Binary;
  var PrefixNot = (function(_Expression14) {
    _inherits(PrefixNot, _Expression14);
    function PrefixNot(operation, expression) {
      _classCallCheck(this, PrefixNot);
      _Expression14.call(this);
      this.operation = operation;
      this.expression = expression;
    }
    PrefixNot.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      return !this.expression.evaluate(scope);
    };
    PrefixNot.prototype.accept = function accept(visitor) {
      visitor.visitPrefix(this);
    };
    PrefixNot.prototype.connect = function connect(binding, scope) {
      this.expression.connect(binding, scope);
    };
    return PrefixNot;
  })(Expression);
  exports.PrefixNot = PrefixNot;
  var LiteralPrimitive = (function(_Expression15) {
    _inherits(LiteralPrimitive, _Expression15);
    function LiteralPrimitive(value) {
      _classCallCheck(this, LiteralPrimitive);
      _Expression15.call(this);
      this.value = value;
    }
    LiteralPrimitive.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      return this.value;
    };
    LiteralPrimitive.prototype.accept = function accept(visitor) {
      visitor.visitLiteralPrimitive(this);
    };
    LiteralPrimitive.prototype.connect = function connect(binding, scope) {};
    return LiteralPrimitive;
  })(Expression);
  exports.LiteralPrimitive = LiteralPrimitive;
  var LiteralString = (function(_Expression16) {
    _inherits(LiteralString, _Expression16);
    function LiteralString(value) {
      _classCallCheck(this, LiteralString);
      _Expression16.call(this);
      this.value = value;
    }
    LiteralString.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      return this.value;
    };
    LiteralString.prototype.accept = function accept(visitor) {
      visitor.visitLiteralString(this);
    };
    LiteralString.prototype.connect = function connect(binding, scope) {};
    return LiteralString;
  })(Expression);
  exports.LiteralString = LiteralString;
  var LiteralArray = (function(_Expression17) {
    _inherits(LiteralArray, _Expression17);
    function LiteralArray(elements) {
      _classCallCheck(this, LiteralArray);
      _Expression17.call(this);
      this.elements = elements;
    }
    LiteralArray.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var elements = this.elements,
          length = elements.length,
          result = [],
          i;
      for (i = 0; i < length; ++i) {
        result[i] = elements[i].evaluate(scope, lookupFunctions);
      }
      return result;
    };
    LiteralArray.prototype.accept = function accept(visitor) {
      visitor.visitLiteralArray(this);
    };
    LiteralArray.prototype.connect = function connect(binding, scope) {
      var length = this.elements.length;
      for (var i = 0; i < length; i++) {
        this.elements[i].connect(binding, scope);
      }
    };
    return LiteralArray;
  })(Expression);
  exports.LiteralArray = LiteralArray;
  var LiteralObject = (function(_Expression18) {
    _inherits(LiteralObject, _Expression18);
    function LiteralObject(keys, values) {
      _classCallCheck(this, LiteralObject);
      _Expression18.call(this);
      this.keys = keys;
      this.values = values;
    }
    LiteralObject.prototype.evaluate = function evaluate(scope, lookupFunctions) {
      var instance = {},
          keys = this.keys,
          values = this.values,
          length = keys.length,
          i;
      for (i = 0; i < length; ++i) {
        instance[keys[i]] = values[i].evaluate(scope, lookupFunctions);
      }
      return instance;
    };
    LiteralObject.prototype.accept = function accept(visitor) {
      visitor.visitLiteralObject(this);
    };
    LiteralObject.prototype.connect = function connect(binding, scope) {
      var length = this.keys.length;
      for (var i = 0; i < length; i++) {
        this.values[i].connect(binding, scope);
      }
    };
    return LiteralObject;
  })(Expression);
  exports.LiteralObject = LiteralObject;
  var Unparser = (function() {
    function Unparser(buffer) {
      _classCallCheck(this, Unparser);
      this.buffer = buffer;
    }
    Unparser.unparse = function unparse(expression) {
      var buffer = [],
          visitor = new Unparser(buffer);
      expression.accept(visitor);
      return buffer.join('');
    };
    Unparser.prototype.write = function write(text) {
      this.buffer.push(text);
    };
    Unparser.prototype.writeArgs = function writeArgs(args) {
      var i,
          length;
      this.write('(');
      for (i = 0, length = args.length; i < length; ++i) {
        if (i !== 0) {
          this.write(',');
        }
        args[i].accept(this);
      }
      this.write(')');
    };
    Unparser.prototype.visitChain = function visitChain(chain) {
      var expressions = chain.expressions,
          length = expressions.length,
          i;
      for (i = 0; i < length; ++i) {
        if (i !== 0) {
          this.write(';');
        }
        expressions[i].accept(this);
      }
    };
    Unparser.prototype.visitBindingBehavior = function visitBindingBehavior(behavior) {
      var args = behavior.args,
          length = args.length,
          i;
      this.write('(');
      behavior.expression.accept(this);
      this.write('&' + behavior.name);
      for (i = 0; i < length; ++i) {
        this.write(' :');
        args[i].accept(this);
      }
      this.write(')');
    };
    Unparser.prototype.visitValueConverter = function visitValueConverter(converter) {
      var args = converter.args,
          length = args.length,
          i;
      this.write('(');
      converter.expression.accept(this);
      this.write('|' + converter.name);
      for (i = 0; i < length; ++i) {
        this.write(' :');
        args[i].accept(this);
      }
      this.write(')');
    };
    Unparser.prototype.visitAssign = function visitAssign(assign) {
      assign.target.accept(this);
      this.write('=');
      assign.value.accept(this);
    };
    Unparser.prototype.visitConditional = function visitConditional(conditional) {
      conditional.condition.accept(this);
      this.write('?');
      conditional.yes.accept(this);
      this.write(':');
      conditional.no.accept(this);
    };
    Unparser.prototype.visitAccessThis = function visitAccessThis(access) {
      if (access.ancestor === 0) {
        this.write('$this');
        return;
      }
      this.write('$parent');
      var i = access.ancestor - 1;
      while (i--) {
        this.write('.$parent');
      }
    };
    Unparser.prototype.visitAccessScope = function visitAccessScope(access) {
      var i = access.ancestor;
      while (i--) {
        this.write('$parent.');
      }
      this.write(access.name);
    };
    Unparser.prototype.visitAccessMember = function visitAccessMember(access) {
      access.object.accept(this);
      this.write('.' + access.name);
    };
    Unparser.prototype.visitAccessKeyed = function visitAccessKeyed(access) {
      access.object.accept(this);
      this.write('[');
      access.key.accept(this);
      this.write(']');
    };
    Unparser.prototype.visitCallScope = function visitCallScope(call) {
      var i = call.ancestor;
      while (i--) {
        this.write('$parent.');
      }
      this.write(call.name);
      this.writeArgs(call.args);
    };
    Unparser.prototype.visitCallFunction = function visitCallFunction(call) {
      call.func.accept(this);
      this.writeArgs(call.args);
    };
    Unparser.prototype.visitCallMember = function visitCallMember(call) {
      call.object.accept(this);
      this.write('.' + call.name);
      this.writeArgs(call.args);
    };
    Unparser.prototype.visitPrefix = function visitPrefix(prefix) {
      this.write('(' + prefix.operation);
      prefix.expression.accept(this);
      this.write(')');
    };
    Unparser.prototype.visitBinary = function visitBinary(binary) {
      this.write('(');
      binary.left.accept(this);
      this.write(binary.operation);
      binary.right.accept(this);
      this.write(')');
    };
    Unparser.prototype.visitLiteralPrimitive = function visitLiteralPrimitive(literal) {
      this.write('' + literal.value);
    };
    Unparser.prototype.visitLiteralArray = function visitLiteralArray(literal) {
      var elements = literal.elements,
          length = elements.length,
          i;
      this.write('[');
      for (i = 0; i < length; ++i) {
        if (i !== 0) {
          this.write(',');
        }
        elements[i].accept(this);
      }
      this.write(']');
    };
    Unparser.prototype.visitLiteralObject = function visitLiteralObject(literal) {
      var keys = literal.keys,
          values = literal.values,
          length = keys.length,
          i;
      this.write('{');
      for (i = 0; i < length; ++i) {
        if (i !== 0) {
          this.write(',');
        }
        this.write('\'' + keys[i] + '\':');
        values[i].accept(this);
      }
      this.write('}');
    };
    Unparser.prototype.visitLiteralString = function visitLiteralString(literal) {
      var escaped = literal.value.replace(/'/g, "\'");
      this.write('\'' + escaped + '\'');
    };
    return Unparser;
  })();
  exports.Unparser = Unparser;
  var evalListCache = [[], [0], [0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0]];
  function evalList(scope, list, lookupFunctions) {
    var length = list.length,
        cacheLength,
        i;
    for (cacheLength = evalListCache.length; cacheLength <= length; ++cacheLength) {
      evalListCache.push([]);
    }
    var result = evalListCache[length];
    for (i = 0; i < length; ++i) {
      result[i] = list[i].evaluate(scope, lookupFunctions);
    }
    return result;
  }
  function autoConvertAdd(a, b) {
    if (a != null && b != null) {
      if (typeof a == 'string' && typeof b != 'string') {
        return a + b.toString();
      }
      if (typeof a != 'string' && typeof b == 'string') {
        return a.toString() + b;
      }
      return a + b;
    }
    if (a != null) {
      return a;
    }
    if (b != null) {
      return b;
    }
    return 0;
  }
  function getFunction(obj, name, mustExist) {
    var func = obj === null || obj === undefined ? null : obj[name];
    if (typeof func === 'function') {
      return func;
    }
    if (!mustExist && (func === null || func === undefined)) {
      return null;
    }
    throw new Error(name + ' is not a function');
  }
  function getKeyed(obj, key) {
    if (Array.isArray(obj)) {
      return obj[parseInt(key)];
    } else if (obj) {
      return obj[key];
    } else if (obj === null || obj === undefined) {
      return undefined;
    } else {
      return obj[key];
    }
  }
  function setKeyed(obj, key, value) {
    if (Array.isArray(obj)) {
      var index = parseInt(key);
      if (obj.length <= index) {
        obj.length = index + 1;
      }
      obj[index] = value;
    } else {
      obj[key] = value;
    }
    return value;
  }
  var bindingMode = {
    oneTime: 0,
    oneWay: 1,
    twoWay: 2
  };
  exports.bindingMode = bindingMode;
  var Token = (function() {
    function Token(index, text) {
      _classCallCheck(this, Token);
      this.index = index;
      this.text = text;
    }
    Token.prototype.withOp = function withOp(op) {
      this.opKey = op;
      return this;
    };
    Token.prototype.withGetterSetter = function withGetterSetter(key) {
      this.key = key;
      return this;
    };
    Token.prototype.withValue = function withValue(value) {
      this.value = value;
      return this;
    };
    Token.prototype.toString = function toString() {
      return 'Token(' + this.text + ')';
    };
    return Token;
  })();
  exports.Token = Token;
  var Lexer = (function() {
    function Lexer() {
      _classCallCheck(this, Lexer);
    }
    Lexer.prototype.lex = function lex(text) {
      var scanner = new Scanner(text);
      var tokens = [];
      var token = scanner.scanToken();
      while (token) {
        tokens.push(token);
        token = scanner.scanToken();
      }
      return tokens;
    };
    return Lexer;
  })();
  exports.Lexer = Lexer;
  var Scanner = (function() {
    function Scanner(input) {
      _classCallCheck(this, Scanner);
      this.input = input;
      this.length = input.length;
      this.peek = 0;
      this.index = -1;
      this.advance();
    }
    Scanner.prototype.scanToken = function scanToken() {
      while (this.peek <= $SPACE) {
        if (++this.index >= this.length) {
          this.peek = $EOF;
          return null;
        } else {
          this.peek = this.input.charCodeAt(this.index);
        }
      }
      if (isIdentifierStart(this.peek)) {
        return this.scanIdentifier();
      }
      if (isDigit(this.peek)) {
        return this.scanNumber(this.index);
      }
      var start = this.index;
      switch (this.peek) {
        case $PERIOD:
          this.advance();
          return isDigit(this.peek) ? this.scanNumber(start) : new Token(start, '.');
        case $LPAREN:
        case $RPAREN:
        case $LBRACE:
        case $RBRACE:
        case $LBRACKET:
        case $RBRACKET:
        case $COMMA:
        case $COLON:
        case $SEMICOLON:
          return this.scanCharacter(start, String.fromCharCode(this.peek));
        case $SQ:
        case $DQ:
          return this.scanString();
        case $PLUS:
        case $MINUS:
        case $STAR:
        case $SLASH:
        case $PERCENT:
        case $CARET:
        case $QUESTION:
          return this.scanOperator(start, String.fromCharCode(this.peek));
        case $LT:
        case $GT:
        case $BANG:
        case $EQ:
          return this.scanComplexOperator(start, $EQ, String.fromCharCode(this.peek), '=');
        case $AMPERSAND:
          return this.scanComplexOperator(start, $AMPERSAND, '&', '&');
        case $BAR:
          return this.scanComplexOperator(start, $BAR, '|', '|');
        case $NBSP:
          while (isWhitespace(this.peek)) {
            this.advance();
          }
          return this.scanToken();
      }
      var character = String.fromCharCode(this.peek);
      this.error('Unexpected character [' + character + ']');
      return null;
    };
    Scanner.prototype.scanCharacter = function scanCharacter(start, text) {
      assert(this.peek === text.charCodeAt(0));
      this.advance();
      return new Token(start, text);
    };
    Scanner.prototype.scanOperator = function scanOperator(start, text) {
      assert(this.peek === text.charCodeAt(0));
      assert(OPERATORS.indexOf(text) !== -1);
      this.advance();
      return new Token(start, text).withOp(text);
    };
    Scanner.prototype.scanComplexOperator = function scanComplexOperator(start, code, one, two) {
      assert(this.peek === one.charCodeAt(0));
      this.advance();
      var text = one;
      if (this.peek === code) {
        this.advance();
        text += two;
      }
      if (this.peek === code) {
        this.advance();
        text += two;
      }
      assert(OPERATORS.indexOf(text) != -1);
      return new Token(start, text).withOp(text);
    };
    Scanner.prototype.scanIdentifier = function scanIdentifier() {
      assert(isIdentifierStart(this.peek));
      var start = this.index;
      this.advance();
      while (isIdentifierPart(this.peek)) {
        this.advance();
      }
      var text = this.input.substring(start, this.index);
      var result = new Token(start, text);
      if (OPERATORS.indexOf(text) !== -1) {
        result.withOp(text);
      } else {
        result.withGetterSetter(text);
      }
      return result;
    };
    Scanner.prototype.scanNumber = function scanNumber(start) {
      assert(isDigit(this.peek));
      var simple = this.index === start;
      this.advance();
      while (true) {
        if (isDigit(this.peek)) {} else if (this.peek === $PERIOD) {
          simple = false;
        } else if (isExponentStart(this.peek)) {
          this.advance();
          if (isExponentSign(this.peek)) {
            this.advance();
          }
          if (!isDigit(this.peek)) {
            this.error('Invalid exponent', -1);
          }
          simple = false;
        } else {
          break;
        }
        this.advance();
      }
      var text = this.input.substring(start, this.index);
      var value = simple ? parseInt(text) : parseFloat(text);
      return new Token(start, text).withValue(value);
    };
    Scanner.prototype.scanString = function scanString() {
      assert(this.peek === $SQ || this.peek === $DQ);
      var start = this.index;
      var quote = this.peek;
      this.advance();
      var buffer = undefined;
      var marker = this.index;
      while (this.peek !== quote) {
        if (this.peek === $BACKSLASH) {
          if (!buffer) {
            buffer = [];
          }
          buffer.push(this.input.substring(marker, this.index));
          this.advance();
          var _unescaped = undefined;
          if (this.peek === $u) {
            var hex = this.input.substring(this.index + 1, this.index + 5);
            if (!/[A-Z0-9]{4}/.test(hex)) {
              this.error('Invalid unicode escape [\\u' + hex + ']');
            }
            _unescaped = parseInt(hex, 16);
            for (var i = 0; i < 5; ++i) {
              this.advance();
            }
          } else {
            _unescaped = unescape(this.peek);
            this.advance();
          }
          buffer.push(String.fromCharCode(_unescaped));
          marker = this.index;
        } else if (this.peek === $EOF) {
          this.error('Unterminated quote');
        } else {
          this.advance();
        }
      }
      var last = this.input.substring(marker, this.index);
      this.advance();
      var text = this.input.substring(start, this.index);
      var unescaped = last;
      if (buffer != null) {
        buffer.push(last);
        unescaped = buffer.join('');
      }
      return new Token(start, text).withValue(unescaped);
    };
    Scanner.prototype.advance = function advance() {
      if (++this.index >= this.length) {
        this.peek = $EOF;
      } else {
        this.peek = this.input.charCodeAt(this.index);
      }
    };
    Scanner.prototype.error = function error(message) {
      var offset = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      var position = this.index + offset;
      throw new Error('Lexer Error: ' + message + ' at column ' + position + ' in expression [' + this.input + ']');
    };
    return Scanner;
  })();
  exports.Scanner = Scanner;
  var OPERATORS = ['undefined', 'null', 'true', 'false', '+', '-', '*', '/', '%', '^', '=', '==', '===', '!=', '!==', '<', '>', '<=', '>=', '&&', '||', '&', '|', '!', '?'];
  var $EOF = 0;
  var $TAB = 9;
  var $LF = 10;
  var $VTAB = 11;
  var $FF = 12;
  var $CR = 13;
  var $SPACE = 32;
  var $BANG = 33;
  var $DQ = 34;
  var $$ = 36;
  var $PERCENT = 37;
  var $AMPERSAND = 38;
  var $SQ = 39;
  var $LPAREN = 40;
  var $RPAREN = 41;
  var $STAR = 42;
  var $PLUS = 43;
  var $COMMA = 44;
  var $MINUS = 45;
  var $PERIOD = 46;
  var $SLASH = 47;
  var $COLON = 58;
  var $SEMICOLON = 59;
  var $LT = 60;
  var $EQ = 61;
  var $GT = 62;
  var $QUESTION = 63;
  var $0 = 48;
  var $9 = 57;
  var $A = 65;
  var $E = 69;
  var $Z = 90;
  var $LBRACKET = 91;
  var $BACKSLASH = 92;
  var $RBRACKET = 93;
  var $CARET = 94;
  var $_ = 95;
  var $a = 97;
  var $e = 101;
  var $f = 102;
  var $n = 110;
  var $r = 114;
  var $t = 116;
  var $u = 117;
  var $v = 118;
  var $z = 122;
  var $LBRACE = 123;
  var $BAR = 124;
  var $RBRACE = 125;
  var $NBSP = 160;
  function isWhitespace(code) {
    return code >= $TAB && code <= $SPACE || code === $NBSP;
  }
  function isIdentifierStart(code) {
    return $a <= code && code <= $z || $A <= code && code <= $Z || code === $_ || code === $$;
  }
  function isIdentifierPart(code) {
    return $a <= code && code <= $z || $A <= code && code <= $Z || $0 <= code && code <= $9 || code === $_ || code === $$;
  }
  function isDigit(code) {
    return $0 <= code && code <= $9;
  }
  function isExponentStart(code) {
    return code === $e || code === $E;
  }
  function isExponentSign(code) {
    return code === $MINUS || code === $PLUS;
  }
  function unescape(code) {
    switch (code) {
      case $n:
        return $LF;
      case $f:
        return $FF;
      case $r:
        return $CR;
      case $t:
        return $TAB;
      case $v:
        return $VTAB;
      default:
        return code;
    }
  }
  function assert(condition, message) {
    if (!condition) {
      throw message || "Assertion failed";
    }
  }
  var EOF = new Token(-1, null);
  var Parser = (function() {
    function Parser() {
      _classCallCheck(this, Parser);
      this.cache = {};
      this.lexer = new Lexer();
    }
    Parser.prototype.parse = function parse(input) {
      input = input || '';
      return this.cache[input] || (this.cache[input] = new ParserImplementation(this.lexer, input).parseChain());
    };
    return Parser;
  })();
  exports.Parser = Parser;
  var ParserImplementation = (function() {
    function ParserImplementation(lexer, input) {
      _classCallCheck(this, ParserImplementation);
      this.index = 0;
      this.input = input;
      this.tokens = lexer.lex(input);
    }
    ParserImplementation.prototype.parseChain = function parseChain() {
      var isChain = false;
      var expressions = [];
      while (this.optional(';')) {
        isChain = true;
      }
      while (this.index < this.tokens.length) {
        if (this.peek.text === ')' || this.peek.text === '}' || this.peek.text === ']') {
          this.error('Unconsumed token ' + this.peek.text);
        }
        var expr = this.parseBindingBehavior();
        expressions.push(expr);
        while (this.optional(';')) {
          isChain = true;
        }
        if (isChain) {
          this.error('Multiple expressions are not allowed.');
        }
      }
      return expressions.length === 1 ? expressions[0] : new Chain(expressions);
    };
    ParserImplementation.prototype.parseBindingBehavior = function parseBindingBehavior() {
      var result = this.parseValueConverter();
      while (this.optional('&')) {
        var _name = this.peek.text;
        var args = [];
        this.advance();
        while (this.optional(':')) {
          args.push(this.parseExpression());
        }
        result = new BindingBehavior(result, _name, args);
      }
      return result;
    };
    ParserImplementation.prototype.parseValueConverter = function parseValueConverter() {
      var result = this.parseExpression();
      while (this.optional('|')) {
        var _name2 = this.peek.text;
        var args = [];
        this.advance();
        while (this.optional(':')) {
          args.push(this.parseExpression());
        }
        result = new ValueConverter(result, _name2, args, [result].concat(args));
      }
      return result;
    };
    ParserImplementation.prototype.parseExpression = function parseExpression() {
      var start = this.peek.index;
      var result = this.parseConditional();
      while (this.peek.text === '=') {
        if (!result.isAssignable) {
          var end = this.index < this.tokens.length ? this.peek.index : this.input.length;
          var expression = this.input.substring(start, end);
          this.error('Expression ' + expression + ' is not assignable');
        }
        this.expect('=');
        result = new Assign(result, this.parseConditional());
      }
      return result;
    };
    ParserImplementation.prototype.parseConditional = function parseConditional() {
      var start = this.peek.index;
      var result = this.parseLogicalOr();
      if (this.optional('?')) {
        var yes = this.parseExpression();
        if (!this.optional(':')) {
          var end = this.index < this.tokens.length ? this.peek.index : this.input.length;
          var expression = this.input.substring(start, end);
          this.error('Conditional expression ' + expression + ' requires all 3 expressions');
        }
        var no = this.parseExpression();
        result = new Conditional(result, yes, no);
      }
      return result;
    };
    ParserImplementation.prototype.parseLogicalOr = function parseLogicalOr() {
      var result = this.parseLogicalAnd();
      while (this.optional('||')) {
        result = new Binary('||', result, this.parseLogicalAnd());
      }
      return result;
    };
    ParserImplementation.prototype.parseLogicalAnd = function parseLogicalAnd() {
      var result = this.parseEquality();
      while (this.optional('&&')) {
        result = new Binary('&&', result, this.parseEquality());
      }
      return result;
    };
    ParserImplementation.prototype.parseEquality = function parseEquality() {
      var result = this.parseRelational();
      while (true) {
        if (this.optional('==')) {
          result = new Binary('==', result, this.parseRelational());
        } else if (this.optional('!=')) {
          result = new Binary('!=', result, this.parseRelational());
        } else if (this.optional('===')) {
          result = new Binary('===', result, this.parseRelational());
        } else if (this.optional('!==')) {
          result = new Binary('!==', result, this.parseRelational());
        } else {
          return result;
        }
      }
    };
    ParserImplementation.prototype.parseRelational = function parseRelational() {
      var result = this.parseAdditive();
      while (true) {
        if (this.optional('<')) {
          result = new Binary('<', result, this.parseAdditive());
        } else if (this.optional('>')) {
          result = new Binary('>', result, this.parseAdditive());
        } else if (this.optional('<=')) {
          result = new Binary('<=', result, this.parseAdditive());
        } else if (this.optional('>=')) {
          result = new Binary('>=', result, this.parseAdditive());
        } else {
          return result;
        }
      }
    };
    ParserImplementation.prototype.parseAdditive = function parseAdditive() {
      var result = this.parseMultiplicative();
      while (true) {
        if (this.optional('+')) {
          result = new Binary('+', result, this.parseMultiplicative());
        } else if (this.optional('-')) {
          result = new Binary('-', result, this.parseMultiplicative());
        } else {
          return result;
        }
      }
    };
    ParserImplementation.prototype.parseMultiplicative = function parseMultiplicative() {
      var result = this.parsePrefix();
      while (true) {
        if (this.optional('*')) {
          result = new Binary('*', result, this.parsePrefix());
        } else if (this.optional('%')) {
          result = new Binary('%', result, this.parsePrefix());
        } else if (this.optional('/')) {
          result = new Binary('/', result, this.parsePrefix());
        } else {
          return result;
        }
      }
    };
    ParserImplementation.prototype.parsePrefix = function parsePrefix() {
      if (this.optional('+')) {
        return this.parsePrefix();
      } else if (this.optional('-')) {
        return new Binary('-', new LiteralPrimitive(0), this.parsePrefix());
      } else if (this.optional('!')) {
        return new PrefixNot('!', this.parsePrefix());
      } else {
        return this.parseAccessOrCallMember();
      }
    };
    ParserImplementation.prototype.parseAccessOrCallMember = function parseAccessOrCallMember() {
      var result = this.parsePrimary();
      while (true) {
        if (this.optional('.')) {
          var _name3 = this.peek.text;
          this.advance();
          if (this.optional('(')) {
            var args = this.parseExpressionList(')');
            this.expect(')');
            if (result instanceof AccessThis) {
              result = new CallScope(_name3, args, result.ancestor);
            } else {
              result = new CallMember(result, _name3, args);
            }
          } else {
            if (result instanceof AccessThis) {
              result = new AccessScope(_name3, result.ancestor);
            } else {
              result = new AccessMember(result, _name3);
            }
          }
        } else if (this.optional('[')) {
          var key = this.parseExpression();
          this.expect(']');
          result = new AccessKeyed(result, key);
        } else if (this.optional('(')) {
          var args = this.parseExpressionList(')');
          this.expect(')');
          result = new CallFunction(result, args);
        } else {
          return result;
        }
      }
    };
    ParserImplementation.prototype.parsePrimary = function parsePrimary() {
      if (this.optional('(')) {
        var result = this.parseExpression();
        this.expect(')');
        return result;
      } else if (this.optional('null')) {
        return new LiteralPrimitive(null);
      } else if (this.optional('undefined')) {
        return new LiteralPrimitive(undefined);
      } else if (this.optional('true')) {
        return new LiteralPrimitive(true);
      } else if (this.optional('false')) {
        return new LiteralPrimitive(false);
      } else if (this.optional('[')) {
        var _elements = this.parseExpressionList(']');
        this.expect(']');
        return new LiteralArray(_elements);
      } else if (this.peek.text == '{') {
        return this.parseObject();
      } else if (this.peek.key != null) {
        return this.parseAccessOrCallScope();
      } else if (this.peek.value != null) {
        var value = this.peek.value;
        this.advance();
        return value instanceof String || typeof value === 'string' ? new LiteralString(value) : new LiteralPrimitive(value);
      } else if (this.index >= this.tokens.length) {
        throw new Error('Unexpected end of expression: ' + this.input);
      } else {
        this.error('Unexpected token ' + this.peek.text);
      }
    };
    ParserImplementation.prototype.parseAccessOrCallScope = function parseAccessOrCallScope() {
      var name = this.peek.key;
      this.advance();
      if (name === '$this') {
        return new AccessThis(0);
      }
      var ancestor = 0;
      while (name === '$parent') {
        ancestor++;
        if (this.optional('.')) {
          name = this.peek.key;
          this.advance();
        } else if (this.peek === EOF || this.peek.text === '(' || this.peek.text === '[' || this.peek.text === '}') {
          return new AccessThis(ancestor);
        } else {
          this.error('Unexpected token ' + this.peek.text);
        }
      }
      if (this.optional('(')) {
        var args = this.parseExpressionList(')');
        this.expect(')');
        return new CallScope(name, args, ancestor);
      }
      return new AccessScope(name, ancestor);
    };
    ParserImplementation.prototype.parseObject = function parseObject() {
      var keys = [];
      var values = [];
      this.expect('{');
      if (this.peek.text !== '}') {
        do {
          var value = this.peek.value;
          keys.push(typeof value === 'string' ? value : this.peek.text);
          this.advance();
          this.expect(':');
          values.push(this.parseExpression());
        } while (this.optional(','));
      }
      this.expect('}');
      return new LiteralObject(keys, values);
    };
    ParserImplementation.prototype.parseExpressionList = function parseExpressionList(terminator) {
      var result = [];
      if (this.peek.text != terminator) {
        do {
          result.push(this.parseExpression());
        } while (this.optional(','));
      }
      return result;
    };
    ParserImplementation.prototype.optional = function optional(text) {
      if (this.peek.text === text) {
        this.advance();
        return true;
      }
      return false;
    };
    ParserImplementation.prototype.expect = function expect(text) {
      if (this.peek.text === text) {
        this.advance();
      } else {
        this.error('Missing expected ' + text);
      }
    };
    ParserImplementation.prototype.advance = function advance() {
      this.index++;
    };
    ParserImplementation.prototype.error = function error(message) {
      var location = this.index < this.tokens.length ? 'at column ' + (this.tokens[this.index].index + 1) + ' in' : 'at the end of the expression';
      throw new Error('Parser Error: ' + message + ' ' + location + ' [' + this.input + ']');
    };
    _createClass(ParserImplementation, [{
      key: 'peek',
      get: function get() {
        return this.index < this.tokens.length ? this.tokens[this.index] : EOF;
      }
    }]);
    return ParserImplementation;
  })();
  exports.ParserImplementation = ParserImplementation;
  var mapProto = Map.prototype;
  function _getMapObserver(taskQueue, map) {
    return ModifyMapObserver.create(taskQueue, map);
  }
  var ModifyMapObserver = (function(_ModifyCollectionObserver3) {
    _inherits(ModifyMapObserver, _ModifyCollectionObserver3);
    function ModifyMapObserver(taskQueue, map) {
      _classCallCheck(this, ModifyMapObserver);
      _ModifyCollectionObserver3.call(this, taskQueue, map);
    }
    ModifyMapObserver.create = function create(taskQueue, map) {
      var observer = new ModifyMapObserver(taskQueue, map);
      map['set'] = function() {
        var oldValue = map.get(arguments[0]);
        var type = typeof oldValue !== 'undefined' ? 'update' : 'add';
        var methodCallResult = mapProto['set'].apply(map, arguments);
        observer.addChangeRecord({
          type: type,
          object: map,
          key: arguments[0],
          oldValue: oldValue
        });
        return methodCallResult;
      };
      map['delete'] = function() {
        var oldValue = map.get(arguments[0]);
        var methodCallResult = mapProto['delete'].apply(map, arguments);
        observer.addChangeRecord({
          type: 'delete',
          object: map,
          key: arguments[0],
          oldValue: oldValue
        });
        return methodCallResult;
      };
      map['clear'] = function() {
        var methodCallResult = mapProto['clear'].apply(map, arguments);
        observer.addChangeRecord({
          type: 'clear',
          object: map
        });
        return methodCallResult;
      };
      return observer;
    };
    return ModifyMapObserver;
  })(ModifyCollectionObserver);
  function findOriginalEventTarget(event) {
    return event.path && event.path[0] || event.deepPath && event.deepPath[0] || event.target;
  }
  function handleDelegatedEvent(event) {
    var target = findOriginalEventTarget(event);
    var callback = undefined;
    while (target && !callback) {
      if (target.delegatedCallbacks) {
        callback = target.delegatedCallbacks[event.type];
      }
      if (!callback) {
        target = target.parentNode;
      }
    }
    if (callback) {
      callback(event);
    }
  }
  var DelegateHandlerEntry = (function() {
    function DelegateHandlerEntry(eventName) {
      _classCallCheck(this, DelegateHandlerEntry);
      this.eventName = eventName;
      this.count = 0;
    }
    DelegateHandlerEntry.prototype.increment = function increment() {
      this.count++;
      if (this.count === 1) {
        _aureliaPal.DOM.addEventListener(this.eventName, handleDelegatedEvent, false);
      }
    };
    DelegateHandlerEntry.prototype.decrement = function decrement() {
      this.count--;
      if (this.count === 0) {
        _aureliaPal.DOM.removeEventListener(this.eventName, handleDelegatedEvent);
      }
    };
    return DelegateHandlerEntry;
  })();
  var DefaultEventStrategy = (function() {
    function DefaultEventStrategy() {
      _classCallCheck(this, DefaultEventStrategy);
      this.delegatedHandlers = [];
    }
    DefaultEventStrategy.prototype.subscribe = function subscribe(target, targetEvent, callback, delegate) {
      var _this = this;
      if (delegate) {
        var _ret = (function() {
          var delegatedHandlers = _this.delegatedHandlers;
          var handlerEntry = delegatedHandlers[targetEvent] || (delegatedHandlers[targetEvent] = new DelegateHandlerEntry(targetEvent));
          var delegatedCallbacks = target.delegatedCallbacks || (target.delegatedCallbacks = {});
          handlerEntry.increment();
          delegatedCallbacks[targetEvent] = callback;
          return {v: function() {
              handlerEntry.decrement();
              delegatedCallbacks[targetEvent] = null;
            }};
        })();
        if (typeof _ret === 'object')
          return _ret.v;
      } else {
        target.addEventListener(targetEvent, callback, false);
        return function() {
          target.removeEventListener(targetEvent, callback);
        };
      }
    };
    return DefaultEventStrategy;
  })();
  var EventManager = (function() {
    function EventManager() {
      _classCallCheck(this, EventManager);
      this.elementHandlerLookup = {};
      this.eventStrategyLookup = {};
      this.registerElementConfig({
        tagName: 'input',
        properties: {
          value: ['change', 'input'],
          checked: ['change', 'input'],
          files: ['change', 'input']
        }
      });
      this.registerElementConfig({
        tagName: 'textarea',
        properties: {value: ['change', 'input']}
      });
      this.registerElementConfig({
        tagName: 'select',
        properties: {value: ['change']}
      });
      this.registerElementConfig({
        tagName: 'content editable',
        properties: {value: ['change', 'input', 'blur', 'keyup', 'paste']}
      });
      this.registerElementConfig({
        tagName: 'scrollable element',
        properties: {
          scrollTop: ['scroll'],
          scrollLeft: ['scroll']
        }
      });
      this.defaultEventStrategy = new DefaultEventStrategy();
    }
    EventManager.prototype.registerElementConfig = function registerElementConfig(config) {
      var tagName = config.tagName.toLowerCase();
      var properties = config.properties;
      var propertyName = undefined;
      this.elementHandlerLookup[tagName] = {};
      for (propertyName in properties) {
        if (properties.hasOwnProperty(propertyName)) {
          this.registerElementPropertyConfig(tagName, propertyName, properties[propertyName]);
        }
      }
    };
    EventManager.prototype.registerElementPropertyConfig = function registerElementPropertyConfig(tagName, propertyName, events) {
      this.elementHandlerLookup[tagName][propertyName] = this.createElementHandler(events);
    };
    EventManager.prototype.createElementHandler = function createElementHandler(events) {
      return {subscribe: function subscribe(target, callback) {
          events.forEach(function(changeEvent) {
            target.addEventListener(changeEvent, callback, false);
          });
          return function() {
            events.forEach(function(changeEvent) {
              target.removeEventListener(changeEvent, callback);
            });
          };
        }};
    };
    EventManager.prototype.registerElementHandler = function registerElementHandler(tagName, handler) {
      this.elementHandlerLookup[tagName.toLowerCase()] = handler;
    };
    EventManager.prototype.registerEventStrategy = function registerEventStrategy(eventName, strategy) {
      this.eventStrategyLookup[eventName] = strategy;
    };
    EventManager.prototype.getElementHandler = function getElementHandler(target, propertyName) {
      var tagName = undefined;
      var lookup = this.elementHandlerLookup;
      if (target.tagName) {
        tagName = target.tagName.toLowerCase();
        if (lookup[tagName] && lookup[tagName][propertyName]) {
          return lookup[tagName][propertyName];
        }
        if (propertyName === 'textContent' || propertyName === 'innerHTML') {
          return lookup['content editable']['value'];
        }
        if (propertyName === 'scrollTop' || propertyName === 'scrollLeft') {
          return lookup['scrollable element'][propertyName];
        }
      }
      return null;
    };
    EventManager.prototype.addEventListener = function addEventListener(target, targetEvent, callback, delegate) {
      return (this.eventStrategyLookup[targetEvent] || this.defaultEventStrategy).subscribe(target, targetEvent, callback, delegate);
    };
    return EventManager;
  })();
  exports.EventManager = EventManager;
  var DirtyChecker = (function() {
    function DirtyChecker() {
      _classCallCheck(this, DirtyChecker);
      this.tracked = [];
      this.checkDelay = 120;
    }
    DirtyChecker.prototype.addProperty = function addProperty(property) {
      var tracked = this.tracked;
      tracked.push(property);
      if (tracked.length === 1) {
        this.scheduleDirtyCheck();
      }
    };
    DirtyChecker.prototype.removeProperty = function removeProperty(property) {
      var tracked = this.tracked;
      tracked.splice(tracked.indexOf(property), 1);
    };
    DirtyChecker.prototype.scheduleDirtyCheck = function scheduleDirtyCheck() {
      var _this2 = this;
      setTimeout(function() {
        return _this2.check();
      }, this.checkDelay);
    };
    DirtyChecker.prototype.check = function check() {
      var tracked = this.tracked,
          i = tracked.length;
      while (i--) {
        var current = tracked[i];
        if (current.isDirty()) {
          current.call();
        }
      }
      if (tracked.length) {
        this.scheduleDirtyCheck();
      }
    };
    return DirtyChecker;
  })();
  exports.DirtyChecker = DirtyChecker;
  var DirtyCheckProperty = (function() {
    function DirtyCheckProperty(dirtyChecker, obj, propertyName) {
      _classCallCheck(this, _DirtyCheckProperty);
      this.dirtyChecker = dirtyChecker;
      this.obj = obj;
      this.propertyName = propertyName;
    }
    DirtyCheckProperty.prototype.getValue = function getValue() {
      return this.obj[this.propertyName];
    };
    DirtyCheckProperty.prototype.setValue = function setValue(newValue) {
      this.obj[this.propertyName] = newValue;
    };
    DirtyCheckProperty.prototype.call = function call() {
      var oldValue = this.oldValue;
      var newValue = this.getValue();
      this.callSubscribers(newValue, oldValue);
      this.oldValue = newValue;
    };
    DirtyCheckProperty.prototype.isDirty = function isDirty() {
      return this.oldValue !== this.obj[this.propertyName];
    };
    DirtyCheckProperty.prototype.subscribe = function subscribe(context, callable) {
      if (!this.hasSubscribers()) {
        this.oldValue = this.getValue();
        this.dirtyChecker.addProperty(this);
      }
      this.addSubscriber(context, callable);
    };
    DirtyCheckProperty.prototype.unsubscribe = function unsubscribe(context, callable) {
      if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {
        this.dirtyChecker.removeProperty(this);
      }
    };
    var _DirtyCheckProperty = DirtyCheckProperty;
    DirtyCheckProperty = subscriberCollection()(DirtyCheckProperty) || DirtyCheckProperty;
    return DirtyCheckProperty;
  })();
  exports.DirtyCheckProperty = DirtyCheckProperty;
  var PrimitiveObserver = (function() {
    function PrimitiveObserver(primitive, propertyName) {
      _classCallCheck(this, PrimitiveObserver);
      this.doNotCache = true;
      this.primitive = primitive;
      this.propertyName = propertyName;
    }
    PrimitiveObserver.prototype.getValue = function getValue() {
      return this.primitive[this.propertyName];
    };
    PrimitiveObserver.prototype.setValue = function setValue() {
      var type = typeof this.primitive;
      throw new Error('The ' + this.propertyName + ' property of a ' + type + ' (' + this.primitive + ') cannot be assigned.');
    };
    PrimitiveObserver.prototype.subscribe = function subscribe() {};
    PrimitiveObserver.prototype.unsubscribe = function unsubscribe() {};
    return PrimitiveObserver;
  })();
  exports.PrimitiveObserver = PrimitiveObserver;
  var SetterObserver = (function() {
    function SetterObserver(taskQueue, obj, propertyName) {
      _classCallCheck(this, _SetterObserver);
      this.taskQueue = taskQueue;
      this.obj = obj;
      this.propertyName = propertyName;
      this.queued = false;
      this.observing = false;
    }
    SetterObserver.prototype.getValue = function getValue() {
      return this.obj[this.propertyName];
    };
    SetterObserver.prototype.setValue = function setValue(newValue) {
      this.obj[this.propertyName] = newValue;
    };
    SetterObserver.prototype.getterValue = function getterValue() {
      return this.currentValue;
    };
    SetterObserver.prototype.setterValue = function setterValue(newValue) {
      var oldValue = this.currentValue;
      if (oldValue !== newValue) {
        if (!this.queued) {
          this.oldValue = oldValue;
          this.queued = true;
          this.taskQueue.queueMicroTask(this);
        }
        this.currentValue = newValue;
      }
    };
    SetterObserver.prototype.call = function call() {
      var oldValue = this.oldValue;
      var newValue = this.currentValue;
      this.queued = false;
      this.callSubscribers(newValue, oldValue);
    };
    SetterObserver.prototype.subscribe = function subscribe(context, callable) {
      if (!this.observing) {
        this.convertProperty();
      }
      this.addSubscriber(context, callable);
    };
    SetterObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      this.removeSubscriber(context, callable);
    };
    SetterObserver.prototype.convertProperty = function convertProperty() {
      this.observing = true;
      this.currentValue = this.obj[this.propertyName];
      this.setValue = this.setterValue;
      this.getValue = this.getterValue;
      try {
        Object.defineProperty(this.obj, this.propertyName, {
          configurable: true,
          enumerable: true,
          get: this.getValue.bind(this),
          set: this.setValue.bind(this)
        });
      } catch (_) {}
    };
    var _SetterObserver = SetterObserver;
    SetterObserver = subscriberCollection()(SetterObserver) || SetterObserver;
    return SetterObserver;
  })();
  exports.SetterObserver = SetterObserver;
  var XLinkAttributeObserver = (function() {
    function XLinkAttributeObserver(element, propertyName, attributeName) {
      _classCallCheck(this, XLinkAttributeObserver);
      this.element = element;
      this.propertyName = propertyName;
      this.attributeName = attributeName;
    }
    XLinkAttributeObserver.prototype.getValue = function getValue() {
      return this.element.getAttributeNS('http://www.w3.org/1999/xlink', this.attributeName);
    };
    XLinkAttributeObserver.prototype.setValue = function setValue(newValue) {
      return this.element.setAttributeNS('http://www.w3.org/1999/xlink', this.attributeName, newValue);
    };
    XLinkAttributeObserver.prototype.subscribe = function subscribe() {
      throw new Error('Observation of a "' + this.element.nodeName + '" element\'s "' + this.propertyName + '" property is not supported.');
    };
    return XLinkAttributeObserver;
  })();
  exports.XLinkAttributeObserver = XLinkAttributeObserver;
  var DataAttributeObserver = (function() {
    function DataAttributeObserver(element, propertyName) {
      _classCallCheck(this, DataAttributeObserver);
      this.element = element;
      this.propertyName = propertyName;
    }
    DataAttributeObserver.prototype.getValue = function getValue() {
      return this.element.getAttribute(this.propertyName);
    };
    DataAttributeObserver.prototype.setValue = function setValue(newValue) {
      return this.element.setAttribute(this.propertyName, newValue);
    };
    DataAttributeObserver.prototype.subscribe = function subscribe() {
      throw new Error('Observation of a "' + this.element.nodeName + '" element\'s "' + this.propertyName + '" property is not supported.');
    };
    return DataAttributeObserver;
  })();
  exports.DataAttributeObserver = DataAttributeObserver;
  var StyleObserver = (function() {
    function StyleObserver(element, propertyName) {
      _classCallCheck(this, StyleObserver);
      this.element = element;
      this.propertyName = propertyName;
    }
    StyleObserver.prototype.getValue = function getValue() {
      return this.element.style.cssText;
    };
    StyleObserver.prototype.setValue = function setValue(newValue) {
      if (newValue instanceof Object) {
        newValue = this.flattenCss(newValue);
      }
      this.element.style.cssText = newValue;
    };
    StyleObserver.prototype.subscribe = function subscribe() {
      throw new Error('Observation of a "' + this.element.nodeName + '" element\'s "' + this.propertyName + '" property is not supported.');
    };
    StyleObserver.prototype.flattenCss = function flattenCss(object) {
      var s = '';
      for (var propertyName in object) {
        if (object.hasOwnProperty(propertyName)) {
          s += propertyName + ': ' + object[propertyName] + '; ';
        }
      }
      return s;
    };
    return StyleObserver;
  })();
  exports.StyleObserver = StyleObserver;
  var ValueAttributeObserver = (function() {
    function ValueAttributeObserver(element, propertyName, handler) {
      _classCallCheck(this, _ValueAttributeObserver);
      this.element = element;
      this.propertyName = propertyName;
      this.handler = handler;
    }
    ValueAttributeObserver.prototype.getValue = function getValue() {
      return this.element[this.propertyName];
    };
    ValueAttributeObserver.prototype.setValue = function setValue(newValue) {
      this.element[this.propertyName] = newValue === undefined || newValue === null ? '' : newValue;
      this.notify();
    };
    ValueAttributeObserver.prototype.notify = function notify() {
      var oldValue = this.oldValue;
      var newValue = this.getValue();
      this.callSubscribers(newValue, oldValue);
      this.oldValue = newValue;
    };
    ValueAttributeObserver.prototype.subscribe = function subscribe(context, callable) {
      if (!this.hasSubscribers()) {
        this.oldValue = this.getValue();
        this.disposeHandler = this.handler.subscribe(this.element, this.notify.bind(this));
      }
      this.addSubscriber(context, callable);
    };
    ValueAttributeObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {
        this.disposeHandler();
        this.disposeHandler = null;
      }
    };
    var _ValueAttributeObserver = ValueAttributeObserver;
    ValueAttributeObserver = subscriberCollection()(ValueAttributeObserver) || ValueAttributeObserver;
    return ValueAttributeObserver;
  })();
  exports.ValueAttributeObserver = ValueAttributeObserver;
  var selectArrayContext = 'SelectValueObserver:array';
  var SelectValueObserver = (function() {
    function SelectValueObserver(element, handler, observerLocator) {
      _classCallCheck(this, _SelectValueObserver);
      this.element = element;
      this.handler = handler;
      this.observerLocator = observerLocator;
    }
    SelectValueObserver.prototype.getValue = function getValue() {
      return this.value;
    };
    SelectValueObserver.prototype.setValue = function setValue(newValue) {
      if (newValue !== null && newValue !== undefined && this.element.multiple && !Array.isArray(newValue)) {
        throw new Error('Only null or Array instances can be bound to a multi-select.');
      }
      if (this.value === newValue) {
        return;
      }
      if (this.arrayObserver) {
        this.arrayObserver.unsubscribe(selectArrayContext, this);
        this.arrayObserver = null;
      }
      if (Array.isArray(newValue)) {
        this.arrayObserver = this.observerLocator.getArrayObserver(newValue);
        this.arrayObserver.subscribe(selectArrayContext, this);
      }
      this.value = newValue;
      this.synchronizeOptions();
      if (!this.initialSync) {
        this.initialSync = true;
        this.observerLocator.taskQueue.queueMicroTask(this);
      }
    };
    SelectValueObserver.prototype.call = function call(context, splices) {
      this.synchronizeOptions();
    };
    SelectValueObserver.prototype.synchronizeOptions = function synchronizeOptions() {
      var value = this.value,
          clear = undefined,
          isArray = undefined;
      if (value === null || value === undefined) {
        clear = true;
      } else if (Array.isArray(value)) {
        isArray = true;
      }
      var options = this.element.options;
      var i = options.length;
      var matcher = this.element.matcher || function(a, b) {
        return a === b;
      };
      var _loop = function() {
        var option = options.item(i);
        if (clear) {
          option.selected = false;
          return 'continue';
        }
        var optionValue = option.hasOwnProperty('model') ? option.model : option.value;
        if (isArray) {
          option.selected = !!value.find(function(item) {
            return !!matcher(optionValue, item);
          });
          return 'continue';
        }
        option.selected = !!matcher(optionValue, value);
      };
      while (i--) {
        var _ret2 = _loop();
        if (_ret2 === 'continue')
          continue;
      }
    };
    SelectValueObserver.prototype.synchronizeValue = function synchronizeValue() {
      var _this3 = this;
      var options = this.element.options,
          count = 0,
          value = [];
      for (var i = 0,
          ii = options.length; i < ii; i++) {
        var option = options.item(i);
        if (!option.selected) {
          continue;
        }
        value.push(option.hasOwnProperty('model') ? option.model : option.value);
        count++;
      }
      if (this.element.multiple) {
        if (Array.isArray(this.value)) {
          var _ret3 = (function() {
            var matcher = _this3.element.matcher || function(a, b) {
              return a === b;
            };
            var i = 0;
            var _loop2 = function() {
              var a = _this3.value[i];
              if (value.findIndex(function(b) {
                return matcher(a, b);
              }) === -1) {
                _this3.value.splice(i, 1);
              } else {
                i++;
              }
            };
            while (i < _this3.value.length) {
              _loop2();
            }
            i = 0;
            var _loop3 = function() {
              var a = value[i];
              if (_this3.value.findIndex(function(b) {
                return matcher(a, b);
              }) === -1) {
                _this3.value.push(a);
              }
              i++;
            };
            while (i < value.length) {
              _loop3();
            }
            return {v: undefined};
          })();
          if (typeof _ret3 === 'object')
            return _ret3.v;
        }
      } else {
        if (count === 0) {
          value = null;
        } else {
          value = value[0];
        }
      }
      if (value !== this.value) {
        this.oldValue = this.value;
        this.value = value;
        this.notify();
      }
    };
    SelectValueObserver.prototype.notify = function notify() {
      var oldValue = this.oldValue;
      var newValue = this.value;
      this.callSubscribers(newValue, oldValue);
    };
    SelectValueObserver.prototype.subscribe = function subscribe(context, callable) {
      if (!this.hasSubscribers()) {
        this.disposeHandler = this.handler.subscribe(this.element, this.synchronizeValue.bind(this, false));
      }
      this.addSubscriber(context, callable);
    };
    SelectValueObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {
        this.disposeHandler();
        this.disposeHandler = null;
      }
    };
    SelectValueObserver.prototype.bind = function bind() {
      var _this4 = this;
      this.domObserver = _aureliaPal.DOM.createMutationObserver(function() {
        _this4.synchronizeOptions();
        _this4.synchronizeValue();
      });
      this.domObserver.observe(this.element, {
        childList: true,
        subtree: true
      });
    };
    SelectValueObserver.prototype.unbind = function unbind() {
      this.domObserver.disconnect();
      this.domObserver = null;
      if (this.arrayObserver) {
        this.arrayObserver.unsubscribe(selectArrayContext, this);
        this.arrayObserver = null;
      }
    };
    var _SelectValueObserver = SelectValueObserver;
    SelectValueObserver = subscriberCollection()(SelectValueObserver) || SelectValueObserver;
    return SelectValueObserver;
  })();
  exports.SelectValueObserver = SelectValueObserver;
  var checkedArrayContext = 'CheckedObserver:array';
  var CheckedObserver = (function() {
    function CheckedObserver(element, handler, observerLocator) {
      _classCallCheck(this, _CheckedObserver);
      this.element = element;
      this.handler = handler;
      this.observerLocator = observerLocator;
    }
    CheckedObserver.prototype.getValue = function getValue() {
      return this.value;
    };
    CheckedObserver.prototype.setValue = function setValue(newValue) {
      if (this.value === newValue) {
        return;
      }
      if (this.arrayObserver) {
        this.arrayObserver.unsubscribe(checkedArrayContext, this);
        this.arrayObserver = null;
      }
      if (this.element.type === 'checkbox' && Array.isArray(newValue)) {
        this.arrayObserver = this.observerLocator.getArrayObserver(newValue);
        this.arrayObserver.subscribe(checkedArrayContext, this);
      }
      this.value = newValue;
      this.synchronizeElement();
      if (!this.initialSync) {
        this.initialSync = true;
        this.observerLocator.taskQueue.queueMicroTask(this);
      }
    };
    CheckedObserver.prototype.call = function call(context, splices) {
      this.synchronizeElement();
    };
    CheckedObserver.prototype.synchronizeElement = function synchronizeElement() {
      var value = this.value,
          element = this.element,
          elementValue = element.hasOwnProperty('model') ? element.model : element.value,
          isRadio = element.type === 'radio',
          matcher = element.matcher || function(a, b) {
            return a === b;
          };
      element.checked = isRadio && !!matcher(value, elementValue) || !isRadio && value === true || !isRadio && Array.isArray(value) && !!value.find(function(item) {
        return !!matcher(item, elementValue);
      });
    };
    CheckedObserver.prototype.synchronizeValue = function synchronizeValue() {
      var value = this.value,
          element = this.element,
          elementValue = element.hasOwnProperty('model') ? element.model : element.value,
          index = undefined,
          matcher = element.matcher || function(a, b) {
            return a === b;
          };
      if (element.type === 'checkbox') {
        if (Array.isArray(value)) {
          index = value.findIndex(function(item) {
            return !!matcher(item, elementValue);
          });
          if (element.checked && index === -1) {
            value.push(elementValue);
          } else if (!element.checked && index !== -1) {
            value.splice(index, 1);
          }
          return;
        } else {
          value = element.checked;
        }
      } else if (element.checked) {
        value = elementValue;
      } else {
        return;
      }
      this.oldValue = this.value;
      this.value = value;
      this.notify();
    };
    CheckedObserver.prototype.notify = function notify() {
      var oldValue = this.oldValue;
      var newValue = this.value;
      this.callSubscribers(newValue, oldValue);
    };
    CheckedObserver.prototype.subscribe = function subscribe(context, callable) {
      if (!this.hasSubscribers()) {
        this.disposeHandler = this.handler.subscribe(this.element, this.synchronizeValue.bind(this, false));
      }
      this.addSubscriber(context, callable);
    };
    CheckedObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {
        this.disposeHandler();
        this.disposeHandler = null;
      }
    };
    CheckedObserver.prototype.unbind = function unbind() {
      if (this.arrayObserver) {
        this.arrayObserver.unsubscribe(checkedArrayContext, this);
        this.arrayObserver = null;
      }
    };
    var _CheckedObserver = CheckedObserver;
    CheckedObserver = subscriberCollection()(CheckedObserver) || CheckedObserver;
    return CheckedObserver;
  })();
  exports.CheckedObserver = CheckedObserver;
  var ClassObserver = (function() {
    function ClassObserver(element) {
      _classCallCheck(this, ClassObserver);
      this.element = element;
      this.doNotCache = true;
      this.value = '';
      this.version = 0;
    }
    ClassObserver.prototype.getValue = function getValue() {
      return this.value;
    };
    ClassObserver.prototype.setValue = function setValue(newValue) {
      var nameIndex = this.nameIndex || {},
          version = this.version,
          names,
          name;
      if (newValue !== null && newValue !== undefined && newValue.length) {
        names = newValue.split(' ');
        for (var i = 0,
            _length = names.length; i < _length; i++) {
          name = names[i];
          if (name === '') {
            continue;
          }
          nameIndex[name] = version;
          this.element.classList.add(name);
        }
      }
      this.value = newValue;
      this.nameIndex = nameIndex;
      this.version += 1;
      if (version === 0) {
        return;
      }
      version -= 1;
      for (name in nameIndex) {
        if (!nameIndex.hasOwnProperty(name) || nameIndex[name] !== version) {
          continue;
        }
        this.element.classList.remove(name);
      }
    };
    ClassObserver.prototype.subscribe = function subscribe() {
      throw new Error('Observation of a "' + this.element.nodeName + '" element\'s "class" property is not supported.');
    };
    return ClassObserver;
  })();
  exports.ClassObserver = ClassObserver;
  var computedContext = 'ComputedPropertyObserver';
  var ComputedPropertyObserver = (function() {
    function ComputedPropertyObserver(obj, propertyName, descriptor, observerLocator) {
      _classCallCheck(this, _ComputedPropertyObserver);
      this.obj = obj;
      this.propertyName = propertyName;
      this.descriptor = descriptor;
      this.observerLocator = observerLocator;
    }
    ComputedPropertyObserver.prototype.getValue = function getValue() {
      return this.obj[this.propertyName];
    };
    ComputedPropertyObserver.prototype.setValue = function setValue(newValue) {
      this.obj[this.propertyName] = newValue;
    };
    ComputedPropertyObserver.prototype.call = function call(context) {
      var newValue = this.getValue();
      if (this.oldValue === newValue)
        return;
      this.callSubscribers(newValue, this.oldValue);
      this.oldValue = newValue;
      return;
    };
    ComputedPropertyObserver.prototype.subscribe = function subscribe(context, callable) {
      if (!this.hasSubscribers()) {
        this.oldValue = this.getValue();
        var dependencies = this.descriptor.get.dependencies;
        this.observers = [];
        for (var i = 0,
            ii = dependencies.length; i < ii; i++) {
          var observer = this.observerLocator.getObserver(this.obj, dependencies[i]);
          this.observers.push(observer);
          observer.subscribe(computedContext, this);
        }
      }
      this.addSubscriber(context, callable);
    };
    ComputedPropertyObserver.prototype.unsubscribe = function unsubscribe(context, callable) {
      if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {
        this.oldValue = undefined;
        var i = this.observers.length;
        while (i--) {
          this.observers[i].unsubscribe(computedContext, this);
        }
        this.observers = null;
      }
    };
    var _ComputedPropertyObserver = ComputedPropertyObserver;
    ComputedPropertyObserver = subscriberCollection()(ComputedPropertyObserver) || ComputedPropertyObserver;
    return ComputedPropertyObserver;
  })();
  exports.ComputedPropertyObserver = ComputedPropertyObserver;
  function hasDeclaredDependencies(descriptor) {
    return descriptor && descriptor.get && descriptor.get.dependencies && descriptor.get.dependencies.length > 0;
  }
  function declarePropertyDependencies(ctor, propertyName, dependencies) {
    var descriptor = Object.getOwnPropertyDescriptor(ctor.prototype, propertyName);
    descriptor.get.dependencies = dependencies;
  }
  function computedFrom() {
    for (var _len = arguments.length,
        rest = Array(_len),
        _key = 0; _key < _len; _key++) {
      rest[_key] = arguments[_key];
    }
    return function(target, key, descriptor) {
      descriptor.get.dependencies = rest;
      return descriptor;
    };
  }
  var elements = {
    a: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'target', 'transform', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    altGlyph: ['class', 'dx', 'dy', 'externalResourcesRequired', 'format', 'glyphRef', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    altGlyphDef: ['id', 'xml:base', 'xml:lang', 'xml:space'],
    altGlyphItem: ['id', 'xml:base', 'xml:lang', 'xml:space'],
    animate: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    animateColor: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    animateMotion: ['accumulate', 'additive', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keyPoints', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'origin', 'path', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'rotate', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    animateTransform: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'type', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    circle: ['class', 'cx', 'cy', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'r', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    clipPath: ['class', 'clipPathUnits', 'externalResourcesRequired', 'id', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    'color-profile': ['id', 'local', 'name', 'rendering-intent', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    cursor: ['externalResourcesRequired', 'id', 'requiredExtensions', 'requiredFeatures', 'systemLanguage', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    defs: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    desc: ['class', 'id', 'style', 'xml:base', 'xml:lang', 'xml:space'],
    ellipse: ['class', 'cx', 'cy', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rx', 'ry', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    feBlend: ['class', 'height', 'id', 'in', 'in2', 'mode', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feColorMatrix: ['class', 'height', 'id', 'in', 'result', 'style', 'type', 'values', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feComponentTransfer: ['class', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feComposite: ['class', 'height', 'id', 'in', 'in2', 'k1', 'k2', 'k3', 'k4', 'operator', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feConvolveMatrix: ['bias', 'class', 'divisor', 'edgeMode', 'height', 'id', 'in', 'kernelMatrix', 'kernelUnitLength', 'order', 'preserveAlpha', 'result', 'style', 'targetX', 'targetY', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feDiffuseLighting: ['class', 'diffuseConstant', 'height', 'id', 'in', 'kernelUnitLength', 'result', 'style', 'surfaceScale', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feDisplacementMap: ['class', 'height', 'id', 'in', 'in2', 'result', 'scale', 'style', 'width', 'x', 'xChannelSelector', 'xml:base', 'xml:lang', 'xml:space', 'y', 'yChannelSelector'],
    feDistantLight: ['azimuth', 'elevation', 'id', 'xml:base', 'xml:lang', 'xml:space'],
    feFlood: ['class', 'height', 'id', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feFuncA: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],
    feFuncB: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],
    feFuncG: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],
    feFuncR: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],
    feGaussianBlur: ['class', 'height', 'id', 'in', 'result', 'stdDeviation', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feImage: ['class', 'externalResourcesRequired', 'height', 'id', 'preserveAspectRatio', 'result', 'style', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feMerge: ['class', 'height', 'id', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feMergeNode: ['id', 'xml:base', 'xml:lang', 'xml:space'],
    feMorphology: ['class', 'height', 'id', 'in', 'operator', 'radius', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feOffset: ['class', 'dx', 'dy', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    fePointLight: ['id', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'z'],
    feSpecularLighting: ['class', 'height', 'id', 'in', 'kernelUnitLength', 'result', 'specularConstant', 'specularExponent', 'style', 'surfaceScale', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feSpotLight: ['id', 'limitingConeAngle', 'pointsAtX', 'pointsAtY', 'pointsAtZ', 'specularExponent', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'z'],
    feTile: ['class', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    feTurbulence: ['baseFrequency', 'class', 'height', 'id', 'numOctaves', 'result', 'seed', 'stitchTiles', 'style', 'type', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    filter: ['class', 'externalResourcesRequired', 'filterRes', 'filterUnits', 'height', 'id', 'primitiveUnits', 'style', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    font: ['class', 'externalResourcesRequired', 'horiz-adv-x', 'horiz-origin-x', 'horiz-origin-y', 'id', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],
    'font-face': ['accent-height', 'alphabetic', 'ascent', 'bbox', 'cap-height', 'descent', 'font-family', 'font-size', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'hanging', 'id', 'ideographic', 'mathematical', 'overline-position', 'overline-thickness', 'panose-1', 'slope', 'stemh', 'stemv', 'strikethrough-position', 'strikethrough-thickness', 'underline-position', 'underline-thickness', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'widths', 'x-height', 'xml:base', 'xml:lang', 'xml:space'],
    'font-face-format': ['id', 'string', 'xml:base', 'xml:lang', 'xml:space'],
    'font-face-name': ['id', 'name', 'xml:base', 'xml:lang', 'xml:space'],
    'font-face-src': ['id', 'xml:base', 'xml:lang', 'xml:space'],
    'font-face-uri': ['id', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    foreignObject: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    g: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    glyph: ['arabic-form', 'class', 'd', 'glyph-name', 'horiz-adv-x', 'id', 'lang', 'orientation', 'style', 'unicode', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],
    glyphRef: ['class', 'dx', 'dy', 'format', 'glyphRef', 'id', 'style', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    hkern: ['g1', 'g2', 'id', 'k', 'u1', 'u2', 'xml:base', 'xml:lang', 'xml:space'],
    image: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    line: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'x1', 'x2', 'xml:base', 'xml:lang', 'xml:space', 'y1', 'y2'],
    linearGradient: ['class', 'externalResourcesRequired', 'gradientTransform', 'gradientUnits', 'id', 'spreadMethod', 'style', 'x1', 'x2', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y1', 'y2'],
    marker: ['class', 'externalResourcesRequired', 'id', 'markerHeight', 'markerUnits', 'markerWidth', 'orient', 'preserveAspectRatio', 'refX', 'refY', 'style', 'viewBox', 'xml:base', 'xml:lang', 'xml:space'],
    mask: ['class', 'externalResourcesRequired', 'height', 'id', 'maskContentUnits', 'maskUnits', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    metadata: ['id', 'xml:base', 'xml:lang', 'xml:space'],
    'missing-glyph': ['class', 'd', 'horiz-adv-x', 'id', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],
    mpath: ['externalResourcesRequired', 'id', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    path: ['class', 'd', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'pathLength', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    pattern: ['class', 'externalResourcesRequired', 'height', 'id', 'patternContentUnits', 'patternTransform', 'patternUnits', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'viewBox', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    polygon: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'points', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    polyline: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'points', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    radialGradient: ['class', 'cx', 'cy', 'externalResourcesRequired', 'fx', 'fy', 'gradientTransform', 'gradientUnits', 'id', 'r', 'spreadMethod', 'style', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    rect: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rx', 'ry', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    script: ['externalResourcesRequired', 'id', 'type', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    set: ['attributeName', 'attributeType', 'begin', 'dur', 'end', 'externalResourcesRequired', 'fill', 'id', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    stop: ['class', 'id', 'offset', 'style', 'xml:base', 'xml:lang', 'xml:space'],
    style: ['id', 'media', 'title', 'type', 'xml:base', 'xml:lang', 'xml:space'],
    svg: ['baseProfile', 'class', 'contentScriptType', 'contentStyleType', 'externalResourcesRequired', 'height', 'id', 'onabort', 'onactivate', 'onclick', 'onerror', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onresize', 'onscroll', 'onunload', 'onzoom', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'version', 'viewBox', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'zoomAndPan'],
    'switch': ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],
    symbol: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'preserveAspectRatio', 'style', 'viewBox', 'xml:base', 'xml:lang', 'xml:space'],
    text: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'transform', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    textPath: ['class', 'externalResourcesRequired', 'id', 'lengthAdjust', 'method', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'spacing', 'startOffset', 'style', 'systemLanguage', 'textLength', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],
    title: ['class', 'id', 'style', 'xml:base', 'xml:lang', 'xml:space'],
    tref: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'x', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    tspan: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    use: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],
    view: ['externalResourcesRequired', 'id', 'preserveAspectRatio', 'viewBox', 'viewTarget', 'xml:base', 'xml:lang', 'xml:space', 'zoomAndPan'],
    vkern: ['g1', 'g2', 'id', 'k', 'u1', 'u2', 'xml:base', 'xml:lang', 'xml:space']
  };
  exports.elements = elements;
  var presentationElements = {
    'a': true,
    'altGlyph': true,
    'animate': true,
    'animateColor': true,
    'circle': true,
    'clipPath': true,
    'defs': true,
    'ellipse': true,
    'feBlend': true,
    'feColorMatrix': true,
    'feComponentTransfer': true,
    'feComposite': true,
    'feConvolveMatrix': true,
    'feDiffuseLighting': true,
    'feDisplacementMap': true,
    'feFlood': true,
    'feGaussianBlur': true,
    'feImage': true,
    'feMerge': true,
    'feMorphology': true,
    'feOffset': true,
    'feSpecularLighting': true,
    'feTile': true,
    'feTurbulence': true,
    'filter': true,
    'font': true,
    'foreignObject': true,
    'g': true,
    'glyph': true,
    'glyphRef': true,
    'image': true,
    'line': true,
    'linearGradient': true,
    'marker': true,
    'mask': true,
    'missing-glyph': true,
    'path': true,
    'pattern': true,
    'polygon': true,
    'polyline': true,
    'radialGradient': true,
    'rect': true,
    'stop': true,
    'svg': true,
    'switch': true,
    'symbol': true,
    'text': true,
    'textPath': true,
    'tref': true,
    'tspan': true,
    'use': true
  };
  exports.presentationElements = presentationElements;
  var presentationAttributes = {
    'alignment-baseline': true,
    'baseline-shift': true,
    'clip-path': true,
    'clip-rule': true,
    'clip': true,
    'color-interpolation-filters': true,
    'color-interpolation': true,
    'color-profile': true,
    'color-rendering': true,
    'color': true,
    'cursor': true,
    'direction': true,
    'display': true,
    'dominant-baseline': true,
    'enable-background': true,
    'fill-opacity': true,
    'fill-rule': true,
    'fill': true,
    'filter': true,
    'flood-color': true,
    'flood-opacity': true,
    'font-family': true,
    'font-size-adjust': true,
    'font-size': true,
    'font-stretch': true,
    'font-style': true,
    'font-variant': true,
    'font-weight': true,
    'glyph-orientation-horizontal': true,
    'glyph-orientation-vertical': true,
    'image-rendering': true,
    'kerning': true,
    'letter-spacing': true,
    'lighting-color': true,
    'marker-end': true,
    'marker-mid': true,
    'marker-start': true,
    'mask': true,
    'opacity': true,
    'overflow': true,
    'pointer-events': true,
    'shape-rendering': true,
    'stop-color': true,
    'stop-opacity': true,
    'stroke-dasharray': true,
    'stroke-dashoffset': true,
    'stroke-linecap': true,
    'stroke-linejoin': true,
    'stroke-miterlimit': true,
    'stroke-opacity': true,
    'stroke-width': true,
    'stroke': true,
    'text-anchor': true,
    'text-decoration': true,
    'text-rendering': true,
    'unicode-bidi': true,
    'visibility': true,
    'word-spacing': true,
    'writing-mode': true
  };
  exports.presentationAttributes = presentationAttributes;
  function createElement(html) {
    var div = _aureliaPal.DOM.createElement('div');
    div.innerHTML = html;
    return div.firstChild;
  }
  var SVGAnalyzer = (function() {
    function SVGAnalyzer() {
      _classCallCheck(this, SVGAnalyzer);
      if (createElement('<svg><altGlyph /></svg>').firstElementChild.nodeName === 'altglyph' && elements.altGlyph) {
        elements.altglyph = elements.altGlyph;
        delete elements.altGlyph;
        elements.altglyphdef = elements.altGlyphDef;
        delete elements.altGlyphDef;
        elements.altglyphitem = elements.altGlyphItem;
        delete elements.altGlyphItem;
        elements.glyphref = elements.glyphRef;
        delete elements.glyphRef;
      }
    }
    SVGAnalyzer.prototype.isStandardSvgAttribute = function isStandardSvgAttribute(nodeName, attributeName) {
      return presentationElements[nodeName] && presentationAttributes[attributeName] || elements[nodeName] && elements[nodeName].indexOf(attributeName) !== -1;
    };
    return SVGAnalyzer;
  })();
  exports.SVGAnalyzer = SVGAnalyzer;
  var ObserverLocator = (function() {
    _createClass(ObserverLocator, null, [{
      key: 'inject',
      value: [_aureliaTaskQueue.TaskQueue, EventManager, DirtyChecker, SVGAnalyzer],
      enumerable: true
    }]);
    function ObserverLocator(taskQueue, eventManager, dirtyChecker, svgAnalyzer) {
      _classCallCheck(this, ObserverLocator);
      this.taskQueue = taskQueue;
      this.eventManager = eventManager;
      this.dirtyChecker = dirtyChecker;
      this.svgAnalyzer = svgAnalyzer;
      this.adapters = [];
    }
    ObserverLocator.prototype.getObserver = function getObserver(obj, propertyName) {
      var observersLookup = obj.__observers__;
      var observer = undefined;
      if (observersLookup && propertyName in observersLookup) {
        return observersLookup[propertyName];
      }
      observer = this.createPropertyObserver(obj, propertyName);
      if (!observer.doNotCache) {
        if (observersLookup === undefined) {
          observersLookup = this.getOrCreateObserversLookup(obj);
        }
        observersLookup[propertyName] = observer;
      }
      return observer;
    };
    ObserverLocator.prototype.getOrCreateObserversLookup = function getOrCreateObserversLookup(obj) {
      return obj.__observers__ || this.createObserversLookup(obj);
    };
    ObserverLocator.prototype.createObserversLookup = function createObserversLookup(obj) {
      var value = {};
      try {
        Object.defineProperty(obj, "__observers__", {
          enumerable: false,
          configurable: false,
          writable: false,
          value: value
        });
      } catch (_) {}
      return value;
    };
    ObserverLocator.prototype.addAdapter = function addAdapter(adapter) {
      this.adapters.push(adapter);
    };
    ObserverLocator.prototype.getAdapterObserver = function getAdapterObserver(obj, propertyName, descriptor) {
      for (var i = 0,
          ii = this.adapters.length; i < ii; i++) {
        var adapter = this.adapters[i];
        var observer = adapter.getObserver(obj, propertyName, descriptor);
        if (observer) {
          return observer;
        }
      }
      return null;
    };
    ObserverLocator.prototype.createPropertyObserver = function createPropertyObserver(obj, propertyName) {
      var observerLookup = undefined;
      var descriptor = undefined;
      var handler = undefined;
      var xlinkResult = undefined;
      if (!(obj instanceof Object)) {
        return new PrimitiveObserver(obj, propertyName);
      }
      if (obj instanceof _aureliaPal.DOM.Element) {
        if (propertyName === 'class') {
          return new ClassObserver(obj);
        }
        if (propertyName === 'style' || propertyName === 'css') {
          return new StyleObserver(obj, propertyName);
        }
        handler = this.eventManager.getElementHandler(obj, propertyName);
        if (propertyName === 'value' && obj.tagName.toLowerCase() === 'select') {
          return new SelectValueObserver(obj, handler, this);
        }
        if (propertyName === 'checked' && obj.tagName.toLowerCase() === 'input') {
          return new CheckedObserver(obj, handler, this);
        }
        if (handler) {
          return new ValueAttributeObserver(obj, propertyName, handler);
        }
        xlinkResult = /^xlink:(.+)$/.exec(propertyName);
        if (xlinkResult) {
          return new XLinkAttributeObserver(obj, propertyName, xlinkResult[1]);
        }
        if (/^\w+:|^data-|^aria-/.test(propertyName) || obj instanceof _aureliaPal.DOM.SVGElement && this.svgAnalyzer.isStandardSvgAttribute(obj.nodeName, propertyName)) {
          return new DataAttributeObserver(obj, propertyName);
        }
      }
      descriptor = Object.getPropertyDescriptor(obj, propertyName);
      if (hasDeclaredDependencies(descriptor)) {
        return new ComputedPropertyObserver(obj, propertyName, descriptor, this);
      }
      var existingGetterOrSetter = undefined;
      if (descriptor && (existingGetterOrSetter = descriptor.get || descriptor.set)) {
        if (existingGetterOrSetter.getObserver) {
          return existingGetterOrSetter.getObserver(obj);
        }
        var adapterObserver = this.getAdapterObserver(obj, propertyName, descriptor);
        if (adapterObserver) {
          return adapterObserver;
        }
        return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);
      }
      if (obj instanceof Array) {
        if (propertyName === 'length') {
          return this.getArrayObserver(obj).getLengthObserver();
        } else {
          return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);
        }
      } else if (obj instanceof Map) {
        if (propertyName === 'size') {
          return this.getMapObserver(obj).getLengthObserver();
        } else {
          return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);
        }
      }
      return new SetterObserver(this.taskQueue, obj, propertyName);
    };
    ObserverLocator.prototype.getArrayObserver = function getArrayObserver(array) {
      if ('__array_observer__' in array) {
        return array.__array_observer__;
      }
      return array.__array_observer__ = _getArrayObserver(this.taskQueue, array);
    };
    ObserverLocator.prototype.getMapObserver = function getMapObserver(map) {
      if ('__map_observer__' in map) {
        return map.__map_observer__;
      }
      return map.__map_observer__ = _getMapObserver(this.taskQueue, map);
    };
    return ObserverLocator;
  })();
  exports.ObserverLocator = ObserverLocator;
  var ObjectObservationAdapter = (function() {
    function ObjectObservationAdapter() {
      _classCallCheck(this, ObjectObservationAdapter);
    }
    ObjectObservationAdapter.prototype.getObserver = function getObserver(object, propertyName, descriptor) {
      throw new Error('BindingAdapters must implement getObserver(object, propertyName).');
    };
    return ObjectObservationAdapter;
  })();
  exports.ObjectObservationAdapter = ObjectObservationAdapter;
  var BindingExpression = (function() {
    function BindingExpression(observerLocator, targetProperty, sourceExpression, mode, lookupFunctions, attribute) {
      _classCallCheck(this, BindingExpression);
      this.observerLocator = observerLocator;
      this.targetProperty = targetProperty;
      this.sourceExpression = sourceExpression;
      this.mode = mode;
      this.lookupFunctions = lookupFunctions;
      this.attribute = attribute;
      this.discrete = false;
    }
    BindingExpression.prototype.createBinding = function createBinding(target) {
      return new Binding(this.observerLocator, this.sourceExpression, target, this.targetProperty, this.mode, this.lookupFunctions);
    };
    return BindingExpression;
  })();
  exports.BindingExpression = BindingExpression;
  var targetContext = 'Binding:target';
  var Binding = (function() {
    function Binding(observerLocator, sourceExpression, target, targetProperty, mode, lookupFunctions) {
      _classCallCheck(this, _Binding);
      this.observerLocator = observerLocator;
      this.sourceExpression = sourceExpression;
      this.targetProperty = observerLocator.getObserver(target, targetProperty);
      this.mode = mode;
      this.lookupFunctions = lookupFunctions;
    }
    Binding.prototype.updateTarget = function updateTarget(value) {
      this.targetProperty.setValue(value);
    };
    Binding.prototype.updateSource = function updateSource(value) {
      this.sourceExpression.assign(this.source, value, this.lookupFunctions);
    };
    Binding.prototype.call = function call(context, newValue, oldValue) {
      if (!this.isBound) {
        return;
      }
      if (context === sourceContext) {
        oldValue = this.targetProperty.getValue();
        newValue = this.sourceExpression.evaluate(this.source, this.lookupFunctions);
        if (newValue !== oldValue) {
          this.updateTarget(newValue);
        }
        if (this.mode !== bindingMode.oneTime) {
          this._version++;
          this.sourceExpression.connect(this, this.source);
          this.unobserve(false);
        }
        return;
      }
      if (context === targetContext) {
        this.updateSource(newValue);
        return;
      }
      throw new Error('Unexpected call context ' + context);
    };
    Binding.prototype.bind = function bind(source) {
      if (this.isBound) {
        if (this.source === source) {
          return;
        }
        this.unbind();
      }
      this.isBound = true;
      this.source = source;
      var sourceExpression = this.sourceExpression;
      if (sourceExpression.bind) {
        sourceExpression.bind(this, source, this.lookupFunctions);
      }
      var targetProperty = this.targetProperty;
      if ('bind' in targetProperty) {
        targetProperty.bind();
      }
      var value = sourceExpression.evaluate(source, this.lookupFunctions);
      this.updateTarget(value);
      var mode = this.mode;
      if (mode === bindingMode.oneWay || mode === bindingMode.twoWay) {
        sourceExpression.connect(this, source);
        if (mode === bindingMode.twoWay) {
          targetProperty.subscribe(targetContext, this);
        }
      }
    };
    Binding.prototype.unbind = function unbind() {
      if (!this.isBound) {
        return;
      }
      this.isBound = false;
      if (this.sourceExpression.unbind) {
        this.sourceExpression.unbind(this, this.source);
      }
      this.source = null;
      if ('unbind' in this.targetProperty) {
        this.targetProperty.unbind();
      }
      if (this.mode === bindingMode.twoWay) {
        this.targetProperty.unsubscribe(targetContext, this);
      }
      this.unobserve(true);
    };
    var _Binding = Binding;
    Binding = connectable()(Binding) || Binding;
    return Binding;
  })();
  exports.Binding = Binding;
  var CallExpression = (function() {
    function CallExpression(observerLocator, targetProperty, sourceExpression, lookupFunctions) {
      _classCallCheck(this, CallExpression);
      this.observerLocator = observerLocator;
      this.targetProperty = targetProperty;
      this.sourceExpression = sourceExpression;
      this.lookupFunctions = lookupFunctions;
    }
    CallExpression.prototype.createBinding = function createBinding(target) {
      return new Call(this.observerLocator, this.sourceExpression, target, this.targetProperty, this.lookupFunctions);
    };
    return CallExpression;
  })();
  exports.CallExpression = CallExpression;
  var Call = (function() {
    function Call(observerLocator, sourceExpression, target, targetProperty, lookupFunctions) {
      _classCallCheck(this, Call);
      this.sourceExpression = sourceExpression;
      this.target = target;
      this.targetProperty = observerLocator.getObserver(target, targetProperty);
      this.lookupFunctions = lookupFunctions;
    }
    Call.prototype.callSource = function callSource($event) {
      var overrideContext = this.source.overrideContext;
      Object.assign(overrideContext, $event);
      overrideContext.$event = $event;
      var mustEvaluate = true;
      var result = this.sourceExpression.evaluate(this.source, this.lookupFunctions, mustEvaluate);
      delete overrideContext.$event;
      for (var prop in $event) {
        delete overrideContext[prop];
      }
      return result;
    };
    Call.prototype.bind = function bind(source) {
      var _this5 = this;
      if (this.isBound) {
        if (this.source === source) {
          return;
        }
        this.unbind();
      }
      this.isBound = true;
      this.source = source;
      var sourceExpression = this.sourceExpression;
      if (sourceExpression.bind) {
        sourceExpression.bind(this, source, this.lookupFunctions);
      }
      this.targetProperty.setValue(function($event) {
        return _this5.callSource($event);
      });
    };
    Call.prototype.unbind = function unbind() {
      if (!this.isBound) {
        return;
      }
      this.isBound = false;
      if (this.sourceExpression.unbind) {
        this.sourceExpression.unbind(this, this.source);
      }
      this.source = null;
      this.targetProperty.setValue(null);
    };
    return Call;
  })();
  exports.Call = Call;
  var ValueConverterResource = (function() {
    function ValueConverterResource(name) {
      _classCallCheck(this, ValueConverterResource);
      this.name = name;
    }
    ValueConverterResource.convention = function convention(name) {
      if (name.endsWith('ValueConverter')) {
        return new ValueConverterResource(camelCase(name.substring(0, name.length - 14)));
      }
    };
    ValueConverterResource.prototype.initialize = function initialize(container, target) {
      this.instance = container.get(target);
    };
    ValueConverterResource.prototype.register = function register(registry, name) {
      registry.registerValueConverter(name || this.name, this.instance);
    };
    ValueConverterResource.prototype.load = function load(container, target) {};
    return ValueConverterResource;
  })();
  exports.ValueConverterResource = ValueConverterResource;
  function valueConverter(nameOrTarget) {
    if (nameOrTarget === undefined || typeof nameOrTarget === 'string') {
      return function(target) {
        _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, new ValueConverterResource(nameOrTarget), target);
      };
    }
    _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, new ValueConverterResource(), nameOrTarget);
  }
  var BindingBehaviorResource = (function() {
    function BindingBehaviorResource(name) {
      _classCallCheck(this, BindingBehaviorResource);
      this.name = name;
    }
    BindingBehaviorResource.convention = function convention(name) {
      if (name.endsWith('BindingBehavior')) {
        return new BindingBehaviorResource(camelCase(name.substring(0, name.length - 15)));
      }
    };
    BindingBehaviorResource.prototype.initialize = function initialize(container, target) {
      this.instance = container.get(target);
    };
    BindingBehaviorResource.prototype.register = function register(registry, name) {
      registry.registerBindingBehavior(name || this.name, this.instance);
    };
    BindingBehaviorResource.prototype.load = function load(container, target) {};
    return BindingBehaviorResource;
  })();
  exports.BindingBehaviorResource = BindingBehaviorResource;
  function bindingBehavior(nameOrTarget) {
    if (nameOrTarget === undefined || typeof nameOrTarget === 'string') {
      return function(target) {
        _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, new BindingBehaviorResource(nameOrTarget), target);
      };
    }
    _aureliaMetadata.metadata.define(_aureliaMetadata.metadata.resource, new BindingBehaviorResource(), nameOrTarget);
  }
  var ListenerExpression = (function() {
    function ListenerExpression(eventManager, targetEvent, sourceExpression, delegate, preventDefault, lookupFunctions) {
      _classCallCheck(this, ListenerExpression);
      this.eventManager = eventManager;
      this.targetEvent = targetEvent;
      this.sourceExpression = sourceExpression;
      this.delegate = delegate;
      this.discrete = true;
      this.preventDefault = preventDefault;
      this.lookupFunctions = lookupFunctions;
    }
    ListenerExpression.prototype.createBinding = function createBinding(target) {
      return new Listener(this.eventManager, this.targetEvent, this.delegate, this.sourceExpression, target, this.preventDefault, this.lookupFunctions);
    };
    return ListenerExpression;
  })();
  exports.ListenerExpression = ListenerExpression;
  var Listener = (function() {
    function Listener(eventManager, targetEvent, delegate, sourceExpression, target, preventDefault, lookupFunctions) {
      _classCallCheck(this, Listener);
      this.eventManager = eventManager;
      this.targetEvent = targetEvent;
      this.delegate = delegate;
      this.sourceExpression = sourceExpression;
      this.target = target;
      this.preventDefault = preventDefault;
      this.lookupFunctions = lookupFunctions;
    }
    Listener.prototype.callSource = function callSource(event) {
      var overrideContext = this.source.overrideContext;
      overrideContext.$event = event;
      var mustEvaluate = true;
      var result = this.sourceExpression.evaluate(this.source, this.lookupFunctions, mustEvaluate);
      delete overrideContext.$event;
      if (result !== true && this.preventDefault) {
        event.preventDefault();
      }
      return result;
    };
    Listener.prototype.bind = function bind(source) {
      var _this6 = this;
      if (this.isBound) {
        if (this.source === source) {
          return;
        }
        this.unbind();
      }
      this.isBound = true;
      this.source = source;
      var sourceExpression = this.sourceExpression;
      if (sourceExpression.bind) {
        sourceExpression.bind(this, source, this.lookupFunctions);
      }
      this._disposeListener = this.eventManager.addEventListener(this.target, this.targetEvent, function(event) {
        return _this6.callSource(event);
      }, this.delegate);
    };
    Listener.prototype.unbind = function unbind() {
      if (!this.isBound) {
        return;
      }
      this.isBound = false;
      if (this.sourceExpression.unbind) {
        this.sourceExpression.unbind(this, this.source);
      }
      this.source = null;
      this._disposeListener();
      this._disposeListener = null;
    };
    return Listener;
  })();
  exports.Listener = Listener;
  function getAU(element) {
    var au = element.au;
    if (au === undefined) {
      throw new Error('No Aurelia APIs are defined for the referenced element.');
    }
    return au;
  }
  var NameExpression = (function() {
    function NameExpression(property, apiName) {
      _classCallCheck(this, NameExpression);
      this.property = property;
      this.apiName = apiName;
      this.discrete = true;
    }
    NameExpression.prototype.createBinding = function createBinding(target) {
      return new NameBinder(this.property, NameExpression.locateAPI(target, this.apiName));
    };
    NameExpression.locateAPI = function locateAPI(element, apiName) {
      switch (apiName) {
        case 'element':
          return element;
        case 'controller':
          return getAU(element).controller;
        case 'view-model':
          return getAU(element).controller.viewModel;
        case 'view':
          return getAU(element).controller.view;
        default:
          var target = getAU(element)[apiName];
          if (target === undefined) {
            throw new Error('Attempted to reference "' + apiName + '", but it was not found amongst the target\'s API.');
          }
          return target.viewModel;
      }
    };
    return NameExpression;
  })();
  exports.NameExpression = NameExpression;
  var NameBinder = (function() {
    function NameBinder(property, target) {
      _classCallCheck(this, NameBinder);
      this.property = property;
      this.target = target;
      this.source = null;
      this.context = null;
    }
    NameBinder.prototype.bind = function bind(source) {
      if (this.source !== null) {
        if (this.source === source) {
          return;
        }
        this.unbind();
      }
      this.source = source || null;
      this.context = source.bindingContext || source.overrideContext || null;
      if (this.context !== null) {
        this.context[this.property] = this.target;
      }
    };
    NameBinder.prototype.unbind = function unbind() {
      if (this.source !== null) {
        this.source = null;
      }
      if (this.context !== null) {
        this.context[this.property] = null;
      }
    };
    return NameBinder;
  })();
  var lookupFunctions = {
    bindingBehaviors: function bindingBehaviors(name) {
      return null;
    },
    valueConverters: function valueConverters(name) {
      return null;
    }
  };
  var BindingEngine = (function() {
    _createClass(BindingEngine, null, [{
      key: 'inject',
      value: [ObserverLocator, Parser],
      enumerable: true
    }]);
    function BindingEngine(observerLocator, parser) {
      _classCallCheck(this, BindingEngine);
      this.observerLocator = observerLocator;
      this.parser = parser;
    }
    BindingEngine.prototype.createBindingExpression = function createBindingExpression(targetProperty, sourceExpression) {
      var mode = arguments.length <= 2 || arguments[2] === undefined ? bindingMode.oneWay : arguments[2];
      var lookupFunctions = arguments.length <= 3 || arguments[3] === undefined ? lookupFunctions : arguments[3];
      return (function() {
        return new BindingExpression(this.observerLocator, targetProperty, this.parser.parse(sourceExpression), mode, lookupFunctions);
      }).apply(this, arguments);
    };
    BindingEngine.prototype.propertyObserver = function propertyObserver(obj, propertyName) {
      var _this7 = this;
      return {subscribe: function subscribe(callback) {
          var observer = _this7.observerLocator.getObserver(obj, propertyName);
          observer.subscribe(callback);
          return {dispose: function dispose() {
              return observer.unsubscribe(callback);
            }};
        }};
    };
    BindingEngine.prototype.collectionObserver = function collectionObserver(collection) {
      var _this8 = this;
      return {subscribe: function subscribe(callback) {
          var observer = undefined;
          if (collection instanceof Array) {
            observer = _this8.observerLocator.getArrayObserver(collection);
          } else if (collection instanceof Map) {
            observer = _this8.observerLocator.getMapObserver(collection);
          } else {
            throw new Error('collection must be an instance of Array or Map.');
          }
          observer.subscribe(callback);
          return {dispose: function dispose() {
              return observer.unsubscribe(callback);
            }};
        }};
    };
    BindingEngine.prototype.expressionObserver = function expressionObserver(bindingContext, expression) {
      var scope = {
        bindingContext: bindingContext,
        overrideContext: createOverrideContext(bindingContext)
      };
      return new ExpressionObserver(scope, this.parser.parse(expression), this.observerLocator);
    };
    BindingEngine.prototype.parseExpression = function parseExpression(expression) {
      return this.parser.parse(expression);
    };
    BindingEngine.prototype.registerAdapter = function registerAdapter(adapter) {
      this.observerLocator.addAdapter(adapter);
    };
    return BindingEngine;
  })();
  exports.BindingEngine = BindingEngine;
  var ExpressionObserver = (function() {
    function ExpressionObserver(scope, expression, observerLocator) {
      _classCallCheck(this, _ExpressionObserver);
      this.scope = scope;
      this.expression = expression;
      this.observerLocator = observerLocator;
    }
    ExpressionObserver.prototype.subscribe = function subscribe(callback) {
      var _this9 = this;
      if (!this.hasSubscribers()) {
        this.oldValue = this.expression.evaluate(this.scope, lookupFunctions);
        this.expression.connect(this, this.scope);
      }
      this.addSubscriber(callback);
      return {dispose: function dispose() {
          if (_this9.removeSubscriber(callback) && !_this9.hasSubscribers()) {
            _this9.unobserve(true);
          }
        }};
    };
    ExpressionObserver.prototype.call = function call() {
      var newValue = this.expression.evaluate(this.scope, lookupFunctions);
      var oldValue = this.oldValue;
      if (newValue !== oldValue) {
        this.oldValue = newValue;
        this.callSubscribers(newValue, oldValue);
      }
      this._version++;
      this.expression.connect(this, this.scope);
      this.unobserve(false);
    };
    var _ExpressionObserver = ExpressionObserver;
    ExpressionObserver = subscriberCollection()(ExpressionObserver) || ExpressionObserver;
    ExpressionObserver = connectable()(ExpressionObserver) || ExpressionObserver;
    return ExpressionObserver;
  })();
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-binding@1.0.0-beta.1.0.2.js", ["npm:aurelia-binding@1.0.0-beta.1.0.2/aurelia-binding.js"], function(main) {
  return main;
});

})();
System.registerDynamic('npm:core-js@1.2.6/modules/es5.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.property-desc.js', 'npm:core-js@1.2.6/modules/$.html.js', 'npm:core-js@1.2.6/modules/$.dom-create.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.cof.js', 'npm:core-js@1.2.6/modules/$.invoke.js', 'npm:core-js@1.2.6/modules/$.fails.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.a-function.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.to-integer.js', 'npm:core-js@1.2.6/modules/$.to-index.js', 'npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/$.iobject.js', 'npm:core-js@1.2.6/modules/$.uid.js', 'npm:core-js@1.2.6/modules/$.array-methods.js', 'npm:core-js@1.2.6/modules/$.array-includes.js', 'npm:core-js@1.2.6/modules/$.is-array.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      DESCRIPTORS = $__require('npm:core-js@1.2.6/modules/$.descriptors.js'),
      createDesc = $__require('npm:core-js@1.2.6/modules/$.property-desc.js'),
      html = $__require('npm:core-js@1.2.6/modules/$.html.js'),
      cel = $__require('npm:core-js@1.2.6/modules/$.dom-create.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      cof = $__require('npm:core-js@1.2.6/modules/$.cof.js'),
      invoke = $__require('npm:core-js@1.2.6/modules/$.invoke.js'),
      fails = $__require('npm:core-js@1.2.6/modules/$.fails.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      aFunction = $__require('npm:core-js@1.2.6/modules/$.a-function.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js'),
      toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
      toInteger = $__require('npm:core-js@1.2.6/modules/$.to-integer.js'),
      toIndex = $__require('npm:core-js@1.2.6/modules/$.to-index.js'),
      toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
      IObject = $__require('npm:core-js@1.2.6/modules/$.iobject.js'),
      IE_PROTO = $__require('npm:core-js@1.2.6/modules/$.uid.js')('__proto__'),
      createArrayMethod = $__require('npm:core-js@1.2.6/modules/$.array-methods.js'),
      arrayIndexOf = $__require('npm:core-js@1.2.6/modules/$.array-includes.js')(false),
      ObjectProto = Object.prototype,
      ArrayProto = Array.prototype,
      arraySlice = ArrayProto.slice,
      arrayJoin = ArrayProto.join,
      defineProperty = $.setDesc,
      getOwnDescriptor = $.getDesc,
      defineProperties = $.setDescs,
      factories = {},
      IE8_DOM_DEFINE;
  if (!DESCRIPTORS) {
    IE8_DOM_DEFINE = !fails(function () {
      return defineProperty(cel('div'), 'a', { get: function () {
          return 7;
        } }).a != 7;
    });
    $.setDesc = function (O, P, Attributes) {
      if (IE8_DOM_DEFINE) try {
        return defineProperty(O, P, Attributes);
      } catch (e) {}
      if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
      if ('value' in Attributes) anObject(O)[P] = Attributes.value;
      return O;
    };
    $.getDesc = function (O, P) {
      if (IE8_DOM_DEFINE) try {
        return getOwnDescriptor(O, P);
      } catch (e) {}
      if (has(O, P)) return createDesc(!ObjectProto.propertyIsEnumerable.call(O, P), O[P]);
    };
    $.setDescs = defineProperties = function (O, Properties) {
      anObject(O);
      var keys = $.getKeys(Properties),
          length = keys.length,
          i = 0,
          P;
      while (length > i) $.setDesc(O, P = keys[i++], Properties[P]);
      return O;
    };
  }
  $export($export.S + $export.F * !DESCRIPTORS, 'Object', {
    getOwnPropertyDescriptor: $.getDesc,
    defineProperty: $.setDesc,
    defineProperties: defineProperties
  });
  var keys1 = ('constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,' + 'toLocaleString,toString,valueOf').split(','),
      keys2 = keys1.concat('length', 'prototype'),
      keysLen1 = keys1.length;
  var createDict = function () {
    var iframe = cel('iframe'),
        i = keysLen1,
        gt = '>',
        iframeDocument;
    iframe.style.display = 'none';
    html.appendChild(iframe);
    iframe.src = 'javascript:';
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write('<script>document.F=Object</script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while (i--) delete createDict.prototype[keys1[i]];
    return createDict();
  };
  var createGetKeys = function (names, length) {
    return function (object) {
      var O = toIObject(object),
          i = 0,
          result = [],
          key;
      for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
      while (length > i) if (has(O, key = names[i++])) {
        ~arrayIndexOf(result, key) || result.push(key);
      }
      return result;
    };
  };
  var Empty = function () {};
  $export($export.S, 'Object', {
    getPrototypeOf: $.getProto = $.getProto || function (O) {
      O = toObject(O);
      if (has(O, IE_PROTO)) return O[IE_PROTO];
      if (typeof O.constructor == 'function' && O instanceof O.constructor) {
        return O.constructor.prototype;
      }
      return O instanceof Object ? ObjectProto : null;
    },
    getOwnPropertyNames: $.getNames = $.getNames || createGetKeys(keys2, keys2.length, true),
    create: $.create = $.create || function (O, Properties) {
      var result;
      if (O !== null) {
        Empty.prototype = anObject(O);
        result = new Empty();
        Empty.prototype = null;
        result[IE_PROTO] = O;
      } else result = createDict();
      return Properties === undefined ? result : defineProperties(result, Properties);
    },
    keys: $.getKeys = $.getKeys || createGetKeys(keys1, keysLen1, false)
  });
  var construct = function (F, len, args) {
    if (!(len in factories)) {
      for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
      factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
    }
    return factories[len](F, args);
  };
  $export($export.P, 'Function', { bind: function bind(that) {
      var fn = aFunction(this),
          partArgs = arraySlice.call(arguments, 1);
      var bound = function () {
        var args = partArgs.concat(arraySlice.call(arguments));
        return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
      };
      if (isObject(fn.prototype)) bound.prototype = fn.prototype;
      return bound;
    } });
  $export($export.P + $export.F * fails(function () {
    if (html) arraySlice.call(html);
  }), 'Array', { slice: function (begin, end) {
      var len = toLength(this.length),
          klass = cof(this);
      end = end === undefined ? len : end;
      if (klass == 'Array') return arraySlice.call(this, begin, end);
      var start = toIndex(begin, len),
          upTo = toIndex(end, len),
          size = toLength(upTo - start),
          cloned = Array(size),
          i = 0;
      for (; i < size; i++) cloned[i] = klass == 'String' ? this.charAt(start + i) : this[start + i];
      return cloned;
    } });
  $export($export.P + $export.F * (IObject != Object), 'Array', { join: function join(separator) {
      return arrayJoin.call(IObject(this), separator === undefined ? ',' : separator);
    } });
  $export($export.S, 'Array', { isArray: $__require('npm:core-js@1.2.6/modules/$.is-array.js') });
  var createArrayReduce = function (isRight) {
    return function (callbackfn, memo) {
      aFunction(callbackfn);
      var O = IObject(this),
          length = toLength(O.length),
          index = isRight ? length - 1 : 0,
          i = isRight ? -1 : 1;
      if (arguments.length < 2) for (;;) {
        if (index in O) {
          memo = O[index];
          index += i;
          break;
        }
        index += i;
        if (isRight ? index < 0 : length <= index) {
          throw TypeError('Reduce of empty array with no initial value');
        }
      }
      for (; isRight ? index >= 0 : length > index; index += i) if (index in O) {
        memo = callbackfn(memo, O[index], index, this);
      }
      return memo;
    };
  };
  var methodize = function ($fn) {
    return function (arg1) {
      return $fn(this, arg1, arguments[1]);
    };
  };
  $export($export.P, 'Array', {
    forEach: $.each = $.each || methodize(createArrayMethod(0)),
    map: methodize(createArrayMethod(1)),
    filter: methodize(createArrayMethod(2)),
    some: methodize(createArrayMethod(3)),
    every: methodize(createArrayMethod(4)),
    reduce: createArrayReduce(false),
    reduceRight: createArrayReduce(true),
    indexOf: methodize(arrayIndexOf),
    lastIndexOf: function (el, fromIndex) {
      var O = toIObject(this),
          length = toLength(O.length),
          index = length - 1;
      if (arguments.length > 1) index = Math.min(index, toInteger(fromIndex));
      if (index < 0) index = toLength(length + index);
      for (; index >= 0; index--) if (index in O) if (O[index] === el) return index;
      return -1;
    }
  });
  $export($export.S, 'Date', { now: function () {
      return +new Date();
    } });
  var lz = function (num) {
    return num > 9 ? num : '0' + num;
  };
  $export($export.P + $export.F * (fails(function () {
    return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
  }) || !fails(function () {
    new Date(NaN).toISOString();
  })), 'Date', { toISOString: function toISOString() {
      if (!isFinite(this)) throw RangeError('Invalid time value');
      var d = this,
          y = d.getUTCFullYear(),
          m = d.getUTCMilliseconds(),
          s = y < 0 ? '-' : y > 9999 ? '+' : '';
      return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) + '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) + 'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) + ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.enum-keys.js', ['npm:core-js@1.2.6/modules/$.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js');
  module.exports = function (it) {
    var keys = $.getKeys(it),
        getSymbols = $.getSymbols;
    if (getSymbols) {
      var symbols = getSymbols(it),
          isEnum = $.isEnum,
          i = 0,
          key;
      while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) keys.push(key);
    }
    return keys;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.symbol.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.redefine.js', 'npm:core-js@1.2.6/modules/$.fails.js', 'npm:core-js@1.2.6/modules/$.shared.js', 'npm:core-js@1.2.6/modules/$.set-to-string-tag.js', 'npm:core-js@1.2.6/modules/$.uid.js', 'npm:core-js@1.2.6/modules/$.wks.js', 'npm:core-js@1.2.6/modules/$.keyof.js', 'npm:core-js@1.2.6/modules/$.get-names.js', 'npm:core-js@1.2.6/modules/$.enum-keys.js', 'npm:core-js@1.2.6/modules/$.is-array.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.property-desc.js', 'npm:core-js@1.2.6/modules/$.library.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      DESCRIPTORS = $__require('npm:core-js@1.2.6/modules/$.descriptors.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      redefine = $__require('npm:core-js@1.2.6/modules/$.redefine.js'),
      $fails = $__require('npm:core-js@1.2.6/modules/$.fails.js'),
      shared = $__require('npm:core-js@1.2.6/modules/$.shared.js'),
      setToStringTag = $__require('npm:core-js@1.2.6/modules/$.set-to-string-tag.js'),
      uid = $__require('npm:core-js@1.2.6/modules/$.uid.js'),
      wks = $__require('npm:core-js@1.2.6/modules/$.wks.js'),
      keyOf = $__require('npm:core-js@1.2.6/modules/$.keyof.js'),
      $names = $__require('npm:core-js@1.2.6/modules/$.get-names.js'),
      enumKeys = $__require('npm:core-js@1.2.6/modules/$.enum-keys.js'),
      isArray = $__require('npm:core-js@1.2.6/modules/$.is-array.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
      createDesc = $__require('npm:core-js@1.2.6/modules/$.property-desc.js'),
      getDesc = $.getDesc,
      setDesc = $.setDesc,
      _create = $.create,
      getNames = $names.get,
      $Symbol = global.Symbol,
      $JSON = global.JSON,
      _stringify = $JSON && $JSON.stringify,
      setter = false,
      HIDDEN = wks('_hidden'),
      isEnum = $.isEnum,
      SymbolRegistry = shared('symbol-registry'),
      AllSymbols = shared('symbols'),
      useNative = typeof $Symbol == 'function',
      ObjectProto = Object.prototype;
  var setSymbolDesc = DESCRIPTORS && $fails(function () {
    return _create(setDesc({}, 'a', { get: function () {
        return setDesc(this, 'a', { value: 7 }).a;
      } })).a != 7;
  }) ? function (it, key, D) {
    var protoDesc = getDesc(ObjectProto, key);
    if (protoDesc) delete ObjectProto[key];
    setDesc(it, key, D);
    if (protoDesc && it !== ObjectProto) setDesc(ObjectProto, key, protoDesc);
  } : setDesc;
  var wrap = function (tag) {
    var sym = AllSymbols[tag] = _create($Symbol.prototype);
    sym._k = tag;
    DESCRIPTORS && setter && setSymbolDesc(ObjectProto, tag, {
      configurable: true,
      set: function (value) {
        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      }
    });
    return sym;
  };
  var isSymbol = function (it) {
    return typeof it == 'symbol';
  };
  var $defineProperty = function defineProperty(it, key, D) {
    if (D && has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!has(it, HIDDEN)) setDesc(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
        D = _create(D, { enumerable: createDesc(0, false) });
      }
      return setSymbolDesc(it, key, D);
    }
    return setDesc(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P) {
    anObject(it);
    var keys = enumKeys(P = toIObject(P)),
        i = 0,
        l = keys.length,
        key;
    while (l > i) $defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P) {
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key);
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    var D = getDesc(it = toIObject(it), key);
    if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = getNames(toIObject(it)),
        result = [],
        i = 0,
        key;
    while (names.length > i) if (!has(AllSymbols, key = names[i++]) && key != HIDDEN) result.push(key);
    return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var names = getNames(toIObject(it)),
        result = [],
        i = 0,
        key;
    while (names.length > i) if (has(AllSymbols, key = names[i++])) result.push(AllSymbols[key]);
    return result;
  };
  var $stringify = function stringify(it) {
    if (it === undefined || isSymbol(it)) return;
    var args = [it],
        i = 1,
        $$ = arguments,
        replacer,
        $replacer;
    while ($$.length > i) args.push($$[i++]);
    replacer = args[1];
    if (typeof replacer == 'function') $replacer = replacer;
    if ($replacer || !isArray(replacer)) replacer = function (key, value) {
      if ($replacer) value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  };
  var buggyJSON = $fails(function () {
    var S = $Symbol();
    return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
  });
  if (!useNative) {
    $Symbol = function Symbol() {
      if (isSymbol(this)) throw TypeError('Symbol is not a constructor');
      return wrap(uid(arguments.length > 0 ? arguments[0] : undefined));
    };
    redefine($Symbol.prototype, 'toString', function toString() {
      return this._k;
    });
    isSymbol = function (it) {
      return it instanceof $Symbol;
    };
    $.create = $create;
    $.isEnum = $propertyIsEnumerable;
    $.getDesc = $getOwnPropertyDescriptor;
    $.setDesc = $defineProperty;
    $.setDescs = $defineProperties;
    $.getNames = $names.get = $getOwnPropertyNames;
    $.getSymbols = $getOwnPropertySymbols;
    if (DESCRIPTORS && !$__require('npm:core-js@1.2.6/modules/$.library.js')) {
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }
  }
  var symbolStatics = {
    'for': function (key) {
      return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    keyFor: function keyFor(key) {
      return keyOf(SymbolRegistry, key);
    },
    useSetter: function () {
      setter = true;
    },
    useSimple: function () {
      setter = false;
    }
  };
  $.each.call(('hasInstance,isConcatSpreadable,iterator,match,replace,search,' + 'species,split,toPrimitive,toStringTag,unscopables').split(','), function (it) {
    var sym = wks(it);
    symbolStatics[it] = useNative ? sym : wrap(sym);
  });
  setter = true;
  $export($export.G + $export.W, { Symbol: $Symbol });
  $export($export.S, 'Symbol', symbolStatics);
  $export($export.S + $export.F * !useNative, 'Object', {
    create: $create,
    defineProperty: $defineProperty,
    defineProperties: $defineProperties,
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    getOwnPropertyNames: $getOwnPropertyNames,
    getOwnPropertySymbols: $getOwnPropertySymbols
  });
  $JSON && $export($export.S + $export.F * (!useNative || buggyJSON), 'JSON', { stringify: $stringify });
  setToStringTag($Symbol, 'Symbol');
  setToStringTag(Math, 'Math', true);
  setToStringTag(global.JSON, 'JSON', true);
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.assign.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.object-assign.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S + $export.F, 'Object', { assign: $__require('npm:core-js@1.2.6/modules/$.object-assign.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.is.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.same-value.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Object', { is: $__require('npm:core-js@1.2.6/modules/$.same-value.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.set-prototype-of.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.set-proto.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Object', { setPrototypeOf: $__require('npm:core-js@1.2.6/modules/$.set-proto.js').set });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.to-string.js', ['npm:core-js@1.2.6/modules/$.classof.js', 'npm:core-js@1.2.6/modules/$.wks.js', 'npm:core-js@1.2.6/modules/$.redefine.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var classof = $__require('npm:core-js@1.2.6/modules/$.classof.js'),
      test = {};
  test[$__require('npm:core-js@1.2.6/modules/$.wks.js')('toStringTag')] = 'z';
  if (test + '' != '[object z]') {
    $__require('npm:core-js@1.2.6/modules/$.redefine.js')(Object.prototype, 'toString', function toString() {
      return '[object ' + classof(this) + ']';
    }, true);
  }
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.freeze.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('freeze', function ($freeze) {
    return function freeze(it) {
      return $freeze && isObject(it) ? $freeze(it) : it;
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.seal.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('seal', function ($seal) {
    return function seal(it) {
      return $seal && isObject(it) ? $seal(it) : it;
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.prevent-extensions.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('preventExtensions', function ($preventExtensions) {
    return function preventExtensions(it) {
      return $preventExtensions && isObject(it) ? $preventExtensions(it) : it;
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.is-frozen.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('isFrozen', function ($isFrozen) {
    return function isFrozen(it) {
      return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.is-sealed.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('isSealed', function ($isSealed) {
    return function isSealed(it) {
      return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.is-extensible.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('isExtensible', function ($isExtensible) {
    return function isExtensible(it) {
      return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.get-own-property-descriptor.js', ['npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('getOwnPropertyDescriptor', function ($getOwnPropertyDescriptor) {
    return function getOwnPropertyDescriptor(it, key) {
      return $getOwnPropertyDescriptor(toIObject(it), key);
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.get-prototype-of.js', ['npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('getPrototypeOf', function ($getPrototypeOf) {
    return function getPrototypeOf(it) {
      return $getPrototypeOf(toObject(it));
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.keys.js', ['npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.object-sap.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js');
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('keys', function ($keys) {
    return function keys(it) {
      return $keys(toObject(it));
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.object-sap.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.core.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        core = $__require('npm:core-js@1.2.6/modules/$.core.js'),
        fails = $__require('npm:core-js@1.2.6/modules/$.fails.js');
    module.exports = function (KEY, exec) {
        var fn = (core.Object || {})[KEY] || Object[KEY],
            exp = {};
        exp[KEY] = exec(fn);
        $export($export.S + $export.F * fails(function () {
            fn(1);
        }), 'Object', exp);
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.get-names.js', ['npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
      getNames = $__require('npm:core-js@1.2.6/modules/$.js').getNames,
      toString = {}.toString;
  var windowNames = typeof window == 'object' && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames = function (it) {
    try {
      return getNames(it);
    } catch (e) {
      return windowNames.slice();
    }
  };
  module.exports.get = function getOwnPropertyNames(it) {
    if (windowNames && toString.call(it) == '[object Window]') return getWindowNames(it);
    return getNames(toIObject(it));
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.object.get-own-property-names.js', ['npm:core-js@1.2.6/modules/$.object-sap.js', 'npm:core-js@1.2.6/modules/$.get-names.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/$.object-sap.js')('getOwnPropertyNames', function () {
    return $__require('npm:core-js@1.2.6/modules/$.get-names.js').get;
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.function.name.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.property-desc.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.descriptors.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var setDesc = $__require('npm:core-js@1.2.6/modules/$.js').setDesc,
        createDesc = $__require('npm:core-js@1.2.6/modules/$.property-desc.js'),
        has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
        FProto = Function.prototype,
        nameRE = /^\s*function ([^ (]*)/,
        NAME = 'name';
    NAME in FProto || $__require('npm:core-js@1.2.6/modules/$.descriptors.js') && setDesc(FProto, NAME, {
        configurable: true,
        get: function () {
            var match = ('' + this).match(nameRE),
                name = match ? match[1] : '';
            has(this, NAME) || setDesc(this, NAME, createDesc(5, name));
            return name;
        }
    });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.function.has-instance.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      HAS_INSTANCE = $__require('npm:core-js@1.2.6/modules/$.wks.js')('hasInstance'),
      FunctionProto = Function.prototype;
  if (!(HAS_INSTANCE in FunctionProto)) $.setDesc(FunctionProto, HAS_INSTANCE, { value: function (O) {
      if (typeof this != 'function' || !isObject(O)) return false;
      if (!isObject(this.prototype)) return O instanceof this;
      while (O = $.getProto(O)) if (this.prototype === O) return true;
      return false;
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.to-primitive.js', ['npm:core-js@1.2.6/modules/$.is-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  module.exports = function (it, S) {
    if (!isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.constructor.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.cof.js', 'npm:core-js@1.2.6/modules/$.to-primitive.js', 'npm:core-js@1.2.6/modules/$.fails.js', 'npm:core-js@1.2.6/modules/$.string-trim.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.redefine.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      cof = $__require('npm:core-js@1.2.6/modules/$.cof.js'),
      toPrimitive = $__require('npm:core-js@1.2.6/modules/$.to-primitive.js'),
      fails = $__require('npm:core-js@1.2.6/modules/$.fails.js'),
      $trim = $__require('npm:core-js@1.2.6/modules/$.string-trim.js').trim,
      NUMBER = 'Number',
      $Number = global[NUMBER],
      Base = $Number,
      proto = $Number.prototype,
      BROKEN_COF = cof($.create(proto)) == NUMBER,
      TRIM = 'trim' in String.prototype;
  var toNumber = function (argument) {
    var it = toPrimitive(argument, false);
    if (typeof it == 'string' && it.length > 2) {
      it = TRIM ? it.trim() : $trim(it, 3);
      var first = it.charCodeAt(0),
          third,
          radix,
          maxCode;
      if (first === 43 || first === 45) {
        third = it.charCodeAt(2);
        if (third === 88 || third === 120) return NaN;
      } else if (first === 48) {
        switch (it.charCodeAt(1)) {
          case 66:
          case 98:
            radix = 2;
            maxCode = 49;
            break;
          case 79:
          case 111:
            radix = 8;
            maxCode = 55;
            break;
          default:
            return +it;
        }
        for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
          code = digits.charCodeAt(i);
          if (code < 48 || code > maxCode) return NaN;
        }
        return parseInt(digits, radix);
      }
    }
    return +it;
  };
  if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
    $Number = function Number(value) {
      var it = arguments.length < 1 ? 0 : value,
          that = this;
      return that instanceof $Number && (BROKEN_COF ? fails(function () {
        proto.valueOf.call(that);
      }) : cof(that) != NUMBER) ? new Base(toNumber(it)) : toNumber(it);
    };
    $.each.call($__require('npm:core-js@1.2.6/modules/$.descriptors.js') ? $.getNames(Base) : ('MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + 'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), function (key) {
      if (has(Base, key) && !has($Number, key)) {
        $.setDesc($Number, key, $.getDesc(Base, key));
      }
    });
    $Number.prototype = proto;
    proto.constructor = $Number;
    $__require('npm:core-js@1.2.6/modules/$.redefine.js')(global, NUMBER, $Number);
  }
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.epsilon.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.is-finite.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.global.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        _isFinite = $__require('npm:core-js@1.2.6/modules/$.global.js').isFinite;
    $export($export.S, 'Number', { isFinite: function isFinite(it) {
            return typeof it == 'number' && _isFinite(it);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.is-integer.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.is-integer.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Number', { isInteger: $__require('npm:core-js@1.2.6/modules/$.is-integer.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.is-nan.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $export($export.S, 'Number', { isNaN: function isNaN(number) {
            return number != number;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.is-integer.js', ['npm:core-js@1.2.6/modules/$.is-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      floor = Math.floor;
  module.exports = function isInteger(it) {
    return !isObject(it) && isFinite(it) && floor(it) === it;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.is-safe-integer.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.is-integer.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        isInteger = $__require('npm:core-js@1.2.6/modules/$.is-integer.js'),
        abs = Math.abs;
    $export($export.S, 'Number', { isSafeInteger: function isSafeInteger(number) {
            return isInteger(number) && abs(number) <= 0x1fffffffffffff;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.max-safe-integer.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.min-safe-integer.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.parse-float.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Number', { parseFloat: parseFloat });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.number.parse-int.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Number', { parseInt: parseInt });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.acosh.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-log1p.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        log1p = $__require('npm:core-js@1.2.6/modules/$.math-log1p.js'),
        sqrt = Math.sqrt,
        $acosh = Math.acosh;
    $export($export.S + $export.F * !($acosh && Math.floor($acosh(Number.MAX_VALUE)) == 710), 'Math', { acosh: function acosh(x) {
            return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? Math.log(x) + Math.LN2 : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.asinh.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  function asinh(x) {
    return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
  }
  $export($export.S, 'Math', { asinh: asinh });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.atanh.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $export($export.S, 'Math', { atanh: function atanh(x) {
            return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.cbrt.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-sign.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        sign = $__require('npm:core-js@1.2.6/modules/$.math-sign.js');
    $export($export.S, 'Math', { cbrt: function cbrt(x) {
            return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.clz32.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $export($export.S, 'Math', { clz32: function clz32(x) {
            return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.cosh.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        exp = Math.exp;
    $export($export.S, 'Math', { cosh: function cosh(x) {
            return (exp(x = +x) + exp(-x)) / 2;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.expm1.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-expm1.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Math', { expm1: $__require('npm:core-js@1.2.6/modules/$.math-expm1.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.fround.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-sign.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      sign = $__require('npm:core-js@1.2.6/modules/$.math-sign.js'),
      pow = Math.pow,
      EPSILON = pow(2, -52),
      EPSILON32 = pow(2, -23),
      MAX32 = pow(2, 127) * (2 - EPSILON32),
      MIN32 = pow(2, -126);
  var roundTiesToEven = function (n) {
    return n + 1 / EPSILON - 1 / EPSILON;
  };
  $export($export.S, 'Math', { fround: function fround(x) {
      var $abs = Math.abs(x),
          $sign = sign(x),
          a,
          result;
      if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
      a = (1 + EPSILON32 / EPSILON) * $abs;
      result = a - (a - $abs);
      if (result > MAX32 || result != result) return $sign * Infinity;
      return $sign * result;
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.hypot.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      abs = Math.abs;
  $export($export.S, 'Math', { hypot: function hypot(value1, value2) {
      var sum = 0,
          i = 0,
          $$ = arguments,
          $$len = $$.length,
          larg = 0,
          arg,
          div;
      while (i < $$len) {
        arg = abs($$[i++]);
        if (larg < arg) {
          div = larg / arg;
          sum = sum * div * div + 1;
          larg = arg;
        } else if (arg > 0) {
          div = arg / larg;
          sum += div * div;
        } else sum += arg;
      }
      return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.imul.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $imul = Math.imul;
    $export($export.S + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
        return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
    }), 'Math', { imul: function imul(x, y) {
            var UINT16 = 0xffff,
                xn = +x,
                yn = +y,
                xl = UINT16 & xn,
                yl = UINT16 & yn;
            return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.log10.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $export($export.S, 'Math', { log10: function log10(x) {
            return Math.log(x) / Math.LN10;
        } });
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.math-log1p.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 20.2.2.20 Math.log1p(x)
  module.exports = Math.log1p || function log1p(x) {
    return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.log1p.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-log1p.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Math', { log1p: $__require('npm:core-js@1.2.6/modules/$.math-log1p.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.log2.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $export($export.S, 'Math', { log2: function log2(x) {
            return Math.log(x) / Math.LN2;
        } });
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.math-sign.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 20.2.2.28 Math.sign(x)
  module.exports = Math.sign || function sign(x) {
    return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.sign.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-sign.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Math', { sign: $__require('npm:core-js@1.2.6/modules/$.math-sign.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.sinh.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-expm1.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        expm1 = $__require('npm:core-js@1.2.6/modules/$.math-expm1.js'),
        exp = Math.exp;
    $export($export.S + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
        return !Math.sinh(-2e-17) != -2e-17;
    }), 'Math', { sinh: function sinh(x) {
            return Math.abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
        } });
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.math-expm1.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 20.2.2.14 Math.expm1(x)
  module.exports = Math.expm1 || function expm1(x) {
    return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.tanh.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.math-expm1.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        expm1 = $__require('npm:core-js@1.2.6/modules/$.math-expm1.js'),
        exp = Math.exp;
    $export($export.S, 'Math', { tanh: function tanh(x) {
            var a = expm1(x = +x),
                b = expm1(-x);
            return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.math.trunc.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $export($export.S, 'Math', { trunc: function trunc(it) {
            return (it > 0 ? Math.floor : Math.ceil)(it);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.from-code-point.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.to-index.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        toIndex = $__require('npm:core-js@1.2.6/modules/$.to-index.js'),
        fromCharCode = String.fromCharCode,
        $fromCodePoint = String.fromCodePoint;
    $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', { fromCodePoint: function fromCodePoint(x) {
            var res = [],
                $$ = arguments,
                $$len = $$.length,
                i = 0,
                code;
            while ($$len > i) {
                code = +$$[i++];
                if (toIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
                res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
            }
            return res.join('');
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.raw.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.to-length.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
        toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js');
    $export($export.S, 'String', { raw: function raw(callSite) {
            var tpl = toIObject(callSite.raw),
                len = toLength(tpl.length),
                $$ = arguments,
                $$len = $$.length,
                res = [],
                i = 0;
            while (len > i) {
                res.push(String(tpl[i++]));
                if (i < $$len) res.push(String($$[i]));
            }
            return res.join('');
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.trim.js', ['npm:core-js@1.2.6/modules/$.string-trim.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  $__require('npm:core-js@1.2.6/modules/$.string-trim.js')('trim', function ($trim) {
    return function trim() {
      return $trim(this, 3);
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.iterator.js', ['npm:core-js@1.2.6/modules/$.string-at.js', 'npm:core-js@1.2.6/modules/$.iter-define.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $at = $__require('npm:core-js@1.2.6/modules/$.string-at.js')(true);
  $__require('npm:core-js@1.2.6/modules/$.iter-define.js')(String, 'String', function (iterated) {
    this._t = String(iterated);
    this._i = 0;
  }, function () {
    var O = this._t,
        index = this._i,
        point;
    if (index >= O.length) return {
      value: undefined,
      done: true
    };
    point = $at(O, index);
    this._i += point.length;
    return {
      value: point,
      done: false
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.code-point-at.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.string-at.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $at = $__require('npm:core-js@1.2.6/modules/$.string-at.js')(false);
    $export($export.P, 'String', { codePointAt: function codePointAt(pos) {
            return $at(this, pos);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.ends-with.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/$.string-context.js', 'npm:core-js@1.2.6/modules/$.fails-is-regexp.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
        context = $__require('npm:core-js@1.2.6/modules/$.string-context.js'),
        ENDS_WITH = 'endsWith',
        $endsWith = ''[ENDS_WITH];
    $export($export.P + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails-is-regexp.js')(ENDS_WITH), 'String', { endsWith: function endsWith(searchString) {
            var that = context(this, searchString, ENDS_WITH),
                $$ = arguments,
                endPosition = $$.length > 1 ? $$[1] : undefined,
                len = toLength(that.length),
                end = endPosition === undefined ? len : Math.min(toLength(endPosition), len),
                search = String(searchString);
            return $endsWith ? $endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.includes.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.string-context.js', 'npm:core-js@1.2.6/modules/$.fails-is-regexp.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        context = $__require('npm:core-js@1.2.6/modules/$.string-context.js'),
        INCLUDES = 'includes';
    $export($export.P + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails-is-regexp.js')(INCLUDES), 'String', { includes: function includes(searchString) {
            return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.repeat.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.string-repeat.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.P, 'String', { repeat: $__require('npm:core-js@1.2.6/modules/$.string-repeat.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.string-context.js', ['npm:core-js@1.2.6/modules/$.is-regexp.js', 'npm:core-js@1.2.6/modules/$.defined.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isRegExp = $__require('npm:core-js@1.2.6/modules/$.is-regexp.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js');
  module.exports = function (that, searchString, NAME) {
    if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
    return String(defined(that));
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.fails-is-regexp.js', ['npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var MATCH = $__require('npm:core-js@1.2.6/modules/$.wks.js')('match');
  module.exports = function (KEY) {
    var re = /./;
    try {
      '/./'[KEY](re);
    } catch (e) {
      try {
        re[MATCH] = false;
        return !'/./'[KEY](re);
      } catch (f) {}
    }
    return true;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.string.starts-with.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/$.string-context.js', 'npm:core-js@1.2.6/modules/$.fails-is-regexp.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
        context = $__require('npm:core-js@1.2.6/modules/$.string-context.js'),
        STARTS_WITH = 'startsWith',
        $startsWith = ''[STARTS_WITH];
    $export($export.P + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails-is-regexp.js')(STARTS_WITH), 'String', { startsWith: function startsWith(searchString) {
            var that = context(this, searchString, STARTS_WITH),
                $$ = arguments,
                index = toLength(Math.min($$.length > 1 ? $$[1] : undefined, that.length)),
                search = String(searchString);
            return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.from.js', ['npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.iter-call.js', 'npm:core-js@1.2.6/modules/$.is-array-iter.js', 'npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/core.get-iterator-method.js', 'npm:core-js@1.2.6/modules/$.iter-detect.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js'),
      call = $__require('npm:core-js@1.2.6/modules/$.iter-call.js'),
      isArrayIter = $__require('npm:core-js@1.2.6/modules/$.is-array-iter.js'),
      toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
      getIterFn = $__require('npm:core-js@1.2.6/modules/core.get-iterator-method.js');
  $export($export.S + $export.F * !$__require('npm:core-js@1.2.6/modules/$.iter-detect.js')(function (iter) {
    Array.from(iter);
  }), 'Array', { from: function from(arrayLike) {
      var O = toObject(arrayLike),
          C = typeof this == 'function' ? this : Array,
          $$ = arguments,
          $$len = $$.length,
          mapfn = $$len > 1 ? $$[1] : undefined,
          mapping = mapfn !== undefined,
          index = 0,
          iterFn = getIterFn(O),
          length,
          result,
          step,
          iterator;
      if (mapping) mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);
      if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
        for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
          result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;
        }
      } else {
        length = toLength(O.length);
        for (result = new C(length); length > index; index++) {
          result[index] = mapping ? mapfn(O[index], index) : O[index];
        }
      }
      result.length = index;
      return result;
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.of.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
    function F() {}
    return !(Array.of.call(F) instanceof F);
  }), 'Array', { of: function of() {
      var index = 0,
          $$ = arguments,
          $$len = $$.length,
          result = new (typeof this == 'function' ? this : Array)($$len);
      while ($$len > index) result[index] = $$[index++];
      result.length = $$len;
      return result;
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.species.js', ['npm:core-js@1.2.6/modules/$.set-species.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/$.set-species.js')('Array');
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.array-copy-within.js', ['npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.to-index.js', 'npm:core-js@1.2.6/modules/$.to-length.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js'),
      toIndex = $__require('npm:core-js@1.2.6/modules/$.to-index.js'),
      toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js');
  module.exports = [].copyWithin || function copyWithin(target, start) {
    var O = toObject(this),
        len = toLength(O.length),
        to = toIndex(target, len),
        from = toIndex(start, len),
        $$ = arguments,
        end = $$.length > 2 ? $$[2] : undefined,
        count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to),
        inc = 1;
    if (from < to && to < from + count) {
      inc = -1;
      from += count - 1;
      to += count - 1;
    }
    while (count-- > 0) {
      if (from in O) O[to] = O[from];else delete O[to];
      to += inc;
      from += inc;
    }
    return O;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.copy-within.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.array-copy-within.js', 'npm:core-js@1.2.6/modules/$.add-to-unscopables.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.P, 'Array', { copyWithin: $__require('npm:core-js@1.2.6/modules/$.array-copy-within.js') });
  $__require('npm:core-js@1.2.6/modules/$.add-to-unscopables.js')('copyWithin');
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.array-fill.js', ['npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.to-index.js', 'npm:core-js@1.2.6/modules/$.to-length.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js'),
        toIndex = $__require('npm:core-js@1.2.6/modules/$.to-index.js'),
        toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js');
    module.exports = [].fill || function fill(value) {
        var O = toObject(this),
            length = toLength(O.length),
            $$ = arguments,
            $$len = $$.length,
            index = toIndex($$len > 1 ? $$[1] : undefined, length),
            end = $$len > 2 ? $$[2] : undefined,
            endPos = end === undefined ? length : toIndex(end, length);
        while (endPos > index) O[index++] = value;
        return O;
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.fill.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.array-fill.js', 'npm:core-js@1.2.6/modules/$.add-to-unscopables.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.P, 'Array', { fill: $__require('npm:core-js@1.2.6/modules/$.array-fill.js') });
  $__require('npm:core-js@1.2.6/modules/$.add-to-unscopables.js')('fill');
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.find.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.array-methods.js', 'npm:core-js@1.2.6/modules/$.add-to-unscopables.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      $find = $__require('npm:core-js@1.2.6/modules/$.array-methods.js')(5),
      KEY = 'find',
      forced = true;
  if (KEY in []) Array(1)[KEY](function () {
    forced = false;
  });
  $export($export.P + $export.F * forced, 'Array', { find: function find(callbackfn) {
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    } });
  $__require('npm:core-js@1.2.6/modules/$.add-to-unscopables.js')(KEY);
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.find-index.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.array-methods.js', 'npm:core-js@1.2.6/modules/$.add-to-unscopables.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      $find = $__require('npm:core-js@1.2.6/modules/$.array-methods.js')(6),
      KEY = 'findIndex',
      forced = true;
  if (KEY in []) Array(1)[KEY](function () {
    forced = false;
  });
  $export($export.P + $export.F * forced, 'Array', { findIndex: function findIndex(callbackfn) {
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    } });
  $__require('npm:core-js@1.2.6/modules/$.add-to-unscopables.js')(KEY);
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.is-regexp.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.cof.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      cof = $__require('npm:core-js@1.2.6/modules/$.cof.js'),
      MATCH = $__require('npm:core-js@1.2.6/modules/$.wks.js')('match');
  module.exports = function (it) {
    var isRegExp;
    return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.regexp.constructor.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.is-regexp.js', 'npm:core-js@1.2.6/modules/$.flags.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.fails.js', 'npm:core-js@1.2.6/modules/$.wks.js', 'npm:core-js@1.2.6/modules/$.redefine.js', 'npm:core-js@1.2.6/modules/$.set-species.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      isRegExp = $__require('npm:core-js@1.2.6/modules/$.is-regexp.js'),
      $flags = $__require('npm:core-js@1.2.6/modules/$.flags.js'),
      $RegExp = global.RegExp,
      Base = $RegExp,
      proto = $RegExp.prototype,
      re1 = /a/g,
      re2 = /a/g,
      CORRECT_NEW = new $RegExp(re1) !== re1;
  if ($__require('npm:core-js@1.2.6/modules/$.descriptors.js') && (!CORRECT_NEW || $__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
    re2[$__require('npm:core-js@1.2.6/modules/$.wks.js')('match')] = false;
    return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
  }))) {
    $RegExp = function RegExp(p, f) {
      var piRE = isRegExp(p),
          fiU = f === undefined;
      return !(this instanceof $RegExp) && piRE && p.constructor === $RegExp && fiU ? p : CORRECT_NEW ? new Base(piRE && !fiU ? p.source : p, f) : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f);
    };
    $.each.call($.getNames(Base), function (key) {
      key in $RegExp || $.setDesc($RegExp, key, {
        configurable: true,
        get: function () {
          return Base[key];
        },
        set: function (it) {
          Base[key] = it;
        }
      });
    });
    proto.constructor = $RegExp;
    $RegExp.prototype = proto;
    $__require('npm:core-js@1.2.6/modules/$.redefine.js')(global, 'RegExp', $RegExp);
  }
  $__require('npm:core-js@1.2.6/modules/$.set-species.js')('RegExp');
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.flags.js', ['npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
  module.exports = function () {
    var that = anObject(this),
        result = '';
    if (that.global) result += 'g';
    if (that.ignoreCase) result += 'i';
    if (that.multiline) result += 'm';
    if (that.unicode) result += 'u';
    if (that.sticky) result += 'y';
    return result;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.regexp.flags.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.flags.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js');
  if ($__require('npm:core-js@1.2.6/modules/$.descriptors.js') && /./g.flags != 'g') $.setDesc(RegExp.prototype, 'flags', {
    configurable: true,
    get: $__require('npm:core-js@1.2.6/modules/$.flags.js')
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.regexp.match.js', ['npm:core-js@1.2.6/modules/$.fix-re-wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/$.fix-re-wks.js')('match', 1, function (defined, MATCH) {
    return function match(regexp) {
      'use strict';

      var O = defined(this),
          fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.regexp.replace.js', ['npm:core-js@1.2.6/modules/$.fix-re-wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/$.fix-re-wks.js')('replace', 2, function (defined, REPLACE, $replace) {
    return function replace(searchValue, replaceValue) {
      'use strict';

      var O = defined(this),
          fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.regexp.search.js', ['npm:core-js@1.2.6/modules/$.fix-re-wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/$.fix-re-wks.js')('search', 1, function (defined, SEARCH) {
    return function search(regexp) {
      'use strict';

      var O = defined(this),
          fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.fix-re-wks.js', ['npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.redefine.js', 'npm:core-js@1.2.6/modules/$.fails.js', 'npm:core-js@1.2.6/modules/$.defined.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hide = $__require('npm:core-js@1.2.6/modules/$.hide.js'),
      redefine = $__require('npm:core-js@1.2.6/modules/$.redefine.js'),
      fails = $__require('npm:core-js@1.2.6/modules/$.fails.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js'),
      wks = $__require('npm:core-js@1.2.6/modules/$.wks.js');
  module.exports = function (KEY, length, exec) {
    var SYMBOL = wks(KEY),
        original = ''[KEY];
    if (fails(function () {
      var O = {};
      O[SYMBOL] = function () {
        return 7;
      };
      return ''[KEY](O) != 7;
    })) {
      redefine(String.prototype, KEY, exec(defined, SYMBOL, original));
      hide(RegExp.prototype, SYMBOL, length == 2 ? function (string, arg) {
        return original.call(string, this, arg);
      } : function (string) {
        return original.call(string, this);
      });
    }
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.regexp.split.js', ['npm:core-js@1.2.6/modules/$.fix-re-wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/$.fix-re-wks.js')('split', 2, function (defined, SPLIT, $split) {
    return function split(separator, limit) {
      'use strict';

      var O = defined(this),
          fn = separator == undefined ? undefined : separator[SPLIT];
      return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
    };
  });
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.same-value.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 7.2.9 SameValue(x, y)
  module.exports = Object.is || function is(x, y) {
    return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.species-constructor.js', ['npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.a-function.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
        aFunction = $__require('npm:core-js@1.2.6/modules/$.a-function.js'),
        SPECIES = $__require('npm:core-js@1.2.6/modules/$.wks.js')('species');
    module.exports = function (O, D) {
        var C = anObject(O).constructor,
            S;
        return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.microtask.js', ['npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.task.js', 'npm:core-js@1.2.6/modules/$.cof.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
        macrotask = $__require('npm:core-js@1.2.6/modules/$.task.js').set,
        Observer = global.MutationObserver || global.WebKitMutationObserver,
        process = global.process,
        Promise = global.Promise,
        isNode = $__require('npm:core-js@1.2.6/modules/$.cof.js')(process) == 'process',
        head,
        last,
        notify;
    var flush = function () {
      var parent, domain, fn;
      if (isNode && (parent = process.domain)) {
        process.domain = null;
        parent.exit();
      }
      while (head) {
        domain = head.domain;
        fn = head.fn;
        if (domain) domain.enter();
        fn();
        if (domain) domain.exit();
        head = head.next;
      }
      last = undefined;
      if (parent) parent.enter();
    };
    if (isNode) {
      notify = function () {
        process.nextTick(flush);
      };
    } else if (Observer) {
      var toggle = 1,
          node = document.createTextNode('');
      new Observer(flush).observe(node, { characterData: true });
      notify = function () {
        node.data = toggle = -toggle;
      };
    } else if (Promise && Promise.resolve) {
      notify = function () {
        Promise.resolve().then(flush);
      };
    } else {
      notify = function () {
        macrotask.call(global, flush);
      };
    }
    module.exports = function asap(fn) {
      var task = {
        fn: fn,
        next: undefined,
        domain: isNode && process.domain
      };
      if (last) last.next = task;
      if (!head) {
        head = task;
        notify();
      }
      last = task;
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.promise.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.library.js', 'npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.classof.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.a-function.js', 'npm:core-js@1.2.6/modules/$.strict-new.js', 'npm:core-js@1.2.6/modules/$.for-of.js', 'npm:core-js@1.2.6/modules/$.set-proto.js', 'npm:core-js@1.2.6/modules/$.same-value.js', 'npm:core-js@1.2.6/modules/$.wks.js', 'npm:core-js@1.2.6/modules/$.species-constructor.js', 'npm:core-js@1.2.6/modules/$.microtask.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.redefine-all.js', 'npm:core-js@1.2.6/modules/$.set-to-string-tag.js', 'npm:core-js@1.2.6/modules/$.set-species.js', 'npm:core-js@1.2.6/modules/$.core.js', 'npm:core-js@1.2.6/modules/$.iter-detect.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
        LIBRARY = $__require('npm:core-js@1.2.6/modules/$.library.js'),
        global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
        ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
        classof = $__require('npm:core-js@1.2.6/modules/$.classof.js'),
        $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
        anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
        aFunction = $__require('npm:core-js@1.2.6/modules/$.a-function.js'),
        strictNew = $__require('npm:core-js@1.2.6/modules/$.strict-new.js'),
        forOf = $__require('npm:core-js@1.2.6/modules/$.for-of.js'),
        setProto = $__require('npm:core-js@1.2.6/modules/$.set-proto.js').set,
        same = $__require('npm:core-js@1.2.6/modules/$.same-value.js'),
        SPECIES = $__require('npm:core-js@1.2.6/modules/$.wks.js')('species'),
        speciesConstructor = $__require('npm:core-js@1.2.6/modules/$.species-constructor.js'),
        asap = $__require('npm:core-js@1.2.6/modules/$.microtask.js'),
        PROMISE = 'Promise',
        process = global.process,
        isNode = classof(process) == 'process',
        P = global[PROMISE],
        Wrapper;
    var testResolve = function (sub) {
      var test = new P(function () {});
      if (sub) test.constructor = Object;
      return P.resolve(test) === test;
    };
    var USE_NATIVE = function () {
      var works = false;
      function P2(x) {
        var self = new P(x);
        setProto(self, P2.prototype);
        return self;
      }
      try {
        works = P && P.resolve && testResolve();
        setProto(P2, P);
        P2.prototype = $.create(P.prototype, { constructor: { value: P2 } });
        if (!(P2.resolve(5).then(function () {}) instanceof P2)) {
          works = false;
        }
        if (works && $__require('npm:core-js@1.2.6/modules/$.descriptors.js')) {
          var thenableThenGotten = false;
          P.resolve($.setDesc({}, 'then', { get: function () {
              thenableThenGotten = true;
            } }));
          works = thenableThenGotten;
        }
      } catch (e) {
        works = false;
      }
      return works;
    }();
    var sameConstructor = function (a, b) {
      if (LIBRARY && a === P && b === Wrapper) return true;
      return same(a, b);
    };
    var getConstructor = function (C) {
      var S = anObject(C)[SPECIES];
      return S != undefined ? S : C;
    };
    var isThenable = function (it) {
      var then;
      return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
    };
    var PromiseCapability = function (C) {
      var resolve, reject;
      this.promise = new C(function ($$resolve, $$reject) {
        if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
        resolve = $$resolve;
        reject = $$reject;
      });
      this.resolve = aFunction(resolve), this.reject = aFunction(reject);
    };
    var perform = function (exec) {
      try {
        exec();
      } catch (e) {
        return { error: e };
      }
    };
    var notify = function (record, isReject) {
      if (record.n) return;
      record.n = true;
      var chain = record.c;
      asap(function () {
        var value = record.v,
            ok = record.s == 1,
            i = 0;
        var run = function (reaction) {
          var handler = ok ? reaction.ok : reaction.fail,
              resolve = reaction.resolve,
              reject = reaction.reject,
              result,
              then;
          try {
            if (handler) {
              if (!ok) record.h = true;
              result = handler === true ? value : handler(value);
              if (result === reaction.promise) {
                reject(TypeError('Promise-chain cycle'));
              } else if (then = isThenable(result)) {
                then.call(result, resolve, reject);
              } else resolve(result);
            } else reject(value);
          } catch (e) {
            reject(e);
          }
        };
        while (chain.length > i) run(chain[i++]);
        chain.length = 0;
        record.n = false;
        if (isReject) setTimeout(function () {
          var promise = record.p,
              handler,
              console;
          if (isUnhandled(promise)) {
            if (isNode) {
              process.emit('unhandledRejection', value, promise);
            } else if (handler = global.onunhandledrejection) {
              handler({
                promise: promise,
                reason: value
              });
            } else if ((console = global.console) && console.error) {
              console.error('Unhandled promise rejection', value);
            }
          }
          record.a = undefined;
        }, 1);
      });
    };
    var isUnhandled = function (promise) {
      var record = promise._d,
          chain = record.a || record.c,
          i = 0,
          reaction;
      if (record.h) return false;
      while (chain.length > i) {
        reaction = chain[i++];
        if (reaction.fail || !isUnhandled(reaction.promise)) return false;
      }
      return true;
    };
    var $reject = function (value) {
      var record = this;
      if (record.d) return;
      record.d = true;
      record = record.r || record;
      record.v = value;
      record.s = 2;
      record.a = record.c.slice();
      notify(record, true);
    };
    var $resolve = function (value) {
      var record = this,
          then;
      if (record.d) return;
      record.d = true;
      record = record.r || record;
      try {
        if (record.p === value) throw TypeError("Promise can't be resolved itself");
        if (then = isThenable(value)) {
          asap(function () {
            var wrapper = {
              r: record,
              d: false
            };
            try {
              then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
            } catch (e) {
              $reject.call(wrapper, e);
            }
          });
        } else {
          record.v = value;
          record.s = 1;
          notify(record, false);
        }
      } catch (e) {
        $reject.call({
          r: record,
          d: false
        }, e);
      }
    };
    if (!USE_NATIVE) {
      P = function Promise(executor) {
        aFunction(executor);
        var record = this._d = {
          p: strictNew(this, P, PROMISE),
          c: [],
          a: undefined,
          s: 0,
          d: false,
          v: undefined,
          h: false,
          n: false
        };
        try {
          executor(ctx($resolve, record, 1), ctx($reject, record, 1));
        } catch (err) {
          $reject.call(record, err);
        }
      };
      $__require('npm:core-js@1.2.6/modules/$.redefine-all.js')(P.prototype, {
        then: function then(onFulfilled, onRejected) {
          var reaction = new PromiseCapability(speciesConstructor(this, P)),
              promise = reaction.promise,
              record = this._d;
          reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
          reaction.fail = typeof onRejected == 'function' && onRejected;
          record.c.push(reaction);
          if (record.a) record.a.push(reaction);
          if (record.s) notify(record, false);
          return promise;
        },
        'catch': function (onRejected) {
          return this.then(undefined, onRejected);
        }
      });
    }
    $export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: P });
    $__require('npm:core-js@1.2.6/modules/$.set-to-string-tag.js')(P, PROMISE);
    $__require('npm:core-js@1.2.6/modules/$.set-species.js')(PROMISE);
    Wrapper = $__require('npm:core-js@1.2.6/modules/$.core.js')[PROMISE];
    $export($export.S + $export.F * !USE_NATIVE, PROMISE, { reject: function reject(r) {
        var capability = new PromiseCapability(this),
            $$reject = capability.reject;
        $$reject(r);
        return capability.promise;
      } });
    $export($export.S + $export.F * (!USE_NATIVE || testResolve(true)), PROMISE, { resolve: function resolve(x) {
        if (x instanceof P && sameConstructor(x.constructor, this)) return x;
        var capability = new PromiseCapability(this),
            $$resolve = capability.resolve;
        $$resolve(x);
        return capability.promise;
      } });
    $export($export.S + $export.F * !(USE_NATIVE && $__require('npm:core-js@1.2.6/modules/$.iter-detect.js')(function (iter) {
      P.all(iter)['catch'](function () {});
    })), PROMISE, {
      all: function all(iterable) {
        var C = getConstructor(this),
            capability = new PromiseCapability(C),
            resolve = capability.resolve,
            reject = capability.reject,
            values = [];
        var abrupt = perform(function () {
          forOf(iterable, false, values.push, values);
          var remaining = values.length,
              results = Array(remaining);
          if (remaining) $.each.call(values, function (promise, index) {
            var alreadyCalled = false;
            C.resolve(promise).then(function (value) {
              if (alreadyCalled) return;
              alreadyCalled = true;
              results[index] = value;
              --remaining || resolve(results);
            }, reject);
          });else resolve(results);
        });
        if (abrupt) reject(abrupt.error);
        return capability.promise;
      },
      race: function race(iterable) {
        var C = getConstructor(this),
            capability = new PromiseCapability(C),
            reject = capability.reject;
        var abrupt = perform(function () {
          forOf(iterable, false, function (promise) {
            C.resolve(promise).then(capability.resolve, reject);
          });
        });
        if (abrupt) reject(abrupt.error);
        return capability.promise;
      }
    });
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.map.js', ['npm:core-js@1.2.6/modules/$.collection-strong.js', 'npm:core-js@1.2.6/modules/$.collection.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var strong = $__require('npm:core-js@1.2.6/modules/$.collection-strong.js');
  $__require('npm:core-js@1.2.6/modules/$.collection.js')('Map', function (get) {
    return function Map() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, {
    get: function get(key) {
      var entry = strong.getEntry(this, key);
      return entry && entry.v;
    },
    set: function set(key, value) {
      return strong.def(this, key === 0 ? 0 : key, value);
    }
  }, strong, true);
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.set-species.js', ['npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      DESCRIPTORS = $__require('npm:core-js@1.2.6/modules/$.descriptors.js'),
      SPECIES = $__require('npm:core-js@1.2.6/modules/$.wks.js')('species');
  module.exports = function (KEY) {
    var C = global[KEY];
    if (DESCRIPTORS && C && !C[SPECIES]) $.setDesc(C, SPECIES, {
      configurable: true,
      get: function () {
        return this;
      }
    });
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.collection-strong.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.redefine-all.js', 'npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.strict-new.js', 'npm:core-js@1.2.6/modules/$.defined.js', 'npm:core-js@1.2.6/modules/$.for-of.js', 'npm:core-js@1.2.6/modules/$.iter-define.js', 'npm:core-js@1.2.6/modules/$.iter-step.js', 'npm:core-js@1.2.6/modules/$.uid.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.set-species.js', 'npm:core-js@1.2.6/modules/$.descriptors.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      hide = $__require('npm:core-js@1.2.6/modules/$.hide.js'),
      redefineAll = $__require('npm:core-js@1.2.6/modules/$.redefine-all.js'),
      ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
      strictNew = $__require('npm:core-js@1.2.6/modules/$.strict-new.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js'),
      forOf = $__require('npm:core-js@1.2.6/modules/$.for-of.js'),
      $iterDefine = $__require('npm:core-js@1.2.6/modules/$.iter-define.js'),
      step = $__require('npm:core-js@1.2.6/modules/$.iter-step.js'),
      ID = $__require('npm:core-js@1.2.6/modules/$.uid.js')('id'),
      $has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      setSpecies = $__require('npm:core-js@1.2.6/modules/$.set-species.js'),
      DESCRIPTORS = $__require('npm:core-js@1.2.6/modules/$.descriptors.js'),
      isExtensible = Object.isExtensible || isObject,
      SIZE = DESCRIPTORS ? '_s' : 'size',
      id = 0;
  var fastKey = function (it, create) {
    if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!$has(it, ID)) {
      if (!isExtensible(it)) return 'F';
      if (!create) return 'E';
      hide(it, ID, ++id);
    }
    return 'O' + it[ID];
  };
  var getEntry = function (that, key) {
    var index = fastKey(key),
        entry;
    if (index !== 'F') return that._i[index];
    for (entry = that._f; entry; entry = entry.n) {
      if (entry.k == key) return entry;
    }
  };
  module.exports = {
    getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
      var C = wrapper(function (that, iterable) {
        strictNew(that, C, NAME);
        that._i = $.create(null);
        that._f = undefined;
        that._l = undefined;
        that[SIZE] = 0;
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        clear: function clear() {
          for (var that = this, data = that._i, entry = that._f; entry; entry = entry.n) {
            entry.r = true;
            if (entry.p) entry.p = entry.p.n = undefined;
            delete data[entry.i];
          }
          that._f = that._l = undefined;
          that[SIZE] = 0;
        },
        'delete': function (key) {
          var that = this,
              entry = getEntry(that, key);
          if (entry) {
            var next = entry.n,
                prev = entry.p;
            delete that._i[entry.i];
            entry.r = true;
            if (prev) prev.n = next;
            if (next) next.p = prev;
            if (that._f == entry) that._f = next;
            if (that._l == entry) that._l = prev;
            that[SIZE]--;
          }
          return !!entry;
        },
        forEach: function forEach(callbackfn) {
          var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3),
              entry;
          while (entry = entry ? entry.n : this._f) {
            f(entry.v, entry.k, this);
            while (entry && entry.r) entry = entry.p;
          }
        },
        has: function has(key) {
          return !!getEntry(this, key);
        }
      });
      if (DESCRIPTORS) $.setDesc(C.prototype, 'size', { get: function () {
          return defined(this[SIZE]);
        } });
      return C;
    },
    def: function (that, key, value) {
      var entry = getEntry(that, key),
          prev,
          index;
      if (entry) {
        entry.v = value;
      } else {
        that._l = entry = {
          i: index = fastKey(key, true),
          k: key,
          v: value,
          p: prev = that._l,
          n: undefined,
          r: false
        };
        if (!that._f) that._f = entry;
        if (prev) prev.n = entry;
        that[SIZE]++;
        if (index !== 'F') that._i[index] = entry;
      }
      return that;
    },
    getEntry: getEntry,
    setStrong: function (C, NAME, IS_MAP) {
      $iterDefine(C, NAME, function (iterated, kind) {
        this._t = iterated;
        this._k = kind;
        this._l = undefined;
      }, function () {
        var that = this,
            kind = that._k,
            entry = that._l;
        while (entry && entry.r) entry = entry.p;
        if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
          that._t = undefined;
          return step(1);
        }
        if (kind == 'keys') return step(0, entry.k);
        if (kind == 'values') return step(0, entry.v);
        return step(0, [entry.k, entry.v]);
      }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);
      setSpecies(NAME);
    }
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.set.js', ['npm:core-js@1.2.6/modules/$.collection-strong.js', 'npm:core-js@1.2.6/modules/$.collection.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var strong = $__require('npm:core-js@1.2.6/modules/$.collection-strong.js');
  $__require('npm:core-js@1.2.6/modules/$.collection.js')('Set', function (get) {
    return function Set() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, { add: function add(value) {
      return strong.def(this, value = value === 0 ? 0 : value, value);
    } }, strong);
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.weak-map.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.redefine.js', 'npm:core-js@1.2.6/modules/$.collection-weak.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.collection.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      redefine = $__require('npm:core-js@1.2.6/modules/$.redefine.js'),
      weak = $__require('npm:core-js@1.2.6/modules/$.collection-weak.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      frozenStore = weak.frozenStore,
      WEAK = weak.WEAK,
      isExtensible = Object.isExtensible || isObject,
      tmp = {};
  var $WeakMap = $__require('npm:core-js@1.2.6/modules/$.collection.js')('WeakMap', function (get) {
    return function WeakMap() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, {
    get: function get(key) {
      if (isObject(key)) {
        if (!isExtensible(key)) return frozenStore(this).get(key);
        if (has(key, WEAK)) return key[WEAK][this._i];
      }
    },
    set: function set(key, value) {
      return weak.def(this, key, value);
    }
  }, weak, true, true);
  if (new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7) {
    $.each.call(['delete', 'has', 'get', 'set'], function (key) {
      var proto = $WeakMap.prototype,
          method = proto[key];
      redefine(proto, key, function (a, b) {
        if (isObject(a) && !isExtensible(a)) {
          var result = frozenStore(this)[key](a, b);
          return key == 'set' ? this : result;
        }
        return method.call(this, a, b);
      });
    });
  }
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.is-array.js', ['npm:core-js@1.2.6/modules/$.cof.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var cof = $__require('npm:core-js@1.2.6/modules/$.cof.js');
  module.exports = Array.isArray || function (arg) {
    return cof(arg) == 'Array';
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.array-species-create.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.is-array.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      isArray = $__require('npm:core-js@1.2.6/modules/$.is-array.js'),
      SPECIES = $__require('npm:core-js@1.2.6/modules/$.wks.js')('species');
  module.exports = function (original, length) {
    var C;
    if (isArray(original)) {
      C = original.constructor;
      if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
      if (isObject(C)) {
        C = C[SPECIES];
        if (C === null) C = undefined;
      }
    }
    return new (C === undefined ? Array : C)(length);
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.array-methods.js', ['npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.iobject.js', 'npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/$.array-species-create.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
      IObject = $__require('npm:core-js@1.2.6/modules/$.iobject.js'),
      toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js'),
      toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
      asc = $__require('npm:core-js@1.2.6/modules/$.array-species-create.js');
  module.exports = function (TYPE) {
    var IS_MAP = TYPE == 1,
        IS_FILTER = TYPE == 2,
        IS_SOME = TYPE == 3,
        IS_EVERY = TYPE == 4,
        IS_FIND_INDEX = TYPE == 6,
        NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    return function ($this, callbackfn, that) {
      var O = toObject($this),
          self = IObject(O),
          f = ctx(callbackfn, that, 3),
          length = toLength(self.length),
          index = 0,
          result = IS_MAP ? asc($this, length) : IS_FILTER ? asc($this, 0) : undefined,
          val,
          res;
      for (; length > index; index++) if (NO_HOLES || index in self) {
        val = self[index];
        res = f(val, index, O);
        if (TYPE) {
          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {
            case 3:
              return true;
            case 5:
              return val;
            case 6:
              return index;
            case 2:
              result.push(val);
          } else if (IS_EVERY) return false;
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.collection-weak.js', ['npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.redefine-all.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.strict-new.js', 'npm:core-js@1.2.6/modules/$.for-of.js', 'npm:core-js@1.2.6/modules/$.array-methods.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.uid.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hide = $__require('npm:core-js@1.2.6/modules/$.hide.js'),
      redefineAll = $__require('npm:core-js@1.2.6/modules/$.redefine-all.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      strictNew = $__require('npm:core-js@1.2.6/modules/$.strict-new.js'),
      forOf = $__require('npm:core-js@1.2.6/modules/$.for-of.js'),
      createArrayMethod = $__require('npm:core-js@1.2.6/modules/$.array-methods.js'),
      $has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      WEAK = $__require('npm:core-js@1.2.6/modules/$.uid.js')('weak'),
      isExtensible = Object.isExtensible || isObject,
      arrayFind = createArrayMethod(5),
      arrayFindIndex = createArrayMethod(6),
      id = 0;
  var frozenStore = function (that) {
    return that._l || (that._l = new FrozenStore());
  };
  var FrozenStore = function () {
    this.a = [];
  };
  var findFrozen = function (store, key) {
    return arrayFind(store.a, function (it) {
      return it[0] === key;
    });
  };
  FrozenStore.prototype = {
    get: function (key) {
      var entry = findFrozen(this, key);
      if (entry) return entry[1];
    },
    has: function (key) {
      return !!findFrozen(this, key);
    },
    set: function (key, value) {
      var entry = findFrozen(this, key);
      if (entry) entry[1] = value;else this.a.push([key, value]);
    },
    'delete': function (key) {
      var index = arrayFindIndex(this.a, function (it) {
        return it[0] === key;
      });
      if (~index) this.a.splice(index, 1);
      return !!~index;
    }
  };
  module.exports = {
    getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
      var C = wrapper(function (that, iterable) {
        strictNew(that, C, NAME);
        that._i = id++;
        that._l = undefined;
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        'delete': function (key) {
          if (!isObject(key)) return false;
          if (!isExtensible(key)) return frozenStore(this)['delete'](key);
          return $has(key, WEAK) && $has(key[WEAK], this._i) && delete key[WEAK][this._i];
        },
        has: function has(key) {
          if (!isObject(key)) return false;
          if (!isExtensible(key)) return frozenStore(this).has(key);
          return $has(key, WEAK) && $has(key[WEAK], this._i);
        }
      });
      return C;
    },
    def: function (that, key, value) {
      if (!isExtensible(anObject(key))) {
        frozenStore(that).set(key, value);
      } else {
        $has(key, WEAK) || hide(key, WEAK, {});
        key[WEAK][that._i] = value;
      }
      return that;
    },
    frozenStore: frozenStore,
    WEAK: WEAK
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.redefine-all.js', ['npm:core-js@1.2.6/modules/$.redefine.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var redefine = $__require('npm:core-js@1.2.6/modules/$.redefine.js');
  module.exports = function (target, src) {
    for (var key in src) redefine(target, key, src[key]);
    return target;
  };
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.strict-new.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (it, Constructor, name) {
    if (!(it instanceof Constructor)) throw TypeError(name + ": use the 'new' operator!");
    return it;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.iter-detect.js', ['npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var ITERATOR = $__require('npm:core-js@1.2.6/modules/$.wks.js')('iterator'),
      SAFE_CLOSING = false;
  try {
    var riter = [7][ITERATOR]();
    riter['return'] = function () {
      SAFE_CLOSING = true;
    };
    Array.from(riter, function () {
      throw 2;
    });
  } catch (e) {}
  module.exports = function (exec, skipClosing) {
    if (!skipClosing && !SAFE_CLOSING) return false;
    var safe = false;
    try {
      var arr = [7],
          iter = arr[ITERATOR]();
      iter.next = function () {
        safe = true;
      };
      arr[ITERATOR] = function () {
        return iter;
      };
      exec(arr);
    } catch (e) {}
    return safe;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.collection.js', ['npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.redefine.js', 'npm:core-js@1.2.6/modules/$.redefine-all.js', 'npm:core-js@1.2.6/modules/$.for-of.js', 'npm:core-js@1.2.6/modules/$.strict-new.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.fails.js', 'npm:core-js@1.2.6/modules/$.iter-detect.js', 'npm:core-js@1.2.6/modules/$.set-to-string-tag.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      redefine = $__require('npm:core-js@1.2.6/modules/$.redefine.js'),
      redefineAll = $__require('npm:core-js@1.2.6/modules/$.redefine-all.js'),
      forOf = $__require('npm:core-js@1.2.6/modules/$.for-of.js'),
      strictNew = $__require('npm:core-js@1.2.6/modules/$.strict-new.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      fails = $__require('npm:core-js@1.2.6/modules/$.fails.js'),
      $iterDetect = $__require('npm:core-js@1.2.6/modules/$.iter-detect.js'),
      setToStringTag = $__require('npm:core-js@1.2.6/modules/$.set-to-string-tag.js');
  module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
    var Base = global[NAME],
        C = Base,
        ADDER = IS_MAP ? 'set' : 'add',
        proto = C && C.prototype,
        O = {};
    var fixMethod = function (KEY) {
      var fn = proto[KEY];
      redefine(proto, KEY, KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) {
        fn.call(this, a === 0 ? 0 : a);
        return this;
      } : function set(a, b) {
        fn.call(this, a === 0 ? 0 : a, b);
        return this;
      });
    };
    if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
      new C().entries().next();
    }))) {
      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
      redefineAll(C.prototype, methods);
    } else {
      var instance = new C(),
          HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance,
          THROWS_ON_PRIMITIVES = fails(function () {
        instance.has(1);
      }),
          ACCEPT_ITERABLES = $iterDetect(function (iter) {
        new C(iter);
      }),
          BUGGY_ZERO;
      if (!ACCEPT_ITERABLES) {
        C = wrapper(function (target, iterable) {
          strictNew(target, C, NAME);
          var that = new Base();
          if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
          return that;
        });
        C.prototype = proto;
        proto.constructor = C;
      }
      IS_WEAK || instance.forEach(function (val, key) {
        BUGGY_ZERO = 1 / key === -Infinity;
      });
      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
        fixMethod('delete');
        fixMethod('has');
        IS_MAP && fixMethod('get');
      }
      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
      if (IS_WEAK && proto.clear) delete proto.clear;
    }
    setToStringTag(C, NAME);
    O[NAME] = C;
    $export($export.G + $export.W + $export.F * (C != Base), O);
    if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
    return C;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.weak-set.js', ['npm:core-js@1.2.6/modules/$.collection-weak.js', 'npm:core-js@1.2.6/modules/$.collection.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var weak = $__require('npm:core-js@1.2.6/modules/$.collection-weak.js');
  $__require('npm:core-js@1.2.6/modules/$.collection.js')('WeakSet', function (get) {
    return function WeakSet() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, { add: function add(value) {
      return weak.def(this, value, true);
    } }, weak, false, true);
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.apply.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        _apply = Function.apply;
    $export($export.S, 'Reflect', { apply: function apply(target, thisArgument, argumentsList) {
            return _apply.call(target, thisArgument, argumentsList);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.construct.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.a-function.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.core.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      aFunction = $__require('npm:core-js@1.2.6/modules/$.a-function.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      bind = Function.bind || $__require('npm:core-js@1.2.6/modules/$.core.js').Function.prototype.bind;
  $export($export.S + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
    function F() {}
    return !(Reflect.construct(function () {}, [], F) instanceof F);
  }), 'Reflect', { construct: function construct(Target, args) {
      aFunction(Target);
      var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
      if (Target == newTarget) {
        if (args != undefined) switch (anObject(args).length) {
          case 0:
            return new Target();
          case 1:
            return new Target(args[0]);
          case 2:
            return new Target(args[0], args[1]);
          case 3:
            return new Target(args[0], args[1], args[2]);
          case 4:
            return new Target(args[0], args[1], args[2], args[3]);
        }
        var $args = [null];
        $args.push.apply($args, args);
        return new (bind.apply(Target, $args))();
      }
      var proto = newTarget.prototype,
          instance = $.create(isObject(proto) ? proto : Object.prototype),
          result = Function.apply.call(Target, instance, args);
      return isObject(result) ? result : instance;
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.define-property.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
  $export($export.S + $export.F * $__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
    Reflect.defineProperty($.setDesc({}, 1, { value: 1 }), 1, { value: 2 });
  }), 'Reflect', { defineProperty: function defineProperty(target, propertyKey, attributes) {
      anObject(target);
      try {
        $.setDesc(target, propertyKey, attributes);
        return true;
      } catch (e) {
        return false;
      }
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.delete-property.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        getDesc = $__require('npm:core-js@1.2.6/modules/$.js').getDesc,
        anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
    $export($export.S, 'Reflect', { deleteProperty: function deleteProperty(target, propertyKey) {
            var desc = getDesc(anObject(target), propertyKey);
            return desc && !desc.configurable ? false : delete target[propertyKey];
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.enumerate.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.iter-create.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
  var Enumerate = function (iterated) {
    this._t = anObject(iterated);
    this._i = 0;
    var keys = this._k = [],
        key;
    for (key in iterated) keys.push(key);
  };
  $__require('npm:core-js@1.2.6/modules/$.iter-create.js')(Enumerate, 'Object', function () {
    var that = this,
        keys = that._k,
        key;
    do {
      if (that._i >= keys.length) return {
        value: undefined,
        done: true
      };
    } while (!((key = keys[that._i++]) in that._t));
    return {
      value: key,
      done: false
    };
  });
  $export($export.S, 'Reflect', { enumerate: function enumerate(target) {
      return new Enumerate(target);
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.get.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
  function get(target, propertyKey) {
    var receiver = arguments.length < 3 ? target : arguments[2],
        desc,
        proto;
    if (anObject(target) === receiver) return target[propertyKey];
    if (desc = $.getDesc(target, propertyKey)) return has(desc, 'value') ? desc.value : desc.get !== undefined ? desc.get.call(receiver) : undefined;
    if (isObject(proto = $.getProto(target))) return get(proto, propertyKey, receiver);
  }
  $export($export.S, 'Reflect', { get: get });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.get-own-property-descriptor.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
        $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
    $export($export.S, 'Reflect', { getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
            return $.getDesc(anObject(target), propertyKey);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.get-prototype-of.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        getProto = $__require('npm:core-js@1.2.6/modules/$.js').getProto,
        anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
    $export($export.S, 'Reflect', { getPrototypeOf: function getPrototypeOf(target) {
            return getProto(anObject(target));
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.has.js', ['npm:core-js@1.2.6/modules/$.export.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $export($export.S, 'Reflect', { has: function has(target, propertyKey) {
            return propertyKey in target;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.is-extensible.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
        $isExtensible = Object.isExtensible;
    $export($export.S, 'Reflect', { isExtensible: function isExtensible(target) {
            anObject(target);
            return $isExtensible ? $isExtensible(target) : true;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.own-keys.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.own-keys.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S, 'Reflect', { ownKeys: $__require('npm:core-js@1.2.6/modules/$.own-keys.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.prevent-extensions.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      $preventExtensions = Object.preventExtensions;
  $export($export.S, 'Reflect', { preventExtensions: function preventExtensions(target) {
      anObject(target);
      try {
        if ($preventExtensions) $preventExtensions(target);
        return true;
      } catch (e) {
        return false;
      }
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.set.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.property-desc.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.is-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      createDesc = $__require('npm:core-js@1.2.6/modules/$.property-desc.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  function set(target, propertyKey, V) {
    var receiver = arguments.length < 4 ? target : arguments[3],
        ownDesc = $.getDesc(anObject(target), propertyKey),
        existingDescriptor,
        proto;
    if (!ownDesc) {
      if (isObject(proto = $.getProto(target))) {
        return set(proto, propertyKey, V, receiver);
      }
      ownDesc = createDesc(0);
    }
    if (has(ownDesc, 'value')) {
      if (ownDesc.writable === false || !isObject(receiver)) return false;
      existingDescriptor = $.getDesc(receiver, propertyKey) || createDesc(0);
      existingDescriptor.value = V;
      $.setDesc(receiver, propertyKey, existingDescriptor);
      return true;
    }
    return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
  }
  $export($export.S, 'Reflect', { set: set });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.set-proto.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.ctx.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var getDesc = $__require('npm:core-js@1.2.6/modules/$.js').getDesc,
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
  var check = function (O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {
      try {
        set = $__require('npm:core-js@1.2.6/modules/$.ctx.js')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.reflect.set-prototype-of.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.set-proto.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      setProto = $__require('npm:core-js@1.2.6/modules/$.set-proto.js');
  if (setProto) $export($export.S, 'Reflect', { setPrototypeOf: function setPrototypeOf(target, proto) {
      setProto.check(target, proto);
      try {
        setProto.set(target, proto);
        return true;
      } catch (e) {
        return false;
      }
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.to-index.js', ['npm:core-js@1.2.6/modules/$.to-integer.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toInteger = $__require('npm:core-js@1.2.6/modules/$.to-integer.js'),
      max = Math.max,
      min = Math.min;
  module.exports = function (index, length) {
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.array-includes.js', ['npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/$.to-index.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
      toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
      toIndex = $__require('npm:core-js@1.2.6/modules/$.to-index.js');
  module.exports = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIObject($this),
          length = toLength(O.length),
          index = toIndex(fromIndex, length),
          value;
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        if (value != value) return true;
      } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index;
      }
      return !IS_INCLUDES && -1;
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.array.includes.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.array-includes.js', 'npm:core-js@1.2.6/modules/$.add-to-unscopables.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $includes = $__require('npm:core-js@1.2.6/modules/$.array-includes.js')(true);
    $export($export.P, 'Array', { includes: function includes(el) {
            return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
        } });
    $__require('npm:core-js@1.2.6/modules/$.add-to-unscopables.js')('includes');
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.string-at.js', ['npm:core-js@1.2.6/modules/$.to-integer.js', 'npm:core-js@1.2.6/modules/$.defined.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toInteger = $__require('npm:core-js@1.2.6/modules/$.to-integer.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js');
  module.exports = function (TO_STRING) {
    return function (that, pos) {
      var s = String(defined(that)),
          i = toInteger(pos),
          l = s.length,
          a,
          b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.string.at.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.string-at.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $at = $__require('npm:core-js@1.2.6/modules/$.string-at.js')(true);
    $export($export.P, 'String', { at: function at(pos) {
            return $at(this, pos);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.string.pad-left.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.string-pad.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $pad = $__require('npm:core-js@1.2.6/modules/$.string-pad.js');
    $export($export.P, 'String', { padLeft: function padLeft(maxLength) {
            return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.string-repeat.js', ['npm:core-js@1.2.6/modules/$.to-integer.js', 'npm:core-js@1.2.6/modules/$.defined.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var toInteger = $__require('npm:core-js@1.2.6/modules/$.to-integer.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js');
  module.exports = function repeat(count) {
    var str = String(defined(this)),
        res = '',
        n = toInteger(count);
    if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
    for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
    return res;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.string-pad.js', ['npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/$.string-repeat.js', 'npm:core-js@1.2.6/modules/$.defined.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
      repeat = $__require('npm:core-js@1.2.6/modules/$.string-repeat.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js');
  module.exports = function (that, maxLength, fillString, left) {
    var S = String(defined(that)),
        stringLength = S.length,
        fillStr = fillString === undefined ? ' ' : String(fillString),
        intMaxLength = toLength(maxLength);
    if (intMaxLength <= stringLength) return S;
    if (fillStr == '') fillStr = ' ';
    var fillLen = intMaxLength - stringLength,
        stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
    return left ? stringFiller + S : S + stringFiller;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.string.pad-right.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.string-pad.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $pad = $__require('npm:core-js@1.2.6/modules/$.string-pad.js');
    $export($export.P, 'String', { padRight: function padRight(maxLength) {
            return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.string.trim-left.js', ['npm:core-js@1.2.6/modules/$.string-trim.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  $__require('npm:core-js@1.2.6/modules/$.string-trim.js')('trimLeft', function ($trim) {
    return function trimLeft() {
      return $trim(this, 1);
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.string-trim.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.defined.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js'),
      fails = $__require('npm:core-js@1.2.6/modules/$.fails.js'),
      spaces = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF',
      space = '[' + spaces + ']',
      non = '\u200b\u0085',
      ltrim = RegExp('^' + space + space + '*'),
      rtrim = RegExp(space + space + '*$');
  var exporter = function (KEY, exec) {
    var exp = {};
    exp[KEY] = exec(trim);
    $export($export.P + $export.F * fails(function () {
      return !!spaces[KEY]() || non[KEY]() != non;
    }), 'String', exp);
  };
  var trim = exporter.trim = function (string, TYPE) {
    string = String(defined(string));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
  module.exports = exporter;
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.string.trim-right.js', ['npm:core-js@1.2.6/modules/$.string-trim.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  $__require('npm:core-js@1.2.6/modules/$.string-trim.js')('trimRight', function ($trim) {
    return function trimRight() {
      return $trim(this, 2);
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.regexp.escape.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.replacer.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $re = $__require('npm:core-js@1.2.6/modules/$.replacer.js')(/[\\^$*+?.()|[\]{}]/g, '\\$&');
    $export($export.S, 'RegExp', { escape: function escape(it) {
            return $re(it);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.object.get-own-property-descriptors.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.own-keys.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.property-desc.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
        $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        ownKeys = $__require('npm:core-js@1.2.6/modules/$.own-keys.js'),
        toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
        createDesc = $__require('npm:core-js@1.2.6/modules/$.property-desc.js');
    $export($export.S, 'Object', { getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
            var O = toIObject(object),
                setDesc = $.setDesc,
                getDesc = $.getDesc,
                keys = ownKeys(O),
                result = {},
                i = 0,
                key,
                D;
            while (keys.length > i) {
                D = getDesc(O, key = keys[i++]);
                if (key in result) setDesc(result, key, createDesc(0, D));else result[key] = D;
            }
            return result;
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.object.values.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.object-to-array.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $values = $__require('npm:core-js@1.2.6/modules/$.object-to-array.js')(false);
    $export($export.S, 'Object', { values: function values(it) {
            return $values(it);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.object-to-array.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
      isEnum = $.isEnum;
  module.exports = function (isEntries) {
    return function (it) {
      var O = toIObject(it),
          keys = $.getKeys(O),
          length = keys.length,
          i = 0,
          result = [],
          key;
      while (length > i) if (isEnum.call(O, key = keys[i++])) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
      return result;
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.object.entries.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.object-to-array.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        $entries = $__require('npm:core-js@1.2.6/modules/$.object-to-array.js')(true);
    $export($export.S, 'Object', { entries: function entries(it) {
            return $entries(it);
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.map.to-json.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.collection-to-json.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.P, 'Map', { toJSON: $__require('npm:core-js@1.2.6/modules/$.collection-to-json.js')('Map') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.collection-to-json.js', ['npm:core-js@1.2.6/modules/$.for-of.js', 'npm:core-js@1.2.6/modules/$.classof.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var forOf = $__require('npm:core-js@1.2.6/modules/$.for-of.js'),
      classof = $__require('npm:core-js@1.2.6/modules/$.classof.js');
  module.exports = function (NAME) {
    return function toJSON() {
      if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
      var arr = [];
      forOf(this, false, arr.push, arr);
      return arr;
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es7.set.to-json.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.collection-to-json.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.P, 'Set', { toJSON: $__require('npm:core-js@1.2.6/modules/$.collection-to-json.js')('Set') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/js.array.statics.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.core.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      $ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
      $Array = $__require('npm:core-js@1.2.6/modules/$.core.js').Array || Array,
      statics = {};
  var setStatics = function (keys, length) {
    $.each.call(keys.split(','), function (key) {
      if (length == undefined && key in $Array) statics[key] = $Array[key];else if (key in []) statics[key] = $ctx(Function.call, [][key], length);
    });
  };
  setStatics('pop,reverse,shift,keys,values,entries', 1);
  setStatics('indexOf,every,some,forEach,map,filter,find,findIndex,includes', 3);
  setStatics('join,slice,concat,push,splice,unshift,sort,lastIndexOf,' + 'reduce,reduceRight,copyWithin,fill');
  $export($export.S, 'Array', statics);
});
System.registerDynamic('npm:core-js@1.2.6/modules/web.timers.js', ['npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.invoke.js', 'npm:core-js@1.2.6/modules/$.partial.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      invoke = $__require('npm:core-js@1.2.6/modules/$.invoke.js'),
      partial = $__require('npm:core-js@1.2.6/modules/$.partial.js'),
      navigator = global.navigator,
      MSIE = !!navigator && /MSIE .\./.test(navigator.userAgent);
  var wrap = function (set) {
    return MSIE ? function (fn, time) {
      return set(invoke(partial, [].slice.call(arguments, 2), typeof fn == 'function' ? fn : Function(fn)), time);
    } : set;
  };
  $export($export.G + $export.B + $export.F * MSIE, {
    setTimeout: wrap(global.setTimeout),
    setInterval: wrap(global.setInterval)
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.html.js', ['npm:core-js@1.2.6/modules/$.global.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('npm:core-js@1.2.6/modules/$.global.js').document && document.documentElement;
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.dom-create.js', ['npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.global.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
        document = $__require('npm:core-js@1.2.6/modules/$.global.js').document,
        is = isObject(document) && isObject(document.createElement);
    module.exports = function (it) {
        return is ? document.createElement(it) : {};
    };
});
System.registerDynamic('npm:process@0.11.2/browser.js', [], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    // shim for using process in browser

    var process = module.exports = {};
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = setTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        clearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            setTimeout(drainQueue, 0);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
});
System.registerDynamic("npm:process@0.11.2.js", ["npm:process@0.11.2/browser.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:process@0.11.2/browser.js");
});
System.registerDynamic('github:jspm/nodelibs-process@0.1.2/index.js', ['npm:process@0.11.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = System._nodeRequire ? process : $__require('npm:process@0.11.2.js');
});
System.registerDynamic("github:jspm/nodelibs-process@0.1.2.js", ["github:jspm/nodelibs-process@0.1.2/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:jspm/nodelibs-process@0.1.2/index.js");
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.task.js', ['npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.invoke.js', 'npm:core-js@1.2.6/modules/$.html.js', 'npm:core-js@1.2.6/modules/$.dom-create.js', 'npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.cof.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    var ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
        invoke = $__require('npm:core-js@1.2.6/modules/$.invoke.js'),
        html = $__require('npm:core-js@1.2.6/modules/$.html.js'),
        cel = $__require('npm:core-js@1.2.6/modules/$.dom-create.js'),
        global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
        process = global.process,
        setTask = global.setImmediate,
        clearTask = global.clearImmediate,
        MessageChannel = global.MessageChannel,
        counter = 0,
        queue = {},
        ONREADYSTATECHANGE = 'onreadystatechange',
        defer,
        channel,
        port;
    var run = function () {
      var id = +this;
      if (queue.hasOwnProperty(id)) {
        var fn = queue[id];
        delete queue[id];
        fn();
      }
    };
    var listner = function (event) {
      run.call(event.data);
    };
    if (!setTask || !clearTask) {
      setTask = function setImmediate(fn) {
        var args = [],
            i = 1;
        while (arguments.length > i) args.push(arguments[i++]);
        queue[++counter] = function () {
          invoke(typeof fn == 'function' ? fn : Function(fn), args);
        };
        defer(counter);
        return counter;
      };
      clearTask = function clearImmediate(id) {
        delete queue[id];
      };
      if ($__require('npm:core-js@1.2.6/modules/$.cof.js')(process) == 'process') {
        defer = function (id) {
          process.nextTick(ctx(run, id, 1));
        };
      } else if (MessageChannel) {
        channel = new MessageChannel();
        port = channel.port2;
        channel.port1.onmessage = listner;
        defer = ctx(port.postMessage, port, 1);
      } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
        defer = function (id) {
          global.postMessage(id + '', '*');
        };
        global.addEventListener('message', listner, false);
      } else if (ONREADYSTATECHANGE in cel('script')) {
        defer = function (id) {
          html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
            html.removeChild(this);
            run.call(id);
          };
        };
      } else {
        defer = function (id) {
          setTimeout(ctx(run, id, 1), 0);
        };
      }
    }
    module.exports = {
      set: setTask,
      clear: clearTask
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:core-js@1.2.6/modules/web.immediate.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.task.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      $task = $__require('npm:core-js@1.2.6/modules/$.task.js');
  $export($export.G + $export.B, {
    setImmediate: $task.set,
    clearImmediate: $task.clear
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.add-to-unscopables.js', ['npm:core-js@1.2.6/modules/$.wks.js', 'npm:core-js@1.2.6/modules/$.hide.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var UNSCOPABLES = $__require('npm:core-js@1.2.6/modules/$.wks.js')('unscopables'),
      ArrayProto = Array.prototype;
  if (ArrayProto[UNSCOPABLES] == undefined) $__require('npm:core-js@1.2.6/modules/$.hide.js')(ArrayProto, UNSCOPABLES, {});
  module.exports = function (key) {
    ArrayProto[UNSCOPABLES][key] = true;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/es6.array.iterator.js', ['npm:core-js@1.2.6/modules/$.add-to-unscopables.js', 'npm:core-js@1.2.6/modules/$.iter-step.js', 'npm:core-js@1.2.6/modules/$.iterators.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.iter-define.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var addToUnscopables = $__require('npm:core-js@1.2.6/modules/$.add-to-unscopables.js'),
      step = $__require('npm:core-js@1.2.6/modules/$.iter-step.js'),
      Iterators = $__require('npm:core-js@1.2.6/modules/$.iterators.js'),
      toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js');
  module.exports = $__require('npm:core-js@1.2.6/modules/$.iter-define.js')(Array, 'Array', function (iterated, kind) {
    this._t = toIObject(iterated);
    this._i = 0;
    this._k = kind;
  }, function () {
    var O = this._t,
        kind = this._k,
        index = this._i++;
    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }
    if (kind == 'keys') return step(0, index);
    if (kind == 'values') return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');
  Iterators.Arguments = Iterators.Array;
  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
});
System.registerDynamic('npm:core-js@1.2.6/modules/web.dom.iterable.js', ['npm:core-js@1.2.6/modules/es6.array.iterator.js', 'npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.iterators.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/es6.array.iterator.js');
  var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      hide = $__require('npm:core-js@1.2.6/modules/$.hide.js'),
      Iterators = $__require('npm:core-js@1.2.6/modules/$.iterators.js'),
      ITERATOR = $__require('npm:core-js@1.2.6/modules/$.wks.js')('iterator'),
      NL = global.NodeList,
      HTC = global.HTMLCollection,
      NLProto = NL && NL.prototype,
      HTCProto = HTC && HTC.prototype,
      ArrayValues = Iterators.NodeList = Iterators.HTMLCollection = Iterators.Array;
  if (NLProto && !NLProto[ITERATOR]) hide(NLProto, ITERATOR, ArrayValues);
  if (HTCProto && !HTCProto[ITERATOR]) hide(HTCProto, ITERATOR, ArrayValues);
});
System.registerDynamic('npm:core-js@1.2.6/shim.js', ['npm:core-js@1.2.6/modules/es5.js', 'npm:core-js@1.2.6/modules/es6.symbol.js', 'npm:core-js@1.2.6/modules/es6.object.assign.js', 'npm:core-js@1.2.6/modules/es6.object.is.js', 'npm:core-js@1.2.6/modules/es6.object.set-prototype-of.js', 'npm:core-js@1.2.6/modules/es6.object.to-string.js', 'npm:core-js@1.2.6/modules/es6.object.freeze.js', 'npm:core-js@1.2.6/modules/es6.object.seal.js', 'npm:core-js@1.2.6/modules/es6.object.prevent-extensions.js', 'npm:core-js@1.2.6/modules/es6.object.is-frozen.js', 'npm:core-js@1.2.6/modules/es6.object.is-sealed.js', 'npm:core-js@1.2.6/modules/es6.object.is-extensible.js', 'npm:core-js@1.2.6/modules/es6.object.get-own-property-descriptor.js', 'npm:core-js@1.2.6/modules/es6.object.get-prototype-of.js', 'npm:core-js@1.2.6/modules/es6.object.keys.js', 'npm:core-js@1.2.6/modules/es6.object.get-own-property-names.js', 'npm:core-js@1.2.6/modules/es6.function.name.js', 'npm:core-js@1.2.6/modules/es6.function.has-instance.js', 'npm:core-js@1.2.6/modules/es6.number.constructor.js', 'npm:core-js@1.2.6/modules/es6.number.epsilon.js', 'npm:core-js@1.2.6/modules/es6.number.is-finite.js', 'npm:core-js@1.2.6/modules/es6.number.is-integer.js', 'npm:core-js@1.2.6/modules/es6.number.is-nan.js', 'npm:core-js@1.2.6/modules/es6.number.is-safe-integer.js', 'npm:core-js@1.2.6/modules/es6.number.max-safe-integer.js', 'npm:core-js@1.2.6/modules/es6.number.min-safe-integer.js', 'npm:core-js@1.2.6/modules/es6.number.parse-float.js', 'npm:core-js@1.2.6/modules/es6.number.parse-int.js', 'npm:core-js@1.2.6/modules/es6.math.acosh.js', 'npm:core-js@1.2.6/modules/es6.math.asinh.js', 'npm:core-js@1.2.6/modules/es6.math.atanh.js', 'npm:core-js@1.2.6/modules/es6.math.cbrt.js', 'npm:core-js@1.2.6/modules/es6.math.clz32.js', 'npm:core-js@1.2.6/modules/es6.math.cosh.js', 'npm:core-js@1.2.6/modules/es6.math.expm1.js', 'npm:core-js@1.2.6/modules/es6.math.fround.js', 'npm:core-js@1.2.6/modules/es6.math.hypot.js', 'npm:core-js@1.2.6/modules/es6.math.imul.js', 'npm:core-js@1.2.6/modules/es6.math.log10.js', 'npm:core-js@1.2.6/modules/es6.math.log1p.js', 'npm:core-js@1.2.6/modules/es6.math.log2.js', 'npm:core-js@1.2.6/modules/es6.math.sign.js', 'npm:core-js@1.2.6/modules/es6.math.sinh.js', 'npm:core-js@1.2.6/modules/es6.math.tanh.js', 'npm:core-js@1.2.6/modules/es6.math.trunc.js', 'npm:core-js@1.2.6/modules/es6.string.from-code-point.js', 'npm:core-js@1.2.6/modules/es6.string.raw.js', 'npm:core-js@1.2.6/modules/es6.string.trim.js', 'npm:core-js@1.2.6/modules/es6.string.iterator.js', 'npm:core-js@1.2.6/modules/es6.string.code-point-at.js', 'npm:core-js@1.2.6/modules/es6.string.ends-with.js', 'npm:core-js@1.2.6/modules/es6.string.includes.js', 'npm:core-js@1.2.6/modules/es6.string.repeat.js', 'npm:core-js@1.2.6/modules/es6.string.starts-with.js', 'npm:core-js@1.2.6/modules/es6.array.from.js', 'npm:core-js@1.2.6/modules/es6.array.of.js', 'npm:core-js@1.2.6/modules/es6.array.iterator.js', 'npm:core-js@1.2.6/modules/es6.array.species.js', 'npm:core-js@1.2.6/modules/es6.array.copy-within.js', 'npm:core-js@1.2.6/modules/es6.array.fill.js', 'npm:core-js@1.2.6/modules/es6.array.find.js', 'npm:core-js@1.2.6/modules/es6.array.find-index.js', 'npm:core-js@1.2.6/modules/es6.regexp.constructor.js', 'npm:core-js@1.2.6/modules/es6.regexp.flags.js', 'npm:core-js@1.2.6/modules/es6.regexp.match.js', 'npm:core-js@1.2.6/modules/es6.regexp.replace.js', 'npm:core-js@1.2.6/modules/es6.regexp.search.js', 'npm:core-js@1.2.6/modules/es6.regexp.split.js', 'npm:core-js@1.2.6/modules/es6.promise.js', 'npm:core-js@1.2.6/modules/es6.map.js', 'npm:core-js@1.2.6/modules/es6.set.js', 'npm:core-js@1.2.6/modules/es6.weak-map.js', 'npm:core-js@1.2.6/modules/es6.weak-set.js', 'npm:core-js@1.2.6/modules/es6.reflect.apply.js', 'npm:core-js@1.2.6/modules/es6.reflect.construct.js', 'npm:core-js@1.2.6/modules/es6.reflect.define-property.js', 'npm:core-js@1.2.6/modules/es6.reflect.delete-property.js', 'npm:core-js@1.2.6/modules/es6.reflect.enumerate.js', 'npm:core-js@1.2.6/modules/es6.reflect.get.js', 'npm:core-js@1.2.6/modules/es6.reflect.get-own-property-descriptor.js', 'npm:core-js@1.2.6/modules/es6.reflect.get-prototype-of.js', 'npm:core-js@1.2.6/modules/es6.reflect.has.js', 'npm:core-js@1.2.6/modules/es6.reflect.is-extensible.js', 'npm:core-js@1.2.6/modules/es6.reflect.own-keys.js', 'npm:core-js@1.2.6/modules/es6.reflect.prevent-extensions.js', 'npm:core-js@1.2.6/modules/es6.reflect.set.js', 'npm:core-js@1.2.6/modules/es6.reflect.set-prototype-of.js', 'npm:core-js@1.2.6/modules/es7.array.includes.js', 'npm:core-js@1.2.6/modules/es7.string.at.js', 'npm:core-js@1.2.6/modules/es7.string.pad-left.js', 'npm:core-js@1.2.6/modules/es7.string.pad-right.js', 'npm:core-js@1.2.6/modules/es7.string.trim-left.js', 'npm:core-js@1.2.6/modules/es7.string.trim-right.js', 'npm:core-js@1.2.6/modules/es7.regexp.escape.js', 'npm:core-js@1.2.6/modules/es7.object.get-own-property-descriptors.js', 'npm:core-js@1.2.6/modules/es7.object.values.js', 'npm:core-js@1.2.6/modules/es7.object.entries.js', 'npm:core-js@1.2.6/modules/es7.map.to-json.js', 'npm:core-js@1.2.6/modules/es7.set.to-json.js', 'npm:core-js@1.2.6/modules/js.array.statics.js', 'npm:core-js@1.2.6/modules/web.timers.js', 'npm:core-js@1.2.6/modules/web.immediate.js', 'npm:core-js@1.2.6/modules/web.dom.iterable.js', 'npm:core-js@1.2.6/modules/$.core.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/modules/es5.js');
  $__require('npm:core-js@1.2.6/modules/es6.symbol.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.assign.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.is.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.set-prototype-of.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.to-string.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.freeze.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.seal.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.prevent-extensions.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.is-frozen.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.is-sealed.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.is-extensible.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.get-own-property-descriptor.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.get-prototype-of.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.keys.js');
  $__require('npm:core-js@1.2.6/modules/es6.object.get-own-property-names.js');
  $__require('npm:core-js@1.2.6/modules/es6.function.name.js');
  $__require('npm:core-js@1.2.6/modules/es6.function.has-instance.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.constructor.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.epsilon.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.is-finite.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.is-integer.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.is-nan.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.is-safe-integer.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.max-safe-integer.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.min-safe-integer.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.parse-float.js');
  $__require('npm:core-js@1.2.6/modules/es6.number.parse-int.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.acosh.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.asinh.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.atanh.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.cbrt.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.clz32.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.cosh.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.expm1.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.fround.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.hypot.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.imul.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.log10.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.log1p.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.log2.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.sign.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.sinh.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.tanh.js');
  $__require('npm:core-js@1.2.6/modules/es6.math.trunc.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.from-code-point.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.raw.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.trim.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.iterator.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.code-point-at.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.ends-with.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.includes.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.repeat.js');
  $__require('npm:core-js@1.2.6/modules/es6.string.starts-with.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.from.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.of.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.iterator.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.species.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.copy-within.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.fill.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.find.js');
  $__require('npm:core-js@1.2.6/modules/es6.array.find-index.js');
  $__require('npm:core-js@1.2.6/modules/es6.regexp.constructor.js');
  $__require('npm:core-js@1.2.6/modules/es6.regexp.flags.js');
  $__require('npm:core-js@1.2.6/modules/es6.regexp.match.js');
  $__require('npm:core-js@1.2.6/modules/es6.regexp.replace.js');
  $__require('npm:core-js@1.2.6/modules/es6.regexp.search.js');
  $__require('npm:core-js@1.2.6/modules/es6.regexp.split.js');
  $__require('npm:core-js@1.2.6/modules/es6.promise.js');
  $__require('npm:core-js@1.2.6/modules/es6.map.js');
  $__require('npm:core-js@1.2.6/modules/es6.set.js');
  $__require('npm:core-js@1.2.6/modules/es6.weak-map.js');
  $__require('npm:core-js@1.2.6/modules/es6.weak-set.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.apply.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.construct.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.define-property.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.delete-property.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.enumerate.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.get.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.get-own-property-descriptor.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.get-prototype-of.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.has.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.is-extensible.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.own-keys.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.prevent-extensions.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.set.js');
  $__require('npm:core-js@1.2.6/modules/es6.reflect.set-prototype-of.js');
  $__require('npm:core-js@1.2.6/modules/es7.array.includes.js');
  $__require('npm:core-js@1.2.6/modules/es7.string.at.js');
  $__require('npm:core-js@1.2.6/modules/es7.string.pad-left.js');
  $__require('npm:core-js@1.2.6/modules/es7.string.pad-right.js');
  $__require('npm:core-js@1.2.6/modules/es7.string.trim-left.js');
  $__require('npm:core-js@1.2.6/modules/es7.string.trim-right.js');
  $__require('npm:core-js@1.2.6/modules/es7.regexp.escape.js');
  $__require('npm:core-js@1.2.6/modules/es7.object.get-own-property-descriptors.js');
  $__require('npm:core-js@1.2.6/modules/es7.object.values.js');
  $__require('npm:core-js@1.2.6/modules/es7.object.entries.js');
  $__require('npm:core-js@1.2.6/modules/es7.map.to-json.js');
  $__require('npm:core-js@1.2.6/modules/es7.set.to-json.js');
  $__require('npm:core-js@1.2.6/modules/js.array.statics.js');
  $__require('npm:core-js@1.2.6/modules/web.timers.js');
  $__require('npm:core-js@1.2.6/modules/web.immediate.js');
  $__require('npm:core-js@1.2.6/modules/web.dom.iterable.js');
  module.exports = $__require('npm:core-js@1.2.6/modules/$.core.js');
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.keyof.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
        toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js');
    module.exports = function (object, el) {
        var O = toIObject(object),
            keys = $.getKeys(O),
            length = keys.length,
            index = 0,
            key;
        while (length > index) if (O[key = keys[index++]] === el) return key;
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.iter-call.js', ['npm:core-js@1.2.6/modules/$.an-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js');
  module.exports = function (iterator, fn, value, entries) {
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
    } catch (e) {
      var ret = iterator['return'];
      if (ret !== undefined) anObject(ret.call(iterator));
      throw e;
    }
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.is-array-iter.js', ['npm:core-js@1.2.6/modules/$.iterators.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var Iterators = $__require('npm:core-js@1.2.6/modules/$.iterators.js'),
        ITERATOR = $__require('npm:core-js@1.2.6/modules/$.wks.js')('iterator'),
        ArrayProto = Array.prototype;
    module.exports = function (it) {
        return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
    };
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.to-integer.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 7.1.4 ToInteger
  var ceil = Math.ceil,
      floor = Math.floor;
  module.exports = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.to-length.js', ['npm:core-js@1.2.6/modules/$.to-integer.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toInteger = $__require('npm:core-js@1.2.6/modules/$.to-integer.js'),
      min = Math.min;
  module.exports = function (it) {
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.for-of.js', ['npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.iter-call.js', 'npm:core-js@1.2.6/modules/$.is-array-iter.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.to-length.js', 'npm:core-js@1.2.6/modules/core.get-iterator-method.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
      call = $__require('npm:core-js@1.2.6/modules/$.iter-call.js'),
      isArrayIter = $__require('npm:core-js@1.2.6/modules/$.is-array-iter.js'),
      anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      toLength = $__require('npm:core-js@1.2.6/modules/$.to-length.js'),
      getIterFn = $__require('npm:core-js@1.2.6/modules/core.get-iterator-method.js');
  module.exports = function (iterable, entries, fn, that) {
    var iterFn = getIterFn(iterable),
        f = ctx(fn, that, entries ? 2 : 1),
        index = 0,
        length,
        step,
        iterator;
    if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
    if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
      entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
      call(iterator, f, step.value, entries);
    }
  };
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.iter-step.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (done, value) {
    return { value: value, done: !!done };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.dict.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.ctx.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.property-desc.js', 'npm:core-js@1.2.6/modules/$.object-assign.js', 'npm:core-js@1.2.6/modules/$.keyof.js', 'npm:core-js@1.2.6/modules/$.a-function.js', 'npm:core-js@1.2.6/modules/$.for-of.js', 'npm:core-js@1.2.6/modules/core.is-iterable.js', 'npm:core-js@1.2.6/modules/$.iter-create.js', 'npm:core-js@1.2.6/modules/$.iter-step.js', 'npm:core-js@1.2.6/modules/$.is-object.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js', 'npm:core-js@1.2.6/modules/$.descriptors.js', 'npm:core-js@1.2.6/modules/$.has.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      createDesc = $__require('npm:core-js@1.2.6/modules/$.property-desc.js'),
      assign = $__require('npm:core-js@1.2.6/modules/$.object-assign.js'),
      keyOf = $__require('npm:core-js@1.2.6/modules/$.keyof.js'),
      aFunction = $__require('npm:core-js@1.2.6/modules/$.a-function.js'),
      forOf = $__require('npm:core-js@1.2.6/modules/$.for-of.js'),
      isIterable = $__require('npm:core-js@1.2.6/modules/core.is-iterable.js'),
      $iterCreate = $__require('npm:core-js@1.2.6/modules/$.iter-create.js'),
      step = $__require('npm:core-js@1.2.6/modules/$.iter-step.js'),
      isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js'),
      toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js'),
      DESCRIPTORS = $__require('npm:core-js@1.2.6/modules/$.descriptors.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      getKeys = $.getKeys;
  var createDictMethod = function (TYPE) {
    var IS_MAP = TYPE == 1,
        IS_EVERY = TYPE == 4;
    return function (object, callbackfn, that) {
      var f = ctx(callbackfn, that, 3),
          O = toIObject(object),
          result = IS_MAP || TYPE == 7 || TYPE == 2 ? new (typeof this == 'function' ? this : Dict)() : undefined,
          key,
          val,
          res;
      for (key in O) if (has(O, key)) {
        val = O[key];
        res = f(val, key, object);
        if (TYPE) {
          if (IS_MAP) result[key] = res;else if (res) switch (TYPE) {
            case 2:
              result[key] = val;
              break;
            case 3:
              return true;
            case 5:
              return val;
            case 6:
              return key;
            case 7:
              result[res[0]] = res[1];
          } else if (IS_EVERY) return false;
        }
      }
      return TYPE == 3 || IS_EVERY ? IS_EVERY : result;
    };
  };
  var findKey = createDictMethod(6);
  var createDictIter = function (kind) {
    return function (it) {
      return new DictIterator(it, kind);
    };
  };
  var DictIterator = function (iterated, kind) {
    this._t = toIObject(iterated);
    this._a = getKeys(iterated);
    this._i = 0;
    this._k = kind;
  };
  $iterCreate(DictIterator, 'Dict', function () {
    var that = this,
        O = that._t,
        keys = that._a,
        kind = that._k,
        key;
    do {
      if (that._i >= keys.length) {
        that._t = undefined;
        return step(1);
      }
    } while (!has(O, key = keys[that._i++]));
    if (kind == 'keys') return step(0, key);
    if (kind == 'values') return step(0, O[key]);
    return step(0, [key, O[key]]);
  });
  function Dict(iterable) {
    var dict = $.create(null);
    if (iterable != undefined) {
      if (isIterable(iterable)) {
        forOf(iterable, true, function (key, value) {
          dict[key] = value;
        });
      } else assign(dict, iterable);
    }
    return dict;
  }
  Dict.prototype = null;
  function reduce(object, mapfn, init) {
    aFunction(mapfn);
    var O = toIObject(object),
        keys = getKeys(O),
        length = keys.length,
        i = 0,
        memo,
        key;
    if (arguments.length < 3) {
      if (!length) throw TypeError('Reduce of empty object with no initial value');
      memo = O[keys[i++]];
    } else memo = Object(init);
    while (length > i) if (has(O, key = keys[i++])) {
      memo = mapfn(memo, O[key], key, object);
    }
    return memo;
  }
  function includes(object, el) {
    return (el == el ? keyOf(object, el) : findKey(object, function (it) {
      return it != it;
    })) !== undefined;
  }
  function get(object, key) {
    if (has(object, key)) return object[key];
  }
  function set(object, key, value) {
    if (DESCRIPTORS && key in Object) $.setDesc(object, key, createDesc(0, value));else object[key] = value;
    return object;
  }
  function isDict(it) {
    return isObject(it) && $.getProto(it) === Dict.prototype;
  }
  $export($export.G + $export.F, { Dict: Dict });
  $export($export.S, 'Dict', {
    keys: createDictIter('keys'),
    values: createDictIter('values'),
    entries: createDictIter('entries'),
    forEach: createDictMethod(0),
    map: createDictMethod(1),
    filter: createDictMethod(2),
    some: createDictMethod(3),
    every: createDictMethod(4),
    find: createDictMethod(5),
    findKey: findKey,
    mapPairs: createDictMethod(7),
    reduce: reduce,
    keyOf: keyOf,
    includes: includes,
    has: has,
    get: get,
    set: set,
    isDict: isDict
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.get-iterator-method.js', ['npm:core-js@1.2.6/modules/$.classof.js', 'npm:core-js@1.2.6/modules/$.wks.js', 'npm:core-js@1.2.6/modules/$.iterators.js', 'npm:core-js@1.2.6/modules/$.core.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var classof = $__require('npm:core-js@1.2.6/modules/$.classof.js'),
        ITERATOR = $__require('npm:core-js@1.2.6/modules/$.wks.js')('iterator'),
        Iterators = $__require('npm:core-js@1.2.6/modules/$.iterators.js');
    module.exports = $__require('npm:core-js@1.2.6/modules/$.core.js').getIteratorMethod = function (it) {
        if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.get-iterator.js', ['npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/core.get-iterator-method.js', 'npm:core-js@1.2.6/modules/$.core.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
      get = $__require('npm:core-js@1.2.6/modules/core.get-iterator-method.js');
  module.exports = $__require('npm:core-js@1.2.6/modules/$.core.js').getIterator = function (it) {
    var iterFn = get(it);
    if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
    return anObject(iterFn.call(it));
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.is-iterable.js', ['npm:core-js@1.2.6/modules/$.classof.js', 'npm:core-js@1.2.6/modules/$.wks.js', 'npm:core-js@1.2.6/modules/$.iterators.js', 'npm:core-js@1.2.6/modules/$.core.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var classof = $__require('npm:core-js@1.2.6/modules/$.classof.js'),
      ITERATOR = $__require('npm:core-js@1.2.6/modules/$.wks.js')('iterator'),
      Iterators = $__require('npm:core-js@1.2.6/modules/$.iterators.js');
  module.exports = $__require('npm:core-js@1.2.6/modules/$.core.js').isIterable = function (it) {
    var O = Object(it);
    return O[ITERATOR] !== undefined || '@@iterator' in O || Iterators.hasOwnProperty(classof(O));
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.delay.js', ['npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.core.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.partial.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
        core = $__require('npm:core-js@1.2.6/modules/$.core.js'),
        $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        partial = $__require('npm:core-js@1.2.6/modules/$.partial.js');
    $export($export.G + $export.F, { delay: function delay(time) {
            return new (core.Promise || global.Promise)(function (resolve) {
                setTimeout(partial.call(resolve, true), time);
            });
        } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.path.js', ['npm:core-js@1.2.6/modules/$.global.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('npm:core-js@1.2.6/modules/$.global.js');
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.invoke.js", [], true, function ($__require, exports, module) {
                  var global = this || self,
                      GLOBAL = global;
                  // fast apply, http://jsperf.lnkit.com/fast-apply/5
                  module.exports = function (fn, args, that) {
                                    var un = that === undefined;
                                    switch (args.length) {
                                                      case 0:
                                                                        return un ? fn() : fn.call(that);
                                                      case 1:
                                                                        return un ? fn(args[0]) : fn.call(that, args[0]);
                                                      case 2:
                                                                        return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
                                                      case 3:
                                                                        return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
                                                      case 4:
                                                                        return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
                                    }return fn.apply(that, args);
                  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.partial.js', ['npm:core-js@1.2.6/modules/$.path.js', 'npm:core-js@1.2.6/modules/$.invoke.js', 'npm:core-js@1.2.6/modules/$.a-function.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var path = $__require('npm:core-js@1.2.6/modules/$.path.js'),
      invoke = $__require('npm:core-js@1.2.6/modules/$.invoke.js'),
      aFunction = $__require('npm:core-js@1.2.6/modules/$.a-function.js');
  module.exports = function () {
    var fn = aFunction(this),
        length = arguments.length,
        pargs = Array(length),
        i = 0,
        _ = path._,
        holder = false;
    while (length > i) if ((pargs[i] = arguments[i++]) === _) holder = true;
    return function () {
      var that = this,
          $$ = arguments,
          $$len = $$.length,
          j = 0,
          k = 0,
          args;
      if (!holder && !$$len) return invoke(fn, pargs, that);
      args = pargs.slice();
      if (holder) for (; length > j; j++) if (args[j] === _) args[j] = $$[k++];
      while ($$len > k) args.push($$[k++]);
      return invoke(fn, args, that);
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.function.part.js', ['npm:core-js@1.2.6/modules/$.path.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.core.js', 'npm:core-js@1.2.6/modules/$.partial.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var path = $__require('npm:core-js@1.2.6/modules/$.path.js'),
        $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
    $__require('npm:core-js@1.2.6/modules/$.core.js')._ = path._ = path._ || {};
    $export($export.P + $export.F, 'Function', { part: $__require('npm:core-js@1.2.6/modules/$.partial.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.object.is-object.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.is-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S + $export.F, 'Object', { isObject: $__require('npm:core-js@1.2.6/modules/$.is-object.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.classof.js', ['npm:core-js@1.2.6/modules/$.cof.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var cof = $__require('npm:core-js@1.2.6/modules/$.cof.js'),
        TAG = $__require('npm:core-js@1.2.6/modules/$.wks.js')('toStringTag'),
        ARG = cof(function () {
        return arguments;
    }()) == 'Arguments';
    module.exports = function (it) {
        var O, T, B;
        return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = (O = Object(it))[TAG]) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.object.classof.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.classof.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  $export($export.S + $export.F, 'Object', { classof: $__require('npm:core-js@1.2.6/modules/$.classof.js') });
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.object.define.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.object-define.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        define = $__require('npm:core-js@1.2.6/modules/$.object-define.js');
    $export($export.S + $export.F, 'Object', { define: define });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.is-object.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.an-object.js', ['npm:core-js@1.2.6/modules/$.is-object.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('npm:core-js@1.2.6/modules/$.is-object.js');
  module.exports = function (it) {
    if (!isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.own-keys.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.an-object.js', 'npm:core-js@1.2.6/modules/$.global.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
        anObject = $__require('npm:core-js@1.2.6/modules/$.an-object.js'),
        Reflect = $__require('npm:core-js@1.2.6/modules/$.global.js').Reflect;
    module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
        var keys = $.getNames(anObject(it)),
            getSymbols = $.getSymbols;
        return getSymbols ? keys.concat(getSymbols(it)) : keys;
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.to-iobject.js', ['npm:core-js@1.2.6/modules/$.iobject.js', 'npm:core-js@1.2.6/modules/$.defined.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var IObject = $__require('npm:core-js@1.2.6/modules/$.iobject.js'),
      defined = $__require('npm:core-js@1.2.6/modules/$.defined.js');
  module.exports = function (it) {
    return IObject(defined(it));
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.object-define.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.own-keys.js', 'npm:core-js@1.2.6/modules/$.to-iobject.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
        ownKeys = $__require('npm:core-js@1.2.6/modules/$.own-keys.js'),
        toIObject = $__require('npm:core-js@1.2.6/modules/$.to-iobject.js');
    module.exports = function define(target, mixin) {
        var keys = ownKeys(toIObject(mixin)),
            length = keys.length,
            i = 0,
            key;
        while (length > i) $.setDesc(target, key = keys[i++], $.getDesc(mixin, key));
        return target;
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.object.make.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.object-define.js', 'npm:core-js@1.2.6/modules/$.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
        define = $__require('npm:core-js@1.2.6/modules/$.object-define.js'),
        create = $__require('npm:core-js@1.2.6/modules/$.js').create;
    $export($export.S + $export.F, 'Object', { make: function (proto, mixin) {
            return define(create(proto), mixin);
        } });
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.library.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = false;
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.iterators.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = {};
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.iter-create.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.property-desc.js', 'npm:core-js@1.2.6/modules/$.set-to-string-tag.js', 'npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      descriptor = $__require('npm:core-js@1.2.6/modules/$.property-desc.js'),
      setToStringTag = $__require('npm:core-js@1.2.6/modules/$.set-to-string-tag.js'),
      IteratorPrototype = {};
  $__require('npm:core-js@1.2.6/modules/$.hide.js')(IteratorPrototype, $__require('npm:core-js@1.2.6/modules/$.wks.js')('iterator'), function () {
    return this;
  });
  module.exports = function (Constructor, NAME, next) {
    Constructor.prototype = $.create(IteratorPrototype, { next: descriptor(1, next) });
    setToStringTag(Constructor, NAME + ' Iterator');
  };
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.has.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function (it, key) {
    return hasOwnProperty.call(it, key);
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.set-to-string-tag.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var def = $__require('npm:core-js@1.2.6/modules/$.js').setDesc,
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      TAG = $__require('npm:core-js@1.2.6/modules/$.wks.js')('toStringTag');
  module.exports = function (it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
      configurable: true,
      value: tag
    });
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.shared.js', ['npm:core-js@1.2.6/modules/$.global.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
        SHARED = '__core-js_shared__',
        store = global[SHARED] || (global[SHARED] = {});
    module.exports = function (key) {
        return store[key] || (store[key] = {});
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.wks.js', ['npm:core-js@1.2.6/modules/$.shared.js', 'npm:core-js@1.2.6/modules/$.uid.js', 'npm:core-js@1.2.6/modules/$.global.js'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var store = $__require('npm:core-js@1.2.6/modules/$.shared.js')('wks'),
        uid = $__require('npm:core-js@1.2.6/modules/$.uid.js'),
        Symbol = $__require('npm:core-js@1.2.6/modules/$.global.js').Symbol;
    module.exports = function (name) {
        return store[name] || (store[name] = Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));
    };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.iter-define.js', ['npm:core-js@1.2.6/modules/$.library.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.redefine.js', 'npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.has.js', 'npm:core-js@1.2.6/modules/$.iterators.js', 'npm:core-js@1.2.6/modules/$.iter-create.js', 'npm:core-js@1.2.6/modules/$.set-to-string-tag.js', 'npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.wks.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var LIBRARY = $__require('npm:core-js@1.2.6/modules/$.library.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      redefine = $__require('npm:core-js@1.2.6/modules/$.redefine.js'),
      hide = $__require('npm:core-js@1.2.6/modules/$.hide.js'),
      has = $__require('npm:core-js@1.2.6/modules/$.has.js'),
      Iterators = $__require('npm:core-js@1.2.6/modules/$.iterators.js'),
      $iterCreate = $__require('npm:core-js@1.2.6/modules/$.iter-create.js'),
      setToStringTag = $__require('npm:core-js@1.2.6/modules/$.set-to-string-tag.js'),
      getProto = $__require('npm:core-js@1.2.6/modules/$.js').getProto,
      ITERATOR = $__require('npm:core-js@1.2.6/modules/$.wks.js')('iterator'),
      BUGGY = !([].keys && 'next' in [].keys()),
      FF_ITERATOR = '@@iterator',
      KEYS = 'keys',
      VALUES = 'values';
  var returnThis = function () {
    return this;
  };
  module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);
    var getMethod = function (kind) {
      if (!BUGGY && kind in proto) return proto[kind];
      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };
        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }
      return function entries() {
        return new Constructor(this, kind);
      };
    };
    var TAG = NAME + ' Iterator',
        DEF_VALUES = DEFAULT == VALUES,
        VALUES_BUG = false,
        proto = Base.prototype,
        $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
        $default = $native || getMethod(DEFAULT),
        methods,
        key;
    if ($native) {
      var IteratorPrototype = getProto($default.call(new Base()));
      setToStringTag(IteratorPrototype, TAG, true);
      if (!LIBRARY && has(proto, FF_ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
      if (DEF_VALUES && $native.name !== VALUES) {
        VALUES_BUG = true;
        $default = function values() {
          return $native.call(this);
        };
      }
    }
    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }
    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;
    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: !DEF_VALUES ? $default : getMethod('entries')
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.number.iterator.js', ['npm:core-js@1.2.6/modules/$.iter-define.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  $__require('npm:core-js@1.2.6/modules/$.iter-define.js')(Number, 'Number', function (iterated) {
    this._l = +iterated;
    this._i = 0;
  }, function () {
    var i = this._i++,
        done = !(i < this._l);
    return {
      done: done,
      value: done ? undefined : i
    };
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.string.escape-html.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.replacer.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  var $re = $__require('npm:core-js@1.2.6/modules/$.replacer.js')(/[&<>"']/g, {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&apos;'
  });
  $export($export.P + $export.F, 'String', { escapeHTML: function escapeHTML() {
      return $re(this);
    } });
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.replacer.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (regExp, replace) {
    var replacer = replace === Object(replace) ? function (part) {
      return replace[part];
    } : replace;
    return function (it) {
      return String(it).replace(regExp, replacer);
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.string.unescape-html.js', ['npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.replacer.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.6/modules/$.export.js');
  var $re = $__require('npm:core-js@1.2.6/modules/$.replacer.js')(/&(?:amp|lt|gt|quot|apos);/g, {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&apos;': "'"
  });
  $export($export.P + $export.F, 'String', { unescapeHTML: function unescapeHTML() {
      return $re(this);
    } });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.global.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.property-desc.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.descriptors.js', ['npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = !$__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
    return Object.defineProperty({}, 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.hide.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.property-desc.js', 'npm:core-js@1.2.6/modules/$.descriptors.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      createDesc = $__require('npm:core-js@1.2.6/modules/$.property-desc.js');
  module.exports = $__require('npm:core-js@1.2.6/modules/$.descriptors.js') ? function (object, key, value) {
    return $.setDesc(object, key, createDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.uid.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var id = 0,
      px = Math.random();
  module.exports = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.redefine.js', ['npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.uid.js', 'npm:core-js@1.2.6/modules/$.core.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      hide = $__require('npm:core-js@1.2.6/modules/$.hide.js'),
      SRC = $__require('npm:core-js@1.2.6/modules/$.uid.js')('src'),
      TO_STRING = 'toString',
      $toString = Function[TO_STRING],
      TPL = ('' + $toString).split(TO_STRING);
  $__require('npm:core-js@1.2.6/modules/$.core.js').inspectSource = function (it) {
    return $toString.call(it);
  };
  (module.exports = function (O, key, val, safe) {
    if (typeof val == 'function') {
      val.hasOwnProperty(SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
      val.hasOwnProperty('name') || hide(val, 'name', key);
    }
    if (O === global) {
      O[key] = val;
    } else {
      if (!safe) delete O[key];
      hide(O, key, val);
    }
  })(Function.prototype, TO_STRING, function toString() {
    return typeof this == 'function' && this[SRC] || $toString.call(this);
  });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.a-function.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.ctx.js', ['npm:core-js@1.2.6/modules/$.a-function.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var aFunction = $__require('npm:core-js@1.2.6/modules/$.a-function.js');
  module.exports = function (fn, that, length) {
    aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };
      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function () {
      return fn.apply(that, arguments);
    };
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.export.js', ['npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.core.js', 'npm:core-js@1.2.6/modules/$.hide.js', 'npm:core-js@1.2.6/modules/$.redefine.js', 'npm:core-js@1.2.6/modules/$.ctx.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      core = $__require('npm:core-js@1.2.6/modules/$.core.js'),
      hide = $__require('npm:core-js@1.2.6/modules/$.hide.js'),
      redefine = $__require('npm:core-js@1.2.6/modules/$.redefine.js'),
      ctx = $__require('npm:core-js@1.2.6/modules/$.ctx.js'),
      PROTOTYPE = 'prototype';
  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F,
        IS_GLOBAL = type & $export.G,
        IS_STATIC = type & $export.S,
        IS_PROTO = type & $export.P,
        IS_BIND = type & $export.B,
        target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE],
        exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
        expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {}),
        key,
        own,
        out,
        exp;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      own = !IS_FORCED && target && key in target;
      out = (own ? target : source)[key];
      exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      if (target && !own) redefine(target, key, out);
      if (exports[key] != out) hide(exports, key, exp);
      if (IS_PROTO && expProto[key] != out) expProto[key] = out;
    }
  };
  global.core = core;
  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  module.exports = $export;
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $Object = Object;
  module.exports = {
    create: $Object.create,
    getProto: $Object.getPrototypeOf,
    isEnum: {}.propertyIsEnumerable,
    getDesc: $Object.getOwnPropertyDescriptor,
    setDesc: $Object.defineProperty,
    setDescs: $Object.defineProperties,
    getKeys: $Object.keys,
    getNames: $Object.getOwnPropertyNames,
    getSymbols: $Object.getOwnPropertySymbols,
    each: [].forEach
  };
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.defined.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.to-object.js', ['npm:core-js@1.2.6/modules/$.defined.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var defined = $__require('npm:core-js@1.2.6/modules/$.defined.js');
  module.exports = function (it) {
    return Object(defined(it));
  };
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.cof.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toString = {}.toString;

  module.exports = function (it) {
    return toString.call(it).slice(8, -1);
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.iobject.js', ['npm:core-js@1.2.6/modules/$.cof.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var cof = $__require('npm:core-js@1.2.6/modules/$.cof.js');
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
});
System.registerDynamic("npm:core-js@1.2.6/modules/$.fails.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.object-assign.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.to-object.js', 'npm:core-js@1.2.6/modules/$.iobject.js', 'npm:core-js@1.2.6/modules/$.fails.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      toObject = $__require('npm:core-js@1.2.6/modules/$.to-object.js'),
      IObject = $__require('npm:core-js@1.2.6/modules/$.iobject.js');
  module.exports = $__require('npm:core-js@1.2.6/modules/$.fails.js')(function () {
    var a = Object.assign,
        A = {},
        B = {},
        S = Symbol(),
        K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function (k) {
      B[k] = k;
    });
    return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;
  }) ? function assign(target, source) {
    var T = toObject(target),
        $$ = arguments,
        $$len = $$.length,
        index = 1,
        getKeys = $.getKeys,
        getSymbols = $.getSymbols,
        isEnum = $.isEnum;
    while ($$len > index) {
      var S = IObject($$[index++]),
          keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
          length = keys.length,
          j = 0,
          key;
      while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }
    return T;
  } : Object.assign;
});
System.registerDynamic('npm:core-js@1.2.6/modules/core.log.js', ['npm:core-js@1.2.6/modules/$.js', 'npm:core-js@1.2.6/modules/$.global.js', 'npm:core-js@1.2.6/modules/$.export.js', 'npm:core-js@1.2.6/modules/$.object-assign.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('npm:core-js@1.2.6/modules/$.js'),
      global = $__require('npm:core-js@1.2.6/modules/$.global.js'),
      $export = $__require('npm:core-js@1.2.6/modules/$.export.js'),
      log = {},
      enabled = true;
  $.each.call(('assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,' + 'info,isIndependentlyComposed,log,markTimeline,profile,profileEnd,table,' + 'time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(','), function (key) {
    log[key] = function () {
      var $console = global.console;
      if (enabled && $console && $console[key]) {
        return Function.apply.call($console[key], $console, arguments);
      }
    };
  });
  $export($export.G + $export.F, { log: $__require('npm:core-js@1.2.6/modules/$.object-assign.js')(log.log, log, {
      enable: function () {
        enabled = true;
      },
      disable: function () {
        enabled = false;
      }
    }) });
});
System.registerDynamic('npm:core-js@1.2.6/modules/$.core.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var core = module.exports = { version: '1.2.6' };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
System.registerDynamic('npm:core-js@1.2.6/index.js', ['npm:core-js@1.2.6/shim.js', 'npm:core-js@1.2.6/modules/core.dict.js', 'npm:core-js@1.2.6/modules/core.get-iterator-method.js', 'npm:core-js@1.2.6/modules/core.get-iterator.js', 'npm:core-js@1.2.6/modules/core.is-iterable.js', 'npm:core-js@1.2.6/modules/core.delay.js', 'npm:core-js@1.2.6/modules/core.function.part.js', 'npm:core-js@1.2.6/modules/core.object.is-object.js', 'npm:core-js@1.2.6/modules/core.object.classof.js', 'npm:core-js@1.2.6/modules/core.object.define.js', 'npm:core-js@1.2.6/modules/core.object.make.js', 'npm:core-js@1.2.6/modules/core.number.iterator.js', 'npm:core-js@1.2.6/modules/core.string.escape-html.js', 'npm:core-js@1.2.6/modules/core.string.unescape-html.js', 'npm:core-js@1.2.6/modules/core.log.js', 'npm:core-js@1.2.6/modules/$.core.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('npm:core-js@1.2.6/shim.js');
  $__require('npm:core-js@1.2.6/modules/core.dict.js');
  $__require('npm:core-js@1.2.6/modules/core.get-iterator-method.js');
  $__require('npm:core-js@1.2.6/modules/core.get-iterator.js');
  $__require('npm:core-js@1.2.6/modules/core.is-iterable.js');
  $__require('npm:core-js@1.2.6/modules/core.delay.js');
  $__require('npm:core-js@1.2.6/modules/core.function.part.js');
  $__require('npm:core-js@1.2.6/modules/core.object.is-object.js');
  $__require('npm:core-js@1.2.6/modules/core.object.classof.js');
  $__require('npm:core-js@1.2.6/modules/core.object.define.js');
  $__require('npm:core-js@1.2.6/modules/core.object.make.js');
  $__require('npm:core-js@1.2.6/modules/core.number.iterator.js');
  $__require('npm:core-js@1.2.6/modules/core.string.escape-html.js');
  $__require('npm:core-js@1.2.6/modules/core.string.unescape-html.js');
  $__require('npm:core-js@1.2.6/modules/core.log.js');
  module.exports = $__require('npm:core-js@1.2.6/modules/$.core.js');
});
System.registerDynamic("npm:core-js@1.2.6.js", ["npm:core-js@1.2.6/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:core-js@1.2.6/index.js");
});
(function() {
var define = System.amdDefine;
define("npm:aurelia-metadata@1.0.0-beta.1/aurelia-metadata.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _coreJs, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.decorators = decorators;
  exports.deprecated = deprecated;
  exports.mixin = mixin;
  exports.protocol = protocol;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var theGlobal = _aureliaPal.PLATFORM.global;
  var emptyMetadata = Object.freeze({});
  var metadataContainerKey = '__metadata__';
  if (typeof theGlobal.Reflect === 'undefined') {
    theGlobal.Reflect = {};
  }
  if (typeof theGlobal.Reflect.getOwnMetadata === 'undefined') {
    Reflect.getOwnMetadata = function(metadataKey, target, targetKey) {
      return ((target[metadataContainerKey] || emptyMetadata)[targetKey] || emptyMetadata)[metadataKey];
    };
  }
  if (typeof theGlobal.Reflect.defineMetadata === 'undefined') {
    Reflect.defineMetadata = function(metadataKey, metadataValue, target, targetKey) {
      var metadataContainer = target.hasOwnProperty(metadataContainerKey) ? target[metadataContainerKey] : target[metadataContainerKey] = {};
      var targetContainer = metadataContainer[targetKey] || (metadataContainer[targetKey] = {});
      targetContainer[metadataKey] = metadataValue;
    };
  }
  if (typeof theGlobal.Reflect.metadata === 'undefined') {
    Reflect.metadata = function(metadataKey, metadataValue) {
      return function(target, targetKey) {
        Reflect.defineMetadata(metadataKey, metadataValue, target, targetKey);
      };
    };
  }
  var metadata = {
    resource: 'aurelia:resource',
    paramTypes: 'design:paramtypes',
    properties: 'design:properties',
    get: function get(metadataKey, target, targetKey) {
      if (!target) {
        return undefined;
      }
      var result = metadata.getOwn(metadataKey, target, targetKey);
      return result === undefined ? metadata.get(metadataKey, Object.getPrototypeOf(target), targetKey) : result;
    },
    getOwn: function getOwn(metadataKey, target, targetKey) {
      if (!target) {
        return undefined;
      }
      return Reflect.getOwnMetadata(metadataKey, target, targetKey);
    },
    define: function define(metadataKey, metadataValue, target, targetKey) {
      Reflect.defineMetadata(metadataKey, metadataValue, target, targetKey);
    },
    getOrCreateOwn: function getOrCreateOwn(metadataKey, Type, target, targetKey) {
      var result = metadata.getOwn(metadataKey, target, targetKey);
      if (result === undefined) {
        result = new Type();
        Reflect.defineMetadata(metadataKey, result, target, targetKey);
      }
      return result;
    }
  };
  exports.metadata = metadata;
  var originStorage = new Map();
  var unknownOrigin = Object.freeze({
    moduleId: undefined,
    moduleMember: undefined
  });
  var Origin = (function() {
    function Origin(moduleId, moduleMember) {
      _classCallCheck(this, Origin);
      this.moduleId = moduleId;
      this.moduleMember = moduleMember;
    }
    Origin.get = function get(fn) {
      var origin = originStorage.get(fn);
      if (origin === undefined) {
        _aureliaPal.PLATFORM.eachModule(function(key, value) {
          for (var _name in value) {
            var exp = value[_name];
            if (exp === fn) {
              originStorage.set(fn, origin = new Origin(key, _name));
              return true;
            }
          }
          if (value === fn) {
            originStorage.set(fn, origin = new Origin(key, 'default'));
            return true;
          }
        });
      }
      return origin || unknownOrigin;
    };
    Origin.set = function set(fn, origin) {
      originStorage.set(fn, origin);
    };
    return Origin;
  })();
  exports.Origin = Origin;
  function decorators() {
    for (var _len = arguments.length,
        rest = Array(_len),
        _key = 0; _key < _len; _key++) {
      rest[_key] = arguments[_key];
    }
    var applicator = function applicator(target, key, descriptor) {
      var i = rest.length;
      if (key) {
        descriptor = descriptor || {
          value: target[key],
          writable: true,
          configurable: true,
          enumerable: true
        };
        while (i--) {
          descriptor = rest[i](target, key, descriptor) || descriptor;
        }
        Object.defineProperty(target, key, descriptor);
      } else {
        while (i--) {
          target = rest[i](target) || target;
        }
      }
      return target;
    };
    applicator.on = applicator;
    return applicator;
  }
  function deprecated(optionsOrTarget, maybeKey, maybeDescriptor) {
    function decorator(target, key, descriptor) {
      var methodSignature = target.constructor.name + '#' + key;
      var options = maybeKey ? {} : optionsOrTarget || {};
      var message = 'DEPRECATION - ' + methodSignature;
      if (typeof descriptor.value !== 'function') {
        throw new SyntaxError('Only methods can be marked as deprecated.');
      }
      if (options.message) {
        message += ' - ' + options.message;
      }
      return _extends({}, descriptor, {value: function deprecationWrapper() {
          if (options.error) {
            throw new Error(message);
          } else {
            console.warn(message);
          }
          return descriptor.value.apply(this, arguments);
        }});
    }
    return maybeKey ? decorator(optionsOrTarget, maybeKey, maybeDescriptor) : decorator;
  }
  function mixin(behavior) {
    var instanceKeys = Object.keys(behavior);
    function _mixin(possible) {
      var decorator = function decorator(target) {
        var resolvedTarget = typeof target === 'function' ? target.prototype : target;
        for (var _iterator = instanceKeys,
            _isArray = Array.isArray(_iterator),
            _i = 0,
            _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ; ) {
          var _ref;
          if (_isArray) {
            if (_i >= _iterator.length)
              break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done)
              break;
            _ref = _i.value;
          }
          var property = _ref;
          Object.defineProperty(resolvedTarget, property, {
            value: behavior[property],
            writable: true
          });
        }
      };
      return possible ? decorator(possible) : decorator;
    }
    return _mixin;
  }
  function alwaysValid() {
    return true;
  }
  function noCompose() {}
  function ensureProtocolOptions(options) {
    if (options === undefined) {
      options = {};
    } else if (typeof options === 'function') {
      options = {validate: options};
    }
    if (!options.validate) {
      options.validate = alwaysValid;
    }
    if (!options.compose) {
      options.compose = noCompose;
    }
    return options;
  }
  function createProtocolValidator(validate) {
    return function(target) {
      var result = validate(target);
      return result === true;
    };
  }
  function createProtocolAsserter(name, validate) {
    return function(target) {
      var result = validate(target);
      if (result !== true) {
        throw new Error(result || name + ' was not correctly implemented.');
      }
    };
  }
  function protocol(name, options) {
    options = ensureProtocolOptions(options);
    var result = function result(target) {
      var resolvedTarget = typeof target === 'function' ? target.prototype : target;
      options.compose(resolvedTarget);
      result.assert(resolvedTarget);
      Object.defineProperty(resolvedTarget, 'protocol:' + name, {
        enumerable: false,
        configurable: false,
        writable: false,
        value: true
      });
    };
    result.validate = createProtocolValidator(options.validate);
    result.assert = createProtocolAsserter(name, options.validate);
    return result;
  }
  protocol.create = function(name, options) {
    options = ensureProtocolOptions(options);
    var hidden = 'protocol:' + name;
    var result = function result(target) {
      var decorator = protocol(name, options);
      return target ? decorator(target) : decorator;
    };
    result.decorates = function(obj) {
      return obj[hidden] === true;
    };
    result.validate = createProtocolValidator(options.validate);
    result.assert = createProtocolAsserter(name, options.validate);
    return result;
  };
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-metadata@1.0.0-beta.1.js", ["npm:aurelia-metadata@1.0.0-beta.1/aurelia-metadata.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-pal@1.0.0-beta.1/aurelia-pal.js", ["exports"], function(exports) {
  'use strict';
  exports.__esModule = true;
  exports.AggregateError = AggregateError;
  exports.initializePAL = initializePAL;
  function AggregateError(message, innerError, skipIfAlreadyAggregate) {
    if (innerError) {
      if (innerError.innerError && skipIfAlreadyAggregate) {
        return innerError;
      }
      if (innerError.stack) {
        message += '\n------------------------------------------------\ninner error: ' + innerError.stack;
      }
    }
    var e = new Error(message);
    if (innerError) {
      e.innerError = innerError;
    }
    return e;
  }
  var FEATURE = {};
  exports.FEATURE = FEATURE;
  var PLATFORM = {
    noop: function noop() {},
    eachModule: function eachModule() {}
  };
  exports.PLATFORM = PLATFORM;
  PLATFORM.global = (function() {
    if (typeof self !== 'undefined') {
      return self;
    }
    if (typeof global !== 'undefined') {
      return global;
    }
    return new Function('return this')();
  })();
  var DOM = {};
  exports.DOM = DOM;
  function initializePAL(callback) {
    if (typeof Object.getPropertyDescriptor !== 'function') {
      Object.getPropertyDescriptor = function(subject, name) {
        var pd = Object.getOwnPropertyDescriptor(subject, name);
        var proto = Object.getPrototypeOf(subject);
        while (typeof pd === 'undefined' && proto !== null) {
          pd = Object.getOwnPropertyDescriptor(proto, name);
          proto = Object.getPrototypeOf(proto);
        }
        return pd;
      };
    }
    callback(PLATFORM, FEATURE, DOM);
  }
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-pal@1.0.0-beta.1.js", ["npm:aurelia-pal@1.0.0-beta.1/aurelia-pal.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-task-queue@1.0.0-beta.1.0.1/aurelia-task-queue.js", ["exports", "npm:aurelia-pal@1.0.0-beta.1.js"], function(exports, _aureliaPal) {
  'use strict';
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var hasSetImmediate = typeof setImmediate === 'function';
  function makeRequestFlushFromMutationObserver(flush) {
    var toggle = 1;
    var observer = _aureliaPal.DOM.createMutationObserver(flush);
    var node = _aureliaPal.DOM.createTextNode('');
    observer.observe(node, {characterData: true});
    return function requestFlush() {
      toggle = -toggle;
      node.data = toggle;
    };
  }
  function makeRequestFlushFromTimer(flush) {
    return function requestFlush() {
      var timeoutHandle = setTimeout(handleFlushTimer, 0);
      var intervalHandle = setInterval(handleFlushTimer, 50);
      function handleFlushTimer() {
        clearTimeout(timeoutHandle);
        clearInterval(intervalHandle);
        flush();
      }
    };
  }
  function onError(error, task) {
    if ('onError' in task) {
      task.onError(error);
    } else if (hasSetImmediate) {
      setImmediate(function() {
        throw error;
      });
    } else {
      setTimeout(function() {
        throw error;
      }, 0);
    }
  }
  var TaskQueue = (function() {
    function TaskQueue() {
      var _this = this;
      _classCallCheck(this, TaskQueue);
      this.microTaskQueue = [];
      this.microTaskQueueCapacity = 1024;
      this.taskQueue = [];
      this.requestFlushMicroTaskQueue = makeRequestFlushFromMutationObserver(function() {
        return _this.flushMicroTaskQueue();
      });
      this.requestFlushTaskQueue = makeRequestFlushFromTimer(function() {
        return _this.flushTaskQueue();
      });
    }
    TaskQueue.prototype.queueMicroTask = function queueMicroTask(task) {
      if (this.microTaskQueue.length < 1) {
        this.requestFlushMicroTaskQueue();
      }
      this.microTaskQueue.push(task);
    };
    TaskQueue.prototype.queueTask = function queueTask(task) {
      if (this.taskQueue.length < 1) {
        this.requestFlushTaskQueue();
      }
      this.taskQueue.push(task);
    };
    TaskQueue.prototype.flushTaskQueue = function flushTaskQueue() {
      var queue = this.taskQueue;
      var index = 0;
      var task = undefined;
      this.taskQueue = [];
      try {
        while (index < queue.length) {
          task = queue[index];
          task.call();
          index++;
        }
      } catch (error) {
        onError(error, task);
      }
    };
    TaskQueue.prototype.flushMicroTaskQueue = function flushMicroTaskQueue() {
      var queue = this.microTaskQueue;
      var capacity = this.microTaskQueueCapacity;
      var index = 0;
      var task = undefined;
      try {
        while (index < queue.length) {
          task = queue[index];
          task.call();
          index++;
          if (index > capacity) {
            for (var scan = 0,
                newLength = queue.length - index; scan < newLength; scan++) {
              queue[scan] = queue[scan + index];
            }
            queue.length -= index;
            index = 0;
          }
        }
      } catch (error) {
        onError(error, task);
      }
      queue.length = 0;
    };
    return TaskQueue;
  })();
  exports.TaskQueue = TaskQueue;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-task-queue@1.0.0-beta.1.0.1.js", ["npm:aurelia-task-queue@1.0.0-beta.1.0.1/aurelia-task-queue.js"], function(main) {
  return main;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-framework@1.0.0-beta.1.0.3/aurelia-framework.js", ["exports", "npm:core-js@1.2.6.js", "npm:aurelia-logging@1.0.0-beta.1.js", "npm:aurelia-templating@1.0.0-beta.1.0.1.js", "npm:aurelia-path@1.0.0-beta.1.js", "npm:aurelia-dependency-injection@1.0.0-beta.1.js", "npm:aurelia-loader@1.0.0-beta.1.js", "npm:aurelia-pal@1.0.0-beta.1.js", "npm:aurelia-binding@1.0.0-beta.1.0.2.js", "npm:aurelia-metadata@1.0.0-beta.1.js", "npm:aurelia-task-queue@1.0.0-beta.1.0.1.js"], function(exports, _coreJs, _aureliaLogging, _aureliaTemplating, _aureliaPath, _aureliaDependencyInjection, _aureliaLoader, _aureliaPal, _aureliaBinding, _aureliaMetadata, _aureliaTaskQueue) {
  'use strict';
  exports.__esModule = true;
  function _interopExportWildcard(obj, defaults) {
    var newObj = defaults({}, obj);
    delete newObj['default'];
    return newObj;
  }
  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var logger = _aureliaLogging.getLogger('aurelia');
  function runTasks(config, tasks) {
    var current = undefined;
    var next = function next() {
      if (current = tasks.shift()) {
        return Promise.resolve(current(config)).then(next);
      }
      return Promise.resolve();
    };
    return next();
  }
  function loadPlugin(config, loader, info) {
    logger.debug('Loading plugin ' + info.moduleId + '.');
    config.resourcesRelativeTo = info.resourcesRelativeTo;
    return loader.loadModule(info.moduleId).then(function(m) {
      if ('configure' in m) {
        return Promise.resolve(m.configure(config, info.config || {})).then(function() {
          config.resourcesRelativeTo = null;
          logger.debug('Configured plugin ' + info.moduleId + '.');
        });
      }
      config.resourcesRelativeTo = null;
      logger.debug('Loaded plugin ' + info.moduleId + '.');
    });
  }
  function loadResources(container, resourcesToLoad, appResources) {
    var viewEngine = container.get(_aureliaTemplating.ViewEngine);
    var importIds = Object.keys(resourcesToLoad);
    var names = new Array(importIds.length);
    for (var i = 0,
        ii = importIds.length; i < ii; ++i) {
      names[i] = resourcesToLoad[importIds[i]];
    }
    return viewEngine.importViewResources(importIds, names, appResources);
  }
  function assertProcessed(plugins) {
    if (plugins.processed) {
      throw new Error('This config instance has already been applied. To load more plugins or global resources, create a new FrameworkConfiguration instance.');
    }
  }
  var FrameworkConfiguration = (function() {
    function FrameworkConfiguration(aurelia) {
      var _this = this;
      _classCallCheck(this, FrameworkConfiguration);
      this.aurelia = aurelia;
      this.container = aurelia.container;
      this.info = [];
      this.processed = false;
      this.preTasks = [];
      this.postTasks = [];
      this.resourcesToLoad = {};
      this.preTask(function() {
        return _this.bootstrapperName = aurelia.loader.normalizeSync('aurelia-bootstrapper');
      });
      this.postTask(function() {
        return loadResources(aurelia.container, _this.resourcesToLoad, aurelia.resources);
      });
    }
    FrameworkConfiguration.prototype.instance = function instance(type, _instance) {
      this.container.registerInstance(type, _instance);
      return this;
    };
    FrameworkConfiguration.prototype.singleton = function singleton(type, implementation) {
      this.container.registerSingleton(type, implementation);
      return this;
    };
    FrameworkConfiguration.prototype.transient = function transient(type, implementation) {
      this.container.registerTransient(type, implementation);
      return this;
    };
    FrameworkConfiguration.prototype.preTask = function preTask(task) {
      assertProcessed(this);
      this.preTasks.push(task);
      return this;
    };
    FrameworkConfiguration.prototype.postTask = function postTask(task) {
      assertProcessed(this);
      this.postTasks.push(task);
      return this;
    };
    FrameworkConfiguration.prototype.feature = function feature(plugin, config) {
      plugin = plugin.endsWith('.js') || plugin.endsWith('.ts') ? plugin.substring(0, plugin.length - 3) : plugin;
      return this.plugin({
        moduleId: plugin + '/index',
        resourcesRelativeTo: plugin,
        config: config || {}
      });
    };
    FrameworkConfiguration.prototype.globalResources = function globalResources(resources) {
      assertProcessed(this);
      var toAdd = Array.isArray(resources) ? resources : arguments;
      var resource = undefined;
      var path = undefined;
      var resourcesRelativeTo = this.resourcesRelativeTo || '';
      for (var i = 0,
          ii = toAdd.length; i < ii; ++i) {
        resource = toAdd[i];
        if (typeof resource !== 'string') {
          throw new Error('Invalid resource path [' + resource + ']. Resources must be specified as relative module IDs.');
        }
        path = _aureliaPath.join(resourcesRelativeTo, resource);
        this.resourcesToLoad[path] = this.resourcesToLoad[path];
      }
      return this;
    };
    FrameworkConfiguration.prototype.globalName = function globalName(resourcePath, newName) {
      assertProcessed(this);
      this.resourcesToLoad[resourcePath] = newName;
      return this;
    };
    FrameworkConfiguration.prototype.plugin = function plugin(_plugin, config) {
      assertProcessed(this);
      if (typeof _plugin === 'string') {
        _plugin = _plugin.endsWith('.js') || _plugin.endsWith('.ts') ? _plugin.substring(0, _plugin.length - 3) : _plugin;
        return this.plugin({
          moduleId: _plugin,
          resourcesRelativeTo: _plugin,
          config: config || {}
        });
      }
      this.info.push(_plugin);
      return this;
    };
    FrameworkConfiguration.prototype._addNormalizedPlugin = function _addNormalizedPlugin(name, config) {
      var _this2 = this;
      var plugin = {
        moduleId: name,
        resourcesRelativeTo: name,
        config: config || {}
      };
      this.plugin(plugin);
      this.preTask(function() {
        var normalizedName = _this2.aurelia.loader.normalizeSync(name, _this2.bootstrapperName);
        normalizedName = normalizedName.endsWith('.js') || normalizedName.endsWith('.ts') ? normalizedName.substring(0, normalizedName.length - 3) : normalizedName;
        plugin.moduleId = normalizedName;
        plugin.resourcesRelativeTo = normalizedName;
        _this2.aurelia.loader.map(name, normalizedName);
      });
      return this;
    };
    FrameworkConfiguration.prototype.defaultBindingLanguage = function defaultBindingLanguage() {
      return this._addNormalizedPlugin('aurelia-templating-binding');
    };
    FrameworkConfiguration.prototype.router = function router() {
      return this._addNormalizedPlugin('aurelia-templating-router');
    };
    FrameworkConfiguration.prototype.history = function history() {
      return this._addNormalizedPlugin('aurelia-history-browser');
    };
    FrameworkConfiguration.prototype.defaultResources = function defaultResources() {
      return this._addNormalizedPlugin('aurelia-templating-resources');
    };
    FrameworkConfiguration.prototype.eventAggregator = function eventAggregator() {
      return this._addNormalizedPlugin('aurelia-event-aggregator');
    };
    FrameworkConfiguration.prototype.standardConfiguration = function standardConfiguration() {
      return this.defaultBindingLanguage().defaultResources().history().router().eventAggregator();
    };
    FrameworkConfiguration.prototype.developmentLogging = function developmentLogging() {
      var _this3 = this;
      this.preTask(function() {
        var name = _this3.aurelia.loader.normalizeSync('aurelia-logging-console', _this3.bootstrapperName);
        return _this3.aurelia.loader.loadModule(name).then(function(m) {
          _aureliaLogging.addAppender(new m.ConsoleAppender());
          _aureliaLogging.setLevel(_aureliaLogging.logLevel.debug);
        });
      });
      return this;
    };
    FrameworkConfiguration.prototype.apply = function apply() {
      var _this4 = this;
      if (this.processed) {
        return Promise.resolve();
      }
      return runTasks(this, this.preTasks).then(function() {
        var loader = _this4.aurelia.loader;
        var info = _this4.info;
        var current = undefined;
        var next = function next() {
          if (current = info.shift()) {
            return loadPlugin(_this4, loader, current).then(next);
          }
          _this4.processed = true;
          return Promise.resolve();
        };
        return next().then(function() {
          return runTasks(_this4, _this4.postTasks);
        });
      });
    };
    return FrameworkConfiguration;
  })();
  exports.FrameworkConfiguration = FrameworkConfiguration;
  function preventActionlessFormSubmit() {
    _aureliaPal.DOM.addEventListener('submit', function(evt) {
      var target = evt.target;
      var action = target.action;
      if (target.tagName.toLowerCase() === 'form' && !action) {
        evt.preventDefault();
      }
    });
  }
  var Aurelia = (function() {
    function Aurelia(loader, container, resources) {
      _classCallCheck(this, Aurelia);
      this.loader = loader || new _aureliaPal.PLATFORM.Loader();
      this.container = container || new _aureliaDependencyInjection.Container().makeGlobal();
      this.resources = resources || new _aureliaTemplating.ViewResources();
      this.use = new FrameworkConfiguration(this);
      this.logger = _aureliaLogging.getLogger('aurelia');
      this.hostConfigured = false;
      this.host = null;
      this.use.instance(Aurelia, this);
      this.use.instance(_aureliaLoader.Loader, this.loader);
      this.use.instance(_aureliaTemplating.ViewResources, this.resources);
    }
    Aurelia.prototype.start = function start() {
      var _this5 = this;
      if (this.started) {
        return Promise.resolve(this);
      }
      this.started = true;
      this.logger.info('Aurelia Starting');
      return this.use.apply().then(function() {
        preventActionlessFormSubmit();
        if (!_this5.container.hasResolver(_aureliaTemplating.BindingLanguage)) {
          var message = 'You must configure Aurelia with a BindingLanguage implementation.';
          _this5.logger.error(message);
          throw new Error(message);
        }
        _this5.logger.info('Aurelia Started');
        var evt = _aureliaPal.DOM.createCustomEvent('aurelia-started', {
          bubbles: true,
          cancelable: true
        });
        _aureliaPal.DOM.dispatchEvent(evt);
        return _this5;
      });
    };
    Aurelia.prototype.enhance = function enhance() {
      var _this6 = this;
      var bindingContext = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      var applicationHost = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
      this._configureHost(applicationHost);
      return new Promise(function(resolve) {
        var engine = _this6.container.get(_aureliaTemplating.TemplatingEngine);
        _this6.root = engine.enhance({
          container: _this6.container,
          element: _this6.host,
          resources: _this6.resources,
          bindingContext: bindingContext
        });
        _this6.root.attached();
        _this6._onAureliaComposed();
        return _this6;
      });
    };
    Aurelia.prototype.setRoot = function setRoot() {
      var _this7 = this;
      var root = arguments.length <= 0 || arguments[0] === undefined ? 'app' : arguments[0];
      var applicationHost = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
      var engine = undefined;
      var instruction = {};
      this._configureHost(applicationHost);
      engine = this.container.get(_aureliaTemplating.TemplatingEngine);
      instruction.viewModel = root;
      instruction.container = instruction.childContainer = this.container;
      instruction.viewSlot = this.hostSlot;
      instruction.host = this.host;
      return engine.compose(instruction).then(function(r) {
        _this7.root = r;
        instruction.viewSlot.attached();
        _this7._onAureliaComposed();
        return _this7;
      });
    };
    Aurelia.prototype._configureHost = function _configureHost(applicationHost) {
      if (this.hostConfigured) {
        return;
      }
      applicationHost = applicationHost || this.host;
      if (!applicationHost || typeof applicationHost === 'string') {
        this.host = _aureliaPal.DOM.getElementById(applicationHost || 'applicationHost');
      } else {
        this.host = applicationHost;
      }
      if (!this.host) {
        throw new Error('No applicationHost was specified.');
      }
      this.hostConfigured = true;
      this.host.aurelia = this;
      this.hostSlot = new _aureliaTemplating.ViewSlot(this.host, true);
      this.hostSlot.transformChildNodesIntoView();
      this.container.registerInstance(_aureliaPal.DOM.boundary, this.host);
    };
    Aurelia.prototype._onAureliaComposed = function _onAureliaComposed() {
      var evt = _aureliaPal.DOM.createCustomEvent('aurelia-composed', {
        bubbles: true,
        cancelable: true
      });
      setTimeout(function() {
        return _aureliaPal.DOM.dispatchEvent(evt);
      }, 1);
    };
    return Aurelia;
  })();
  exports.Aurelia = Aurelia;
  _defaults(exports, _interopExportWildcard(_aureliaDependencyInjection, _defaults));
  _defaults(exports, _interopExportWildcard(_aureliaBinding, _defaults));
  _defaults(exports, _interopExportWildcard(_aureliaMetadata, _defaults));
  _defaults(exports, _interopExportWildcard(_aureliaTemplating, _defaults));
  _defaults(exports, _interopExportWildcard(_aureliaLoader, _defaults));
  _defaults(exports, _interopExportWildcard(_aureliaTaskQueue, _defaults));
  _defaults(exports, _interopExportWildcard(_aureliaPath, _defaults));
  _defaults(exports, _interopExportWildcard(_aureliaPal, _defaults));
  var LogManager = _aureliaLogging;
  exports.LogManager = LogManager;
});

})();
(function() {
var define = System.amdDefine;
define("npm:aurelia-framework@1.0.0-beta.1.0.3.js", ["npm:aurelia-framework@1.0.0-beta.1.0.3/aurelia-framework.js"], function(main) {
  return main;
});

})();
System.register('commons/api.js', [], function (_export) {
    'use strict';

    var API;

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    return {
        setters: [],
        execute: function () {
            API = function () {
                function API() {
                    _classCallCheck(this, API);

                    this.briefingDetail = '/briefing/{uuid}';
                    this.briefingInitialAvailability = '/configure/initial_availabilities';
                    this.newBriefing = '/bc/{briefingCenterUuid}/briefing';
                    this.updateBrieifng = '/briefing/{briefingUuid}';
                    this.newMeetingFromBriefing = '/briefings/{uuid}/meeting_request/new';
                    this.briefingAgenda = '/briefing/{uuid}/briefing_agenda';
                    this.briefingCompanies = 'briefing_companies';
                    this.activities = '/activities';
                    this.customForms = '/briefing_custom_form/get_fields';
                    this.roomActivities = '/activities_rooms';
                    this.events = '/events';
                    this.getTopics = '/topics';
                    this.createTopic = '/topics';
                    this.updateTopic = '/topic/{uuid}/update';
                    this.deleteTopic = '/topics';
                    this.topicAvailable = '/topic/is_available';
                    this.topicDetails = '/topics/{uuid}';
                    this.topicUsers = '/topic/{uuid}/users';
                    this.topicEvents = '/topic/{uuid}/events';
                    this.topicRooms = '/topic/{uuid}/rooms';
                    this.topicActivities = '/topic/{uuid}/activities';
                    this.userList = '/common_utils/users/list';
                    this.topicRequestors = '/fetch_requestors';
                    this.topicRoomList = '/rooms/list';
                    this.exportTopic = '/topics/export';
                    this.userCreate = '/api/v1/users/book_meeting_create';
                    this.externalUsers = '/users/external';
                    this.internalUsers = '/users/internal';
                    this.managerUsers = '/users/managers';
                    this.conciergeServices = '/concierge_requests';
                    this.topicEnabledEvents = '/topic_enabled_events';
                    this.portalPrefix = '/portal';
                    this.conciergeMailRequest = 'concierge_request/{uuid}/mail_request';
                    this.conciergeUpdateRequest = 'concierge_requests/{uuid}';
                    this.surveyMailUrl = '/{uuid}/send_survey_mail';
                    this.surveyBulkMailUrl = '/send_survey_mail/bulk_action';
                    this.briefingFilterMetaUrl = '/bc/{briefingCenterUuid}/briefing/filters';
                    this.createDraftPlan = '/briefing/{uuid}/process_agenda_plan';
                    this.updateDraftPlan = '/briefing/{uuid}/process_agenda_plan/{planUUID}';
                    this.approveDraftPlan = '/briefing/{uuid}/agenda_plan/{planUUID}/approve';
                    this.rejectDraftPlan = '/briefing/{uuid}/agenda_plan/{planUUID}/reject';
                    this.eventInfo = '/event_info';
                    this.fetch_user_form_rules = '/user_form_fields';
                    this.save_profile_preferences = '/user_form_fields/update';
                    this.fetch_portal_custom_form = '/forms';
                    this.save_portal_custom_form = '/form/update';
                    this.fetch_external_user_form_fields = 'SFDC';
                    this.topicLocations = '/topic/{uuid}/ebc_locations';
                    this.topicTemplateDownload = '/topics/template';
                    this.briefingRoomList = '/briefing_rooms';
                    this.getAttendees = '/briefing/copy_attendees';
                    this.getComplianceMesaage = '/compliance/configurations';
                    this.sync_att_to_sfdc = '/sync_att_to_sfdc';
                }

                _createClass(API, [{
                    key: 'getBaseUrl',
                    value: function getBaseUrl() {
                        var bases = document.getElementsByTagName('base');
                        var baseHref = "";

                        if (bases.length > 0) {
                            baseHref = bases[0].href;
                        }
                        return baseHref;
                    }
                }, {
                    key: 'getPortalAbsolutePath',
                    value: function getPortalAbsolutePath() {
                        return envDetails.jiffleRootUrl + this.portalPrefix;
                    }
                }, {
                    key: 'getRelativeBasePath',
                    value: function getRelativeBasePath() {
                        return envDetails.jiffleRootUrl + envDetails.urlPrefix;
                    }
                }]);

                return API;
            }();

            _export('API', API);
        }
    };
});
System.register('service/sfdc_contact_sync_service.js', ['utils/request.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'commons/api.js'], function (_export) {
  'use strict';

  var HttpRequest, inject, API, SfdcContactSyncService;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  return {
    setters: [function (_utilsRequest) {
      HttpRequest = _utilsRequest.HttpRequest;
    }, function (_aureliaFramework) {
      inject = _aureliaFramework.inject;
    }, function (_commonsApi) {
      API = _commonsApi.API;
    }],
    execute: function () {
      SfdcContactSyncService = function () {
        function SfdcContactSyncService(httpRequest, Api) {
          _classCallCheck(this, _SfdcContactSyncService);

          this.httpRequest = httpRequest;
          this.api = Api;
        }

        _createClass(SfdcContactSyncService, [{
          key: 'getSfdcSyncedContactFields',
          value: function getSfdcSyncedContactFields(data) {
            return this.httpRequest.createGetRequest('', data, 'fetch_external_user_form_fields');
          }
        }, {
          key: 'syncAttendeeToSfdc',
          value: function syncAttendeeToSfdc(attendeeData, accId) {

            var params = {
              "api_params": {
                meeting_source: 'Account',
                customFields: attendeeData.user.custom_fields,
                account_id: accId,
                user: attendeeData.user
              }
            };
            return this.httpRequest.createPostRequest(this.api.sync_att_to_sfdc, JSON.stringify(params), 'sync_att_to_sfdc');
          }
        }]);

        var _SfdcContactSyncService = SfdcContactSyncService;
        SfdcContactSyncService = inject(HttpRequest, API)(SfdcContactSyncService) || SfdcContactSyncService;
        return SfdcContactSyncService;
      }();

      _export('SfdcContactSyncService', SfdcContactSyncService);
    }
  };
});
System.register('view-models/users/add-user.js', ['github:lodash/lodash@3.10.1.js', 'github:twbs/bootstrap@3.3.6.js', 'npm:aurelia-framework@1.0.0-beta.1.0.3.js', 'npm:aurelia-validation@0.6.0.js', 'npm:aurelia-event-aggregator@1.0.0-beta.1.js', 'models/user.js', 'view-models/users/user-forms.js', 'service/user_request_service.js', 'npm:aurelia-i18n@0.4.1.js', 'service/user_form_request_service.js', 'service/sfdc_contact_sync_service.js'], function (_export) {
    'use strict';

    var _, $, bootstrap, bindable, inject, Validation, EventAggregator, User, UserForms, UserRequestService, I18N, UserFormRequestService, SfdcContactSyncService, AddUser;

    var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }return target;
    };

    var _createDecoratedClass = function () {
        function defineProperties(target, descriptors, initializers) {
            for (var i = 0; i < descriptors.length; i++) {
                var descriptor = descriptors[i];var decorators = descriptor.decorators;var key = descriptor.key;delete descriptor.key;delete descriptor.decorators;descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor || descriptor.initializer) descriptor.writable = true;if (decorators) {
                    for (var f = 0; f < decorators.length; f++) {
                        var decorator = decorators[f];if (typeof decorator === 'function') {
                            descriptor = decorator(target, key, descriptor) || descriptor;
                        } else {
                            throw new TypeError('The decorator for method ' + descriptor.key + ' is of the invalid type ' + typeof decorator);
                        }
                    }if (descriptor.initializer !== undefined) {
                        initializers[key] = descriptor;continue;
                    }
                }Object.defineProperty(target, key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);return Constructor;
        };
    }();

    var _get = function get(_x, _x2, _x3) {
        var _again = true;_function: while (_again) {
            var object = _x,
                property = _x2,
                receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
                var parent = Object.getPrototypeOf(object);if (parent === null) {
                    return undefined;
                } else {
                    _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
                }
            } else if ('value' in desc) {
                return desc.value;
            } else {
                var getter = desc.get;if (getter === undefined) {
                    return undefined;
                }return getter.call(receiver);
            }
        }
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    function _defineDecoratedPropertyDescriptor(target, key, descriptors) {
        var _descriptor = descriptors[key];if (!_descriptor) return;var descriptor = {};for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;Object.defineProperty(target, key, descriptor);
    }

    return {
        setters: [function (_lodashLodash) {
            _ = _lodashLodash['default'];
        }, function (_bootstrap) {
            $ = _bootstrap['default'];
            bootstrap = _bootstrap['default'];
        }, function (_aureliaFramework) {
            bindable = _aureliaFramework.bindable;
            inject = _aureliaFramework.inject;
        }, function (_aureliaValidation) {
            Validation = _aureliaValidation.Validation;
        }, function (_aureliaEventAggregator) {
            EventAggregator = _aureliaEventAggregator.EventAggregator;
        }, function (_modelsUser) {
            User = _modelsUser.User;
        }, function (_userForms) {
            UserForms = _userForms.UserForms;
        }, function (_serviceUser_request_service) {
            UserRequestService = _serviceUser_request_service.UserRequestService;
        }, function (_aureliaI18n) {
            I18N = _aureliaI18n.I18N;
        }, function (_serviceUser_form_request_service) {
            UserFormRequestService = _serviceUser_form_request_service.UserFormRequestService;
        }, function (_serviceSfdc_contact_sync_service) {
            SfdcContactSyncService = _serviceSfdc_contact_sync_service.SfdcContactSyncService;
        }],
        execute: function () {
            AddUser = function (_UserForms) {
                var _instanceInitializers = {};
                var _instanceInitializers = {};

                _inherits(AddUser, _UserForms);

                _createDecoratedClass(AddUser, [{
                    key: 'selectedSfdcAccount',
                    decorators: [bindable],
                    initializer: null,
                    enumerable: true
                }], null, _instanceInitializers);

                function AddUser(ea, validation, userService, userFormRequestService, sfdcContactSyncService, i18n) {
                    _classCallCheck(this, _AddUser);

                    _get(Object.getPrototypeOf(_AddUser.prototype), 'constructor', this).call(this, userFormRequestService, sfdcContactSyncService, ea);
                    this.first_name = "";
                    this.last_name = "";
                    this.email = "";
                    this.company_name = "";
                    this.contact_no = "";
                    this.title = "";
                    this.existing = false;
                    this.userType = '';
                    this.enableContactToSync = false;
                    this.externalFormRenderCmp = null;
                    this.internalFormRenderCmp = null;
                    this.customFieldDefaultVals = { external: {} };

                    _defineDecoratedPropertyDescriptor(this, 'selectedSfdcAccount', _instanceInitializers);

                    this.ea = ea;
                    this.i18n = i18n;
                    this.title = "";
                    this.email = "";
                    this.last_name = "";
                    this.contact_no = "";
                    this.first_name = "";
                    this.existing = false;
                    this.company_name = "";
                    this.envDetails = envDetails;
                    this.subscribeToEvents();
                    this.external = new User();
                    this.validation = validation;
                    this.userService = userService;
                    this.i18n.setLocale('en').then(function () {});
                    this.isSFDC = typeof jiffle !== 'undefined' ? true : false;
                    this.isNotIE11 = !navigator.userAgent.match(/Trident.*rv\:11\./);
                    this.captureConsent = window.capture_consent;
                    this.consentMandatory = window.consent_mandatory;
                    this.consentChecked = false;
                    this.addUserConsentMessage = '';
                }

                _createDecoratedClass(AddUser, [{
                    key: 'attached',
                    value: function attached() {
                        var _this = this;

                        $(this.usermodal).modal({ keyboard: false, show: false }).on('hide.bs.modal', function (event) {
                            if (!$(event.target).hasClass('modal')) return;
                            _this.resetUserCustomForm(_this.userType);
                            if (_this.external.email || _this.external.first_name || _this.external.last_name || _this.external.company_name || _this.external.title || _this.external.contact_no) {
                                event.preventDefault();
                                _this.ea.publish("show:notification", {
                                    overlay: true,
                                    'class': 'green',
                                    cancel: function cancel() {},
                                    isConfirmation: true,
                                    title: _this.i18n.tr('users.addUser.areYouSure'),
                                    message: _this.i18n.tr('users.addUser.addDiscardWarningMessage'),
                                    done: function done() {
                                        _this.close();
                                    }
                                });
                                return false;
                            } else {
                                _this.close();
                            }
                        });
                    }
                }, {
                    key: 'resetUserCustomForm',
                    value: function resetUserCustomForm(userType) {
                        var fomrRendererCmp = this[userType + 'FormRenderCmp'];
                        fomrRendererCmp.setValues({
                            custom_fields: userType === 'external' ? this.customFieldDefaultVals.external : {}
                        });
                        fomrRendererCmp.resetFormToReadOnly();
                    }
                }, {
                    key: 'close',
                    value: function close() {
                        $(this.usermodal).off("hide.bs.modal");
                        this.clearuser();
                        this.existing = false;
                        this.enableContactToSync = false;
                        this.userValidation.clear();
                        this.userValidation = null;
                        $(this.usermodal).modal('hide');
                        this.attached();
                    }
                }, {
                    key: 'subscribeToEvents',
                    value: function subscribeToEvents() {
                        var _this2 = this;

                        this.ea.subscribe('usermodal:show', function (user) {
                            if (!_this2.addUserConsentMessage) {
                                _this2.fetchAddUserConsentMessage();
                            }
                            _this2.userType = user.type;
                            $(_this2.usermodal).modal('show');
                            _this2.currentUserTypePreferences = _this2.userFormPreferenceHash[_this2.userType];
                            _this2.setupValidations();
                            if (_this2.userType == "internal") {
                                _this2.external.company_name = _this2.envDetails.companyName;
                            } else if (_this2.isSFDC && _this2.userType === 'external' && _this2.envDetails.syncContactsToSfdc && _this2.selectedSfdcAccount.id) {
                                _this2.enableContactToSync = true;
                            }
                        });
                        this.ea.subscribe('usercustomforms:fetch', function (userFormArgs) {
                            var formBuilderHash = userFormArgs.formBuilderHash || {};
                            _this2.customFieldDefaultVals.external = userFormArgs.sfdcDefaults || {};
                            _this2.internalFormRenderCmp = $(_this2.internalCustomForm).formRenderer({
                                fieldCollection: (formBuilderHash.internal_custom_form || []).map(function (field) {
                                    if (field.type === 'multiselect_dropdown' && !_this2.isNotIE11) {
                                        field.placeholder = "";
                                    }
                                    return field;
                                })
                            });
                            _this2.externalFormRenderCmp = $(_this2.externalCustomForm).formRenderer({
                                fieldCollection: (formBuilderHash.external_custom_form || []).map(function (field) {
                                    if (field.type === 'multiselect_dropdown' && !_this2.isNotIE11) {
                                        field.placeholder = "";
                                    }
                                    return field;
                                })
                            });
                            _this2.internalFormRenderCmp.init();
                            _this2.externalFormRenderCmp.init();

                            _this2.resetUserCustomForm('external');
                        });
                    }
                }, {
                    key: 'setupValidations',
                    value: function setupValidations() {
                        var _this3 = this;

                        this.userValidation = this.validation.on(this.external);
                        var validator = this.userValidation;
                        validator.ensure('email', function (config) {
                            config.useDebounceTimeout(350);
                        }).isEmail().withMessage(this.i18n.tr('users.addUser.invalidEmailMessage')).passes(function (newValue) {
                            return new Promise(function (accept, reject) {
                                var validEmailRegexp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                newValue = (newValue || "").trim();
                                if (!newValue || validEmailRegexp.test(newValue)) {
                                    var userEmail = {
                                        email: newValue,
                                        type: _this3.userType,
                                        user_type: _this3.userType,
                                        requested_page: "book_meeting"
                                    };
                                    _this3.userService.validateUserEmail(userEmail).then(function (response) {
                                        if (typeof response.response === "string") {
                                            response = JSON.parse(response.response);
                                        }
                                        var fomrRendererCmp = _this3[_this3.userType + 'FormRenderCmp'];
                                        if (response.success == false && response.errors.email) {
                                            reject(response.errors.email);
                                            fomrRendererCmp.resetFormToReadOnly();
                                        } else if (_this3.userType == "external" && response.data.domain_type && response.data.domain_type == "internal") {
                                            reject(_this3.i18n.tr('users.addUser.addPersonAsInternalAttendee'));
                                            fomrRendererCmp.resetFormToReadOnly();
                                        } else if (_this3.userType == "internal" && response.data.domain_type && response.data.domain_type != _this3.userType) {
                                            reject(_this3.i18n.tr('users.addUser.invalidDomain'));
                                            fomrRendererCmp.resetFormToReadOnly();
                                        } else if (response.data.user != undefined && response.data.user.email.toLowerCase() == _this3.external.email.toLowerCase() && _this3.userType == response.data.domain_type) {
                                            _this3.mapExistingUser(response.data.user, true, response.data.can_edit);
                                        } else {}
                                        accept();
                                    })['catch'](function (e) {
                                        reject();
                                        console.log(e);
                                    });
                                } else {
                                    reject(_this3.i18n.tr('users.addUser.invalidEmailMessage'));
                                }
                            });
                        });
                        if (this.currentUserTypePreferences.email.mandatory) {
                            validator.isNotEmpty().withMessage(this.getRequiredText('email'));
                        }
                        if (this.currentUserTypePreferences.first_name.mandatory) {
                            validator.ensure('first_name').isNotEmpty().withMessage(this.getRequiredText('first_name'));
                        }
                        if (this.currentUserTypePreferences.last_name.mandatory) {
                            validator.ensure('last_name').isNotEmpty().withMessage(this.getRequiredText('last_name'));
                        }
                        if (this.currentUserTypePreferences.company_name.mandatory) {
                            validator.ensure('company_name').isNotEmpty().withMessage(this.getRequiredText('company_name'));
                        }
                        if (this.currentUserTypePreferences.contact_no.mandatory) {
                            validator.ensure('contact_no').isNotEmpty().withMessage(this.getRequiredText('contact_no'));
                        }
                        if (this.currentUserTypePreferences.title.mandatory) {
                            validator.ensure('title').isNotEmpty().withMessage(this.getRequiredText('title'));
                        }
                    }
                }, {
                    key: 'getReadOnly',
                    value: function getReadOnly(fieldName) {
                        return this.external[fieldName] || !(this.currentUserTypePreferences && this.currentUserTypePreferences[fieldName].mandatory);
                    }
                }, {
                    key: 'getRequiredText',
                    value: function getRequiredText(field) {
                        return this.currentUserTypePreferences[field].display_name + ' is required';
                    }
                }, {
                    key: 'mapExistingUser',
                    value: function mapExistingUser(user, isExisting, canEdit) {
                        this.existing = isExisting && !canEdit;
                        this.external.first_name = user.first_name || '';
                        this.external.last_name = user.last_name || '';
                        this.external.uuid = user.uuid || '';
                        this.external.company_name = user.company_name || (this.userType == "internal" ? this.envDetails.companyName : '');
                        this.external.contact_no = user.contact_no || '';
                        this.external.title = user.title || '';
                        var fomrRendererCmp = this[this.userType + 'FormRenderCmp'];
                        fomrRendererCmp.setValues(user);
                        fomrRendererCmp[this.existing ? 'setFormToReadOnly' : 'resetFormToReadOnly']();
                    }
                }, {
                    key: 'clearuser',
                    value: function clearuser() {
                        this.external.first_name = '';
                        this.external.last_name = '';
                        this.external.uuid = '';
                        this.external.company_name = '';
                        this.external.contact_no = '';
                        this.external.title = '';
                        this.external.email = '';
                        this.external.sync_contact = false;
                        var form = $(this[this.userType + 'CustomFieldsForm']);
                        if (typeof form.validate === 'function') {
                            var validator = form.validate();
                            if (validator) {
                                validator.reset();
                                validator.resetForm();
                            }
                        }
                        $(".form-group", form).removeClass("has-error");
                        this.resetUserCustomForm(this.userType);
                        this.consentChecked = false;
                    }
                }, {
                    key: 'showErrorMessage',
                    value: function showErrorMessage(response, className) {
                        if (response.response) {
                            response = JSON.parse(response.response);
                        }
                        this.ea.publish("show:notification", {
                            'class': className,
                            message: response.message,
                            title: this.i18n.tr('users.addUser.addUserTitle')
                        });
                    }
                }, {
                    key: 'insert',
                    value: function insert() {
                        var _this4 = this;

                        var formRenderer = this[this.userType + 'FormRenderCmp'];
                        this.userValidation.validate().then(function () {
                            if (formRenderer.isFormValid($(_this4[_this4.userType + 'CustomFieldsForm']))) {
                                if (_this4.didUserGiveConsent() === false) {
                                    _this4.showConsentMissingMessage();
                                    return;
                                }
                                _this4.isInsert = true;
                                var attendee = {
                                    user: _this4.external.getUserModel(),
                                    consent: _this4.getConsentValue()
                                };
                                attendee.user.custom_fields = formRenderer.getValues() || {};
                                attendee.user_type = _this4.userType;
                                _this4.userService.createNewUser(attendee).then(function (response) {
                                    if (typeof response.response === "string") {
                                        response = JSON.parse(response.response);
                                    }
                                    if (response.statusCode == 200 || response.status == 200) {
                                        if (attendee.user.sync_contact) {
                                            _this4.sfdcContactSyncService.syncAttendeeToSfdc(attendee, _this4.selectedSfdcAccount.id).then(function (sfdc_response) {
                                                _this4.handleUserCreation(_extends({}, response.data.user, sfdc_response.user));
                                            });
                                        } else {
                                            _this4.handleUserCreation(response.data.user);
                                        }
                                    }
                                    _this4.isInsert = false;
                                })['catch'](function (response) {
                                    _this4.isInsert = false;
                                    _this4.showErrorMessage(response, 'red');
                                });
                            }
                        });
                    }
                }, {
                    key: 'handleUserCreation',
                    value: function handleUserCreation(userData) {
                        this.userValidation.clear();
                        var pushUser = userData;
                        pushUser.selected = true;
                        pushUser.isNewAttendee = true;
                        pushUser.available = true;
                        pushUser.sync_contact = this.external.sync_contact;
                        userData.sfdc_contact_id && (pushUser.Id = userData.sfdc_contact_id);
                        this.ea.publish(this.userType + '-attendee:add', pushUser);
                        this.clearuser();
                        $(this.usermodal).modal('hide');
                        $('body').removeClass('modal-open');
                        this.userValidation = null;
                        $('.modal-backdrop').remove();
                    }
                }, {
                    key: 'shouldShowConsent',
                    value: function shouldShowConsent() {
                        return this.captureConsent;
                    }
                }, {
                    key: 'isConsentMandatory',
                    value: function isConsentMandatory() {
                        return this.consentMandatory;
                    }
                }, {
                    key: 'isConsentProvided',
                    value: function isConsentProvided() {
                        return this.consentChecked;
                    }
                }, {
                    key: 'didUserGiveConsent',
                    value: function didUserGiveConsent() {
                        return !this.isConsentMandatory() || this.isConsentProvided();
                    }
                }, {
                    key: 'getConsentValue',
                    value: function getConsentValue() {
                        return this.shouldShowConsent() ? this.isConsentProvided() : undefined;
                    }
                }, {
                    key: 'showConsentMissingMessage',
                    value: function showConsentMissingMessage() {
                        this.ea.publish('show:notification', {
                            title: this.i18n.tr('optInMessages.userConsentMissingTitle'),
                            message: this.i18n.tr('optInMessages.userConsentMissingMessage'),
                            'class': 'red',
                            autoHideDuration: 4000
                        });
                    }
                }, {
                    key: 'fetchAddUserConsentMessage',
                    value: function fetchAddUserConsentMessage() {
                        var _this5 = this;

                        this.userService.getComplianceMessage().then(function (response) {
                            if (typeof response.response === "string") {
                                response = JSON.parse(response.response);
                            }
                            var complianceConfig = response.data;
                            _this5.addUserConsentMessage = complianceConfig.add_user_consent_message;
                        });
                    }
                }], null, _instanceInitializers);

                var _AddUser = AddUser;
                AddUser = inject(EventAggregator, Validation, UserRequestService, UserFormRequestService, SfdcContactSyncService, I18N)(AddUser) || AddUser;
                return AddUser;
            }(UserForms);

            _export('AddUser', AddUser);
        }
    };
});